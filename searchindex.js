Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "D4RLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "RobosetExperienceReplay", "get_dataloader", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "RandomSampler", "RoundRobinWriter", "Sampler", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerEnv", "set_gym_backend", "ActionMask", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "CEMPlanner", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "EGreedyWrapper", "LMHeadActorValueOperator", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "README Tutos", "Task-specific policy in multi-task environments", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 46, 47, 51, 52, 53, 54, 55, 57, 58, 59, 62, 67, 68, 69, 70, 71, 74, 76, 77, 80, 90, 91, 93, 94, 95, 96, 100, 103, 107, 109, 111, 114, 116, 117, 120, 126, 127, 131, 132, 133, 135, 142, 143, 144, 145, 146, 147, 149, 152, 153, 155, 165, 166, 168, 169, 170, 171, 178, 180, 182, 184, 185, 186, 187, 191, 192, 193, 197, 204, 205, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 228, 229, 233, 236, 237, 238, 239, 241, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 265, 267, 268, 269, 270, 271, 286, 289, 298, 299, 303, 304, 307, 316, 317, 318, 319, 322, 323, 324, 328, 329, 333, 334, 336, 337, 339, 340], "open": [0, 5, 7, 11, 329, 334, 339], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340], "reinforc": [0, 3, 9, 109, 168, 169, 170, 171, 175, 219, 223, 237, 238, 242, 243, 245, 249, 250, 256, 257, 258, 321, 327, 329, 332, 335, 338, 339], "learn": [0, 3, 7, 8, 9, 18, 32, 54, 55, 109, 168, 169, 170, 171, 175, 188, 194, 219, 223, 237, 238, 242, 243, 245, 249, 250, 255, 256, 257, 258, 321, 323, 324, 327, 328, 329, 331, 332, 333, 335, 337, 338, 339, 340], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 16, 17, 90, 142, 194, 212, 224, 232, 237, 252, 254, 294, 322, 323, 324, 325, 328, 329, 330, 334, 336, 337, 340], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 18, 19, 20, 37, 43, 84, 91, 158, 321, 322, 323, 326, 328, 329, 330, 334, 335, 340], "pytorch": [0, 1, 2, 3, 53, 145, 178, 182, 193, 194, 303, 322, 325, 328, 330, 331, 334, 335, 336, 339, 340], "It": [0, 2, 3, 4, 7, 32, 37, 40, 41, 43, 45, 52, 53, 55, 76, 80, 82, 90, 91, 94, 95, 96, 100, 118, 125, 127, 132, 142, 147, 152, 155, 168, 170, 176, 191, 192, 200, 202, 203, 209, 210, 219, 220, 223, 226, 228, 237, 238, 239, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 258, 259, 265, 266, 267, 299, 312, 322, 323, 324, 328, 329, 331, 334, 335, 336, 337, 339, 340], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 30, 31, 32, 33, 35, 38, 41, 42, 45, 49, 52, 53, 54, 55, 56, 57, 61, 65, 66, 68, 76, 80, 90, 94, 95, 96, 100, 109, 110, 111, 112, 114, 117, 121, 126, 127, 129, 131, 132, 135, 138, 139, 142, 143, 144, 147, 149, 151, 152, 153, 163, 165, 166, 172, 175, 178, 179, 180, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 210, 212, 216, 219, 220, 221, 223, 224, 225, 226, 231, 237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 290, 294, 300, 307, 312, 315, 322, 323, 324, 325, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "python": [0, 3, 5, 6, 7, 10, 21, 106, 178, 179, 180, 182, 183, 184, 189, 190, 325, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340], "first": [0, 1, 3, 4, 5, 7, 8, 18, 20, 21, 26, 28, 52, 53, 55, 57, 58, 65, 66, 70, 80, 109, 110, 121, 127, 131, 132, 145, 147, 149, 178, 180, 182, 184, 186, 191, 192, 193, 197, 212, 217, 218, 219, 224, 225, 227, 228, 239, 247, 251, 252, 254, 285, 302, 323, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "low": [0, 25, 76, 80, 94, 100, 112, 116, 159, 219, 224, 231, 328, 329, 330, 334, 335, 339, 340], "high": [0, 9, 25, 41, 76, 80, 94, 100, 112, 116, 126, 159, 219, 224, 231, 267, 272, 280, 328, 329, 330, 334, 335, 337, 339, 340], "level": [0, 3, 4, 22, 26, 28, 109, 141, 251, 328, 329, 339], "abstract": [0, 3, 8, 24, 25, 26, 27, 28, 29, 30, 44, 46, 47, 71, 76, 128, 187, 271, 295, 304, 325, 330, 335, 339], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 23, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 48, 52, 53, 54, 55, 56, 57, 58, 59, 66, 67, 70, 76, 77, 80, 89, 90, 93, 94, 95, 96, 97, 100, 102, 109, 112, 113, 114, 116, 117, 118, 120, 121, 125, 126, 129, 131, 135, 138, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 159, 163, 164, 171, 173, 178, 179, 180, 182, 183, 184, 185, 187, 189, 190, 191, 194, 198, 200, 203, 217, 218, 220, 223, 224, 225, 227, 228, 229, 230, 231, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 262, 265, 266, 267, 268, 269, 270, 271, 300, 315, 319, 323, 324, 325, 326, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "intend": [0, 7, 13, 14, 16, 17, 18, 19, 20, 21, 45, 116, 210, 252, 323, 339], "effici": [0, 1, 2, 4, 8, 178, 194, 323, 328, 329, 330, 331, 333, 334, 336, 337, 339], "modular": [0, 230, 337, 339], "document": [0, 5, 7, 18, 19, 21, 32, 76, 80, 94, 100, 147, 329, 331, 339], "properli": [0, 76, 80, 94, 100, 330, 334, 335, 339], "test": [0, 3, 5, 149, 155, 180, 184, 185, 299, 315, 330, 331, 339], "The": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 65, 66, 67, 68, 76, 80, 84, 94, 95, 96, 100, 109, 113, 114, 117, 118, 119, 127, 129, 131, 135, 137, 138, 139, 141, 142, 143, 146, 147, 149, 151, 152, 162, 163, 164, 168, 169, 170, 171, 172, 175, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 191, 194, 195, 201, 202, 203, 212, 213, 217, 218, 219, 223, 224, 225, 226, 227, 228, 230, 232, 233, 234, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 265, 266, 267, 268, 269, 270, 271, 273, 288, 291, 292, 293, 294, 298, 315, 317, 318, 323, 324, 325, 329, 330, 331, 334, 335, 336, 337, 339, 340], "code": [0, 3, 5, 7, 8, 76, 80, 94, 100, 131, 147, 149, 178, 179, 180, 182, 183, 184, 230, 327, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340], "aim": [0, 3, 7, 28, 29, 131, 149, 151, 186, 306, 322, 323, 324, 328, 329, 339], "support": [0, 1, 3, 18, 20, 26, 54, 56, 57, 58, 67, 70, 91, 93, 95, 109, 118, 127, 143, 144, 146, 158, 175, 210, 218, 219, 224, 227, 230, 245, 267, 268, 269, 270, 291, 323, 325, 330, 331, 334, 335, 337, 339], "research": [0, 7, 9, 339], "most": [0, 3, 7, 8, 32, 65, 66, 116, 152, 328, 330, 335, 339, 340], "written": [0, 3, 34, 36, 39, 45, 52, 57, 65, 66, 76, 80, 94, 100, 109, 118, 125, 138, 141, 144, 152, 162, 163, 212, 223, 224, 227, 228, 232, 237, 239, 251, 254, 256, 266, 285, 286, 323, 324, 325, 328, 331, 333, 335, 339], "highli": [0, 2, 339, 340], "wai": [0, 2, 3, 4, 53, 84, 131, 133, 151, 152, 182, 254, 267, 268, 269, 270, 323, 328, 329, 330, 333, 334, 335, 336, 337, 339, 340], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 55, 60, 64, 65, 66, 76, 77, 80, 84, 89, 94, 95, 96, 98, 99, 100, 102, 106, 107, 109, 112, 113, 114, 116, 117, 118, 126, 127, 131, 132, 135, 138, 141, 142, 143, 146, 147, 149, 151, 153, 163, 164, 178, 180, 181, 182, 184, 187, 188, 191, 192, 194, 195, 208, 210, 212, 216, 218, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 265, 266, 267, 268, 269, 270, 271, 299, 312, 317, 318, 319, 322, 323, 324, 325, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "easili": [0, 3, 7, 76, 80, 94, 100, 312, 324, 328, 329, 330, 334, 339, 340], "swap": [0, 3, 152, 330, 336, 339], "compon": [0, 2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 57, 58, 59, 67, 70, 175, 201, 218, 219, 226, 237, 238, 239, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 265, 298, 303, 328, 329, 330, 331, 333, 334, 335, 336, 339], "transform": [0, 1, 2, 4, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 40, 41, 42, 43, 52, 53, 54, 55, 76, 77, 80, 94, 95, 96, 100, 102, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 167, 168, 172, 175, 176, 199, 200, 201, 209, 217, 222, 231, 234, 236, 242, 253, 286, 300, 312, 319, 321, 327, 329, 331, 332, 336, 338], "them": [0, 2, 3, 7, 9, 21, 32, 35, 37, 38, 41, 42, 52, 53, 54, 55, 76, 77, 80, 84, 89, 94, 95, 96, 100, 102, 114, 117, 147, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 191, 192, 195, 196, 197, 199, 202, 203, 205, 209, 210, 216, 217, 219, 220, 221, 223, 226, 231, 234, 251, 257, 286, 328, 329, 331, 333, 334, 335, 336, 337, 339, 340], "write": [0, 3, 8, 23, 32, 34, 36, 37, 39, 45, 80, 112, 129, 130, 138, 141, 163, 212, 227, 228, 230, 232, 240, 241, 243, 244, 250, 255, 257, 259, 266, 271, 286, 323, 325, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340], "new": [0, 2, 3, 4, 8, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 47, 60, 64, 76, 80, 91, 94, 98, 99, 100, 138, 146, 153, 162, 163, 178, 180, 184, 223, 227, 228, 233, 237, 238, 239, 241, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 265, 328, 330, 331, 334, 335, 339, 340], "ones": [0, 2, 15, 26, 32, 35, 41, 42, 76, 80, 94, 100, 110, 113, 114, 115, 117, 127, 131, 135, 143, 146, 147, 149, 151, 189, 190, 210, 227, 237, 238, 240, 250, 254, 255, 257, 259, 273, 328, 330, 334, 335, 337, 339, 340], "littl": [0, 3, 43, 330, 331, 337, 339, 340], "effort": [0, 3, 335, 337, 339], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 57, 58, 59, 64, 65, 66, 67, 68, 70, 76, 80, 82, 89, 90, 94, 95, 96, 100, 102, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 125, 127, 131, 132, 133, 135, 138, 139, 141, 143, 144, 146, 147, 149, 150, 151, 152, 153, 155, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 205, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 233, 234, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 265, 267, 268, 269, 270, 271, 285, 294, 296, 299, 300, 303, 305, 306, 307, 312, 315, 319, 322, 323, 324, 325, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "repo": [0, 6, 52, 109, 144, 149, 322, 334, 339], "attempt": [0, 65, 66, 216, 221, 223, 241, 250, 265, 339], "align": [0, 178, 182, 339], "exist": [0, 3, 4, 11, 18, 21, 32, 34, 36, 39, 45, 76, 80, 94, 100, 110, 115, 147, 257, 307, 319, 334, 339, 340], "ecosystem": [0, 339], "ha": [0, 2, 3, 4, 5, 7, 8, 10, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 44, 46, 47, 65, 76, 77, 80, 84, 94, 100, 102, 109, 141, 142, 143, 144, 147, 178, 180, 182, 184, 191, 216, 219, 221, 223, 228, 251, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "dataset": [0, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 65, 66, 93, 153, 321, 328, 329, 336, 337, 339, 340], "pillar": [0, 339], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 107, 109, 110, 114, 115, 116, 117, 122, 126, 127, 131, 132, 138, 141, 142, 143, 144, 146, 147, 149, 152, 153, 155, 164, 180, 184, 185, 187, 188, 216, 223, 243, 246, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 294, 296, 299, 306, 307, 308, 309, 312, 315, 316, 317, 318, 319, 321, 322, 323, 327, 332, 336, 337, 338], "model": [0, 1, 3, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 76, 80, 90, 94, 100, 114, 131, 143, 149, 151, 154, 165, 166, 167, 172, 180, 184, 186, 187, 188, 192, 199, 200, 209, 213, 214, 215, 222, 227, 233, 237, 238, 239, 241, 242, 243, 246, 247, 248, 250, 251, 252, 254, 255, 257, 265, 303, 308, 309, 310, 311, 312, 321, 322, 325, 327, 330, 332, 334, 335, 337, 338, 340], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 78, 80, 90, 93, 94, 95, 96, 100, 107, 109, 114, 115, 117, 119, 125, 127, 135, 141, 152, 155, 159, 163, 164, 175, 180, 184, 185, 188, 191, 192, 201, 210, 212, 218, 220, 221, 223, 224, 225, 227, 230, 231, 232, 237, 238, 240, 241, 243, 244, 250, 254, 255, 256, 257, 259, 265, 267, 268, 269, 270, 271, 294, 300, 303, 305, 308, 315, 317, 318, 319, 321, 323, 324, 325, 331, 335, 336, 337, 340], "util": [0, 3, 17, 23, 32, 40, 76, 80, 94, 95, 96, 100, 103, 131, 151, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 172, 178, 182, 234, 235, 236, 252, 315, 321, 326, 328, 330, 334, 335, 339, 340], "e": [0, 1, 3, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 33, 57, 58, 70, 76, 77, 80, 94, 100, 110, 113, 121, 127, 131, 138, 143, 146, 147, 149, 151, 155, 178, 180, 181, 182, 184, 188, 192, 195, 201, 207, 208, 217, 219, 224, 226, 227, 228, 257, 266, 267, 268, 269, 270, 294, 306, 318, 323, 328, 329, 330, 334, 336, 339, 340], "g": [0, 1, 3, 7, 8, 10, 11, 32, 33, 76, 77, 80, 94, 100, 110, 113, 121, 127, 131, 138, 143, 146, 147, 149, 151, 155, 178, 180, 181, 182, 183, 184, 188, 192, 207, 208, 217, 224, 227, 228, 257, 266, 276, 277, 278, 279, 281, 282, 283, 284, 318, 323, 328, 329, 330, 334, 335, 336, 339, 340], "collector": [0, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 65, 66, 109, 135, 141, 223, 300, 303, 305, 308, 309, 315, 317, 318, 321, 325, 337, 340], "contain": [0, 3, 7, 12, 13, 14, 16, 17, 19, 20, 26, 28, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 50, 52, 53, 54, 55, 60, 62, 67, 69, 71, 76, 80, 90, 94, 100, 113, 114, 117, 131, 143, 146, 147, 149, 151, 152, 153, 162, 163, 164, 165, 166, 178, 179, 182, 183, 186, 188, 192, 212, 218, 219, 224, 226, 227, 232, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 265, 266, 267, 268, 269, 270, 271, 273, 290, 294, 306, 312, 315, 316, 317, 318, 319, 323, 324, 325, 328, 329, 330, 331, 334, 335, 336, 337, 339, 340], "etc": [0, 3, 7, 8, 11, 32, 46, 47, 76, 80, 94, 100, 125, 147, 186, 192, 328, 329, 330, 337, 339, 340], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 13, 14, 17, 18, 20, 21, 26, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 64, 67, 76, 80, 94, 95, 96, 100, 109, 114, 117, 118, 125, 126, 127, 141, 146, 147, 153, 155, 163, 165, 166, 185, 186, 191, 192, 210, 229, 230, 237, 239, 251, 254, 262, 265, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 294, 303, 323, 324, 325, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "few": [0, 2, 8, 294, 330, 331, 334, 337, 339, 340], "depend": [0, 1, 2, 3, 4, 7, 8, 34, 36, 114, 117, 232, 254, 323, 328, 330, 331, 334, 335, 339, 340], "possibl": [0, 2, 3, 4, 27, 29, 32, 33, 34, 36, 39, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 165, 166, 178, 179, 182, 183, 227, 299, 303, 323, 328, 330, 331, 334, 335, 337, 339, 340], "standard": [0, 3, 127, 137, 153, 164, 176, 188, 193, 194, 216, 217, 259, 267, 268, 269, 270, 328, 329, 334, 337, 339], "numpi": [0, 11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 94, 100, 145, 303, 335, 337, 339, 340], "common": [0, 2, 3, 4, 21, 80, 107, 213, 214, 215, 222, 237, 238, 239, 244, 250, 251, 254, 255, 256, 257, 259, 315, 322, 323, 325, 328, 330, 333, 334, 335, 336, 339, 340], "openai": [0, 7, 79, 81, 97, 330, 335, 339, 340], "gym": [0, 1, 3, 4, 8, 11, 13, 14, 16, 17, 21, 22, 76, 77, 79, 80, 81, 84, 94, 97, 100, 104, 106, 109, 112, 118, 124, 125, 127, 129, 133, 135, 138, 143, 146, 152, 153, 312, 315, 322, 328, 329, 330, 331, 335, 336, 337, 339], "onli": [0, 1, 3, 4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 44, 46, 47, 52, 57, 58, 65, 66, 70, 76, 80, 84, 91, 94, 95, 96, 100, 109, 110, 112, 113, 114, 116, 117, 121, 127, 131, 132, 135, 141, 142, 143, 144, 146, 147, 149, 151, 153, 182, 184, 185, 191, 192, 212, 217, 218, 224, 225, 227, 228, 229, 230, 237, 239, 240, 244, 250, 251, 252, 254, 255, 256, 257, 258, 259, 267, 268, 269, 270, 271, 307, 325, 328, 329, 330, 331, 333, 334, 335, 337, 339, 340], "option": [0, 1, 3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 66, 70, 74, 76, 77, 80, 90, 93, 94, 95, 96, 97, 100, 102, 107, 109, 110, 111, 112, 114, 116, 117, 118, 121, 122, 124, 125, 126, 127, 131, 132, 133, 135, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 206, 207, 208, 210, 212, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 265, 266, 267, 268, 269, 270, 271, 273, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 288, 291, 294, 296, 297, 298, 299, 300, 301, 303, 307, 308, 309, 310, 311, 312, 314, 315, 317, 318, 319, 323, 331, 334, 335, 337, 339], "On": [0, 3, 7, 18, 19, 20, 21, 179, 183, 323, 329, 334], "end": [0, 3, 13, 14, 32, 35, 38, 41, 42, 52, 53, 54, 55, 64, 65, 66, 76, 80, 94, 100, 118, 129, 141, 142, 147, 165, 166, 178, 179, 182, 183, 187, 257, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "come": [0, 1, 3, 8, 80, 89, 94, 100, 114, 117, 212, 213, 214, 215, 224, 232, 328, 329, 330, 331, 334, 337, 339, 340], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 32, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 57, 58, 64, 67, 70, 76, 78, 80, 90, 94, 95, 96, 100, 106, 107, 109, 110, 113, 114, 117, 124, 125, 131, 135, 141, 142, 143, 144, 146, 147, 149, 151, 153, 155, 160, 161, 163, 178, 180, 182, 184, 187, 191, 192, 216, 217, 227, 252, 254, 257, 271, 294, 299, 300, 309, 319, 322, 323, 324, 326, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "re": [0, 3, 8, 32, 64, 76, 80, 94, 100, 184, 189, 190, 224, 228, 325, 328, 330, 331, 333, 335, 339, 340], "usabl": [0, 325, 331, 339], "function": [0, 3, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 45, 46, 47, 49, 57, 58, 59, 67, 70, 76, 77, 80, 94, 100, 106, 114, 117, 147, 153, 155, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 189, 190, 191, 192, 195, 196, 197, 198, 199, 202, 203, 205, 208, 210, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 226, 227, 228, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 251, 252, 254, 255, 256, 257, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 312, 315, 321, 323, 328, 331, 333, 335, 337, 340], "cost": [0, 2, 27, 328, 329, 334, 335, 337], "return": [0, 2, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 62, 65, 66, 68, 69, 71, 74, 76, 77, 80, 90, 93, 94, 95, 96, 100, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 127, 129, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 162, 163, 164, 167, 168, 169, 170, 171, 173, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 195, 198, 199, 200, 202, 203, 206, 207, 208, 209, 212, 213, 214, 215, 217, 224, 226, 227, 228, 232, 233, 234, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 262, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 290, 303, 306, 308, 312, 315, 316, 317, 318, 319, 321, 323, 325, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "process": [0, 1, 3, 4, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 39, 43, 45, 55, 76, 77, 80, 84, 89, 91, 94, 95, 96, 100, 114, 117, 153, 191, 192, 219, 223, 226, 321, 325, 328, 329, 331, 334, 335, 336, 337, 339, 340], "good": [0, 1, 4, 9, 328, 330, 331, 334, 339, 340], "runtim": [0, 3, 32, 76, 80, 94, 100, 335], "perform": [0, 3, 4, 8, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 76, 80, 94, 100, 103, 114, 117, 126, 147, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 191, 192, 195, 196, 197, 199, 202, 203, 205, 210, 216, 217, 219, 220, 221, 223, 226, 231, 234, 247, 254, 257, 299, 303, 324, 328, 329, 330, 331, 333, 334, 335, 340], "To": [0, 3, 4, 6, 7, 8, 9, 18, 19, 20, 32, 35, 38, 40, 41, 42, 52, 53, 54, 55, 65, 66, 76, 80, 89, 94, 95, 96, 98, 99, 100, 141, 153, 213, 214, 215, 223, 244, 252, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 323, 324, 328, 329, 330, 331, 334, 335, 336, 337, 339, 340], "read": [0, 2, 3, 7, 17, 23, 37, 40, 57, 58, 59, 67, 70, 76, 80, 94, 100, 107, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 129, 130, 132, 133, 135, 138, 139, 141, 142, 143, 144, 146, 149, 150, 152, 153, 163, 198, 212, 213, 214, 215, 218, 224, 227, 228, 230, 232, 233, 237, 238, 239, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 265, 267, 268, 269, 270, 271, 286, 299, 303, 312, 323, 328, 329, 330, 333, 334, 335, 336, 340], "more": [0, 2, 3, 4, 6, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 54, 55, 76, 80, 83, 84, 94, 95, 96, 100, 102, 145, 149, 154, 175, 182, 186, 193, 195, 212, 216, 218, 219, 227, 232, 237, 245, 252, 254, 267, 272, 280, 298, 322, 324, 325, 328, 329, 330, 331, 333, 334, 335, 336, 340], "about": [0, 2, 3, 5, 7, 9, 18, 19, 20, 43, 55, 324, 328, 329, 330, 334, 335, 339, 340], "philosophi": [0, 9], "capabl": [0, 1, 7, 9, 325, 328, 333, 336, 340], "beyond": 0, "api": [0, 2, 3, 5, 95, 96, 97, 131, 151, 324, 325, 334, 335, 339, 340], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 48, 50, 65, 76, 77, 80, 90, 94, 100, 103, 109, 110, 120, 125, 132, 155, 180, 184, 212, 218, 219, 224, 225, 226, 227, 228, 323, 324, 329, 330, 331, 333, 334, 335, 336, 337, 340], "paper": [0, 131, 149, 151, 178, 200, 209, 243, 249, 312, 328, 330, 334], "ppo": [0, 4, 8, 224, 228, 239, 251, 254, 321, 323, 327, 328, 329, 332, 338], "pendulum": [0, 3, 13, 14, 16, 17, 21, 22, 76, 77, 79, 80, 81, 91, 94, 100, 109, 112, 113, 119, 124, 125, 127, 133, 135, 141, 143, 144, 146, 147, 153, 180, 184, 315, 323, 327, 329, 330, 332, 338, 339, 340], "your": [0, 2, 3, 7, 8, 10, 18, 32, 76, 80, 84, 89, 94, 95, 96, 100, 153, 319, 322, 323, 324, 327, 329, 330, 331, 332, 334, 337, 338, 339], "introduct": [0, 324, 327, 332, 334, 338, 340], "multi": [0, 7, 9, 28, 29, 32, 76, 80, 94, 98, 99, 100, 178, 180, 182, 184, 185, 186, 191, 192, 265, 267, 268, 269, 270, 321, 327, 328, 329, 330, 331, 332, 335, 338, 339], "agent": [0, 9, 28, 29, 89, 95, 96, 98, 99, 101, 102, 103, 141, 142, 189, 190, 191, 192, 194, 200, 209, 265, 321, 327, 332, 335, 338], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 40, 52, 53, 55, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 180, 184, 187, 188, 227, 252, 285, 307, 308, 309, 312, 315, 317, 318, 319, 321, 323, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 60, 61, 65, 66, 70, 74, 76, 77, 80, 90, 93, 94, 95, 96, 97, 98, 99, 100, 106, 107, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 124, 125, 127, 131, 132, 133, 135, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 151, 153, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 194, 195, 198, 199, 200, 201, 207, 208, 209, 210, 212, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 280, 289, 290, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 313, 315, 319, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 338, 340], "pretrain": [0, 327, 332, 338], "recurr": [0, 178, 179, 180, 182, 184, 203, 327, 329, 332, 337, 338], "dqn": [0, 118, 175, 218, 219, 237, 238, 240, 241, 243, 244, 245, 246, 249, 250, 252, 254, 255, 256, 257, 258, 259, 265, 310, 321, 323, 327, 332, 338], "train": [0, 1, 3, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 34, 36, 39, 40, 45, 56, 76, 80, 94, 95, 96, 100, 114, 122, 131, 142, 147, 149, 151, 155, 168, 170, 180, 184, 216, 220, 221, 223, 237, 238, 239, 240, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 265, 267, 303, 305, 315, 321, 325, 327, 329, 332, 336, 337, 338, 340], "polici": [0, 1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 76, 80, 90, 94, 100, 116, 125, 142, 160, 161, 175, 180, 184, 191, 192, 194, 201, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 231, 237, 238, 239, 240, 244, 250, 251, 253, 254, 255, 256, 257, 259, 299, 305, 308, 309, 315, 317, 318, 323, 324, 325, 327, 329, 332, 336, 337, 338, 339, 340], "replai": [0, 8, 13, 14, 16, 35, 38, 41, 42, 52, 53, 54, 55, 60, 61, 62, 63, 66, 67, 68, 69, 109, 116, 132, 135, 143, 240, 241, 243, 244, 250, 255, 257, 259, 300, 303, 313, 315, 321, 325, 327, 332, 335, 336, 338], "buffer": [0, 1, 3, 4, 8, 13, 14, 16, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 76, 80, 90, 94, 100, 109, 113, 116, 131, 132, 135, 143, 146, 147, 149, 151, 227, 230, 240, 241, 243, 244, 250, 255, 257, 259, 300, 303, 313, 315, 321, 325, 327, 332, 335, 336, 338, 340], "task": [0, 3, 9, 28, 29, 40, 45, 74, 80, 83, 94, 95, 96, 97, 100, 131, 141, 149, 151, 250, 327, 328, 329, 330, 331, 332, 334, 335, 338, 339, 340], "specif": [0, 2, 5, 8, 41, 42, 80, 172, 217, 303, 321, 324, 325, 327, 330, 331, 332, 334, 337, 338], "object": [0, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 57, 58, 59, 67, 70, 76, 80, 94, 100, 114, 117, 118, 127, 131, 146, 147, 149, 153, 188, 200, 209, 212, 213, 224, 227, 228, 229, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 307, 308, 309, 314, 315, 319, 321, 323, 325, 327, 329, 330, 331, 332, 334, 335, 337, 338, 340], "ddpg": [0, 168, 169, 170, 171, 240, 249, 258, 321, 323, 327, 329, 332, 338], "loss": [0, 3, 8, 36, 118, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 265, 266, 267, 298, 303, 310, 311, 312, 315, 324, 325, 327, 332, 335, 337, 338, 339], "trainer": [0, 237, 238, 239, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 265, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 327, 328, 332, 338], "A": [0, 1, 2, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 67, 68, 69, 70, 71, 76, 78, 80, 82, 83, 94, 97, 100, 112, 116, 122, 125, 131, 132, 133, 143, 146, 147, 149, 150, 152, 153, 154, 155, 162, 164, 165, 166, 175, 178, 179, 180, 182, 183, 184, 186, 188, 189, 190, 192, 194, 195, 210, 216, 217, 218, 219, 220, 221, 224, 225, 228, 230, 231, 234, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 262, 265, 267, 268, 269, 270, 271, 273, 287, 288, 291, 296, 303, 305, 312, 315, 324, 327, 328, 330, 332, 334, 335, 338, 340], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 65, 66, 68, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 85, 86, 87, 88, 90, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 124, 125, 127, 129, 131, 133, 135, 138, 141, 142, 143, 144, 145, 146, 147, 149, 151, 153, 159, 162, 163, 164, 165, 166, 167, 172, 175, 178, 179, 180, 182, 183, 184, 185, 186, 188, 191, 192, 195, 198, 199, 200, 201, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 230, 231, 232, 237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 260, 261, 265, 267, 268, 269, 270, 273, 294, 295, 296, 297, 298, 300, 301, 302, 305, 312, 315, 323, 324, 325, 327, 328, 330, 331, 332, 333, 334, 335, 336, 338, 339, 340], "packag": [0, 6, 7, 10, 106, 321, 322, 340], "singl": [0, 3, 13, 14, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 54, 55, 68, 76, 80, 94, 100, 109, 110, 131, 135, 151, 165, 166, 178, 179, 180, 182, 183, 184, 185, 186, 192, 226, 230, 239, 241, 243, 244, 245, 251, 254, 255, 259, 267, 268, 269, 270, 276, 277, 278, 279, 281, 282, 283, 284, 312, 319, 321, 328, 329, 330, 331, 333, 334, 335, 336, 337], "node": [0, 2, 18, 19, 20, 21, 22, 312, 321], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 95, 96, 125, 127, 164, 173, 174, 175, 176, 181, 188, 189, 190, 195, 198, 199, 202, 203, 206, 207, 208, 216, 217, 218, 219, 224, 228, 229, 237, 238, 239, 244, 245, 250, 251, 254, 255, 256, 257, 259, 321, 325, 329, 330, 334, 335, 339, 340], "helper": [0, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 328, 329, 331, 335], "compos": [0, 3, 32, 35, 38, 41, 42, 52, 53, 54, 55, 61, 62, 63, 68, 69, 76, 80, 94, 100, 109, 146, 147, 153, 222, 247, 257, 312, 321, 328, 329, 330, 331, 333, 334, 337, 339, 340], "tensorspec": [0, 3, 15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 46, 47, 48, 49, 50, 76, 80, 90, 94, 100, 102, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 123, 124, 125, 127, 129, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 163, 203, 212, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 238, 241, 244, 255, 257, 259, 265, 321, 335], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 66, 67, 68, 70, 76, 77, 80, 89, 90, 94, 95, 96, 98, 99, 100, 102, 103, 106, 107, 109, 110, 112, 114, 115, 116, 117, 118, 119, 124, 125, 127, 129, 131, 132, 133, 135, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 159, 162, 163, 164, 168, 169, 170, 171, 172, 175, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 195, 198, 199, 200, 201, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 237, 238, 239, 240, 241, 243, 244, 245, 246, 250, 251, 252, 254, 255, 256, 257, 259, 261, 265, 266, 267, 268, 269, 270, 273, 285, 286, 294, 300, 303, 306, 307, 312, 313, 315, 316, 319, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340], "human": [0, 53, 321, 335], "feedback": [0, 321, 339], "rlhf": [0, 40, 45, 56, 125, 321, 323], "envbas": [0, 3, 13, 14, 16, 17, 18, 19, 20, 21, 77, 80, 94, 100, 107, 114, 117, 126, 133, 146, 147, 153, 155, 164, 187, 188, 299, 307, 308, 309, 312, 315, 317, 318, 319, 321], "gymlikeenv": [0, 321], "envmetadata": [0, 321], "vector": [0, 1, 8, 24, 27, 33, 89, 95, 96, 102, 116, 152, 168, 170, 178, 179, 182, 183, 186, 267, 270, 280, 281, 282, 283, 284, 321, 328, 329, 331, 333, 334, 335, 336, 340], "mask": [0, 1, 4, 23, 27, 30, 31, 33, 95, 96, 107, 132, 175, 189, 190, 201, 217, 218, 219, 220, 221, 225, 226, 300, 321, 329, 331, 340], "action": [0, 2, 8, 9, 13, 14, 15, 16, 17, 21, 27, 33, 40, 44, 53, 55, 73, 76, 80, 86, 89, 90, 94, 95, 96, 98, 99, 100, 101, 102, 107, 112, 114, 116, 117, 118, 119, 122, 125, 126, 129, 133, 135, 139, 141, 147, 152, 159, 162, 164, 167, 168, 169, 170, 171, 172, 174, 175, 176, 180, 184, 186, 187, 188, 189, 190, 191, 199, 200, 201, 203, 206, 207, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 231, 232, 237, 238, 240, 241, 243, 244, 250, 252, 254, 255, 256, 257, 259, 265, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 312, 315, 319, 321, 323, 324, 325, 328, 329, 330, 333, 334, 336, 337, 339, 340], "record": [0, 32, 76, 80, 94, 100, 125, 254, 285, 286, 287, 288, 289, 290, 291, 292, 293, 315, 321, 329, 330], "domain": [0, 2, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 76, 80, 94, 100, 116, 143, 159, 212, 218, 219, 224, 225, 226, 227, 228, 229, 230, 321, 330, 331, 334, 335, 339, 340], "modul": [0, 2, 3, 4, 8, 11, 32, 40, 68, 76, 80, 89, 90, 94, 100, 106, 113, 116, 118, 125, 131, 132, 142, 143, 146, 147, 149, 151, 153, 154, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 263, 265, 267, 268, 269, 270, 271, 303, 310, 311, 315, 321, 324, 325, 329, 330, 333, 334, 335, 336, 337], "tensordict": [0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 57, 58, 60, 65, 66, 68, 69, 70, 73, 76, 77, 78, 80, 86, 89, 90, 93, 94, 95, 96, 98, 99, 100, 101, 102, 107, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 129, 130, 131, 132, 133, 135, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 159, 162, 163, 164, 174, 175, 180, 184, 185, 187, 188, 200, 201, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 259, 265, 266, 267, 268, 269, 270, 271, 285, 294, 298, 299, 300, 302, 303, 312, 321, 324, 325, 328, 329, 330, 331, 333, 334, 335, 336, 340], "actor": [0, 3, 4, 15, 21, 125, 164, 167, 168, 170, 175, 176, 188, 199, 201, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 265, 312, 321, 324, 329, 330, 331, 334, 336, 339], "explor": [0, 1, 154, 194, 212, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 237, 299, 308, 309, 315, 321, 330, 331, 334, 335], "valu": [0, 1, 3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 56, 65, 66, 76, 80, 89, 94, 100, 106, 108, 109, 110, 112, 114, 116, 117, 118, 126, 127, 131, 132, 135, 136, 138, 143, 144, 146, 147, 151, 153, 159, 163, 168, 169, 170, 171, 173, 175, 176, 177, 180, 181, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 198, 200, 201, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 294, 296, 297, 298, 299, 300, 303, 312, 315, 321, 325, 329, 333, 334, 335, 337, 339, 340], "gener": [0, 1, 2, 3, 7, 8, 9, 16, 35, 38, 40, 63, 64, 76, 77, 80, 90, 94, 95, 96, 98, 99, 100, 113, 114, 115, 119, 125, 127, 133, 138, 139, 141, 146, 152, 163, 173, 189, 190, 198, 212, 224, 228, 232, 233, 255, 261, 267, 272, 280, 289, 303, 321, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340], "hook": [0, 32, 76, 80, 94, 100, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 191, 192, 195, 196, 197, 199, 201, 202, 203, 205, 210, 216, 217, 219, 220, 221, 223, 226, 231, 234, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 321], "planner": [0, 164, 188, 321], "sac": [0, 244, 255, 257, 321], "redq": [0, 255, 311, 312, 321], "iql": [0, 250, 321, 334], "cql": [0, 238, 243, 321], "dt": [0, 223, 321, 335], "td3": [0, 259, 321], "a2c": [0, 237, 321], "dreamer": [0, 105, 176, 246, 247, 248, 321, 323], "checkpoint": [0, 321, 336], "builder": [0, 321, 329, 340], "logger": [0, 286, 288, 289, 290, 291, 292, 293, 297, 303, 315, 319, 321, 329], "_util": [0, 3, 11, 321], "implement_for": [0, 3, 321], "contribut": 0, "thing": [0, 3, 7, 8, 322, 330, 331, 334, 337, 340], "consid": [0, 1, 3, 8, 20, 32, 34, 36, 39, 57, 58, 70, 76, 80, 94, 100, 116, 153, 173, 191, 206, 322, 328, 335, 337], "when": [0, 1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 57, 58, 59, 61, 64, 67, 70, 76, 77, 80, 89, 91, 93, 94, 95, 96, 100, 107, 109, 113, 114, 116, 117, 125, 126, 127, 131, 132, 138, 143, 146, 147, 149, 151, 152, 153, 160, 161, 164, 175, 178, 179, 182, 183, 186, 187, 188, 189, 190, 193, 201, 207, 224, 227, 228, 230, 234, 239, 241, 245, 251, 254, 257, 260, 265, 266, 267, 268, 269, 270, 285, 286, 300, 319, 322, 323, 325, 328, 329, 330, 331, 334, 335, 336, 337, 340], "debug": [0, 6, 8, 40, 322, 340], "work": [0, 2, 3, 4, 8, 11, 32, 34, 36, 38, 39, 65, 66, 76, 80, 84, 94, 100, 110, 125, 131, 149, 152, 153, 165, 166, 186, 219, 226, 231, 239, 251, 254, 303, 322, 323, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "habitat": [0, 3, 82, 322, 336], "lab": [0, 3, 74, 75, 322], "mujoco": [0, 6, 8, 97, 322, 330, 331], "error": [0, 1, 3, 7, 10, 11, 29, 32, 76, 80, 94, 100, 103, 132, 155, 322, 328, 330, 334, 340], "solut": [0, 3, 6, 7, 9, 21, 322, 323, 325, 339], "resourc": [0, 1, 21, 322, 328, 330, 334], "version": [0, 1, 3, 6, 11, 32, 34, 36, 40, 65, 76, 80, 94, 95, 100, 102, 152, 215, 252, 257, 267, 270, 322, 323, 328, 330, 331, 334, 335, 336, 340], "issu": [0, 4, 5, 8, 53, 57, 58, 70, 84, 109, 132, 144, 212, 218, 219, 224, 225, 226, 227, 228, 322, 339], "index": [0, 3, 7, 8, 10, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 57, 58, 60, 62, 68, 69, 70, 71, 76, 80, 94, 100, 102, 109, 116, 162, 189, 190, 333, 334, 337, 339], "search": [0, 163, 329], "page": [0, 7], "somewhat": [1, 324, 340], "equival": [1, 3, 17, 24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 52, 53, 55, 56, 76, 80, 94, 100, 115, 118, 147, 175, 182, 201, 218, 219, 225, 226, 254, 300, 339, 340], "dataload": [1, 56, 64, 66, 329, 330, 337], "except": [1, 2, 3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 76, 80, 94, 100, 109, 120, 135, 142, 143, 144, 178, 180, 182, 184, 198, 216, 220, 221, 223, 323, 329, 337, 339, 340], "1": [1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 65, 66, 68, 73, 76, 77, 80, 86, 89, 90, 93, 94, 95, 96, 98, 99, 100, 101, 102, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 122, 125, 127, 129, 131, 132, 133, 135, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 151, 153, 159, 162, 164, 165, 166, 167, 168, 169, 171, 172, 175, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 202, 203, 205, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 230, 231, 232, 234, 237, 238, 239, 240, 241, 243, 244, 247, 250, 251, 253, 254, 255, 256, 257, 258, 259, 265, 266, 267, 268, 269, 270, 273, 275, 276, 277, 281, 282, 284, 294, 299, 300, 301, 312, 315, 319, 322, 323, 324, 325, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340], "thei": [1, 2, 3, 4, 8, 9, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 76, 80, 89, 94, 95, 96, 100, 102, 120, 125, 131, 139, 146, 147, 151, 184, 185, 237, 238, 239, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 265, 300, 303, 323, 324, 325, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "collect": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 35, 38, 41, 42, 52, 53, 54, 55, 94, 97, 100, 109, 127, 131, 151, 155, 223, 238, 240, 243, 244, 255, 257, 259, 294, 300, 303, 305, 306, 307, 315, 325, 328, 331, 334, 335, 336, 337, 339, 340], "over": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 42, 43, 45, 51, 68, 76, 80, 94, 100, 116, 127, 138, 144, 162, 210, 230, 245, 247, 252, 273, 306, 325, 328, 329, 330, 334, 335, 340], "non": [1, 3, 8, 21, 32, 34, 35, 36, 38, 39, 41, 42, 76, 80, 94, 95, 96, 100, 108, 113, 121, 131, 143, 146, 147, 148, 149, 151, 162, 178, 180, 182, 184, 191, 227, 228, 237, 238, 240, 241, 243, 244, 245, 246, 247, 250, 252, 254, 255, 256, 257, 259, 265, 267, 268, 269, 270, 323, 328, 331, 334, 335, 337, 340], "static": [1, 11, 40, 45, 65, 66, 153, 250, 335, 337], "2": [1, 3, 8, 9, 10, 11, 13, 14, 16, 21, 22, 26, 28, 30, 31, 32, 35, 36, 37, 38, 41, 42, 43, 45, 55, 56, 65, 66, 76, 77, 80, 89, 93, 94, 95, 96, 98, 99, 100, 101, 102, 110, 113, 114, 115, 116, 117, 125, 127, 129, 131, 135, 138, 141, 142, 143, 146, 147, 149, 151, 153, 159, 163, 165, 166, 167, 168, 169, 170, 172, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 189, 190, 191, 192, 195, 199, 210, 217, 218, 219, 220, 221, 223, 227, 231, 232, 237, 238, 239, 240, 244, 250, 251, 254, 255, 256, 257, 259, 266, 267, 268, 269, 270, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 294, 323, 324, 327, 328, 329, 330, 331, 333, 334, 335, 337, 338, 339, 340], "like": [1, 2, 3, 4, 7, 21, 26, 28, 32, 35, 38, 41, 42, 45, 66, 76, 80, 82, 89, 94, 95, 96, 100, 118, 145, 155, 178, 182, 192, 222, 255, 324, 328, 330, 331, 334, 335, 336, 337, 340], "being": [1, 2, 3, 7, 8, 17, 18, 20, 21, 32, 56, 76, 80, 94, 100, 114, 116, 117, 126, 133, 147, 160, 161, 180, 184, 220, 223, 239, 251, 254, 257, 286, 300, 305, 317, 318, 319, 323, 328, 329, 330, 331, 334, 335, 337], "s": [1, 2, 3, 6, 7, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 65, 66, 76, 80, 84, 91, 94, 95, 96, 100, 109, 113, 131, 141, 143, 145, 146, 147, 149, 151, 153, 155, 165, 166, 180, 184, 190, 191, 192, 194, 200, 209, 213, 215, 216, 219, 220, 224, 227, 228, 231, 238, 250, 252, 257, 267, 268, 269, 270, 271, 312, 323, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "accept": [1, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 53, 55, 56, 76, 80, 90, 94, 100, 109, 113, 121, 131, 138, 143, 146, 147, 148, 149, 151, 210, 227, 228, 229, 257, 325, 330, 340], "two": [1, 2, 3, 4, 8, 10, 32, 40, 64, 66, 76, 80, 94, 100, 127, 131, 151, 171, 178, 180, 182, 184, 204, 228, 251, 262, 299, 303, 312, 324, 328, 329, 330, 331, 333, 334, 335, 337, 339, 340], "main": [1, 2, 3, 5, 20, 22, 77, 228, 303, 323, 324, 328, 329, 333, 340], "argument": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 53, 55, 56, 64, 65, 66, 76, 80, 91, 94, 95, 100, 112, 113, 131, 139, 141, 143, 146, 147, 149, 151, 162, 165, 166, 178, 180, 182, 184, 186, 189, 190, 191, 192, 193, 210, 212, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 232, 237, 238, 239, 240, 241, 242, 243, 244, 249, 250, 251, 253, 254, 255, 256, 257, 259, 261, 265, 267, 268, 269, 270, 271, 275, 285, 296, 306, 312, 315, 316, 319, 328, 329, 330, 331, 334, 335, 337, 340], "list": [1, 6, 7, 8, 9, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 49, 52, 53, 54, 55, 59, 64, 65, 66, 67, 76, 80, 90, 94, 95, 96, 100, 102, 103, 112, 114, 117, 125, 127, 129, 131, 138, 147, 149, 151, 153, 162, 174, 180, 184, 186, 189, 190, 196, 201, 219, 225, 226, 228, 230, 231, 232, 252, 257, 264, 267, 270, 285, 299, 300, 317, 318, 323, 328, 330, 333, 335, 336, 337, 339, 340], "constructor": [1, 16, 18, 19, 20, 21, 38, 45, 146, 237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 265, 267, 268, 269, 270, 271, 312, 316, 319, 323, 328, 329, 330, 334, 337], "iter": [1, 11, 13, 14, 16, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 51, 52, 53, 54, 55, 56, 76, 80, 94, 100, 119, 127, 139, 165, 166, 186, 191, 192, 205, 212, 218, 224, 225, 227, 229, 230, 232, 252, 264, 299, 302, 303, 312, 324, 325, 328, 330, 331, 334, 335], "execut": [1, 3, 6, 7, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 41, 42, 52, 53, 54, 55, 76, 77, 80, 84, 90, 91, 94, 100, 107, 147, 178, 180, 182, 184, 220, 229, 230, 307, 319, 323, 325, 327, 329, 330, 331, 334, 337, 338, 340], "step": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 73, 76, 77, 80, 86, 90, 94, 95, 96, 100, 107, 121, 124, 127, 141, 142, 143, 144, 147, 152, 162, 163, 164, 176, 178, 180, 182, 184, 185, 187, 188, 216, 220, 221, 223, 224, 228, 237, 246, 254, 266, 267, 268, 269, 270, 273, 274, 275, 285, 294, 299, 303, 325, 328, 329, 331, 333, 335, 336, 337, 339], "queri": [1, 3, 13, 14, 16, 17, 32, 34, 36, 39, 76, 80, 94, 100, 131, 146, 149, 153, 230, 328, 335, 339], "defin": [1, 2, 11, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 76, 80, 94, 100, 132, 142, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 191, 192, 195, 196, 197, 199, 202, 203, 205, 210, 216, 217, 219, 220, 221, 223, 226, 231, 234, 241, 243, 252, 267, 268, 269, 270, 271, 285, 316, 328, 329, 331, 335, 337, 340], "number": [1, 2, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 70, 76, 80, 90, 91, 93, 94, 95, 96, 100, 109, 116, 122, 126, 127, 137, 141, 144, 153, 164, 165, 166, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 191, 192, 195, 196, 197, 200, 202, 203, 206, 207, 208, 209, 212, 216, 217, 220, 221, 223, 224, 227, 228, 232, 236, 238, 244, 246, 250, 251, 253, 255, 257, 259, 294, 296, 299, 303, 305, 306, 307, 317, 318, 319, 323, 328, 329, 330, 331, 334, 335, 336, 340], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 54, 64, 76, 80, 94, 100, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 129, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 152, 178, 180, 184, 186, 193, 194, 237, 238, 239, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 265, 268, 269, 270, 300, 328, 330, 331, 334, 335, 337, 340], "deliv": [1, 16, 18, 19, 20, 328, 329, 339], "stack": [1, 3, 7, 8, 18, 20, 21, 28, 29, 50, 76, 80, 89, 94, 95, 96, 100, 153, 178, 180, 182, 183, 184, 229, 230, 285, 294, 323, 329, 333, 335, 339], "user": [1, 2, 3, 5, 8, 21, 32, 52, 53, 55, 66, 76, 80, 94, 100, 142, 147, 172, 185, 254, 257, 316, 324, 325, 328, 329, 335, 339, 340], "reset": [1, 3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 52, 53, 54, 55, 66, 73, 76, 77, 80, 86, 89, 90, 91, 93, 94, 95, 96, 100, 109, 118, 121, 124, 126, 131, 138, 141, 142, 143, 144, 146, 149, 152, 153, 155, 163, 178, 180, 184, 211, 223, 285, 312, 328, 329, 330, 331, 333, 334, 339], "whenev": [1, 2, 3, 32, 35, 38, 41, 42, 106, 124, 147, 152, 252, 267, 268, 269, 270, 305, 323], "reach": [1, 13, 14, 16, 17, 18, 19, 20, 21, 22, 40, 64, 76, 80, 94, 100, 141, 216, 220, 221, 223, 328, 330, 334, 339, 340], "done": [1, 2, 3, 4, 7, 8, 13, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 52, 53, 55, 65, 66, 73, 76, 77, 80, 86, 89, 90, 93, 94, 95, 96, 98, 99, 100, 101, 102, 107, 109, 114, 115, 117, 118, 119, 126, 127, 129, 133, 135, 137, 139, 141, 143, 144, 146, 147, 153, 162, 163, 164, 178, 180, 184, 188, 237, 238, 240, 241, 243, 244, 250, 254, 255, 256, 257, 259, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 312, 324, 328, 330, 331, 333, 334, 335, 336, 337, 339, 340], "state": [1, 2, 3, 4, 13, 14, 16, 17, 32, 35, 38, 40, 41, 42, 52, 53, 54, 55, 73, 76, 80, 86, 90, 94, 95, 96, 98, 99, 100, 109, 110, 112, 118, 127, 133, 141, 142, 146, 147, 153, 162, 163, 164, 167, 172, 176, 178, 179, 180, 182, 183, 184, 185, 186, 188, 196, 199, 200, 202, 203, 209, 213, 227, 233, 237, 239, 243, 251, 252, 254, 255, 256, 257, 265, 266, 267, 268, 269, 270, 271, 319, 323, 324, 328, 329, 330, 331, 334, 335, 340], "after": [1, 2, 3, 8, 13, 14, 18, 20, 21, 26, 32, 40, 76, 80, 84, 94, 100, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 123, 124, 125, 126, 127, 129, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 162, 178, 180, 184, 193, 216, 218, 220, 221, 225, 247, 257, 329, 330, 331, 334, 335, 336, 337, 340], "predefin": [1, 329, 330, 331, 337], "becaus": [1, 3, 4, 7, 34, 36, 39, 40, 76, 80, 94, 100, 118, 125, 141, 146, 152, 171, 185, 192, 212, 218, 219, 224, 225, 226, 227, 228, 328, 329, 331, 333, 334, 335, 337, 340], "potenti": [1, 2, 335, 337], "comput": [1, 3, 4, 8, 13, 16, 21, 27, 32, 40, 76, 80, 94, 100, 127, 147, 150, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 195, 196, 197, 198, 199, 202, 203, 205, 207, 208, 210, 213, 216, 217, 219, 220, 221, 223, 224, 226, 228, 231, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 307, 324, 328, 330, 331, 333, 334, 336, 337], "heavi": [1, 8, 337], "crucial": [1, 216, 220, 221, 223, 250, 252, 328, 329, 330, 331, 334, 335, 340], "configur": [1, 8, 13, 14, 16, 17, 21, 22, 40, 125, 167, 172, 199, 252, 254, 312, 323, 328, 329, 330, 334, 335], "hyperparamet": [1, 237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 265, 328, 335, 337], "appropri": [1, 3, 4, 7, 13, 14, 16, 17, 62, 68, 69, 71, 94, 100, 118, 316, 319, 328, 337], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 67, 70, 74, 75, 76, 77, 80, 90, 91, 93, 94, 95, 96, 97, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 315, 316, 317, 318, 319, 323, 324, 328, 331, 334, 335, 336, 339], "take": [1, 3, 8, 23, 40, 76, 80, 94, 100, 112, 141, 144, 146, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 191, 192, 195, 196, 197, 199, 202, 203, 205, 210, 216, 217, 219, 220, 221, 222, 223, 224, 226, 231, 234, 236, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 294, 305, 323, 325, 328, 329, 330, 334, 335, 337, 340], "consider": [1, 3, 8, 329, 334, 337], "whether": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 46, 47, 52, 53, 54, 55, 76, 80, 90, 94, 95, 96, 97, 100, 102, 114, 117, 142, 147, 163, 165, 166, 180, 184, 186, 232, 238, 239, 240, 241, 243, 244, 245, 251, 252, 254, 255, 257, 259, 265, 267, 270, 328, 329, 330, 334, 335, 340], "should": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 65, 66, 67, 68, 76, 80, 89, 90, 94, 95, 96, 97, 100, 109, 112, 113, 114, 115, 118, 119, 121, 125, 127, 132, 133, 135, 138, 139, 141, 142, 144, 146, 147, 152, 153, 155, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 191, 192, 195, 196, 197, 199, 202, 203, 205, 210, 216, 217, 219, 220, 221, 223, 224, 226, 227, 228, 231, 234, 244, 249, 251, 252, 254, 255, 258, 266, 267, 268, 269, 270, 271, 286, 298, 299, 300, 303, 315, 317, 318, 319, 323, 325, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "occur": [1, 8, 14, 28, 29, 110, 127, 132, 152, 163, 212, 218, 219, 224, 225, 226, 227, 228, 247, 337, 340], "serial": [1, 2, 3, 32, 76, 80, 94, 100, 153], "optim": [1, 2, 8, 32, 40, 76, 80, 94, 100, 147, 164, 188, 193, 194, 238, 252, 253, 254, 257, 298, 303, 315, 324, 325, 330, 331, 334, 335], "parallel": [1, 3, 8, 17, 95, 96, 152, 155, 237, 316, 317, 318, 319, 329, 330, 334], "syncdatacollector": [1, 13, 14, 17, 18, 19, 20, 21, 109, 135, 315, 318, 321, 330, 331, 334, 337], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 78, 80, 82, 89, 90, 94, 95, 96, 100, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 317, 318, 319, 323, 324, 325, 328, 329, 330, 331, 334, 337, 340], "worker": [1, 2, 13, 14, 16, 17, 18, 19, 20, 21, 22, 36, 45, 56, 77, 91, 94, 100, 153, 317, 318, 319, 328, 330, 339, 340], "multisyncdatacollector": [1, 18, 19, 20, 21, 318, 321, 330, 339], "split": [1, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 45, 52, 53, 55, 56, 65, 66, 89, 95, 96, 178, 182, 237, 238, 239, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 265, 323, 325, 330, 337, 339], "workload": 1, "across": [1, 3, 8, 18, 19, 20, 21, 35, 38, 41, 42, 65, 66, 84, 153, 191, 223, 305, 321, 323, 328, 334, 335], "aggreg": [1, 3, 163, 165, 166, 168, 169, 230], "result": [1, 3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 41, 42, 52, 53, 54, 55, 64, 65, 66, 76, 77, 80, 94, 100, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 123, 124, 125, 126, 127, 129, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155, 162, 163, 178, 180, 182, 184, 186, 191, 201, 217, 219, 220, 226, 237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 265, 267, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 305, 323, 329, 331, 335, 336, 339, 340], "final": [1, 3, 4, 21, 34, 36, 39, 40, 152, 178, 180, 182, 184, 191, 216, 220, 221, 222, 223, 229, 267, 299, 323, 328, 329, 330, 334, 335, 340], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 317, 321, 328, 329, 330, 339], "sever": [1, 8, 30, 32, 45, 76, 80, 94, 100, 110, 112, 147, 254, 328, 330, 337, 340], "batch": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 54, 55, 56, 57, 58, 61, 64, 65, 66, 68, 70, 76, 80, 90, 91, 93, 94, 100, 109, 121, 127, 129, 132, 135, 143, 147, 148, 152, 153, 163, 173, 174, 178, 179, 180, 182, 183, 184, 185, 189, 190, 191, 192, 193, 198, 200, 206, 210, 223, 227, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 265, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 294, 297, 300, 301, 302, 303, 305, 317, 318, 319, 325, 329, 330, 331, 333, 334, 336, 339, 340], "gather": [1, 3, 18, 20, 21, 45, 56, 57, 58, 70, 132, 190, 198, 266, 307, 322, 328, 329, 330, 331, 334, 335, 337, 340], "continu": [1, 9, 25, 46, 66, 76, 80, 94, 95, 96, 100, 159, 168, 169, 170, 171, 223, 230, 237, 238, 244, 250, 254, 255, 256, 257, 258, 259, 267, 272, 280, 323, 328, 330, 331, 334, 335, 337, 339, 340], "concomitantli": 1, "network": [1, 4, 8, 32, 76, 80, 89, 94, 95, 96, 100, 165, 166, 168, 169, 170, 171, 174, 176, 177, 182, 186, 191, 192, 194, 196, 197, 200, 202, 203, 204, 209, 213, 214, 215, 217, 227, 231, 238, 239, 240, 241, 243, 244, 245, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 263, 265, 267, 268, 269, 270, 271, 314, 315, 323, 324, 325, 333, 335, 340], "impli": [1, 340], "weight": [1, 4, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 40, 76, 80, 94, 98, 99, 100, 113, 131, 143, 146, 147, 149, 151, 178, 179, 180, 182, 183, 184, 191, 194, 227, 237, 238, 239, 244, 247, 257, 305, 314, 323, 325, 328, 329, 330, 331, 333, 335, 337, 339], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 20, 21, 28, 29, 32, 52, 53, 55, 76, 80, 94, 100, 125, 127, 139, 147, 148, 153, 155, 186, 191, 324, 325, 328, 329, 330, 331, 334, 335, 336, 337, 339, 340], "slightli": [1, 323, 324, 331, 335, 336, 337, 340], "lag": [1, 13, 14, 16, 17, 328, 329, 330], "therefor": [1, 3, 7, 55, 76, 80, 94, 100, 135, 254, 265, 340], "although": [1, 8, 76, 80, 94, 100, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 191, 192, 195, 196, 197, 199, 202, 203, 205, 210, 216, 217, 219, 220, 221, 223, 226, 231, 234, 325, 328, 329, 337], "fastest": 1, "price": 1, "suitabl": [1, 2], "where": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 65, 66, 68, 70, 76, 80, 89, 90, 93, 94, 95, 96, 100, 107, 109, 118, 125, 131, 135, 138, 141, 142, 144, 146, 148, 151, 152, 162, 163, 178, 179, 182, 183, 189, 190, 191, 216, 220, 221, 223, 224, 227, 228, 236, 237, 238, 239, 244, 245, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 324, 325, 328, 329, 330, 333, 334, 335, 337, 340], "asynchron": [1, 9, 14, 21, 32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227, 237, 317, 329, 330], "off": [1, 2, 4, 181, 208, 218, 257, 299, 308, 323, 325, 328, 329, 330, 334, 336, 340], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 16, 17, 18, 20, 21, 32, 52, 53, 55, 65, 76, 80, 94, 95, 96, 100, 114, 117, 121, 127, 142, 147, 152, 175, 178, 180, 182, 184, 192, 193, 213, 215, 217, 219, 225, 237, 245, 250, 254, 299, 323, 325, 328, 329, 330, 331, 334, 335, 336, 337, 340], "remot": [1, 2, 18, 19, 20, 21, 94, 100, 340], "rollout": [1, 2, 3, 13, 14, 16, 21, 23, 40, 76, 80, 83, 90, 91, 94, 95, 96, 98, 99, 100, 101, 102, 107, 109, 112, 114, 117, 118, 119, 125, 129, 133, 138, 139, 141, 142, 144, 155, 164, 180, 184, 188, 223, 237, 307, 323, 328, 330, 331, 336, 337, 339], "necessari": [1, 4, 6, 8, 13, 14, 16, 17, 53, 55, 139, 255, 267, 268, 269, 270, 271, 324, 328, 330], "synchronis": [1, 77, 334], "either": [1, 5, 22, 32, 40, 56, 76, 80, 94, 100, 141, 142, 233, 259, 290, 325, 328, 329, 331, 336, 337, 339, 340], "update_policy_weights_": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 328, 334, 339], "update_at_each_batch": [1, 13, 14, 17, 328], "true": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 64, 65, 66, 74, 75, 76, 77, 78, 80, 90, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 109, 110, 113, 116, 121, 124, 125, 126, 127, 131, 132, 133, 137, 139, 141, 143, 145, 146, 147, 148, 149, 151, 153, 155, 159, 162, 163, 164, 165, 166, 168, 169, 170, 171, 177, 178, 179, 180, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 207, 208, 212, 213, 214, 215, 216, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 237, 238, 239, 240, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 259, 262, 267, 268, 269, 270, 273, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 296, 297, 299, 300, 303, 319, 323, 324, 325, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "second": [1, 3, 8, 178, 180, 182, 184, 219, 239, 251, 254, 257, 302, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 55, 56, 57, 58, 70, 73, 76, 78, 80, 83, 84, 86, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 113, 114, 115, 117, 118, 119, 125, 129, 130, 131, 133, 135, 139, 141, 143, 145, 146, 147, 149, 151, 159, 162, 164, 165, 166, 167, 168, 169, 170, 171, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 191, 192, 193, 194, 199, 200, 201, 209, 212, 213, 214, 215, 217, 218, 219, 223, 224, 225, 226, 227, 230, 232, 237, 238, 240, 241, 243, 244, 250, 254, 255, 256, 257, 259, 265, 267, 268, 269, 270, 300, 305, 312, 313, 323, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339], "oper": [1, 3, 4, 7, 8, 13, 14, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 44, 45, 46, 47, 76, 80, 94, 100, 121, 125, 146, 174, 175, 179, 183, 195, 213, 214, 215, 218, 219, 222, 227, 233, 237, 239, 240, 241, 245, 251, 254, 256, 265, 266, 267, 268, 269, 270, 303, 312, 321, 325, 328, 329, 330, 331, 333, 334, 335, 340], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 43, 44, 45, 52, 65, 66, 75, 76, 77, 80, 90, 94, 100, 109, 127, 143, 146, 153, 159, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 191, 192, 195, 196, 197, 199, 202, 203, 205, 210, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 231, 234, 241, 244, 252, 265, 267, 268, 269, 270, 286, 290, 299, 307, 308, 309, 312, 315, 317, 318, 323, 324, 325, 328, 330, 331, 335, 337, 340], "cpu": [1, 3, 8, 10, 13, 14, 16, 18, 19, 20, 21, 24, 26, 28, 32, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 53, 55, 56, 57, 58, 70, 73, 76, 80, 86, 89, 90, 93, 94, 95, 96, 98, 99, 100, 101, 102, 113, 114, 115, 117, 118, 119, 129, 131, 133, 135, 139, 141, 143, 146, 147, 149, 151, 159, 162, 164, 178, 179, 180, 182, 183, 184, 188, 193, 194, 200, 201, 209, 212, 213, 214, 215, 217, 218, 219, 224, 225, 226, 227, 230, 232, 237, 238, 240, 241, 243, 244, 250, 254, 255, 256, 257, 259, 265, 300, 312, 323, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "slower": 1, "than": [1, 2, 3, 4, 8, 13, 14, 16, 17, 52, 65, 66, 76, 80, 84, 94, 100, 133, 171, 180, 182, 184, 186, 195, 210, 212, 216, 218, 227, 232, 252, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 322, 324, 328, 329, 330, 334, 335, 337, 339, 340], "one": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 52, 53, 54, 55, 60, 62, 65, 66, 67, 69, 71, 76, 77, 80, 84, 89, 93, 94, 95, 96, 100, 102, 107, 109, 112, 114, 115, 116, 117, 126, 127, 131, 135, 138, 140, 142, 143, 144, 146, 147, 148, 151, 153, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 191, 192, 195, 196, 197, 198, 199, 201, 202, 203, 205, 210, 212, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 231, 232, 234, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 250, 251, 252, 254, 255, 256, 257, 258, 259, 265, 267, 268, 269, 270, 274, 275, 296, 298, 299, 303, 307, 312, 319, 322, 323, 324, 325, 328, 329, 330, 331, 333, 334, 335, 336, 337, 340], "cuda": [1, 3, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 76, 80, 83, 84, 94, 100, 113, 125, 130, 131, 143, 146, 147, 149, 151, 178, 179, 182, 183, 227, 243, 295, 328, 329, 330, 331, 334, 336, 340], "multipl": [1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 27, 43, 94, 100, 110, 112, 116, 126, 135, 138, 141, 146, 153, 178, 182, 184, 185, 191, 193, 194, 212, 218, 224, 225, 227, 228, 231, 239, 244, 251, 254, 255, 259, 273, 312, 319, 323, 325, 328, 329, 330, 334, 335, 337, 339], "infer": [1, 94, 100, 109, 153, 180, 184, 193, 217, 243, 328, 330, 337], "run": [1, 3, 4, 5, 6, 7, 8, 10, 13, 14, 17, 21, 32, 74, 75, 76, 80, 90, 94, 100, 126, 127, 147, 153, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 191, 192, 195, 196, 197, 199, 202, 203, 205, 210, 216, 217, 219, 220, 221, 223, 226, 229, 230, 231, 234, 257, 299, 317, 318, 319, 322, 325, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339], "dispatch": [1, 18, 19, 20, 21, 210], "avail": [1, 3, 4, 6, 21, 64, 84, 94, 95, 96, 125, 175, 201, 224, 228, 252, 317, 318, 323, 328, 329, 330, 331, 334, 335, 337, 340], "speed": [1, 2, 4, 8, 27, 94, 100, 324, 328, 329, 330, 331, 334, 335, 337], "up": [1, 2, 3, 8, 9, 13, 14, 16, 27, 40, 52, 53, 55, 94, 100, 144, 146, 254, 322, 323, 324, 328, 329, 330, 331, 334, 335, 337, 340], "avoid": [1, 32, 57, 58, 70, 76, 80, 94, 100, 106, 147, 153, 212, 227, 232, 239, 251, 254, 257, 306, 330, 334], "oom": [1, 57, 58, 70], "choic": [1, 2, 52, 53, 55, 94, 195, 323, 324, 328, 329, 334], "size": [1, 2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 61, 64, 65, 66, 67, 68, 70, 73, 76, 78, 80, 86, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102, 110, 114, 117, 118, 119, 121, 129, 131, 133, 135, 139, 140, 141, 143, 145, 146, 147, 148, 151, 153, 159, 162, 164, 165, 166, 167, 172, 173, 175, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 195, 198, 199, 200, 201, 202, 203, 206, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 230, 232, 237, 238, 240, 241, 243, 244, 250, 252, 254, 255, 256, 257, 259, 265, 266, 267, 268, 269, 270, 271, 286, 294, 300, 312, 323, 329, 330, 331, 333, 334, 335, 336, 339, 340], "pass": [1, 3, 4, 13, 14, 16, 18, 19, 20, 21, 22, 26, 32, 35, 38, 40, 41, 42, 45, 53, 55, 57, 58, 68, 70, 76, 77, 78, 80, 89, 91, 94, 95, 96, 100, 114, 117, 133, 146, 148, 153, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 191, 192, 193, 195, 196, 197, 199, 200, 202, 203, 205, 209, 210, 212, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 234, 239, 251, 252, 254, 267, 268, 269, 270, 271, 300, 317, 318, 319, 323, 328, 329, 330, 331, 333, 334, 335, 337, 340], "ie": [1, 3, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 45, 46, 47, 60, 66, 76, 80, 84, 93, 94, 100, 109, 121, 148, 153, 163, 180, 184, 217, 237, 239, 240, 244, 250, 251, 254, 255, 256, 257, 259, 267, 268, 269, 270, 323, 324, 329, 330, 334, 337], "store": [1, 3, 8, 13, 14, 16, 17, 20, 26, 32, 34, 36, 37, 39, 41, 42, 43, 45, 55, 56, 57, 58, 59, 60, 70, 76, 80, 94, 100, 152, 153, 164, 185, 188, 237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 265, 312, 321, 325, 328, 330, 331, 334, 336, 337, 340], "while": [1, 3, 7, 8, 32, 76, 80, 94, 100, 135, 147, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 191, 192, 195, 196, 197, 199, 202, 203, 205, 210, 216, 217, 219, 220, 221, 223, 226, 231, 234, 250, 251, 254, 257, 323, 328, 330, 331, 334, 335, 336, 337, 339], "wait": [1, 20, 21, 22, 331, 335], "also": [1, 2, 3, 8, 9, 11, 32, 34, 36, 39, 41, 53, 55, 56, 57, 58, 70, 76, 80, 94, 95, 96, 100, 106, 109, 116, 127, 133, 135, 138, 139, 141, 143, 147, 178, 182, 203, 224, 229, 230, 231, 237, 238, 240, 241, 243, 244, 250, 254, 257, 267, 274, 275, 323, 325, 328, 329, 330, 331, 333, 334, 335, 337, 340], "impact": [1, 114, 117, 329, 331, 334], "memori": [1, 2, 3, 8, 21, 27, 32, 34, 36, 39, 45, 52, 53, 55, 57, 76, 77, 80, 84, 94, 100, 109, 113, 131, 143, 146, 147, 149, 151, 153, 182, 183, 227, 319, 325, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "manag": [1, 8, 263, 264, 267, 268, 269, 270, 299], "kei": [1, 2, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 65, 66, 68, 76, 80, 94, 100, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 130, 131, 132, 133, 135, 138, 139, 141, 142, 143, 144, 146, 147, 149, 150, 151, 152, 153, 162, 163, 164, 174, 175, 180, 184, 187, 188, 201, 212, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 265, 266, 267, 268, 269, 270, 271, 286, 297, 298, 299, 301, 302, 303, 307, 312, 324, 325, 328, 330, 331, 333, 334, 335, 337, 339, 340], "control": [1, 3, 5, 8, 16, 74, 75, 89, 95, 96, 116, 162, 168, 169, 170, 171, 180, 184, 187, 188, 203, 210, 223, 227, 228, 229, 237, 239, 251, 254, 258, 267, 272, 280, 323, 325, 328, 329, 330, 334, 335, 337], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 64, 76, 80, 84, 91, 94, 97, 100, 109, 110, 114, 117, 122, 125, 126, 127, 131, 132, 141, 143, 144, 146, 147, 149, 155, 178, 179, 181, 182, 183, 184, 189, 190, 191, 208, 213, 214, 215, 217, 224, 227, 228, 230, 237, 238, 239, 241, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 262, 265, 267, 268, 269, 270, 294, 298, 312, 323, 324, 325, 328, 329, 330, 331, 333, 334, 335, 336, 337, 340], "storing_devic": [1, 13, 14, 16, 17, 18, 19, 20, 21, 328, 329, 334, 339], "dure": [1, 3, 13, 14, 16, 17, 18, 19, 20, 36, 40, 45, 52, 53, 54, 55, 56, 76, 80, 94, 95, 96, 100, 109, 112, 114, 117, 122, 129, 147, 180, 184, 299, 303, 324, 328, 329, 330, 331, 334, 335, 337, 340], "heurist": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 223, 328, 340], "usual": [1, 3, 4, 6, 7, 8, 52, 76, 80, 94, 100, 194, 254, 267, 268, 269, 270, 271, 285, 312, 322, 323, 325, 328, 329, 330, 331, 334, 337, 340], "same": [1, 2, 3, 4, 11, 13, 14, 16, 18, 19, 20, 21, 28, 29, 32, 34, 36, 39, 43, 45, 52, 64, 76, 77, 80, 89, 94, 95, 96, 100, 109, 114, 116, 117, 122, 126, 127, 146, 147, 153, 165, 166, 179, 180, 183, 184, 186, 189, 190, 191, 192, 217, 223, 231, 257, 328, 329, 330, 333, 334, 336, 337, 340], "storag": [1, 2, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 57, 58, 59, 64, 65, 66, 68, 70, 76, 78, 80, 94, 100, 109, 114, 117, 135, 321, 325, 329, 330, 331, 334, 336], "default": [1, 2, 3, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 60, 64, 65, 66, 70, 74, 76, 80, 93, 94, 95, 96, 97, 100, 102, 107, 109, 110, 114, 116, 117, 118, 121, 125, 126, 127, 129, 131, 132, 135, 137, 139, 141, 142, 143, 144, 145, 147, 148, 149, 151, 152, 153, 155, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 205, 206, 207, 208, 212, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 231, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 312, 315, 319, 325, 328, 329, 330, 331, 336, 337, 339, 340], "behaviour": [1, 3, 21, 80, 110, 114, 117, 127, 132, 142, 162, 180, 181, 184, 208, 299, 323, 329, 337], "besid": 1, "those": [1, 2, 3, 5, 7, 26, 28, 94, 100, 109, 114, 117, 127, 143, 144, 184, 224, 228, 229, 230, 305, 317, 318, 323, 328, 329, 334, 335, 340], "choos": [1, 89, 180, 184, 254, 323, 324, 328, 329, 330, 334, 337], "follow": [1, 2, 3, 6, 7, 8, 32, 34, 36, 37, 39, 40, 52, 54, 76, 80, 90, 93, 94, 95, 96, 98, 99, 100, 102, 125, 131, 149, 165, 166, 178, 180, 182, 184, 186, 219, 225, 226, 236, 237, 238, 239, 240, 244, 250, 251, 254, 255, 256, 257, 259, 303, 312, 323, 324, 325, 328, 329, 330, 331, 333, 334, 335, 337, 339, 340], "max_frames_per_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 306, 328, 330, 339], "frame": [1, 2, 13, 14, 16, 17, 18, 19, 20, 21, 32, 109, 122, 216, 220, 221, 223, 285, 286, 296, 299, 303, 306, 307, 328, 329, 330, 331, 334, 337, 339, 340], "call": [1, 2, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 67, 70, 76, 80, 93, 94, 100, 109, 112, 113, 116, 121, 124, 125, 127, 129, 130, 131, 138, 143, 146, 147, 149, 151, 152, 153, 155, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 191, 192, 193, 195, 196, 197, 199, 202, 203, 205, 210, 216, 217, 219, 220, 221, 223, 226, 227, 228, 230, 231, 234, 239, 251, 254, 257, 266, 267, 268, 269, 270, 285, 299, 325, 329, 330, 331, 334, 335, 337, 340], "frames_per_batch": [1, 13, 14, 16, 17, 18, 19, 20, 21, 109, 135, 306, 328, 329, 330, 331, 334, 337, 339], "each": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 30, 31, 32, 40, 41, 52, 65, 66, 76, 77, 80, 94, 95, 96, 100, 102, 131, 135, 138, 141, 142, 143, 144, 151, 153, 175, 178, 179, 180, 182, 184, 191, 192, 196, 200, 201, 209, 216, 218, 219, 220, 226, 230, 273, 276, 277, 278, 279, 281, 282, 283, 284, 299, 300, 317, 318, 323, 328, 329, 330, 331, 334, 335, 336, 337, 339, 340], "init_random_fram": [1, 13, 14, 16, 17, 18, 19, 20, 21, 306, 328, 329], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 44, 46, 47, 61, 76, 80, 90, 94, 100, 116, 126, 127, 143, 155, 178, 180, 182, 184, 220, 224, 227, 228, 238, 255, 299, 307, 323, 328, 329, 330, 331, 335, 336, 337, 339, 340], "rand_step": [1, 3, 72, 74, 75, 76, 77, 79, 80, 81, 85, 87, 88, 90, 91, 94, 100, 124, 143, 153, 335, 339, 340], "reset_at_each_it": [1, 13, 14, 16, 17, 18, 19, 20, 21, 328], "split_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 52, 53, 55, 328, 329, 330], "trajectori": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 32, 41, 52, 53, 55, 60, 65, 66, 68, 76, 80, 94, 100, 132, 141, 146, 164, 184, 188, 223, 254, 267, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 294, 321, 324, 328, 329, 330, 331, 335, 337, 339, 340], "pad": [1, 2, 3, 23, 37, 43, 52, 53, 55, 109, 165, 166, 168, 169, 184, 185, 189, 190, 191, 300], "along": [1, 2, 3, 23, 28, 29, 34, 36, 39, 40, 45, 52, 53, 55, 58, 65, 66, 70, 109, 110, 127, 129, 132, 138, 145, 184, 186, 189, 190, 194, 218, 224, 227, 228, 252, 323, 328, 329, 331, 334, 335, 337], "point": [1, 2, 3, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 54, 60, 62, 68, 69, 71, 76, 80, 94, 100, 109, 113, 131, 142, 143, 145, 146, 147, 149, 151, 187, 227, 236, 245, 303, 322, 329, 330, 333, 334, 335, 337, 340], "boolean": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 80, 132, 141, 163, 189, 190, 216, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 325, 331], "repres": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 41, 53, 76, 80, 94, 100, 102, 122, 132, 153, 175, 189, 190, 201, 218, 219, 225, 226, 228, 262, 267, 300, 328, 330, 331, 334], "valid": [1, 3, 23, 34, 36, 37, 45, 56, 103, 132, 147, 165, 166, 186, 189, 190, 216, 223, 251, 267, 268, 269, 270, 300, 325, 340], "exploration_typ": [1, 13, 14, 16, 18, 19, 20, 21, 299, 321, 328, 329], "strategi": [1, 2, 16, 89, 190, 198, 220, 323, 325, 328, 329, 334, 337], "reset_when_don": [1, 13, 14, 16, 18, 19, 20, 21], "These": [1, 2, 7, 32, 40, 76, 80, 94, 100, 131, 151, 323, 324, 328, 330, 334, 335, 337, 340], "tool": [1, 2, 3, 5, 331, 335, 337, 340], "backend": [1, 3, 7, 11, 18, 19, 21, 22, 94, 104, 106, 325, 328, 330, 331, 335], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 321], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 321], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "torch": [1, 2, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 60, 64, 65, 66, 68, 70, 73, 76, 77, 80, 86, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 110, 113, 114, 115, 116, 117, 118, 119, 125, 127, 129, 131, 133, 135, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 151, 153, 159, 162, 163, 164, 165, 166, 167, 172, 173, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 206, 207, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 235, 237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 294, 301, 302, 312, 315, 323, 324, 325, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "multiprocess": [1, 2, 3, 18, 19, 20, 77, 78, 153, 329, 330, 335, 340], "synchron": [1, 13, 19, 21, 91, 317, 318, 329, 330], "mode": [1, 6, 13, 14, 16, 18, 19, 20, 21, 32, 76, 80, 91, 94, 100, 114, 117, 142, 147, 153, 156, 160, 161, 173, 180, 181, 184, 198, 206, 207, 208, 224, 228, 252, 299, 328, 329, 331, 334, 339, 340], "find": [1, 4, 6, 7, 18, 19, 20, 35, 37, 43, 65, 66, 182, 216, 223, 297, 301, 328, 329, 334], "dedic": [1, 2, 3, 18, 19, 20, 21, 213, 214, 215, 323, 328, 333, 334], "folder": [1, 2, 329], "sub": [1, 2, 3, 13, 14, 18, 19, 20, 21, 65, 76, 80, 94, 100, 132, 229, 230, 294, 303, 323, 328, 329, 330, 333, 339, 340], "all": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 44, 46, 47, 49, 76, 77, 80, 90, 94, 95, 96, 100, 102, 103, 109, 112, 113, 114, 115, 117, 120, 125, 126, 127, 131, 138, 143, 144, 146, 147, 149, 151, 153, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 191, 192, 195, 196, 197, 199, 202, 203, 205, 210, 216, 217, 219, 220, 221, 223, 226, 227, 228, 230, 231, 234, 247, 252, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 298, 303, 306, 317, 318, 319, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340], "variou": [1, 3, 13, 14, 16, 17, 180, 184, 237, 238, 239, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 260, 265, 317, 318, 328, 329, 330, 334, 340], "machin": [1, 7, 18, 19, 20, 32, 54, 84, 334], "One": [1, 2, 4, 8, 31, 33, 45, 109, 135, 149, 198, 216, 227, 231, 258, 262, 290, 328, 329, 337, 340], "wonder": 1, "why": [1, 3, 335, 340], "parallelenv": [1, 2, 3, 13, 14, 16, 17, 20, 76, 80, 91, 95, 96, 100, 316, 321, 328, 329, 330, 333, 339, 340], "instead": [1, 4, 7, 8, 11, 27, 32, 76, 80, 94, 100, 121, 143, 147, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 191, 192, 195, 196, 197, 199, 202, 203, 205, 210, 216, 217, 219, 220, 221, 223, 226, 231, 234, 237, 239, 241, 244, 245, 250, 251, 254, 255, 256, 257, 265, 267, 271, 275, 319, 323, 335, 337, 340], "In": [1, 3, 4, 5, 7, 8, 10, 11, 17, 21, 22, 32, 52, 53, 55, 76, 80, 94, 95, 96, 100, 113, 114, 115, 117, 131, 135, 139, 142, 143, 145, 146, 147, 149, 151, 152, 178, 181, 182, 186, 191, 203, 207, 208, 227, 230, 236, 237, 238, 240, 241, 243, 244, 250, 252, 254, 255, 256, 257, 259, 305, 317, 318, 319, 323, 324, 328, 329, 330, 331, 333, 334, 335, 336, 337, 340], "lower": [1, 2, 3, 17, 21, 25, 112, 153, 202, 203, 231, 330, 335], "io": [1, 91, 182, 183], "footprint": [1, 2, 337], "need": [1, 2, 3, 4, 7, 8, 10, 11, 18, 19, 20, 21, 32, 34, 36, 67, 76, 80, 84, 89, 94, 95, 96, 100, 109, 112, 121, 131, 133, 144, 147, 151, 153, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 191, 192, 193, 195, 196, 197, 199, 202, 203, 205, 210, 216, 217, 219, 220, 221, 223, 225, 226, 227, 231, 234, 236, 244, 255, 256, 257, 259, 266, 271, 286, 303, 319, 323, 324, 328, 329, 330, 331, 334, 335, 337, 339, 340], "commun": [1, 2, 3, 322, 330, 340], "yet": [1, 336], "spec": [1, 2, 3, 15, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 48, 49, 50, 52, 76, 78, 80, 90, 94, 100, 102, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 127, 129, 131, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 155, 159, 163, 175, 201, 203, 212, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 237, 238, 240, 241, 243, 244, 250, 254, 255, 256, 257, 259, 265, 312, 323, 328, 329, 330, 331, 333, 334, 339], "plai": [1, 3, 95, 96, 109, 329, 330, 337, 340], "role": [1, 3, 329, 340], "opposit": 1, "direct": [1, 32, 76, 80, 94, 100, 178, 182, 252, 329], "sinc": [1, 2, 3, 4, 5, 7, 32, 35, 38, 41, 42, 66, 76, 80, 94, 95, 96, 100, 162, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 191, 192, 195, 196, 197, 199, 202, 203, 205, 210, 216, 217, 218, 219, 220, 221, 223, 225, 226, 231, 234, 328, 329, 330, 331, 335, 336, 337, 339, 340], "faster": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 55, 91, 267, 268, 269, 270, 331, 334], "share": [1, 3, 6, 8, 34, 36, 39, 57, 58, 59, 67, 70, 77, 94, 100, 153, 180, 184, 191, 192, 213, 214, 215, 237, 239, 240, 244, 250, 251, 254, 255, 256, 257, 259, 319, 321, 323, 330, 331, 333, 334, 339, 340], "among": [1, 3, 95, 96, 334], "achiev": [1, 3, 4, 32, 76, 80, 84, 94, 100, 142, 163, 300, 325, 328, 329, 330, 331, 334, 335, 340], "via": [1, 4, 7, 8, 35, 38, 41, 42, 52, 53, 54, 55, 94, 131, 146, 151, 242, 252, 324, 325, 328, 329, 330, 331, 337, 340], "prohibit": [1, 3], "slow": [1, 3, 4, 34, 36, 39], "compar": [1, 3, 299, 324, 328, 330, 334, 337, 340], "gpu": [1, 7, 8, 32, 57, 58, 70, 76, 80, 84, 94, 100, 328, 330, 331, 334, 340], "nativ": [1, 7, 9, 53, 76, 80, 94, 100, 109, 331, 337], "driver": [1, 7], "practic": [1, 3, 4, 5, 8, 181, 207, 208, 236, 322, 328, 329, 330, 331, 334, 336, 340], "mean": [1, 2, 3, 4, 7, 13, 14, 16, 18, 19, 20, 21, 34, 36, 39, 41, 60, 80, 127, 153, 164, 173, 176, 178, 180, 182, 184, 185, 188, 206, 216, 224, 228, 267, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 323, 324, 328, 329, 330, 334, 335, 337, 339, 340], "keyword": [1, 3, 13, 14, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 53, 55, 56, 65, 66, 76, 80, 94, 100, 112, 113, 131, 139, 143, 146, 147, 149, 151, 180, 184, 189, 190, 212, 216, 217, 218, 220, 221, 223, 224, 225, 227, 228, 231, 237, 238, 239, 240, 241, 242, 243, 244, 249, 250, 251, 253, 254, 255, 256, 257, 259, 261, 265, 267, 268, 269, 270, 271, 275, 316, 328, 329, 330, 334, 337, 340], "build": [1, 3, 7, 23, 26, 32, 35, 38, 41, 42, 52, 53, 54, 55, 76, 80, 94, 97, 100, 135, 153, 164, 180, 184, 188, 222, 224, 228, 303, 310, 311, 313, 314, 323, 325, 330, 331, 334, 335, 336, 339, 340], "given": [1, 2, 3, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 40, 41, 42, 44, 46, 47, 48, 49, 52, 53, 54, 55, 65, 66, 76, 80, 90, 94, 100, 113, 116, 127, 131, 143, 146, 147, 149, 151, 162, 164, 175, 176, 178, 182, 188, 201, 205, 212, 218, 219, 220, 223, 226, 227, 228, 229, 230, 232, 236, 240, 241, 243, 266, 267, 268, 269, 270, 271, 273, 295, 299, 315, 323, 325, 328, 329, 330, 334, 335, 340], "mani": [1, 3, 4, 38, 76, 237, 239, 244, 251, 254, 255, 259, 323, 328, 329, 330, 334, 335, 337, 340], "eg": [1, 2, 3, 11, 34, 36, 39, 57, 58, 59, 67, 70, 76, 80, 84, 94, 100, 116, 141, 147, 191, 217], "gymnasium": [1, 3, 5, 11, 76, 80, 87, 88, 94, 100, 104, 106, 119, 139, 141, 152, 329, 330, 335, 339], "other": [1, 2, 3, 4, 7, 8, 21, 22, 32, 35, 38, 41, 42, 45, 52, 53, 55, 57, 58, 59, 64, 65, 66, 67, 70, 76, 80, 90, 94, 100, 112, 115, 116, 139, 145, 149, 153, 178, 180, 184, 194, 195, 217, 219, 220, 226, 228, 237, 238, 239, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 265, 267, 300, 312, 317, 318, 323, 325, 328, 329, 330, 331, 334, 335, 336, 337, 339, 340], "warn": [1, 3, 216, 220, 221, 223, 329], "quickli": [1, 3, 329, 334, 340], "becom": [1, 3, 4, 21, 178, 182, 334, 340], "quit": [1, 3, 323, 328, 329, 330, 334, 340], "annoi": [1, 3], "By": [1, 2, 3, 33, 76, 80, 94, 95, 96, 100, 102, 210, 228, 252, 299, 319, 328, 336, 337, 340], "filter": [1, 3, 4, 45, 237, 238, 240, 244, 250, 254, 255, 257], "out": [1, 3, 4, 5, 9, 21, 32, 34, 36, 39, 45, 52, 76, 80, 94, 95, 96, 100, 143, 155, 178, 179, 182, 189, 190, 193, 194, 212, 217, 218, 219, 223, 224, 225, 226, 227, 228, 263, 264, 325, 328, 329, 330, 331, 334, 335, 337, 339, 340], "If": [1, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 64, 65, 66, 68, 70, 76, 77, 80, 84, 90, 94, 95, 96, 100, 102, 104, 109, 110, 111, 112, 114, 115, 116, 117, 119, 121, 125, 126, 127, 131, 132, 135, 138, 139, 142, 143, 144, 146, 147, 149, 151, 153, 162, 163, 165, 166, 178, 179, 180, 182, 183, 184, 185, 186, 189, 190, 191, 192, 210, 212, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 250, 251, 252, 254, 255, 256, 257, 259, 265, 266, 267, 268, 269, 270, 271, 281, 282, 283, 284, 290, 298, 300, 303, 305, 307, 312, 315, 319, 322, 328, 329, 330, 331, 333, 334, 335, 337, 339, 340], "still": [1, 2, 3, 9, 216, 251, 252, 328, 329, 331, 333, 335, 337, 340], "wish": [1, 3, 106, 337], "see": [1, 3, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 54, 55, 56, 65, 76, 80, 83, 91, 94, 95, 96, 100, 102, 113, 131, 143, 145, 146, 147, 149, 151, 154, 165, 166, 178, 181, 182, 186, 192, 193, 200, 208, 209, 213, 215, 227, 228, 300, 328, 329, 330, 331, 334, 335, 337, 340], "displai": [1, 3, 7, 303, 325, 328, 329, 334, 335], "filter_warnings_subprocess": [1, 3], "fals": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 64, 65, 66, 70, 73, 74, 76, 77, 80, 86, 89, 90, 93, 94, 95, 96, 98, 99, 100, 101, 102, 107, 109, 110, 113, 114, 117, 118, 119, 121, 124, 125, 126, 127, 129, 131, 132, 133, 135, 137, 139, 141, 143, 145, 146, 147, 148, 149, 151, 153, 155, 162, 163, 164, 165, 166, 168, 175, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 191, 192, 200, 201, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 237, 238, 239, 240, 241, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 259, 262, 265, 267, 268, 269, 270, 276, 277, 278, 279, 281, 282, 283, 284, 296, 297, 299, 300, 301, 303, 312, 319, 323, 325, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "central": [2, 191, 328, 329, 334, 337], "part": [2, 4, 8, 32, 40, 53, 55, 76, 80, 94, 100, 127, 135, 138, 180, 184, 232, 294, 319, 328, 330, 331, 335, 340], "algorithm": [2, 3, 8, 9, 13, 14, 90, 122, 237, 254, 255, 256, 257, 294, 308, 321, 324, 325, 328, 329, 330, 331, 334, 336, 337, 339], "implement": [2, 3, 9, 11, 16, 32, 67, 76, 80, 91, 94, 100, 113, 114, 115, 119, 125, 133, 139, 141, 146, 153, 165, 178, 179, 180, 181, 182, 183, 184, 206, 207, 208, 237, 238, 242, 243, 250, 252, 253, 254, 257, 312, 323, 325, 328, 329, 330, 331, 335, 339], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 26, 32, 34, 36, 39, 40, 42, 52, 64, 66, 76, 77, 80, 84, 94, 100, 109, 125, 131, 133, 149, 152, 153, 164, 184, 185, 191, 192, 237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 265, 322, 323, 324, 325, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "give": [2, 3, 7, 41, 76, 80, 90, 94, 100, 109, 322, 324, 328, 329, 334, 335, 336, 339], "abil": [2, 252, 335, 337], "veri": [2, 3, 329, 335, 337, 339, 340], "influenti": 2, "sampl": [2, 4, 8, 9, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 66, 68, 70, 76, 80, 90, 93, 94, 100, 109, 132, 135, 156, 157, 160, 161, 164, 173, 181, 188, 189, 190, 198, 199, 202, 207, 208, 212, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 237, 238, 239, 240, 241, 243, 251, 253, 254, 259, 294, 300, 303, 306, 323, 328, 329, 330, 331, 334, 336, 339, 340], "latenc": 2, "especi": [2, 3, 7, 8, 110], "larger": [2, 4, 250], "volum": 2, "lazymemmapstorag": [2, 35, 38, 41, 42, 52, 53, 54, 55, 65, 66, 109, 321, 328, 329, 331, 336, 337], "advis": [2, 340], "due": [2, 3, 5, 336, 337, 340], "serialis": [2, 34, 36, 39], "memmaptensor": 2, "well": [2, 3, 8, 17, 21, 32, 35, 37, 38, 41, 42, 67, 76, 80, 94, 100, 182, 202, 203, 252, 271, 328, 329, 331, 336, 337, 339, 340], "specifi": [2, 11, 13, 14, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 76, 80, 94, 95, 96, 100, 102, 114, 115, 117, 138, 140, 142, 148, 164, 182, 227, 228, 252, 258, 323, 328, 330, 331], "file": [2, 6, 7, 8, 34, 36, 39, 52, 53, 55, 285, 325, 327, 329, 337, 338], "locat": [2, 7, 34, 36, 39, 45, 76, 80, 94, 100, 118, 127, 137, 181, 195, 207, 208, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 328, 329, 330, 334, 337], "improv": [2, 4, 122, 237, 324, 334, 337], "failur": [2, 4], "recoveri": 2, "liststorag": [2, 35, 38, 41, 42, 321, 337], "were": [2, 7, 94, 100, 330, 337], "found": [2, 3, 6, 7, 10, 21, 26, 32, 34, 36, 39, 45, 52, 53, 55, 65, 66, 76, 80, 84, 94, 100, 107, 109, 135, 138, 144, 153, 163, 220, 221, 224, 228, 251, 252, 254, 328, 329, 331], "rough": 2, "benchmark": [2, 3, 9], "http": [2, 5, 6, 7, 10, 18, 19, 20, 35, 43, 54, 55, 60, 84, 91, 95, 96, 97, 109, 131, 149, 167, 168, 169, 170, 171, 172, 175, 176, 177, 182, 188, 189, 190, 194, 196, 197, 199, 200, 202, 203, 209, 219, 223, 237, 238, 241, 242, 243, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 267, 272, 280, 312, 336, 339], "github": [2, 5, 6, 7, 10, 18, 19, 20, 53, 95, 96, 97, 149, 339], "com": [2, 5, 6, 7, 10, 18, 19, 20, 55, 84, 95, 96, 97, 336, 339], "tree": [2, 34, 36, 39, 76, 80, 94, 100], "type": [2, 3, 14, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 56, 76, 80, 89, 90, 94, 95, 96, 100, 113, 114, 115, 118, 119, 125, 131, 133, 139, 141, 143, 146, 147, 149, 151, 153, 157, 161, 165, 166, 186, 191, 192, 194, 200, 209, 216, 218, 224, 227, 228, 237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 261, 265, 273, 312, 317, 323, 328, 329, 330, 334, 335, 337, 340], "1x": 2, "lazytensorstorag": [2, 41, 42, 68, 135, 321, 330, 334, 337], "83x": 2, "3": [2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 17, 21, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 65, 66, 76, 80, 83, 89, 91, 93, 94, 95, 96, 98, 99, 100, 107, 109, 113, 116, 118, 119, 125, 127, 129, 131, 133, 135, 138, 139, 141, 142, 143, 145, 146, 147, 149, 151, 159, 164, 165, 166, 168, 169, 172, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 191, 192, 195, 198, 200, 210, 212, 213, 214, 215, 218, 219, 224, 226, 227, 230, 231, 232, 237, 238, 240, 241, 243, 244, 245, 246, 247, 250, 252, 254, 255, 256, 257, 259, 265, 267, 268, 269, 270, 273, 276, 277, 278, 279, 281, 282, 283, 284, 286, 302, 323, 325, 328, 329, 330, 331, 334, 335, 336, 337, 339, 340], "44x": 2, "between": [2, 3, 4, 5, 13, 14, 16, 17, 21, 32, 40, 64, 66, 76, 80, 94, 100, 116, 126, 136, 147, 155, 165, 166, 178, 180, 184, 186, 191, 192, 219, 224, 228, 237, 239, 240, 243, 244, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 262, 267, 299, 303, 324, 328, 329, 331, 334, 335, 340], "long": [2, 3, 13, 14, 16, 17, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 44, 46, 47, 116, 182, 183, 331, 337], "sharabl": 2, "featur": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 33, 45, 53, 65, 66, 76, 80, 89, 94, 95, 96, 98, 99, 100, 109, 121, 125, 129, 143, 144, 148, 153, 165, 166, 176, 177, 178, 179, 180, 182, 183, 184, 186, 193, 194, 228, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 319, 323, 328, 329, 330, 331, 335, 337, 340], "allow": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 29, 32, 33, 65, 66, 76, 80, 94, 100, 133, 162, 186, 237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 260, 262, 265, 323, 325, 328, 330, 331, 334, 335, 337, 340], "popul": [2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 124, 143, 328, 330, 331, 335, 337], "collabor": 2, "rather": [2, 4, 133, 328, 329, 330, 334], "incur": 2, "some": [2, 3, 4, 7, 8, 9, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 44, 45, 46, 47, 52, 53, 55, 57, 58, 68, 70, 76, 80, 94, 95, 96, 100, 102, 131, 147, 149, 155, 168, 180, 184, 205, 228, 229, 230, 294, 306, 323, 325, 328, 329, 330, 331, 334, 335, 337, 339, 340], "transmiss": 2, "overhead": [2, 94, 100], "includ": [2, 3, 4, 7, 9, 21, 32, 57, 58, 59, 67, 70, 76, 80, 90, 94, 100, 142, 147, 153, 252, 257, 306, 323, 325, 328, 329, 330, 331, 334, 335, 337, 340], "ani": [2, 3, 5, 8, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 57, 58, 59, 62, 64, 66, 67, 68, 69, 70, 71, 76, 77, 80, 94, 95, 96, 100, 102, 107, 121, 131, 132, 135, 147, 149, 153, 155, 163, 165, 166, 172, 186, 194, 217, 227, 228, 229, 230, 237, 238, 240, 241, 243, 244, 250, 252, 254, 255, 256, 257, 259, 267, 291, 303, 322, 328, 329, 330, 334, 335, 337, 339, 340], "subclass": [2, 3, 76, 80, 94, 100, 146, 152, 155, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 191, 192, 195, 196, 197, 199, 202, 203, 205, 210, 216, 217, 219, 220, 221, 223, 226, 227, 228, 229, 231, 234, 252, 254, 329, 331, 335, 337], "tensorstorag": [2, 321], "instanti": [2, 3, 21, 34, 36, 39, 84, 146, 192, 328, 329, 334, 335, 337, 340], "content": [2, 8, 13, 14, 16, 26, 28, 34, 35, 36, 38, 39, 41, 42, 64, 91, 165, 166, 186, 191, 192, 224, 252, 330, 335, 339], "map": [2, 3, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 76, 80, 89, 94, 95, 96, 98, 99, 100, 102, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 124, 125, 127, 129, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 152, 153, 159, 175, 195, 212, 213, 214, 215, 218, 224, 225, 227, 228, 230, 231, 232, 233, 257, 265, 299, 321, 323, 324, 328, 329, 330, 331, 336], "tensor": [2, 3, 8, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 60, 62, 65, 66, 68, 69, 70, 71, 73, 76, 77, 80, 86, 89, 90, 93, 94, 95, 96, 98, 99, 100, 101, 102, 107, 109, 110, 113, 114, 116, 117, 118, 119, 121, 124, 127, 129, 131, 132, 133, 135, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 198, 199, 200, 201, 204, 205, 206, 207, 208, 209, 212, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 234, 235, 237, 238, 240, 241, 243, 244, 247, 248, 250, 252, 254, 255, 256, 257, 259, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 312, 323, 325, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "writer": [2, 38, 42, 52, 53, 54, 55, 62, 68, 69, 321, 330], "tensordictroundrobinwrit": [2, 321], "current": [2, 3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 66, 76, 80, 82, 91, 94, 100, 109, 132, 142, 143, 144, 146, 147, 156, 157, 162, 176, 185, 203, 223, 245, 257, 289, 325, 328, 329, 330, 331, 334, 335, 339, 340], "goe": [2, 4, 95, 96, 328, 330, 334, 340], "sampler": [2, 35, 38, 41, 42, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 70, 132, 241, 245, 265, 321, 328, 330, 334, 337], "prioritizedsampl": [2, 35, 38, 41, 42, 52, 53, 54, 55, 241, 245, 265, 321, 328, 337], "extend": [2, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 62, 65, 66, 68, 69, 71, 135, 300, 325, 328, 329, 330, 331, 334, 336, 337, 339], "access": [2, 3, 7, 8, 32, 35, 54, 76, 80, 94, 100, 131, 149, 319, 322, 328, 334, 335, 337], "show": [2, 32, 76, 80, 94, 100, 192, 323, 328, 330, 331, 334, 335, 337, 339], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 17, 21, 22, 35, 37, 38, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 60, 65, 66, 68, 70, 76, 77, 80, 88, 90, 94, 95, 96, 98, 99, 100, 103, 104, 106, 107, 109, 112, 118, 119, 124, 125, 127, 129, 131, 133, 135, 138, 139, 141, 142, 143, 144, 146, 151, 153, 159, 162, 163, 164, 175, 178, 179, 180, 182, 183, 184, 186, 188, 191, 192, 195, 200, 201, 209, 212, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 230, 231, 232, 237, 238, 239, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 265, 267, 268, 269, 270, 296, 299, 312, 315, 323, 324, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "tensordictreplaybuff": [2, 35, 38, 41, 52, 53, 54, 55, 65, 66, 68, 109, 300, 315, 321, 328, 329, 331, 337], "mp": [2, 18, 19, 20, 77, 153], "def": [2, 3, 11, 22, 32, 76, 77, 80, 90, 94, 100, 106, 107, 114, 117, 164, 175, 178, 179, 182, 183, 188, 224, 232, 238, 240, 244, 250, 252, 255, 257, 259, 325, 328, 329, 333, 334, 335, 339, 340], "rb": [2, 35, 38, 41, 42, 52, 53, 54, 55, 65, 66, 68, 109, 135, 329, 331, 334, 336, 337, 339], "updat": [2, 3, 4, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 39, 40, 41, 60, 76, 80, 90, 94, 95, 96, 100, 107, 114, 116, 117, 141, 142, 147, 150, 153, 163, 164, 178, 180, 184, 188, 216, 220, 221, 223, 224, 225, 226, 227, 228, 237, 238, 240, 241, 243, 244, 245, 246, 249, 250, 252, 254, 255, 256, 257, 258, 259, 265, 267, 268, 269, 270, 271, 299, 303, 305, 308, 309, 314, 315, 325, 329, 330, 331, 334, 335, 337, 339, 340], "td": [2, 3, 15, 26, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 68, 72, 73, 74, 75, 79, 81, 85, 86, 87, 88, 107, 110, 114, 115, 116, 117, 124, 125, 127, 135, 138, 143, 145, 147, 153, 162, 164, 175, 180, 184, 187, 188, 200, 201, 209, 212, 213, 214, 215, 217, 218, 220, 221, 223, 224, 225, 227, 230, 232, 265, 268, 269, 270, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 294, 302, 312, 323, 324, 328, 331, 334, 335, 339, 340], "10": [2, 7, 22, 26, 35, 38, 40, 41, 42, 43, 45, 57, 58, 65, 66, 68, 70, 77, 90, 95, 96, 98, 99, 101, 102, 107, 109, 142, 144, 145, 164, 167, 172, 178, 179, 182, 183, 185, 188, 199, 210, 220, 221, 223, 224, 231, 238, 241, 243, 244, 254, 255, 256, 259, 265, 267, 268, 269, 270, 273, 294, 325, 328, 329, 330, 331, 334, 335, 337, 339, 340], "__name__": [2, 22, 77, 329], "__main__": [2, 22, 77], "21": [2, 55, 66, 95, 96, 329, 330, 333, 335, 336, 337], "zero": [2, 3, 4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 42, 44, 45, 46, 47, 52, 58, 65, 66, 70, 76, 80, 94, 100, 110, 114, 116, 117, 127, 135, 159, 162, 164, 178, 179, 180, 182, 183, 184, 185, 189, 190, 192, 200, 209, 220, 221, 223, 226, 234, 237, 238, 240, 241, 243, 244, 250, 254, 255, 256, 257, 259, 265, 267, 268, 269, 270, 273, 331, 339], "proc": 2, "target": [2, 4, 8, 21, 32, 76, 77, 80, 94, 100, 142, 146, 227, 228, 237, 238, 239, 240, 241, 243, 244, 245, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 265, 266, 267, 268, 269, 270, 271, 306, 314, 315, 324, 325, 331, 335], "arg": [2, 12, 14, 26, 28, 32, 57, 58, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 107, 113, 131, 140, 143, 146, 147, 148, 150, 151, 164, 165, 166, 174, 180, 184, 186, 187, 188, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 259, 265, 267, 268, 269, 270, 271, 293, 296, 300, 303, 319, 329], "start": [2, 3, 4, 5, 13, 21, 45, 65, 66, 77, 89, 162, 298, 328, 329, 334, 335, 337, 340], "join": [2, 77, 321, 329, 330], "now": [2, 3, 7, 35, 109, 192, 328, 329, 330, 331, 333, 334, 336, 337, 340], "length": [2, 17, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 40, 43, 44, 45, 46, 47, 56, 65, 66, 76, 80, 94, 100, 132, 153, 164, 165, 166, 168, 170, 172, 174, 178, 182, 186, 188, 191, 192, 212, 227, 232, 294, 300, 328, 330, 331, 335, 337, 340], "20": [2, 45, 55, 65, 66, 68, 76, 80, 84, 94, 100, 142, 178, 179, 182, 183, 217, 294, 329, 330, 331, 334, 335, 339, 340], "assert": [2, 3, 6, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 80, 83, 106, 109, 112, 114, 117, 125, 133, 153, 155, 159, 192, 195, 210, 267, 268, 269, 270, 294, 302, 333, 337, 340], "len": [2, 35, 38, 41, 42, 52, 53, 54, 55, 57, 58, 70, 129, 165, 166, 186, 192, 328, 335, 336, 337, 339], "_data": [2, 335], "0": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 21, 22, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 49, 52, 53, 54, 55, 56, 57, 58, 60, 65, 66, 70, 73, 76, 80, 83, 86, 90, 94, 97, 98, 99, 100, 107, 108, 109, 110, 112, 113, 115, 116, 125, 126, 127, 131, 135, 138, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 155, 164, 165, 166, 168, 169, 171, 172, 176, 178, 180, 181, 182, 183, 184, 186, 188, 190, 191, 192, 193, 194, 195, 198, 202, 203, 206, 207, 208, 210, 212, 216, 217, 219, 220, 221, 223, 226, 227, 230, 231, 234, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 265, 266, 267, 268, 269, 270, 273, 274, 275, 294, 301, 315, 319, 324, 325, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340], "too": [2, 7, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 44, 46, 47, 94, 100, 126, 143, 181, 207, 208, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 265, 267, 268, 269, 270, 329, 330, 335, 337, 340], "difficult": [2, 4], "element": [2, 13, 14, 16, 18, 19, 20, 21, 30, 31, 33, 35, 38, 41, 42, 52, 53, 54, 55, 57, 58, 59, 60, 66, 68, 70, 93, 109, 132, 142, 165, 166, 178, 179, 182, 212, 216, 218, 227, 228, 232, 294, 328, 330, 337, 340], "pai": [2, 8, 328, 331], "attent": [2, 8, 328, 331, 340], "alwai": [2, 3, 20, 26, 28, 32, 56, 76, 80, 94, 100, 125, 126, 245, 252, 323, 324, 329, 330, 331, 334, 335, 337], "lead": [2, 3, 4, 8, 10, 11, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 64, 143, 181, 200, 207, 208, 328, 331, 334, 335, 337, 339], "dimens": [2, 3, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 53, 55, 57, 58, 65, 66, 68, 70, 76, 80, 94, 100, 102, 109, 110, 121, 127, 129, 132, 138, 140, 145, 148, 153, 165, 166, 167, 172, 180, 182, 184, 186, 189, 190, 191, 193, 194, 199, 200, 204, 205, 206, 207, 210, 218, 237, 238, 239, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 319, 323, 328, 329, 330, 331, 334, 335, 337], "word": [2, 3, 40, 52, 53, 55, 252, 328, 335, 340], "creat": [2, 3, 4, 5, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 45, 56, 76, 77, 80, 84, 91, 94, 95, 100, 109, 131, 146, 147, 149, 152, 153, 159, 162, 165, 166, 168, 169, 170, 171, 172, 177, 180, 184, 186, 187, 191, 192, 217, 228, 241, 245, 255, 257, 265, 286, 300, 307, 308, 309, 315, 317, 318, 323, 328, 329, 330, 331, 334, 335, 336, 337, 339, 340], "1m": [2, 306, 328, 330, 331, 336], "multidimension": [2, 41, 60, 337], "doe": [2, 3, 18, 34, 35, 36, 39, 41, 45, 52, 60, 67, 172, 178, 179, 180, 182, 183, 184, 193, 210, 217, 229, 230, 237, 239, 245, 251, 254, 266, 303, 323, 325, 328, 329, 330, 331, 335, 337, 340], "howev": [2, 3, 5, 7, 32, 76, 80, 94, 100, 109, 138, 142, 147, 257, 323, 328, 329, 330, 331, 335, 337, 340], "episod": [2, 52, 55, 65, 66, 80, 135, 138, 142, 164, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 329, 334], "flatten": [2, 34, 36, 39, 121, 300, 331, 334], "capac": [2, 330], "desir": [2, 3, 32, 76, 80, 94, 100, 113, 127, 129, 131, 132, 143, 146, 147, 149, 151, 160, 161, 165, 166, 186, 192, 212, 218, 219, 224, 225, 226, 227, 228, 323, 328, 334, 335], "diversifi": 2, "make": [2, 3, 4, 7, 32, 34, 36, 39, 40, 52, 53, 54, 55, 67, 76, 80, 81, 84, 86, 88, 91, 94, 100, 119, 127, 131, 132, 135, 141, 149, 155, 178, 179, 182, 183, 191, 192, 193, 218, 228, 254, 267, 268, 269, 270, 300, 309, 319, 323, 324, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "offer": [2, 3, 7, 323, 329, 335, 340], "distinct": [2, 3, 333], "accomplish": 2, "slicesampl": [2, 321], "slice": [2, 3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 52, 65, 66], "anoth": [2, 3, 8, 34, 36, 39, 76, 80, 84, 94, 100, 114, 115, 117, 143, 146, 186, 237, 238, 239, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 265, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 323, 324, 328, 330, 331, 333, 334, 335, 340], "recommend": [2, 4, 7, 34, 36, 39, 84, 334], "__especially__": 2, "offlin": [2, 8, 13, 14, 16, 17, 18, 19, 20, 21, 109, 155, 238, 243, 250, 325, 336, 337, 339], "convent": [2, 3, 102, 324, 328, 331, 334, 335], "requir": [2, 3, 4, 7, 8, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 52, 53, 76, 80, 84, 91, 94, 97, 100, 113, 131, 143, 146, 147, 149, 151, 186, 210, 227, 229, 230, 237, 238, 239, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 265, 323, 325, 328, 329, 330, 331, 334, 335, 337, 340], "reshap": [2, 32, 65, 180, 184, 186, 330, 334], "extens": [2, 66, 325, 337], "detail": [2, 3, 5, 6, 7, 32, 76, 80, 94, 95, 96, 100, 145, 147, 175, 178, 182, 219, 237, 245, 254, 322, 329, 333, 337], "independ": [2, 13, 14, 16, 17, 18, 19, 20, 21, 146, 148, 192, 324, 325, 328, 329, 334, 337, 339], "differ": [2, 3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 76, 80, 89, 94, 95, 96, 100, 109, 116, 127, 133, 147, 148, 175, 178, 179, 180, 182, 183, 184, 186, 188, 191, 192, 201, 250, 254, 262, 267, 268, 269, 273, 274, 275, 299, 303, 305, 317, 318, 323, 324, 325, 328, 329, 330, 333, 334, 335, 336, 337, 340], "congruent": 2, "shape": [2, 3, 13, 14, 16, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 53, 55, 56, 57, 58, 70, 76, 80, 89, 93, 94, 95, 96, 98, 99, 100, 101, 102, 110, 114, 117, 118, 119, 125, 127, 129, 133, 135, 139, 141, 143, 145, 153, 154, 155, 159, 162, 164, 167, 172, 173, 174, 178, 179, 180, 182, 183, 184, 186, 188, 189, 190, 191, 192, 193, 195, 198, 199, 200, 201, 206, 209, 212, 213, 214, 215, 217, 218, 219, 224, 225, 226, 227, 230, 231, 232, 237, 238, 240, 241, 243, 244, 250, 254, 255, 256, 257, 259, 262, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 294, 300, 303, 315, 323, 328, 329, 330, 331, 333, 334, 336, 337, 339, 340], "custom": [2, 3, 5, 32, 76, 80, 94, 100, 149, 191, 192, 231, 245, 254, 260, 319, 323, 328, 329, 330, 331, 334], "name": [2, 3, 6, 7, 11, 16, 32, 34, 36, 39, 45, 52, 54, 56, 74, 76, 80, 89, 91, 94, 95, 96, 97, 100, 102, 103, 116, 119, 133, 138, 139, 141, 147, 149, 152, 163, 180, 184, 218, 225, 237, 238, 239, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 265, 271, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 312, 325, 328, 329, 330, 331, 334, 335, 340], "randomcroptensordict": [2, 328], "note": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 38, 39, 41, 42, 76, 80, 94, 100, 114, 117, 153, 163, 178, 180, 182, 184, 223, 224, 228, 245, 328, 329, 333, 334, 340], "unlik": [2, 64, 245, 254, 329, 339], "base": [2, 3, 4, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 35, 38, 41, 42, 45, 63, 68, 69, 71, 84, 90, 91, 92, 94, 100, 135, 143, 149, 150, 191, 213, 222, 237, 238, 240, 241, 243, 244, 246, 250, 254, 255, 256, 257, 259, 303, 312, 323, 324, 325, 328, 329, 331, 334, 335, 337, 340], "here": [2, 3, 4, 7, 8, 9, 10, 55, 76, 80, 84, 94, 95, 96, 100, 109, 323, 324, 328, 329, 330, 331, 334, 335, 337, 339, 340], "stop": [2, 3, 16, 21, 40, 65, 66, 76, 80, 94, 100, 330, 334, 339, 340], "signal": [2, 3, 17, 52, 53, 55, 65, 66, 80, 109, 118, 141, 144, 163, 324, 328, 330, 334, 337, 340], "isn": [2, 3, 8, 34, 36, 39, 118, 218, 227, 334], "t": [2, 3, 4, 6, 7, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 44, 46, 47, 60, 64, 68, 76, 77, 80, 91, 94, 100, 109, 114, 117, 118, 131, 135, 142, 144, 151, 153, 162, 178, 182, 218, 223, 227, 258, 267, 268, 269, 270, 271, 273, 303, 305, 319, 322, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "how": [2, 3, 18, 19, 20, 32, 35, 41, 60, 76, 80, 94, 95, 96, 100, 102, 237, 239, 249, 251, 254, 303, 322, 323, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "our": [2, 3, 7, 8, 18, 109, 323, 328, 329, 330, 331, 333, 334, 336, 337, 339], "enjoi": [2, 3], "separ": [2, 4, 8, 13, 14, 17, 18, 20, 21, 23, 131, 151, 238, 240, 243, 244, 255, 257, 259, 328, 329, 334, 337, 340], "save": [2, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 76, 80, 94, 100, 152, 285, 303, 325, 334], "disk": [2, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 303, 325, 328, 329, 331, 337], "dump": [2, 35, 38, 41, 42, 52, 53, 54, 55, 285], "load": [2, 6, 7, 13, 14, 16, 17, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 75, 76, 80, 94, 100, 106, 153, 319, 325, 328, 337], "json": 2, "metadata": [2, 52, 330, 334, 340], "cannot": [2, 3, 4, 7, 22, 26, 27, 28, 31, 33, 65, 66, 76, 80, 84, 94, 100, 114, 117, 132, 138, 225, 329, 330, 331, 334, 335], "anticip": [2, 114, 117], "compli": [2, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "structur": [2, 3, 7, 34, 35, 36, 38, 39, 40, 41, 42, 45, 68, 76, 80, 94, 100, 114, 117, 163, 191, 223, 267, 268, 269, 270, 271, 324, 328, 330, 331, 334, 335, 336, 337], "guarante": [2, 32, 34, 36, 39, 57, 58, 59, 67, 70, 76, 80, 94, 100, 153, 339], "back": [2, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 44, 46, 47, 52, 152, 212, 218, 219, 224, 225, 226, 227, 228, 330, 334, 335, 337], "exact": [2, 3, 94, 182], "look": [2, 3, 5, 7, 8, 32, 76, 80, 89, 94, 95, 96, 100, 131, 132, 149, 224, 228, 229, 230, 324, 330, 331, 334, 335, 336, 337, 339, 340], "statu": [2, 3], "its": [2, 3, 4, 5, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 44, 46, 47, 49, 76, 80, 90, 94, 95, 96, 100, 103, 109, 118, 125, 141, 142, 146, 147, 152, 153, 165, 166, 189, 190, 191, 192, 216, 218, 224, 225, 228, 231, 237, 238, 239, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 259, 265, 303, 315, 325, 328, 329, 330, 331, 334, 335, 336, 337, 340], "prioriti": [2, 4, 35, 41, 42, 57, 58, 59, 60, 67, 70, 240, 241, 243, 244, 245, 250, 255, 257, 259, 265, 325, 328, 329, 337], "max": [2, 23, 33, 36, 41, 45, 56, 60, 116, 144, 206, 207, 208, 217, 223, 238, 239, 244, 253, 255, 257, 328, 330, 331, 334], "heap": 2, "under": [2, 3, 4, 21, 32, 40, 52, 53, 55, 76, 80, 94, 100, 212, 218, 219, 224, 225, 226, 227, 228, 252, 267, 268, 269, 270, 271, 324, 328, 329, 335, 340], "hood": [2, 21, 335], "just": [2, 3, 4, 11, 76, 80, 89, 94, 95, 96, 100, 112, 163, 192, 294, 323, 325, 328, 329, 330, 331, 334, 335, 337, 339, 340], "public": [2, 54, 131, 151], "method": [2, 3, 4, 11, 13, 14, 15, 16, 17, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 67, 70, 76, 80, 94, 100, 109, 113, 114, 115, 118, 119, 121, 125, 127, 131, 133, 134, 135, 139, 141, 143, 146, 147, 149, 151, 164, 185, 212, 213, 214, 215, 217, 218, 219, 220, 222, 224, 225, 226, 227, 228, 229, 237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 265, 271, 285, 316, 324, 325, 326, 329, 330, 331, 335, 337, 340], "don": [2, 3, 4, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 109, 329, 330, 337, 339, 340], "assum": [2, 3, 6, 26, 33, 40, 41, 42, 52, 53, 55, 80, 94, 100, 111, 121, 131, 132, 138, 143, 149, 151, 159, 180, 184, 185, 210, 231, 241, 245, 257, 265, 276, 277, 278, 279, 281, 282, 283, 284, 286, 328, 330, 331, 333, 335], "serializ": 2, "altern": [2, 4, 27, 91, 172, 189, 190, 191, 236, 328, 330, 334], "state_dict": [2, 13, 14, 16, 17, 21, 32, 34, 36, 39, 76, 80, 94, 100, 147, 153, 257, 319, 325, 328, 329, 340], "load_state_dict": [2, 13, 14, 16, 17, 21, 32, 34, 36, 39, 76, 80, 94, 100, 147, 153, 257, 325, 328], "drawback": 2, "struggl": 2, "big": [2, 330, 337, 340], "wrapper": [2, 3, 11, 15, 17, 34, 36, 39, 40, 41, 42, 72, 73, 74, 75, 79, 81, 82, 84, 85, 86, 87, 88, 90, 92, 95, 96, 97, 98, 99, 101, 102, 104, 152, 195, 210, 216, 217, 221, 223, 228, 233, 267, 291, 292, 293, 319, 321, 330, 331, 334, 336, 340], "around": [2, 5, 7, 15, 17, 41, 42, 90, 228, 267, 328, 329, 334, 340], "present": [2, 3, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 60, 64, 76, 80, 94, 100, 119, 135, 139, 162, 163, 167, 168, 169, 170, 171, 177, 182, 194, 199, 223, 227, 228, 229, 230, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 259, 265, 267, 268, 269, 270, 271, 319, 325, 328, 333, 334, 337, 339], "replaybuff": [2, 41, 42, 71, 109, 132, 135, 241, 245, 265, 313, 315, 321, 330, 334, 336, 337, 339], "promptli": 2, "virtual": [2, 3], "instal": [2, 3, 5, 10, 18, 19, 20, 52, 54, 95, 96, 98, 99, 303, 322, 330, 331, 334, 340], "respons": [2, 3, 8, 303, 340], "d4rl": [2, 52, 53, 55], "clone": [2, 4, 8, 26, 28, 125, 213, 214, 215, 227, 250, 312, 321, 328, 335, 339], "repositori": [2, 7, 53, 54], "latest": [2, 3, 10, 91, 95, 96, 300, 330, 334, 335, 339], "wheel": [2, 330], "publish": 2, "pypi": [2, 339], "openml": [2, 54, 93], "scikit": [2, 54], "panda": [2, 54], "parent": [2, 3, 21, 26, 28, 44, 76, 109, 110, 113, 115, 118, 121, 122, 127, 131, 138, 141, 142, 143, 144, 146, 148, 149, 213, 252, 254, 271, 328, 335, 339, 340], "basic": [2, 90, 323, 330, 340], "properti": [2, 3, 32, 34, 36, 39, 76, 80, 90, 94, 100, 146, 147, 173, 181, 193, 198, 206, 207, 208, 252, 257, 335, 337], "observ": [2, 3, 8, 13, 14, 16, 17, 21, 32, 44, 52, 53, 55, 73, 74, 75, 76, 77, 80, 86, 89, 90, 93, 94, 95, 96, 98, 99, 100, 101, 102, 109, 110, 111, 112, 113, 114, 115, 118, 119, 121, 123, 124, 125, 127, 128, 129, 133, 134, 135, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 162, 167, 168, 169, 170, 171, 172, 175, 180, 184, 185, 191, 196, 197, 199, 201, 202, 212, 213, 214, 215, 217, 218, 220, 221, 223, 224, 225, 232, 233, 237, 238, 239, 240, 241, 243, 244, 247, 250, 251, 254, 255, 256, 257, 259, 265, 267, 268, 269, 270, 271, 286, 312, 315, 323, 325, 329, 330, 331, 333, 334, 335, 337, 339, 340], "dtype": [2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 55, 56, 57, 58, 60, 65, 66, 70, 73, 76, 80, 86, 89, 90, 93, 94, 95, 96, 98, 99, 100, 101, 102, 107, 113, 114, 115, 116, 117, 118, 119, 125, 127, 129, 131, 133, 135, 139, 141, 143, 145, 146, 147, 149, 151, 155, 159, 162, 163, 164, 175, 178, 179, 180, 182, 183, 184, 188, 193, 194, 200, 201, 209, 212, 213, 214, 215, 217, 218, 219, 223, 224, 225, 226, 227, 230, 232, 237, 238, 240, 241, 243, 244, 250, 254, 255, 256, 257, 259, 265, 267, 268, 269, 270, 273, 312, 323, 330, 331, 333, 334, 335, 336, 337, 339, 340], "match": [2, 3, 6, 8, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 76, 77, 80, 94, 100, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 123, 124, 125, 127, 129, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 165, 166, 173, 180, 184, 186, 191, 192, 206, 212, 217, 218, 224, 225, 227, 228, 231, 232, 238, 244, 251, 253, 255, 257, 300, 305, 323, 328, 330, 333, 334, 335, 337, 339, 340], "input": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 46, 47, 76, 80, 90, 93, 94, 95, 96, 97, 100, 102, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 129, 130, 131, 132, 133, 135, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 162, 163, 165, 166, 168, 169, 170, 171, 174, 175, 178, 179, 180, 182, 183, 184, 185, 186, 191, 192, 193, 194, 201, 202, 203, 204, 205, 210, 212, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 237, 238, 239, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 265, 266, 267, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 297, 301, 306, 315, 323, 324, 325, 328, 329, 330, 331, 334, 335, 339, 340], "output": [2, 3, 4, 13, 14, 16, 17, 32, 35, 38, 41, 42, 52, 53, 54, 55, 65, 66, 76, 80, 90, 93, 94, 95, 96, 97, 100, 102, 109, 112, 113, 114, 115, 117, 119, 125, 127, 131, 133, 138, 139, 141, 144, 146, 149, 151, 152, 155, 163, 165, 166, 167, 168, 169, 172, 174, 175, 176, 178, 179, 180, 182, 183, 184, 185, 186, 191, 192, 195, 201, 210, 212, 213, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 237, 238, 239, 240, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 265, 267, 268, 269, 270, 271, 286, 294, 323, 324, 328, 329, 330, 331, 333, 334, 335, 336, 339, 340], "send": [2, 3, 8, 339], "receiv": [2, 3, 32, 40, 76, 80, 94, 100, 146, 186, 273, 324, 328, 330, 333, 335], "spawn": [2, 3, 4, 18, 22, 84, 91, 334], "check_env_spec": [2, 3, 321, 330, 334, 335], "saniti": [2, 3, 7, 155, 330], "utmost": 2, "techniqu": [2, 8, 329, 337], "commonli": [2, 65, 66, 340], "emploi": [2, 194], "realm": 2, "languag": [2, 40], "scarc": 2, "address": [2, 337], "subdomain": 2, "within": [2, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 46, 47, 76, 80, 94, 100, 109, 114, 117, 118, 141, 152, 153, 163, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 191, 192, 195, 196, 197, 199, 202, 203, 205, 210, 216, 217, 219, 220, 221, 223, 226, 231, 234, 241, 245, 265, 323, 335, 339], "facilit": [2, 3, 7, 130, 131, 149, 151, 213, 214, 215, 323, 328, 331, 335], "interact": [2, 4, 5, 7, 8, 13, 14, 16, 18, 19, 20, 21, 224, 228, 328, 330, 334, 335, 340], "extern": [2, 3, 114, 117, 340], "consist": [2, 3, 32, 35, 38, 41, 42, 76, 80, 94, 100, 125, 152, 166, 186, 328, 329, 330, 335, 336, 340], "token": [2, 36, 37, 40, 43, 45, 56], "format": [2, 17, 31, 32, 33, 55, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227, 328, 329, 340], "manner": [2, 80, 131, 149, 323, 328, 329, 330, 333, 335, 337], "handl": [3, 21, 32, 76, 80, 94, 100, 152, 153, 184, 186, 303, 317, 318, 328, 329, 330, 334, 337], "dm": [3, 328, 340], "goal": [3, 4, 142, 328, 329, 330, 331, 334, 335], "abl": [3, 89, 95, 96, 328, 330, 331, 333, 334, 335, 337, 339], "experi": [3, 35, 38, 41, 42, 52, 53, 54, 55, 60, 155, 288, 289, 290, 291, 292, 293, 322, 329, 330, 334, 337], "even": [3, 4, 8, 14, 18, 20, 21, 57, 58, 59, 67, 70, 76, 77, 80, 84, 94, 100, 163, 328, 330, 334, 335, 340], "simul": [3, 5, 7, 8, 97, 102, 105, 164, 188, 323, 328, 330, 334], "box": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 16, 17, 21, 22, 76, 77, 80, 94, 95, 96, 98, 99, 100, 109, 112, 118, 124, 125, 127, 129, 133, 135, 138, 143, 146, 152, 153, 312, 315, 328, 329, 330, 331, 333, 334, 336, 337, 339, 340], "hope": 3, "imit": 3, "nn": [3, 13, 14, 16, 17, 21, 32, 40, 76, 80, 90, 94, 100, 113, 116, 118, 125, 131, 143, 146, 147, 149, 151, 164, 165, 166, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 186, 188, 190, 191, 192, 195, 200, 201, 209, 212, 213, 214, 215, 217, 218, 220, 221, 223, 224, 225, 227, 228, 229, 230, 232, 237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 265, 267, 268, 269, 270, 312, 315, 323, 324, 328, 329, 330, 331, 333, 334, 335, 336, 339], "typic": [3, 4, 8, 32, 76, 80, 94, 100, 118, 142, 224, 238, 252, 254, 257, 323, 324, 325, 330, 334, 335], "organis": [3, 55, 329], "arbitrari": [3, 33, 94, 100, 323, 328, 329, 335], "nest": [3, 26, 28, 32, 34, 36, 39, 48, 57, 58, 70, 76, 80, 94, 100, 109, 141, 144, 163, 267, 268, 269, 270, 271, 325, 329, 330, 334, 335, 337, 339], "attribut": [3, 4, 32, 34, 36, 39, 45, 76, 80, 94, 100, 118, 131, 149, 180, 184, 228, 237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 265, 328, 331, 335], "batch_siz": [3, 8, 13, 14, 15, 16, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 61, 65, 66, 68, 70, 73, 76, 78, 80, 83, 86, 89, 90, 93, 94, 95, 96, 98, 99, 100, 101, 102, 109, 114, 117, 118, 119, 129, 133, 135, 139, 141, 143, 146, 162, 163, 164, 172, 175, 180, 184, 188, 200, 201, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 230, 231, 232, 237, 238, 240, 241, 243, 244, 250, 254, 255, 256, 257, 259, 265, 294, 300, 312, 323, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "togeth": [3, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 40, 76, 80, 89, 94, 95, 96, 100, 109, 132, 178, 180, 182, 184, 209, 213, 214, 215, 233, 323, 329, 330, 331], "expect": [3, 4, 7, 26, 32, 38, 44, 45, 64, 76, 80, 90, 93, 94, 97, 100, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 123, 124, 125, 127, 129, 131, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 150, 152, 155, 178, 179, 180, 182, 183, 184, 191, 192, 219, 223, 227, 230, 237, 238, 239, 240, 241, 243, 244, 250, 251, 252, 254, 255, 256, 257, 259, 265, 307, 322, 323, 324, 325, 328, 330, 331, 334, 335, 337, 340], "live": [3, 12, 13, 14, 16, 17, 19, 20, 32, 35, 38, 41, 42, 52, 53, 54, 55, 76, 80, 90, 94, 100, 118], "actual": [3, 4, 7, 17, 52, 53, 55, 76, 80, 94, 100, 152, 306, 324, 328, 330, 334, 335], "do": [3, 4, 7, 80, 102, 132, 152, 153, 162, 192, 193, 214, 267, 325, 328, 329, 330, 331, 333, 334, 335, 337, 339, 340], "retriev": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 76, 80, 94, 100, 110, 115, 118, 127, 162, 164, 165, 188, 224, 228, 231, 237, 238, 239, 241, 251, 254, 255, 257, 259, 265, 267, 268, 269, 270, 312, 319, 325, 329, 330, 335, 340], "care": [3, 8, 76, 80, 94, 100, 146, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 191, 192, 195, 196, 197, 199, 202, 203, 205, 210, 216, 217, 219, 220, 221, 223, 226, 231, 234, 328, 330, 334, 335, 337], "below": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 56, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 165, 166, 178, 181, 182, 186, 192, 208, 227, 300, 328, 329, 330, 331, 335], "parametr": [3, 194, 228, 238, 250, 257, 328, 330], "hardwar": 3, "observation_spec": [3, 76, 80, 90, 94, 100, 107, 109, 110, 111, 112, 113, 114, 115, 117, 118, 121, 123, 124, 125, 127, 129, 131, 134, 138, 141, 142, 143, 144, 145, 146, 148, 149, 152, 164, 180, 184, 188, 307, 315, 328, 330, 333, 334, 335, 340], "compositespec": [3, 28, 49, 76, 78, 80, 90, 94, 100, 107, 114, 115, 116, 117, 119, 125, 133, 139, 141, 143, 146, 159, 163, 164, 188, 212, 216, 224, 230, 231, 321, 328, 330, 331, 334, 335, 340], "pair": [3, 32, 34, 36, 39, 52, 76, 80, 94, 100, 135, 143, 180, 213, 224, 228, 252, 267, 268, 269, 270, 271, 323, 324, 328, 329, 330, 333, 335, 340], "state_spec": [3, 76, 80, 90, 94, 100, 107, 164, 188, 330, 335, 340], "empti": [3, 26, 28, 35, 38, 41, 42, 52, 53, 54, 55, 76, 80, 93, 94, 100, 131, 144, 147, 149, 151, 290, 328, 335], "action_spec": [3, 13, 14, 15, 16, 18, 19, 20, 73, 76, 80, 86, 90, 94, 95, 96, 100, 107, 109, 114, 117, 125, 135, 164, 175, 188, 201, 203, 212, 218, 224, 225, 238, 241, 243, 255, 257, 259, 315, 323, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "reward_spec": [3, 76, 80, 90, 94, 100, 107, 108, 112, 113, 114, 115, 117, 136, 137, 138, 146, 148, 164, 188, 330, 334, 335, 340], "reward": [3, 13, 14, 16, 32, 34, 39, 40, 44, 45, 53, 55, 56, 68, 73, 76, 80, 86, 90, 93, 94, 98, 99, 100, 101, 102, 107, 108, 112, 113, 114, 115, 117, 118, 119, 125, 129, 133, 135, 136, 137, 138, 139, 141, 142, 146, 147, 148, 150, 151, 153, 159, 162, 164, 180, 188, 217, 233, 237, 238, 240, 241, 243, 244, 247, 250, 252, 254, 255, 256, 257, 259, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 296, 297, 299, 301, 319, 324, 325, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "done_spec": [3, 76, 80, 94, 100, 114, 115, 117, 118, 146, 163, 330, 334, 335, 340], "flag": [3, 8, 35, 38, 41, 42, 52, 53, 54, 55, 102, 223, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 323, 334, 335, 336], "section": [3, 4, 178, 182, 329, 334], "termin": [3, 7, 32, 40, 52, 53, 55, 76, 80, 94, 95, 96, 98, 99, 100, 101, 102, 118, 163, 164, 180, 184, 188, 229, 237, 238, 240, 241, 243, 244, 250, 254, 255, 256, 257, 259, 265, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "input_spec": [3, 76, 80, 90, 94, 100, 113, 114, 115, 116, 127, 129, 133, 138, 139, 141, 142, 143, 146, 147, 148, 150, 335], "full_action_spec": [3, 76, 80, 94, 100, 164, 188, 334], "full_state_spec": [3, 76, 80, 94, 100, 164, 188], "lock": [3, 26, 28, 34, 36, 39, 76, 80, 94, 100, 143, 153, 335], "modifi": [3, 7, 8, 26, 28, 32, 45, 76, 80, 94, 100, 113, 121, 125, 131, 143, 146, 147, 149, 151, 217, 223, 227, 306, 312, 328, 329, 330, 334, 335], "directli": [3, 4, 8, 76, 80, 90, 94, 100, 135, 152, 252, 319, 323, 330, 334, 335, 337], "output_spec": [3, 76, 80, 94, 100, 113, 114, 115, 119, 125, 133, 139, 141, 146, 147, 335], "full_observation_spec": [3, 76, 80, 94, 100, 164, 188], "full_reward_spec": [3, 76, 80, 94, 100, 334], "full_done_spec": [3, 76, 80, 94, 100, 163, 334], "importantli": [3, 224, 228], "4": [3, 7, 24, 26, 27, 28, 33, 34, 35, 36, 38, 39, 40, 41, 42, 52, 53, 54, 55, 65, 66, 74, 75, 76, 79, 80, 85, 87, 88, 89, 90, 94, 98, 99, 100, 107, 109, 118, 135, 141, 142, 153, 164, 165, 166, 167, 168, 169, 172, 175, 176, 177, 178, 179, 182, 183, 185, 186, 188, 191, 192, 195, 196, 197, 198, 199, 200, 201, 209, 212, 213, 214, 215, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 230, 232, 237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 265, 285, 323, 328, 329, 330, 331, 334, 335, 336, 337, 339, 340], "action_s": 3, "help": [3, 4, 32, 76, 80, 94, 100, 118, 322, 324, 328, 329, 330, 331, 334], "prealloc": [3, 335], "With": [3, 89, 142, 325, 328, 329, 334, 337, 340], "necessarili": [3, 340], "0s": [3, 143, 331], "stateless": [3, 146, 252, 328, 335, 340], "step_and_maybe_reset": [3, 76, 80, 94, 100], "partial": [3, 76, 80, 94, 100, 109, 142, 143, 144, 303, 331], "next": [3, 4, 8, 13, 14, 16, 26, 28, 32, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 65, 66, 68, 73, 76, 77, 80, 86, 90, 94, 98, 99, 100, 101, 102, 109, 114, 117, 118, 119, 124, 125, 129, 133, 135, 138, 139, 141, 143, 152, 153, 159, 162, 164, 179, 180, 183, 184, 188, 203, 233, 237, 238, 240, 241, 243, 244, 245, 250, 254, 255, 256, 257, 259, 265, 266, 267, 268, 269, 270, 271, 297, 299, 301, 328, 329, 331, 333, 335, 336, 337, 339, 340], "step_mdp": [3, 180, 184, 321, 331, 335, 339, 340], "done_kei": [3, 76, 80, 94, 100, 118, 135, 141, 162, 334], "assign": [3, 4, 13, 14, 32, 34, 36, 39, 76, 80, 94, 100, 147, 240, 241, 243, 257, 330, 334, 337], "_reset": [3, 76, 80, 90, 94, 100, 107, 109, 114, 117, 163, 164, 188], "data_": [3, 76, 80, 94, 100], "i": [3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 35, 38, 42, 43, 57, 58, 60, 66, 70, 76, 80, 94, 100, 131, 135, 138, 147, 151, 179, 183, 195, 201, 219, 224, 226, 227, 228, 267, 268, 269, 270, 294, 306, 328, 329, 330, 331, 334, 335, 337, 339, 340], "rang": [3, 4, 8, 11, 27, 35, 38, 40, 41, 42, 52, 53, 54, 55, 57, 58, 68, 76, 77, 80, 94, 100, 135, 145, 153, 179, 183, 251, 259, 324, 325, 328, 330, 331, 334, 335, 337, 339], "n": [3, 6, 7, 24, 27, 32, 33, 40, 76, 80, 94, 100, 109, 116, 121, 148, 178, 179, 182, 188, 223, 228, 237, 244, 252, 266, 300, 323, 325, 329, 330, 331, 334, 337, 340], "append": [3, 8, 35, 38, 41, 42, 52, 53, 54, 55, 76, 77, 80, 94, 100, 112, 135, 143, 152, 179, 180, 183, 184, 218, 225, 328, 329, 330, 331, 334, 335, 336, 337, 339], "set_se": [3, 13, 14, 16, 17, 21, 73, 76, 80, 86, 90, 94, 100, 127, 133, 138, 142, 144, 147, 335, 339, 340], "seed": [3, 13, 14, 16, 17, 21, 55, 74, 76, 80, 90, 94, 95, 96, 100, 101, 102, 107, 114, 117, 147, 155, 303], "determinist": [3, 32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 167, 176, 196, 203, 212, 221, 227, 228, 231, 238, 323, 328, 329, 331, 335, 340], "preced": [3, 185, 331], "without": [3, 7, 9, 32, 40, 52, 65, 66, 76, 80, 94, 100, 102, 107, 114, 117, 145, 178, 179, 182, 183, 214, 215, 237, 238, 240, 241, 243, 244, 250, 254, 255, 256, 257, 259, 266, 267, 268, 269, 270, 271, 315, 322, 323, 328, 329, 330, 334, 335, 337, 340], "risk": [3, 132], "overlap": [3, 41], "consecut": [3, 64, 84, 184, 223, 331, 334, 340], "reproduc": [3, 109, 155, 328, 330, 334], "maximum": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 40, 43, 45, 56, 57, 58, 59, 70, 76, 80, 94, 100, 116, 136, 141, 142, 144, 206, 207, 208, 231, 238, 244, 250, 252, 253, 257, 300, 328, 329, 330, 331, 334, 337], "max_step": [3, 13, 76, 80, 90, 94, 100, 101, 102, 141, 334, 339, 340], "tensordictmodul": [3, 13, 14, 16, 17, 20, 21, 40, 90, 125, 175, 180, 184, 188, 200, 201, 209, 210, 213, 214, 215, 216, 217, 218, 221, 223, 224, 225, 226, 227, 229, 230, 231, 233, 238, 240, 244, 246, 247, 248, 250, 252, 255, 257, 259, 265, 266, 267, 268, 269, 270, 299, 315, 323, 328, 330, 331, 333, 334, 335, 336], "compat": [3, 7, 11, 18, 19, 32, 34, 36, 39, 52, 65, 66, 67, 76, 80, 82, 93, 94, 100, 109, 141, 149, 153, 178, 179, 180, 182, 183, 184, 225, 237, 238, 240, 241, 243, 244, 250, 252, 254, 255, 256, 257, 259, 262, 328, 331, 337, 339], "mark": [3, 16, 76, 80, 94, 100, 180, 184], "trail": [3, 153], "time": [3, 4, 7, 8, 13, 14, 16, 17, 18, 20, 21, 32, 35, 38, 40, 41, 42, 55, 68, 76, 77, 80, 89, 93, 94, 95, 96, 100, 106, 110, 132, 138, 143, 144, 153, 162, 176, 178, 182, 184, 185, 223, 239, 244, 247, 251, 252, 254, 255, 259, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 303, 323, 324, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "treat": 3, "figur": [3, 328, 330, 331, 334, 335, 340], "summar": [3, 335], "brief": [3, 330], "entri": [3, 13, 14, 18, 19, 20, 21, 23, 26, 28, 32, 34, 36, 37, 39, 45, 49, 52, 53, 54, 55, 65, 66, 76, 80, 94, 100, 109, 111, 112, 114, 117, 118, 121, 124, 127, 129, 131, 133, 135, 138, 141, 142, 143, 151, 153, 162, 163, 180, 189, 190, 217, 218, 225, 226, 238, 257, 267, 268, 269, 270, 323, 328, 330, 331, 334, 335, 336, 337, 340], "deliveri": 3, "design": [3, 13, 14, 32, 33, 76, 80, 94, 100, 109, 132, 147, 217, 237, 238, 239, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 265, 328, 329, 330, 331, 333, 334, 335, 337, 340], "metaclass": 3, "ensur": [3, 32, 35, 41, 60, 64, 76, 80, 94, 100, 109, 131, 141, 149, 153, 218, 323, 329, 330, 335, 337], "everi": [3, 8, 17, 26, 28, 32, 33, 67, 76, 80, 94, 100, 141, 142, 153, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 191, 192, 195, 196, 197, 199, 202, 203, 205, 210, 216, 217, 219, 220, 221, 223, 226, 231, 234, 303, 325, 328, 329, 330, 331, 334, 335], "flank": [3, 331], "dual": 3, "strictli": [3, 8, 32, 76, 80, 94, 100, 147, 257, 328, 330], "refer": [3, 7, 8, 9, 21, 32, 40, 76, 80, 94, 100, 147, 153, 164, 175, 176, 188, 189, 190, 191, 196, 197, 202, 203, 219, 237, 245, 246, 247, 248, 254, 257, 267, 272, 280, 327, 328, 330, 334], "union": [3, 11, 13, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 60, 76, 80, 94, 100, 107, 116, 118, 124, 127, 131, 132, 135, 137, 149, 151, 153, 162, 165, 166, 168, 169, 170, 171, 173, 175, 177, 185, 186, 189, 190, 191, 192, 193, 194, 198, 200, 201, 206, 207, 208, 209, 227, 243, 244, 249, 255, 258, 280, 286, 297, 299, 300, 308, 309, 312, 313, 315, 316, 317, 318, 319], "interpret": [3, 329], "last": [3, 4, 11, 13, 14, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 46, 47, 52, 64, 66, 76, 80, 94, 100, 121, 127, 132, 142, 144, 165, 166, 178, 180, 182, 184, 185, 186, 189, 190, 196, 204, 210, 216, 217, 220, 221, 228, 329, 330, 331, 334, 335, 336, 337, 339, 340], "indic": [3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 62, 64, 65, 66, 68, 69, 71, 76, 80, 94, 100, 109, 110, 141, 142, 143, 144, 147, 163, 165, 166, 186, 189, 190, 192, 223, 225, 226, 234, 237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 265, 307, 319, 322, 325, 330, 331, 335, 337, 340], "truncat": [3, 13, 14, 16, 18, 19, 20, 21, 37, 43, 45, 52, 53, 55, 65, 66, 76, 80, 94, 95, 96, 100, 118, 119, 126, 135, 141, 163, 180, 184, 208, 273, 328, 330, 331, 333, 336, 337, 339, 340], "carri": [3, 21, 45, 76, 80, 94, 100, 143, 252, 329, 331, 334, 335, 337], "assess": [3, 103, 328], "split_trajectori": [3, 13, 14, 16, 17, 18, 19, 20, 21, 65, 66, 321], "adjac": [3, 23, 121], "reli": [3, 178, 179, 182, 183, 237, 324, 328, 330, 335, 340], "traj_id": [3, 13, 14, 16, 23, 135, 331, 337, 339], "junction": 3, "miss": [3, 4, 6, 7, 11, 26, 32, 76, 80, 94, 100, 147, 162, 229, 230, 257, 322, 328, 331], "context": [3, 5, 8, 32, 76, 77, 80, 93, 94, 100, 143, 148, 192, 193, 217, 263, 264, 267, 268, 269, 270, 272, 280, 299, 323, 324, 328, 329, 330, 334, 335, 336, 337], "through": [3, 4, 5, 8, 11, 16, 18, 20, 21, 26, 28, 84, 89, 94, 95, 96, 100, 114, 117, 132, 186, 200, 224, 228, 229, 230, 234, 267, 268, 269, 270, 323, 328, 329, 330, 333, 334, 335, 336, 337, 340], "inittrack": [3, 180, 184, 328, 331], "tutori": [3, 327, 328, 329, 331, 332, 333, 335, 336, 337, 338, 340], "inform": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 43, 76, 77, 80, 83, 94, 100, 165, 166, 186, 192, 324, 325, 328, 329, 330, 331, 334, 335, 337], "scratch": [3, 8, 329, 335], "better": [3, 8, 9, 180, 184, 324, 330, 335], "intens": [3, 8], "gym3": 3, "envpool": [3, 91, 92], "interfac": [3, 83, 93, 186, 193, 323, 328, 330, 335, 337], "simultan": [3, 20, 94, 100, 335], "often": [3, 8, 249, 303, 328, 329, 335, 337, 340], "competit": [3, 334], "advantag": [3, 8, 177, 237, 239, 251, 254, 256, 267, 268, 269, 270, 271, 272, 274, 276, 278, 280, 281, 283, 324, 325, 328, 329, 330, 331, 334, 335, 340], "scale": [3, 4, 52, 109, 125, 127, 137, 142, 145, 176, 181, 195, 202, 203, 207, 208, 213, 214, 215, 224, 228, 230, 237, 238, 250, 254, 255, 256, 257, 301, 307, 312, 319, 323, 328, 329, 330, 331, 334, 339], "varieti": 3, "own": [3, 13, 14, 17, 22, 32, 76, 80, 94, 95, 96, 100, 329, 330, 334, 335], "As": [3, 4, 76, 80, 89, 94, 95, 96, 100, 135, 228, 267, 323, 328, 329, 330, 331, 334, 335, 336, 337, 339, 340], "inherit": [3, 187, 252, 325, 330, 334], "serialenv": [3, 76, 80, 94, 143, 321, 340], "Of": [3, 7, 322, 335, 340], "cours": [3, 4, 322, 330, 335, 340], "correspond": [3, 4, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 47, 60, 76, 80, 90, 91, 94, 100, 131, 143, 147, 151, 153, 180, 182, 184, 189, 190, 220, 221, 223, 224, 228, 241, 244, 257, 265, 267, 268, 269, 270, 271, 328, 329, 330, 334, 335, 336], "count": [3, 77, 141, 223, 299, 303, 306, 328, 329, 330, 331, 337, 340], "make_env": [3, 102, 153, 308, 309, 328, 329, 340], "gymenv": [3, 5, 13, 14, 16, 17, 21, 22, 76, 77, 80, 82, 94, 100, 109, 112, 113, 118, 124, 125, 127, 129, 133, 135, 138, 142, 143, 144, 146, 147, 153, 180, 184, 312, 315, 321, 323, 328, 329, 330, 331, 336, 337, 339, 340], "v1": [3, 13, 14, 16, 17, 21, 22, 52, 53, 76, 77, 80, 91, 94, 100, 109, 112, 119, 124, 125, 127, 133, 135, 138, 141, 142, 143, 144, 146, 180, 184, 262, 276, 277, 278, 279, 281, 282, 283, 284, 323, 329, 331, 335, 337, 339, 340], "from_pixel": [3, 74, 75, 109, 312, 328, 329, 331, 336, 337, 339, 340], "9": [3, 7, 32, 35, 38, 41, 55, 66, 68, 89, 95, 96, 142, 153, 237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 260, 265, 324, 327, 328, 329, 330, 334, 335, 336, 337, 338], "81": [3, 329, 335], "must": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 53, 55, 56, 57, 58, 59, 65, 66, 67, 70, 76, 77, 80, 94, 95, 96, 100, 109, 112, 118, 122, 125, 127, 129, 139, 142, 143, 144, 147, 148, 153, 165, 166, 175, 180, 184, 186, 189, 190, 191, 192, 201, 212, 218, 219, 224, 225, 226, 227, 228, 231, 232, 237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 258, 259, 265, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 312, 328, 329, 330, 331, 333, 335, 337, 339], "print": [3, 6, 7, 13, 14, 16, 21, 22, 24, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 53, 55, 56, 65, 66, 68, 72, 73, 74, 75, 76, 77, 79, 80, 81, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 98, 99, 100, 101, 102, 104, 106, 109, 110, 114, 115, 116, 117, 124, 127, 133, 135, 138, 141, 143, 144, 145, 153, 159, 162, 163, 165, 166, 172, 175, 180, 186, 189, 190, 191, 192, 195, 198, 201, 212, 213, 214, 215, 217, 218, 220, 221, 223, 225, 227, 230, 232, 252, 312, 315, 323, 325, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "simpli": [3, 6, 34, 36, 39, 45, 119, 139, 152, 252, 323, 324, 328, 330, 334, 340], "b": [3, 7, 8, 23, 26, 28, 34, 36, 39, 40, 41, 42, 68, 178, 179, 182, 183, 191, 192, 193, 194, 200, 209, 231, 267, 268, 269, 270, 271, 273, 286, 323, 329, 336, 337], "c": [3, 6, 7, 26, 34, 36, 39, 41, 42, 54, 127, 145, 182, 183, 329, 337], "d": [3, 35, 54, 55, 56, 60, 178, 182, 224, 228, 339], "get": [3, 4, 6, 7, 8, 9, 34, 35, 36, 38, 39, 52, 57, 58, 65, 66, 67, 68, 70, 77, 94, 100, 107, 110, 114, 116, 117, 125, 127, 132, 142, 143, 145, 153, 212, 220, 221, 224, 225, 228, 267, 268, 269, 270, 271, 290, 323, 328, 329, 330, 331, 334, 335, 337, 339, 340], "forc": [3, 6, 7, 13, 14, 18, 20, 21, 53, 55, 329, 334, 335], "privat": [3, 76, 80, 94, 100, 152, 335, 340], "absenc": 3, "total": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 30, 31, 33, 66, 239, 251, 254, 294, 296, 299, 303, 306, 307, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340], "unless": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 64, 76, 80, 94, 100, 330], "wa": [3, 5, 7, 35, 38, 41, 42, 52, 53, 54, 55, 76, 80, 94, 100, 147, 163, 182, 249, 258, 273, 324, 329, 330, 333, 337, 339], "abov": [3, 7, 32, 76, 80, 94, 100, 181, 207, 208, 236, 324, 325, 328, 330, 334, 335, 340], "deal": [3, 328, 330, 334, 337], "proper": [3, 4, 6, 7, 267, 268, 269, 270, 329, 330, 334, 337], "behav": [3, 82, 90, 178, 182, 198, 250, 336], "accord": [3, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 39, 40, 127, 137, 181, 193, 202, 207, 208, 265, 323, 335, 337], "develop": [3, 4, 7, 84, 328, 339], "inner": [3, 76, 80, 94, 100, 116, 325, 329, 330, 334, 340], "logic": 3, "nevertheless": [3, 330, 337], "kept": [3, 13, 14, 16, 17, 64, 66, 116, 139, 146, 155, 162, 181, 207, 208], "mind": [3, 65, 66, 334], "desig": 3, "previou": [3, 4, 10, 32, 40, 41, 143, 163, 178, 182, 203, 217, 330, 331, 335, 340], "wherev": 3, "expos": [3, 97, 114, 117, 229, 329], "modif": [3, 5, 26, 28, 32, 76, 80, 94, 100, 121, 163, 252, 330, 335], "lost": [3, 8, 152], "eras": [3, 76, 80, 94, 100, 147], "intern": [3, 326], "face": [3, 5, 8, 9, 340], "NOT": [3, 132], "outsid": [3, 16, 334, 335], "keep": [3, 4, 7, 8, 14, 42, 64, 68, 94, 100, 127, 131, 151, 153, 162, 223, 296, 303, 328, 329, 330, 331, 334, 335, 337, 339, 340], "right": [3, 6, 7, 40, 185, 329, 330, 334, 335, 340], "preliminari": 3, "warranti": 3, "affect": [3, 8, 32, 76, 80, 94, 100, 146, 147, 155, 267, 268, 269, 270], "assumpt": [3, 335, 337], "made": [3, 32, 57, 58, 59, 67, 70, 76, 80, 94, 100, 223, 241, 265, 328, 329, 331, 334, 336], "preclud": 3, "presenc": 3, "annihil": 3, "effect": [3, 26, 32, 65, 66, 76, 80, 94, 100, 109, 147, 303, 328, 337, 340], "reason": [3, 4, 8, 32, 76, 80, 94, 95, 96, 100, 131, 149, 184, 324, 328, 329, 330, 335, 337], "root": [3, 26, 28, 52, 53, 55, 109, 144, 162, 181, 207, 208, 331, 334, 335, 336, 337, 340], "known": [3, 5, 7, 8, 274, 275, 328, 329], "advanc": [3, 21, 35, 38, 41, 42, 337], "explicitli": [3, 4, 329, 331, 334, 337], "place": [3, 13, 14, 16, 17, 26, 28, 32, 34, 36, 39, 57, 58, 70, 76, 77, 80, 94, 100, 113, 118, 131, 143, 146, 147, 149, 151, 152, 153, 163, 217, 227, 300, 305, 306, 329, 330, 334, 335, 337], "superse": 3, "pettingzoowrapp": [3, 321], "group": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 76, 80, 89, 94, 95, 96, 100, 102, 103, 323, 329, 330, 334], "associ": [3, 32, 34, 36, 39, 76, 80, 94, 100, 202, 319, 328, 337], "environemtn": 3, "__not__": 3, "constrain": [3, 125, 180, 184, 254], "li": 3, "fact": [3, 7, 8, 328, 330, 334, 335, 336, 337, 340], "predict": [3, 32, 40, 176, 187, 188, 217, 233, 243, 245, 247, 248, 266, 323, 328, 329], "know": [3, 4, 9, 35, 38, 41, 42, 216, 255, 299, 328, 329, 330, 331, 334, 337], "meaning": 3, "could": [3, 4, 6, 329, 330, 334, 336, 340], "perfectli": [3, 325, 328, 335], "case": [3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 32, 35, 41, 53, 55, 60, 76, 80, 94, 100, 114, 115, 117, 145, 147, 155, 184, 186, 192, 224, 227, 228, 230, 231, 236, 237, 238, 240, 241, 243, 244, 250, 254, 255, 256, 257, 259, 267, 268, 269, 270, 294, 305, 317, 318, 319, 323, 325, 328, 329, 330, 331, 334, 335, 337, 340], "meaningless": 3, "discard": [3, 45, 52, 53, 80, 149, 162, 285, 337, 340], "val": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 339], "agent0": 3, "agent1": 3, "overridden": [3, 53, 55, 76, 80, 94, 100, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 191, 192, 195, 196, 197, 199, 202, 203, 205, 210, 216, 217, 219, 220, 221, 223, 226, 231, 234, 331], "overrid": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 38, 44, 46, 47, 76, 80, 94, 100, 319, 323], "elimin": 3, "field": [3, 13, 14, 16, 17, 26, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 53, 55, 57, 58, 70, 73, 76, 80, 86, 89, 90, 93, 94, 95, 96, 98, 99, 100, 101, 102, 114, 117, 118, 119, 129, 133, 135, 139, 141, 143, 147, 162, 164, 175, 180, 184, 188, 200, 201, 209, 212, 213, 214, 215, 217, 218, 219, 223, 224, 225, 226, 227, 230, 232, 237, 238, 240, 241, 243, 244, 250, 254, 255, 256, 257, 259, 265, 307, 312, 322, 323, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "bool": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 64, 65, 66, 73, 74, 75, 76, 77, 78, 80, 86, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 107, 109, 110, 114, 116, 117, 118, 119, 121, 125, 126, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 147, 148, 149, 151, 153, 155, 162, 163, 164, 165, 166, 168, 169, 178, 179, 180, 181, 182, 183, 184, 186, 188, 191, 192, 193, 194, 207, 208, 212, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 259, 262, 265, 267, 268, 269, 270, 273, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 296, 297, 299, 300, 301, 303, 312, 319, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "pixel": [3, 7, 26, 109, 111, 118, 121, 123, 127, 129, 131, 134, 145, 149, 151, 168, 196, 197, 286, 312, 323, 328, 329, 331, 336, 337, 339, 340], "500": [3, 328, 329, 335, 339, 340], "uint8": [3, 34, 36, 39, 47, 118, 129, 145, 329, 336, 337, 339, 340], "none": [3, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 67, 68, 70, 76, 77, 80, 89, 90, 94, 95, 96, 100, 101, 102, 104, 108, 109, 110, 111, 112, 113, 114, 115, 117, 121, 123, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 149, 151, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 179, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 253, 254, 255, 256, 257, 258, 259, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 297, 298, 299, 300, 301, 302, 303, 307, 308, 309, 312, 315, 317, 318, 319, 323, 325, 328, 329, 330, 331, 334, 335, 337, 339, 340], "is_shar": [3, 13, 14, 16, 26, 34, 36, 37, 39, 40, 41, 42, 43, 45, 53, 55, 56, 57, 58, 70, 73, 76, 80, 86, 89, 90, 93, 94, 95, 96, 98, 99, 100, 101, 102, 114, 117, 118, 119, 129, 133, 135, 139, 141, 143, 153, 162, 164, 175, 180, 184, 188, 200, 201, 209, 212, 213, 214, 215, 217, 218, 219, 223, 224, 225, 226, 227, 230, 232, 237, 238, 240, 241, 243, 244, 250, 254, 255, 256, 257, 259, 265, 312, 323, 330, 331, 333, 334, 335, 336, 337, 339, 340], "launch": [3, 13, 14, 18, 19, 20, 22, 94, 100], "bottleneck": [3, 8], "so": [3, 4, 6, 7, 10, 32, 34, 36, 39, 40, 76, 80, 94, 100, 143, 153, 229, 230, 330, 331, 334, 335, 340], "onc": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 76, 80, 94, 100, 135, 147, 216, 221, 223, 301, 325, 329, 330, 331, 335, 337, 340], "great": [3, 7, 8, 339], "speedup": [3, 8, 340], "precis": [3, 114, 117, 162, 179, 183, 328, 330], "misspecifi": 3, "caus": [3, 7, 8, 57, 58, 70, 76, 80, 84, 94, 100, 132, 340], "breakag": 3, "rais": [3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 76, 80, 94, 100, 103, 109, 120, 126, 135, 142, 143, 144, 147, 155, 216, 220, 221, 223, 257, 328, 330, 334, 337], "mismatch": [3, 329], "mostli": [3, 17, 324, 337, 340], "purpos": [3, 7, 109, 178, 315, 328, 330, 331, 334, 336, 340], "want": [3, 6, 7, 8, 66, 127, 237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 265, 323, 328, 329, 330, 331, 334, 335, 336, 337, 339, 340], "subprocess": [3, 13, 14, 77, 94, 100], "addit": [3, 4, 32, 52, 76, 80, 91, 94, 100, 113, 131, 143, 146, 147, 149, 151, 178, 216, 217, 227, 236, 252, 267, 324, 328, 329, 334, 337], "multithread": [3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 91, 92, 337], "multithreadedenv": [3, 321], "underneath": 3, "higher": [3, 4, 112, 231, 328, 329, 330, 337, 340], "restrict": [3, 329, 336, 337, 340], "flexibl": [3, 9, 91, 260, 324, 325, 337, 340], "cover": [3, 322, 330, 335, 339], "popular": [3, 323, 331, 334], "atari": [3, 4, 109, 340], "classic": [3, 90, 96, 329], "benchmark_batched_env": 3, "py": [3, 106, 200, 209, 325, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340], "pipelin": [3, 7, 323, 330], "seamlessli": [3, 335], "infrastructur": [3, 334], "view": [3, 8, 27, 32, 33, 55, 76, 80, 94, 100, 107, 175, 178, 182, 186, 335, 337, 339, 340], "core": [3, 8, 312, 325, 331, 339], "decis": [3, 167, 199, 217, 242, 253, 331, 334, 337, 340], "act": [3, 4, 65, 66, 95, 96, 192, 238, 240, 250, 255, 257, 259, 331, 334], "world": [3, 5, 90, 233, 247, 334, 335, 340], "paradigm": [3, 17, 334], "decpodp": 3, "markov": [3, 340], "game": [3, 4, 5], "per": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 84, 94, 95, 96, 112, 138, 176, 191, 192, 220, 303, 317, 318, 328, 329, 330, 331, 334, 337, 339], "accommod": [3, 13, 14, 16, 17], "thank": [3, 328], "carrier": [3, 330, 331, 337], "particular": [3, 32, 45, 52, 76, 80, 94, 100, 147, 324, 325, 329, 331, 333, 334, 337], "thu": [3, 251, 334], "hand": [3, 7, 21, 334, 335], "let": [3, 6, 7, 32, 43, 76, 80, 94, 95, 96, 100, 109, 180, 184, 191, 192, 218, 299, 324, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "understand": [3, 8, 328, 329, 334], "go": [3, 7, 89, 132, 135, 217, 273, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "vma": [3, 101, 102, 334], "robot": [3, 5, 7, 131, 149, 151, 334], "what": [3, 8, 35, 44, 76, 80, 94, 100, 118, 143, 162, 225, 322, 323, 324, 329, 330, 331, 334, 335, 336, 337, 339, 340], "vmasenv": [3, 321, 334], "balanc": [3, 328, 329], "num_env": [3, 21, 83, 101, 102, 334], "n_agent": [3, 101, 102, 191, 192, 200, 209, 265, 334], "5": [3, 24, 26, 28, 35, 38, 41, 42, 65, 66, 77, 86, 91, 98, 99, 101, 102, 135, 141, 142, 164, 165, 166, 175, 176, 178, 181, 182, 185, 186, 188, 191, 192, 196, 201, 207, 208, 217, 218, 225, 231, 251, 254, 256, 259, 323, 328, 329, 334, 335, 337, 339, 340], "info": [3, 35, 38, 41, 42, 52, 53, 54, 55, 65, 66, 76, 80, 94, 95, 96, 97, 98, 99, 100, 101, 102, 149, 152, 154, 334, 337], "ground_rew": 3, "pos_rew": [3, 334], "16": [3, 32, 55, 66, 76, 80, 94, 100, 109, 328, 329, 330, 331, 335, 337, 339], "style": [3, 35, 38, 41, 42, 52, 53, 54, 55], "relat": [3, 4, 10, 35, 121, 237, 238, 240, 241, 243, 244, 250, 254, 255, 256, 257, 259, 329, 335], "vari": [3, 95, 96, 132, 334], "creation": [3, 94, 100, 328, 340], "info_spec": 3, "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 33, 76, 80, 94, 100, 107, 163, 241, 244, 265, 321, 330, 334, 340], "you": [3, 5, 6, 7, 8, 9, 10, 32, 43, 76, 80, 84, 89, 94, 95, 96, 98, 99, 100, 106, 153, 182, 322, 323, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "simpl": [3, 9, 32, 33, 76, 80, 94, 100, 168, 228, 241, 243, 252, 256, 267, 323, 324, 328, 329, 330, 334, 340], "composit": [3, 26, 28, 76, 80, 94, 100, 330, 335], "prefix": [3, 23, 32, 34, 36, 39, 45, 76, 80, 94, 100, 147, 252, 257, 285, 331, 340], "exactli": [3, 32, 76, 80, 82, 94, 100, 147, 178, 182, 257, 328, 331, 334], "action_kei": [3, 15, 76, 80, 94, 100, 107, 116, 162, 164, 187, 188, 216, 220, 221, 223, 334], "reward_kei": [3, 76, 80, 94, 100, 162, 164, 188, 297, 301, 334], "automat": [3, 5, 57, 58, 70, 76, 80, 94, 95, 96, 100, 114, 117, 127, 152, 165, 212, 224, 323, 328, 330, 334, 335, 337, 339], "sure": [3, 4, 7, 54, 67, 84, 135, 218, 319, 323, 328, 330, 331, 334, 335, 337, 339, 340], "set_kei": [3, 118, 237, 239, 241, 244, 245, 250, 251, 252, 254, 255, 256, 257, 265, 271, 334], "awai": [3, 330, 334], "eas": [3, 334], "leaf": [3, 26, 28, 76, 80, 94, 100, 141, 228], "would": [3, 32, 40, 76, 80, 94, 100, 178, 180, 182, 184, 186, 191, 325, 329, 330, 331, 335, 337, 340], "full": [3, 76, 80, 94, 100, 180, 184, 219, 294, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "raw": [3, 4, 40, 181, 207, 208, 329, 335], "torchvis": [3, 131, 151, 339, 340], "transformedenv": [3, 13, 76, 77, 80, 94, 100, 107, 109, 112, 113, 114, 117, 118, 119, 121, 124, 125, 126, 127, 129, 133, 135, 138, 139, 141, 142, 143, 144, 146, 153, 180, 184, 312, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "primit": [3, 4, 237, 238, 240, 241, 243, 244, 250, 254, 255, 256, 257, 259], "built": [3, 5, 7, 237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 260, 265, 313, 315, 316, 319, 328, 329, 330, 331, 337, 340], "base_env": [3, 76, 80, 94, 100, 107, 112, 114, 116, 117, 125, 129, 141, 143, 144, 328, 329, 330, 336, 339, 340], "totensorimag": [3, 109, 329, 331, 337, 339, 340], "in_kei": [3, 13, 14, 16, 17, 21, 52, 90, 108, 109, 110, 111, 112, 114, 116, 117, 121, 123, 125, 127, 128, 129, 131, 133, 134, 135, 136, 137, 138, 142, 144, 145, 146, 147, 149, 151, 153, 164, 174, 180, 184, 188, 200, 209, 210, 212, 213, 214, 215, 217, 218, 224, 225, 227, 228, 230, 231, 232, 237, 238, 239, 240, 241, 243, 244, 250, 251, 254, 255, 256, 257, 259, 265, 267, 268, 269, 270, 285, 286, 312, 315, 323, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "resiz": [3, 109, 329, 331, 337, 340], "64": [3, 34, 36, 39, 109, 168, 169, 177, 180, 184, 192, 200, 265, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "appar": [3, 296], "bring": [3, 330, 340], "signific": [3, 5, 8, 330, 340], "kind": [3, 38, 44, 162, 337], "consult": 3, "interest": [3, 224, 228, 323, 329, 330, 334, 335, 340], "resize_par": 3, "out_kei": [3, 13, 14, 16, 17, 21, 90, 108, 109, 110, 111, 112, 114, 117, 121, 123, 125, 127, 128, 129, 131, 133, 134, 135, 136, 137, 138, 142, 144, 145, 146, 149, 151, 153, 164, 174, 175, 180, 184, 188, 200, 201, 209, 210, 212, 213, 214, 215, 217, 219, 224, 225, 226, 227, 228, 230, 231, 232, 237, 238, 239, 244, 250, 251, 254, 255, 256, 257, 265, 267, 268, 269, 270, 286, 299, 315, 323, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "easi": [3, 5, 54, 216, 220, 221, 223, 323, 324, 328, 329, 330, 334, 336, 337, 340], "graph": [3, 4, 8, 263, 264, 328, 335], "inv": [3, 112, 116, 129, 135, 335], "appli": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 43, 44, 46, 47, 52, 53, 54, 55, 76, 80, 94, 100, 107, 109, 110, 113, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 130, 132, 133, 135, 138, 139, 141, 142, 143, 144, 146, 147, 149, 150, 152, 153, 178, 182, 207, 218, 267, 298, 325, 328, 329, 330, 335, 339, 340], "revers": [3, 182], "order": [3, 16, 32, 33, 35, 38, 41, 42, 52, 53, 54, 55, 64, 76, 80, 94, 100, 114, 117, 129, 147, 212, 218, 227, 229, 230, 232, 237, 238, 240, 244, 250, 254, 255, 256, 257, 259, 329, 334], "chain": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 113, 116, 165, 166, 230, 340], "taken": [3, 76, 80, 94, 100, 189, 190, 221, 324, 328, 330, 331, 334, 335], "invers": [3, 4, 35, 38, 41, 42, 52, 53, 54, 55, 109, 114, 117, 127, 135, 235, 250, 335], "in_keys_inv": [3, 112, 114, 117, 127, 128, 129, 133, 135, 146, 328, 333, 335, 340], "append_transform": [3, 35, 38, 41, 42, 52, 53, 54, 55, 131, 143, 149, 328, 331, 335, 339, 340], "doubletofloat": [3, 312, 328, 330, 333], "float32": [3, 13, 14, 16, 26, 34, 35, 36, 39, 40, 41, 42, 44, 45, 53, 57, 58, 60, 70, 73, 76, 80, 86, 90, 93, 94, 98, 99, 100, 101, 102, 114, 117, 118, 119, 127, 129, 133, 135, 139, 141, 143, 145, 159, 162, 164, 175, 180, 184, 188, 200, 201, 209, 212, 213, 214, 215, 217, 218, 223, 224, 225, 226, 227, 230, 232, 237, 238, 240, 241, 243, 244, 250, 254, 255, 256, 257, 259, 265, 312, 323, 330, 331, 333, 334, 335, 336, 337, 339, 340], "float64": [3, 32, 53, 55, 76, 80, 94, 100, 113, 114, 117, 131, 143, 146, 147, 149, 151, 227, 333, 340], "regist": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 76, 80, 94, 100, 114, 117, 118, 147, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 191, 192, 195, 196, 197, 199, 202, 203, 205, 210, 216, 217, 219, 220, 221, 223, 226, 231, 234, 237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 265, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 325, 328, 330, 337], "manipul": [3, 4, 8, 131, 149], "third_transform": 3, "replac": [3, 6, 7, 26, 28, 32, 65, 66, 116, 118, 162, 220, 323, 337], "unexpect": [3, 32, 76, 80, 94, 100, 147, 257, 340], "behviour": 3, "fortun": [3, 331], "ident": [3, 13, 14, 16, 32, 34, 36, 39, 94, 100, 118, 191, 192, 267, 268, 269, 270, 317, 318, 329, 334], "alreadi": [3, 8, 11, 32, 34, 36, 39, 45, 76, 80, 94, 100, 143, 163, 228, 267, 268, 269, 270, 328, 330, 334], "chang": [3, 5, 7, 32, 35, 38, 41, 42, 57, 58, 59, 64, 67, 70, 76, 80, 94, 100, 113, 114, 115, 117, 119, 125, 133, 139, 141, 146, 147, 153, 182, 237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 265, 324, 328, 330, 331, 334, 335, 336, 337, 340], "happen": [3, 76, 80, 94, 100, 216, 329, 336, 340], "catfram": [3, 329], "hold": [3, 263, 264, 335, 337], "notic": [3, 109, 330, 335], "parenthood": 3, "henc": [3, 35, 132, 163, 191, 323, 328, 330, 334, 335], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 335], "discret": [3, 24, 27, 30, 31, 33, 47, 76, 80, 94, 95, 96, 100, 102, 116, 198, 201, 243, 244, 245, 323, 329, 330, 334, 340], "might": [3, 34, 36, 37, 39, 290, 322, 328, 340], "throughout": [3, 237, 238, 239, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 265, 330, 340], "action_mask": [3, 95, 96, 98, 99, 107], "unavail": [3, 95, 96], "probabl": [3, 4, 8, 40, 173, 175, 178, 180, 182, 184, 186, 189, 190, 198, 208, 220, 224, 228, 323, 329, 339], "categor": [3, 27, 31, 33, 95, 96, 102, 107, 118, 175, 198, 201, 218, 219, 224, 225, 226, 241, 244, 265, 331], "probabilistictensordictmodul": [3, 125, 228, 229, 339], "tensordictsequenti": [3, 180, 184, 218, 220, 229, 323, 328, 331, 333, 336, 339], "maskedcategor": [3, 190, 321], "linear": [3, 13, 14, 16, 17, 21, 32, 76, 80, 90, 94, 100, 113, 125, 131, 143, 146, 147, 149, 151, 164, 165, 166, 175, 186, 188, 191, 192, 193, 194, 195, 201, 202, 203, 212, 213, 214, 215, 220, 221, 222, 223, 224, 225, 227, 230, 232, 237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 265, 267, 268, 269, 270, 315, 323, 329, 333, 336, 339], "in_feat": 3, "out_feat": 3, "logit": [3, 36, 40, 189, 190, 198, 219, 224, 244, 323], "dist": [3, 10, 189, 190, 198], "distribution_class": [3, 125, 213, 214, 215, 217, 224, 228, 230, 237, 238, 244, 250, 254, 255, 256, 257, 323, 328, 330, 334, 339], "wrap": [3, 5, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 53, 76, 80, 94, 95, 96, 100, 102, 155, 180, 184, 210, 213, 214, 215, 216, 221, 223, 225, 233, 265, 323, 328, 329, 330, 331, 334, 340], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 107, 132], "add": [3, 4, 6, 21, 32, 35, 38, 41, 42, 52, 53, 54, 55, 62, 68, 69, 71, 76, 80, 94, 100, 109, 125, 180, 184, 193, 222, 237, 298, 330, 331, 334, 335, 337, 339], "enviorn": [3, 95, 96, 102, 334], "itself": [3, 32, 76, 80, 94, 100, 104, 252, 330], "log": [3, 4, 8, 40, 173, 174, 175, 189, 190, 198, 208, 218, 219, 224, 228, 237, 238, 239, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 265, 296, 297, 299, 303, 315, 323, 324, 325, 328, 329, 330, 334, 335, 339], "mission": 3, "irrespect": [3, 227, 228], "dmcontrol": [3, 328], "jumanji": [3, 85, 86], "natur": [3, 328, 331], "special": [3, 323, 328, 331, 340], "framework": [3, 4, 9, 22, 90, 178, 339, 340], "Its": [3, 32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 153, 227, 271], "success": [3, 53, 109, 146, 220, 329, 335, 337, 339], "been": [3, 5, 7, 8, 17, 18, 20, 21, 40, 64, 76, 80, 84, 94, 100, 125, 141, 142, 146, 178, 182, 216, 221, 223, 328, 329, 330, 331, 333, 334, 335, 337, 340], "foundat": [3, 5, 95, 96, 330, 334], "inspir": [3, 335], "gone": [3, 4, 5], "sometim": [3, 331, 340], "hard": [3, 7, 249, 329, 340], "adopt": [3, 5, 328, 340], "prefer": [3, 17, 20, 35, 38, 41, 42, 132, 139, 254, 300, 323, 330, 334, 337], "moreov": 3, "maintain": [3, 5, 9, 335], "both": [3, 7, 32, 76, 77, 80, 94, 95, 96, 100, 109, 133, 147, 163, 165, 166, 180, 183, 184, 186, 191, 192, 213, 214, 215, 219, 226, 237, 239, 240, 244, 250, 251, 252, 254, 255, 256, 257, 259, 299, 323, 328, 330, 334, 335, 336, 337, 340], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 329, 330, 331, 334, 335, 337, 340], "decor": [3, 8, 11, 106, 252, 267, 268, 269, 270], "set_gym_backend": [3, 104, 321], "relev": [3, 40, 267, 268, 269, 270, 271, 335], "gym_backend": [3, 106, 321], "env1": [3, 333], "path": [3, 6, 7, 32, 34, 35, 36, 38, 39, 41, 42, 45, 52, 53, 54, 55, 56, 57, 76, 80, 94, 100, 106, 131, 151, 188, 303, 325, 329], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 55, 106], "__init__": [3, 7, 90, 106, 107, 114, 117, 164, 175, 178, 182, 188, 232, 238, 240, 244, 250, 255, 257, 259, 325, 335, 340], "env2": [3, 333], "_env": [3, 6, 340], "classic_control": 3, "pendulumenv": [3, 335], "0x15147e190": 3, "0x1629916a0": 3, "further": [3, 5, 330], "tell": [3, 4, 7, 95, 96, 328, 331, 334], "mo_gymnasium": [3, 88, 104], "handi": 3, "side": [3, 4, 340], "v0": [3, 79, 80, 81, 85, 86, 87, 88, 113, 147, 153, 315], "26": [3, 327, 328, 329, 330, 333, 335, 336, 337, 338], "fun": [3, 11, 106, 330, 334], "reveal": 4, "bug": [4, 339], "curv": 4, "won": [4, 32, 76, 77, 80, 94, 100, 131, 151, 303, 319, 329, 330], "exploit": 4, "video": [4, 9, 286, 299, 319, 334], "cv": 4, "flip": 4, "imag": [4, 7, 74, 111, 131, 145, 151, 186, 328, 329, 334, 336, 340], "correspondingli": 4, "prescript": 4, "tune": [4, 125, 334, 336], "coeffici": [4, 40, 125, 334], "bonu": [4, 237, 239, 251, 254], "beta": [4, 35, 41, 60, 250, 251, 328, 329, 337, 339], "reduc": [4, 6, 27, 142, 329, 330], "downstream": [4, 328], "formul": [4, 334], "ob": [4, 8, 26, 28, 35, 38, 41, 42, 52, 53, 54, 55, 65, 66, 68, 107, 114, 115, 117, 127, 145, 159, 162, 191, 192, 225, 232, 238, 240, 244, 250, 255, 257, 259, 267, 268, 269, 270, 329, 333, 335, 339, 340], "rate": [4, 153, 266, 329, 330, 334], "gradient": [4, 32, 76, 80, 94, 100, 147, 181, 190, 194, 198, 207, 208, 237, 239, 240, 244, 250, 251, 252, 254, 255, 256, 257, 259, 266, 267, 268, 269, 270, 303, 328, 330, 334, 335], "norm": [4, 8, 303, 328, 329, 330, 334, 335], "easier": [4, 323, 328], "behavior": [4, 32, 76, 80, 94, 100, 147, 250, 330, 331, 334, 335], "local": [4, 7, 10, 16, 21, 32, 76, 80, 94, 100, 147, 191, 192, 200, 209, 265, 291, 334], "optima": 4, "sens": [4, 335], "product": [4, 9, 178, 179, 182, 183, 317, 318], "sum": [4, 21, 31, 33, 68, 138, 189, 190, 209, 247, 266, 273, 324, 328, 329, 330, 331, 334, 335, 340], "track": [4, 13, 14, 16, 17, 18, 19, 20, 21, 42, 64, 138, 153, 223, 291, 296, 329, 331, 334, 335, 337], "stat": [4, 127, 307, 319, 329, 330], "w": [4, 109, 111, 134, 145, 178, 223, 286, 329, 331, 337], "r": [4, 32, 107, 112, 127, 179, 228, 236, 266, 323, 329, 335, 340], "yield": [4, 16, 21, 32, 76, 80, 94, 100, 252, 328], "insight": 4, "auxiliari": 4, "credit": 4, "futur": [4, 32, 34, 36, 39, 76, 80, 94, 100, 131, 147, 151, 186, 237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 265, 322, 339], "past": [4, 329, 337], "spars": [4, 331], "ineffici": 4, "ad": [4, 13, 14, 16, 32, 35, 38, 41, 42, 49, 52, 53, 54, 55, 60, 76, 80, 94, 100, 138, 147, 193, 194, 223, 237, 239, 241, 245, 251, 254, 257, 265, 329, 331, 337, 340], "intermedi": [4, 180, 184, 219, 328, 336], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 328], "discov": 4, "score": [4, 40], "undesir": 4, "though": [4, 76, 80, 94, 100, 186, 330, 334], "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 339], "individu": [4, 18, 19, 20, 21, 32, 45, 76, 80, 94, 100, 328, 334], "select": [4, 15, 35, 38, 41, 42, 52, 53, 54, 55, 95, 96, 102, 107, 109, 110, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 130, 132, 133, 135, 138, 139, 141, 142, 143, 144, 146, 149, 150, 152, 153, 164, 180, 184, 218, 225, 302, 328, 337], "fall": [4, 52], "explicit": [4, 11, 45, 185, 337], "mechan": [4, 32, 76, 80, 94, 100, 147, 329, 335], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 34, 36, 39, 76, 80, 94, 100, 182, 250, 330, 334], "addition": 4, "timestep": [4, 40, 52, 135, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 334], "realli": 4, "larg": [4, 27, 34, 36, 39, 114, 117, 149, 329, 330, 334, 337], "huge": [4, 192, 331], "std": [4, 127, 153, 195, 199, 216, 328, 340], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 327, 331, 332, 333, 336, 337, 338], "initi": [4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 40, 76, 80, 94, 100, 127, 131, 143, 146, 147, 149, 154, 164, 178, 179, 182, 183, 188, 193, 194, 216, 220, 221, 223, 237, 238, 240, 241, 243, 244, 245, 246, 250, 251, 252, 253, 254, 255, 256, 257, 259, 265, 312, 319, 329, 331, 335, 340], "estim": [4, 65, 66, 118, 125, 213, 214, 215, 237, 238, 239, 240, 241, 243, 244, 245, 246, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 265, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 324, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "encount": [4, 322, 329, 335], "unseen": 4, "extrins": 4, "wrong": 4, "bonus": 4, "denser": 4, "prior": [4, 203, 247, 334], "freshli": 4, "doesn": [4, 11, 91, 114, 117], "drop": [4, 64, 66, 162], "meant": [4, 90], "encourag": [4, 328, 329, 337], "measur": [4, 330], "novelti": 4, "revisit": 4, "previous": [4, 330, 340], "diminish": 4, "decreas": 4, "ideal": [4, 127, 335], "down": [4, 13, 14, 16, 17, 331], "anyth": 4, "try": [4, 7, 8, 9, 26, 28, 34, 36, 39, 329, 330, 331, 334, 335, 339, 340], "distil": 4, "nois": [4, 154, 194, 211, 223, 255, 259, 299, 319, 328], "exploratori": [4, 237, 239, 251, 254], "misalign": 4, "trade": 4, "unavoid": 4, "schedul": [4, 7, 40, 299, 330, 335], "divers": [4, 94, 100], "bootstrap": [4, 245, 268, 274, 275, 328, 331], "noisi": [4, 193, 194, 211, 323], "unstabl": [4, 181, 207, 208], "inher": 4, "stochast": [4, 125, 176, 194, 196, 203, 238, 242, 244, 250, 253, 255, 257, 323, 330, 334], "enemi": 4, "variabl": [4, 7, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 53, 55, 102, 178, 179, 180, 182, 183, 184, 188, 213, 214, 215, 252, 255, 325, 329], "pomdp": [4, 337], "loos": [4, 323, 329, 330], "nonexist": 4, "architectur": [4, 172, 334], "sequenc": [4, 13, 14, 16, 17, 26, 28, 30, 31, 35, 37, 38, 40, 43, 45, 56, 62, 68, 69, 71, 108, 109, 110, 111, 114, 116, 117, 121, 123, 127, 128, 132, 133, 134, 135, 136, 137, 138, 142, 144, 145, 146, 153, 165, 166, 173, 175, 178, 182, 186, 189, 190, 191, 192, 198, 201, 205, 217, 229, 230, 242, 285, 286, 298, 299, 300, 302, 303, 312, 323, 328, 330, 331, 333, 334, 340], "lstm": [4, 183, 184, 185, 195], "rel": [4, 143, 173, 206, 328, 329, 334, 337], "tend": 4, "stabl": [4, 9, 10], "compens": 4, "descent": [4, 194], "1000": [4, 38, 65, 66, 76, 80, 94, 100, 109, 153, 220, 223, 224, 228, 249, 328, 329, 330, 331, 336, 337], "minimum": [4, 94, 100, 136, 176, 195, 206, 207, 208, 231, 234, 236, 238, 244, 252, 253, 257, 294, 328, 330, 334], "manual": [4, 18, 20, 21, 328, 331, 337], "deviat": [4, 127, 153, 164, 176, 188, 193, 194, 216, 254, 259, 328, 334], "radic": 4, "begin": [4, 13, 14, 16, 18, 19, 20, 21, 178, 179, 182, 183], "stabil": [4, 122], "stage": [4, 328, 335], "never": 4, "prevent": [4, 26, 28, 181, 207, 208, 251, 254, 301, 337], "solv": [4, 9, 10, 322, 328, 329, 330, 334, 335, 337], "entir": [4, 191, 330, 335, 337], "submit": [4, 322, 339], "suffici": [4, 328], "system": [4, 5, 330, 334, 335], "adequ": [4, 155, 330, 334], "infeas": 4, "allevi": [4, 323], "prune": 4, "fire": [4, 32, 76, 80, 94, 100], "certain": [4, 18, 20, 21, 32, 45, 76, 80, 94, 100, 106, 122, 141, 147, 179, 183, 220, 251, 323, 328, 329, 330, 334, 340], "illeg": 4, "move": [4, 21, 32, 76, 80, 94, 100, 113, 115, 131, 143, 146, 147, 149, 151, 153, 162, 186, 227, 301, 328, 329, 331, 339, 340], "chess": 4, "combin": [4, 146, 329, 337], "grasp": 4, "releas": [4, 7, 10, 32, 76, 80, 94, 100, 147, 257, 339], "top": [4, 68, 164, 188], "p": [4, 77, 98, 99], "wherein": 4, "cumul": [4, 138, 142, 164, 273, 330], "q": [4, 9, 76, 80, 94, 100, 168, 169, 170, 171, 174, 175, 177, 200, 201, 209, 215, 219, 225, 226, 238, 240, 241, 243, 244, 245, 249, 250, 255, 257, 259, 265, 312, 321, 328], "flow": [4, 328, 330, 334, 335, 337], "reparameter": [4, 173, 190, 198], "soft": [4, 249, 257, 258], "critic": [4, 8, 213, 222, 237, 239, 240, 244, 250, 251, 254, 255, 256, 257, 259, 328, 330], "clip": [4, 40, 112, 136, 239, 259, 303, 330, 334, 335], "oppos": [4, 45], "incorrect": 4, "thought": [4, 76, 80, 94, 100], "bound": [4, 17, 21, 25, 26, 32, 76, 80, 94, 100, 112, 126, 153, 202, 203, 212, 218, 219, 223, 224, 225, 226, 227, 228, 231, 259, 323, 328, 329, 330, 340], "region": 4, "squash": [4, 331, 339], "tanh": [4, 165, 166, 178, 179, 181, 182, 183, 186, 192, 206, 207, 208, 231, 330, 334, 335, 336, 339], "correct": [4, 34, 36, 39, 125, 306, 330, 331], "prob": [4, 189, 190, 198, 330, 334], "rememb": 4, "remap": 4, "origin": [4, 8, 13, 14, 16, 17, 34, 36, 39, 40, 84, 115, 116, 125, 131, 147, 151, 178, 224, 227, 228, 249, 252, 254, 312, 328, 333, 335, 340], "real": [5, 228, 324, 331, 335], "histor": 5, "ceas": 5, "fork": 5, "farama": [5, 87, 88, 95, 96, 330, 335], "usag": [5, 7, 52, 53, 55, 109, 118, 180, 184, 250, 257, 260, 323, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "bc": [5, 339], "break": [5, 13, 14, 16, 21, 32, 38, 42, 53, 55, 56, 65, 66, 76, 80, 94, 100, 109, 135, 153, 329, 337, 339], "against": [5, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 76, 80, 94, 100, 155, 212, 218, 219, 224, 225, 226, 227, 228, 330, 334], "13": [5, 10, 11, 65, 66, 97, 152, 328, 329, 330, 334, 335, 336, 337], "construct": [5, 32, 35, 38, 41, 42, 76, 80, 94, 95, 100, 114, 117, 155, 180, 184, 203, 228, 303, 323, 329, 330, 331, 335, 337, 340], "best": [5, 9, 84, 180, 184, 334, 337, 339], "gymwrapp": [5, 76, 80, 94, 100, 119, 139, 141, 152, 321, 330, 339], "feel": [5, 322, 339], "free": [5, 7, 114, 117, 237, 247, 254, 325, 330, 334, 339], "gladli": 5, "instruct": [6, 7, 10, 22, 52, 116, 118, 328, 329, 330, 331, 334, 337], "prepar": [6, 330], "conda": [6, 7, 322], "7": [6, 10, 27, 33, 35, 38, 41, 66, 142, 164, 165, 166, 185, 186, 188, 191, 273, 327, 328, 329, 334, 335, 336, 337, 338, 339], "cmake": 6, "14": [6, 11, 65, 66, 127, 328, 329, 330, 331, 335, 336, 337], "activ": [6, 7, 9, 165, 166, 172, 176, 186, 191, 192, 239, 251, 254, 323, 335, 339], "sim": 6, "bullet": 6, "physic": [6, 7, 94, 97, 325, 328, 334, 335], "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 322], "withbullet": 6, "forg": [6, 7], "aihabitat": 6, "nightli": 6, "y": [6, 7, 93, 185, 191, 210, 328, 330, 334], "git": [6, 7, 10], "facebookresearch": 6, "subdirectori": 6, "verbos": 6, "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 49, 76, 80, 94, 100, 140, 252, 334, 340], "command": [6, 7, 10, 330, 334, 335, 340], "readm": [6, 7], "md": [6, 7], "habitatenv": [6, 321], "_has_habitat": 6, "available_env": [6, 72, 73, 74, 75, 76, 79, 80, 81, 85, 86, 87, 88, 94, 98, 99, 100, 340], "startswith": [6, 324, 328], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 77, 252, 328], "env_nam": [6, 72, 74, 79, 85, 87, 91, 97, 328, 330, 340], "llvmlite": 6, "config": [6, 7, 131, 151, 167, 172, 199, 307, 308, 309, 312, 313, 316], "var": [6, 7, 32, 76, 80, 94, 100, 147, 252, 257], "ld_preload": [6, 7], "8": [6, 7, 38, 55, 60, 65, 66, 73, 76, 80, 94, 100, 142, 165, 166, 168, 169, 177, 186, 213, 214, 215, 224, 227, 230, 250, 327, 328, 329, 334, 335, 336, 337, 338, 339], "bind": 6, "deactiv": [6, 7, 218], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 32, 76, 80, 94, 100, 147, 252, 257, 337], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 329], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 52], "stand": [7, 333, 335], "joint": [7, 329], "dynam": [7, 250, 330, 335], "contact": [7, 37], "engin": [7, 97, 335], "biomechan": 7, "graphic": 7, "anim": [7, 334], "area": 7, "demand": [7, 340], "fast": [7, 9, 73, 133, 255, 328, 329, 330], "accur": [7, 52, 53, 55, 329, 335, 337], "articul": 7, "recent": [7, 11, 152, 340], "acquir": [7, 330], "deepmind": [7, 8, 9, 74, 75, 118, 330], "whomev": 7, "licenc": 7, "incorpor": [7, 216, 220, 221, 223, 331, 335], "relianc": 7, "obsolet": 7, "seri": [7, 8, 33, 62, 68, 69, 71, 100, 126, 146, 286, 323, 324, 328, 329, 330, 334, 337, 340], "legaci": 7, "pro": [7, 322], "tip": [7, 322], "glfw": 7, "osmesa": 7, "egl": 7, "advic": [7, 340], "sudo": [7, 322], "enabl": [7, 8, 52, 57, 58, 70, 180, 184, 223, 299, 330, 334, 335, 337], "apt": [7, 334], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 57, 58, 59, 67, 70, 329, 331], "workflow": [7, 213, 214, 215], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "pre": [7, 22, 32, 45, 58, 76, 80, 94, 100, 131, 149, 151, 340], "binari": [7, 24, 27, 33, 108, 175, 201, 218, 219, 225, 226, 241, 244, 265], "setup": [7, 84], "mkdir": 7, "cd": 7, "tag": [7, 286, 291, 319], "earlier": [7, 328, 330, 331, 334, 337], "roboti": 7, "download": [7, 10, 52, 53, 55, 84, 131, 151, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340], "html": [7, 91], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": [7, 13, 14, 94, 100], "obtain": [7, 40, 76, 80, 94, 100, 131, 142, 151, 164, 200, 300, 328, 330, 334], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 34, 36, 45, 56], "bin": [7, 175, 219, 323], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 171, 224, 228, 328, 330, 337], "nvidia": [7, 84], "older": [7, 11], "hack": [7, 328], "line": [7, 32, 76, 80, 94, 100, 329, 334], "adatp": 7, "script": [7, 155, 312, 315, 319, 323, 324, 325, 328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "unnot": [7, 132], "until": [7, 21, 144, 146, 330, 331, 334], "complet": [7, 9, 64, 80, 109, 141, 322, 324, 328, 330, 333], "mujoco_pi": 7, "trigger": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 329, 337], "troubleshoot": 7, "gl": 7, "h": [7, 109, 111, 134, 145, 178, 179, 180, 182, 183, 184, 188, 286, 329, 331, 337], "eglshim": 7, "fatal": 7, "No": 7, "directori": [7, 34, 36, 39, 45, 52, 53, 55, 57, 291, 325], "devel": 7, "ubuntu": [7, 84], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "38": [7, 329, 334, 335, 336, 337], "disappear": [7, 329, 331, 333], "libstdc": 7, "6": [7, 13, 14, 16, 17, 38, 55, 66, 86, 98, 99, 127, 129, 142, 165, 166, 173, 179, 185, 186, 191, 192, 196, 206, 224, 232, 312, 327, 329, 331, 334, 335, 337, 338, 339, 340], "glibcxx_3": 7, "29": [7, 327, 328, 329, 330, 335, 338], "compil": [7, 32, 76, 80, 94, 100, 178, 179, 182, 183], "libosmesa": 7, "libgcc": 7, "Then": [7, 152, 330, 333], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 26, 28, 32, 76, 80, 94, 100, 126, 147, 257, 340], "job": [7, 18, 19, 20, 22], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 329, 331, 334, 335, 336], "114": [7, 331, 335, 337], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 335], "offscreenopenglcontext": 7, "fail": [7, 22, 26, 28, 107, 155], "opengl": [7, 334], "global": [7, 32, 76, 80, 94, 95, 96, 100, 200, 209, 224, 228, 265, 325, 328, 334], "cuda_visible_devic": 7, "id": [7, 23, 40, 223, 255, 289, 312], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "onscreen": 7, "101": [7, 335, 337], "correctli": [7, 32, 76, 80, 94, 100], "lgl": 7, "libegl": 7, "x11": [7, 334], "xlib": 7, "libx11": 7, "xorg": 7, "loop": [8, 13, 14, 16, 17, 34, 36, 39, 80, 162, 216, 220, 221, 223, 254, 303, 325, 328, 329, 333, 337], "sketch": [8, 325], "_": [8, 35, 38, 41, 42, 52, 53, 54, 55, 77, 84, 102, 110, 114, 116, 117, 125, 127, 133, 145, 153, 212, 227, 232, 236, 237, 238, 240, 244, 250, 254, 255, 257, 259, 267, 268, 269, 270, 328, 329, 330, 331, 334, 335, 337, 339], "n_training_step": 8, "datapoint": [8, 45, 337], "onlin": [8, 13, 17, 109, 172, 199, 237, 242, 253, 254, 294, 319, 330, 331, 334, 337], "n_data_per_train": 8, "no_grad": [8, 32, 76, 80, 94, 100, 125, 178, 179, 182, 183, 267, 268, 269, 270, 330, 331, 334], "replay_buff": [8, 35, 38, 41, 42, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 300, 315, 328, 329, 330, 334, 337], "loss_fn": [8, 331, 339], "backward": [8, 32, 76, 80, 94, 100, 153, 178, 179, 182, 183, 237, 238, 240, 244, 250, 254, 255, 256, 257, 259, 328, 330, 331, 334, 335], "zero_grad": [8, 32, 76, 80, 94, 100, 325, 328, 330, 331, 334, 335], "backpropag": [8, 237, 238, 239, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 265, 334, 335], "differenti": [8, 45, 125, 267, 268, 269, 270, 331, 334, 335], "denomin": 8, "artifact": 8, "numer": [8, 38, 153, 181, 207, 208, 212, 218, 219, 224, 225, 226, 227, 228, 301, 330, 337, 340], "misconcept": 8, "freed": 8, "appear": [8, 33, 65, 66, 335, 337], "compuat": 8, "twice": 8, "fix": [8, 143, 238, 253, 257, 329, 335, 340], "retain_graph": 8, "discuss": [8, 9, 334], "inplac": [8, 32, 34, 36, 39, 76, 80, 94, 100, 147, 257, 328], "accumul": 8, "onto": [8, 33, 34, 36, 39, 159, 212, 216, 218, 219, 223, 224, 225, 226, 227, 228, 331, 335], "exclud": [8, 52, 55, 109, 119, 162, 200, 334, 337], "forward": [8, 32, 76, 80, 94, 100, 107, 109, 110, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 127, 130, 131, 132, 133, 135, 138, 139, 141, 142, 143, 144, 146, 149, 150, 152, 153, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 191, 192, 193, 195, 196, 197, 199, 200, 202, 203, 205, 209, 210, 216, 217, 219, 220, 221, 223, 224, 226, 227, 228, 231, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 259, 265, 267, 268, 269, 270, 271, 324, 335, 339], "submodul": [8, 32, 76, 80, 94, 100, 104, 252], "param": [8, 32, 40, 76, 80, 90, 94, 100, 113, 114, 115, 119, 125, 133, 139, 141, 146, 173, 175, 206, 217, 224, 227, 230, 232, 252, 261, 264, 267, 268, 269, 270, 271, 328, 334, 335, 336, 339], "grad": [8, 32, 76, 80, 94, 100, 328, 330], "whose": [8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 76, 80, 94, 95, 96, 100, 113, 131, 143, 146, 147, 149, 151, 195, 200, 227], "neg": [8, 13, 14, 16, 17, 18, 19, 20, 21, 35, 41, 60, 109, 121, 132, 148, 246, 324, 330, 334, 335], "ask": [8, 65, 66, 328, 330, 331, 334, 336, 340], "much": [8, 13, 14, 35, 41, 60, 94, 100, 251, 254, 330, 334, 335, 337, 340], "render": [8, 299, 328, 329, 330], "upon": [8, 335], "factor": [8, 32, 135, 181, 194, 207, 208, 216, 220, 221, 223, 238, 243, 245, 246, 248, 258, 273, 328, 329, 334, 337, 340], "fit": [8, 11, 127, 324, 325, 328], "bottlneck": 8, "brax": [8, 72, 73, 133, 340], "jax": [8, 11], "improperli": 8, "item": [8, 13, 26, 28, 32, 38, 45, 56, 68, 76, 80, 94, 100, 120, 147, 189, 190, 240, 241, 243, 257, 294, 324, 325, 328, 330, 331, 334, 335, 337], "underli": [8, 76, 80, 94, 100, 252, 335], "tedeiou": 8, "priorit": [8, 35, 41, 60, 240, 241, 243, 244, 250, 255, 257, 259, 328, 329], "amount": [8, 223, 329, 337], "contigu": [8, 55, 76, 80, 94, 100, 159, 330, 334, 335, 337, 339, 340], "costli": [8, 335], "concaten": [8, 21, 30, 31, 109, 110, 127, 146, 182, 186, 230, 328, 329, 334, 335, 337, 340], "constitut": [8, 329, 334, 335], "plain": 8, "profil": 8, "fulli": [8, 32, 76, 80, 94, 100, 179, 183, 329, 335, 337], "frequent": [8, 337], "program": [8, 250, 340], "functorch": [8, 10], "incl": 8, "suit": [8, 75, 330, 340], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "expand": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 65, 66, 227, 230, 252, 334, 335, 339], "new_shap": 8, "permut": [8, 64, 129, 339, 340], "idea": [9, 255, 325, 331, 334], "introductori": 9, "intro": [9, 330, 331], "dai": [9, 339], "2022": [9, 10, 335, 339], "spin": 9, "deep": [9, 109, 168, 169, 170, 171, 174, 223, 237, 249, 257, 258, 328], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": 9, "summari": [9, 127, 153, 328, 329, 330, 331], "reddit": 9, "reagent": 9, "orient": [9, 340], "baselines3": 9, "tf": 9, "bandit": [9, 93], "tensorflow": [9, 189, 190], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": 9, "salina": 9, "sequenti": [9, 32, 76, 80, 94, 100, 125, 229, 230, 254, 323, 330, 331, 334, 335, 336, 340], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 339], "grade": 9, "factori": [9, 43], "throughput": [9, 328], "cherri": 9, "jaxrl": 9, "space": [9, 33, 44, 76, 80, 94, 100, 112, 116, 159, 172, 175, 191, 197, 201, 212, 216, 218, 219, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 241, 243, 244, 259, 265, 323, 329, 330, 331, 334, 335, 339, 340], "mbrl": [9, 90, 323], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 335], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 330, 331, 334], "notebook": [10, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340], "24": [10, 55, 66, 329, 335], "11": [10, 27, 33, 45, 57, 58, 66, 70, 77, 145, 164, 188, 327, 328, 329, 330, 334, 335, 337, 338], "12": [10, 55, 57, 58, 66, 70, 98, 99, 327, 328, 329, 330, 331, 335, 337, 338], "pip": [10, 54, 334, 339, 340], "pip3": [10, 330, 331, 334], "extra": [10, 32, 76, 80, 94, 100, 109, 153, 162, 323, 330, 331, 337], "url": 10, "org": [10, 35, 60, 109, 131, 149, 167, 168, 169, 170, 171, 172, 175, 176, 177, 182, 188, 189, 190, 194, 196, 197, 199, 200, 202, 203, 209, 219, 223, 237, 238, 241, 242, 243, 245, 246, 247, 248, 249, 250, 253, 254, 256, 257, 258, 267, 272, 280, 336], "whl": 10, "u": [10, 54, 178, 179, 182, 183, 335], "There": [10, 180, 184, 323, 325, 330, 331, 334, 335, 337, 340], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 252], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 60, 74, 76, 78, 80, 93, 94, 95, 96, 97, 100, 102, 103, 104, 107, 109, 116, 118, 124, 125, 127, 131, 132, 134, 141, 142, 147, 149, 151, 152, 153, 156, 160, 162, 163, 164, 165, 166, 168, 169, 170, 171, 174, 175, 177, 180, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 200, 201, 209, 212, 218, 219, 224, 225, 226, 227, 228, 231, 232, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 259, 262, 265, 266, 267, 268, 269, 270, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 307, 312, 313, 319, 329, 330], "callabl": [11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 76, 77, 80, 90, 94, 100, 106, 118, 236, 308, 309, 317, 318, 319, 329], "from_vers": 11, "to_vers": 11, "intersect": [11, 141], "vs": [11, 180, 184, 185, 339], "longer": [11, 329, 334, 337], "self": [11, 26, 28, 32, 34, 36, 39, 76, 80, 90, 94, 100, 107, 113, 114, 117, 131, 143, 146, 147, 149, 151, 164, 175, 188, 200, 209, 216, 220, 221, 224, 227, 232, 237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 265, 267, 268, 269, 270, 271, 325, 328, 329, 335, 339], "x": [11, 23, 26, 32, 38, 40, 66, 125, 145, 166, 175, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 191, 192, 210, 218, 224, 225, 234, 236, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 303, 328, 330, 335, 337, 339], "23": [11, 55, 66, 327, 329, 331, 334, 335, 336, 338], "lambda": [11, 13, 14, 16, 17, 21, 22, 38, 76, 77, 80, 94, 100, 106, 125, 143, 210, 218, 225, 246, 248, 267, 270, 278, 279, 283, 284, 315, 324, 328, 329, 334, 337, 339, 340], "import_modul": 11, "27": [11, 329, 335, 336], "get_class_that_defined_method": 11, "f": [11, 80, 183, 236, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 328, 329, 330, 331, 334, 335, 337, 340], "otherwis": [11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 43, 44, 45, 46, 47, 52, 56, 65, 66, 76, 80, 89, 94, 95, 96, 100, 102, 109, 116, 127, 142, 143, 144, 147, 153, 178, 181, 182, 191, 192, 207, 208, 218, 225, 231, 238, 247, 252, 253, 257, 299, 300, 325, 328, 329, 330, 331, 335, 340], "classmethod": [11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 149, 167, 199], "module_set": 11, "setters_dict": 11, "dict": [11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 34, 36, 39, 55, 76, 77, 80, 94, 95, 96, 100, 102, 103, 125, 143, 147, 152, 153, 165, 166, 167, 168, 169, 170, 171, 172, 177, 185, 186, 199, 224, 228, 257, 290, 291, 299, 308, 309, 312, 317, 318, 319, 328, 329, 330, 340], "setter": 11, "setter_dict": 11, "copi": [11, 18, 19, 20, 21, 32, 34, 36, 39, 40, 45, 76, 80, 94, 100, 133, 142, 147, 162, 180, 184, 217, 252, 257, 324, 328, 329, 331, 337], "kwd": 12, "policy_weight": [12, 13, 14, 16, 17, 19, 20], "tensordictbas": [12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 32, 41, 42, 52, 53, 54, 55, 76, 78, 80, 94, 100, 107, 109, 110, 113, 114, 115, 118, 119, 120, 121, 124, 125, 130, 132, 133, 135, 138, 139, 141, 142, 143, 144, 146, 152, 153, 162, 163, 164, 180, 184, 187, 188, 216, 217, 219, 220, 221, 223, 226, 227, 228, 237, 238, 239, 240, 241, 242, 243, 244, 245, 250, 251, 252, 253, 254, 255, 256, 257, 259, 265, 266, 267, 268, 269, 270, 271, 303, 328, 335], "udpdat": [12, 13, 14, 16, 17, 19, 20], "create_env_fn": [13, 14, 16, 17, 18, 19, 20, 21, 77, 94, 100, 328, 339], "int": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 70, 71, 74, 76, 80, 90, 94, 95, 96, 100, 102, 109, 110, 111, 116, 121, 122, 126, 127, 129, 131, 132, 134, 140, 141, 144, 147, 148, 149, 151, 155, 159, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 183, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 199, 200, 201, 202, 203, 205, 206, 207, 209, 210, 216, 217, 218, 219, 220, 221, 223, 224, 226, 227, 228, 237, 238, 239, 244, 246, 247, 251, 252, 253, 254, 255, 259, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 294, 295, 296, 299, 300, 303, 305, 312, 313, 317, 318, 319, 335], "200": [13, 14, 16, 17, 21, 32, 76, 80, 94, 100, 101, 102, 135, 168, 169, 176, 202, 203, 328, 331, 335], "total_fram": [13, 14, 16, 17, 18, 19, 20, 21, 109, 135, 303, 306, 315, 325, 328, 329, 330, 331, 334, 337, 339], "device_typ": [13, 16, 27, 30, 33, 165, 166, 167, 168, 169, 170, 171, 177, 186, 193, 194, 199], "create_env_kwarg": [13, 14, 16, 17, 77, 91, 94, 100, 328], "postproc": [13, 14, 16, 17, 18, 19, 20, 21, 135, 329, 337], "explorationtyp": [13, 14, 16, 20, 21, 252, 299, 328, 329, 330, 331, 339], "interactiontyp": [13, 16, 18, 19, 20, 21, 157, 161, 224, 228, 299], "exploration_mod": [13, 16, 18, 19, 20, 321, 323], "preemptive_threshold": [13, 14], "float": [13, 14, 25, 27, 32, 33, 35, 40, 41, 46, 60, 76, 80, 94, 100, 109, 113, 114, 117, 125, 127, 131, 135, 136, 137, 142, 143, 145, 146, 147, 149, 151, 153, 173, 176, 178, 181, 182, 186, 189, 190, 193, 194, 202, 203, 206, 208, 216, 227, 231, 234, 235, 236, 237, 238, 243, 244, 247, 248, 249, 250, 253, 255, 257, 258, 259, 266, 272, 273, 274, 275, 276, 277, 278, 279, 280, 301, 328, 329, 337, 340], "num_thread": [13, 14, 34, 36, 39, 94, 100], "num_sub_thread": [13, 14, 94, 100], "datacollector": [13, 14, 16, 17, 224, 228, 254, 330], "recept": 13, "safe": [13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 212, 216, 218, 219, 223, 224, 225, 226, 227, 228, 230, 323, 339], "stepcount": [13, 76, 80, 94, 100, 146, 328, 329, 330, 331, 334, 339], "env_mak": [13, 14, 16, 21, 315, 340], "50": [13, 14, 16, 21, 37, 40, 65, 66, 328, 329, 330, 331, 334, 335, 336], "2000": [13, 14, 16, 45, 83, 330, 337], "enumer": [13, 14, 16, 21, 32, 38, 42, 66, 76, 80, 94, 100, 260, 324, 328, 329, 330, 331, 337, 339], "int64": [13, 14, 16, 24, 27, 30, 34, 36, 37, 39, 40, 41, 43, 45, 53, 55, 56, 76, 80, 89, 93, 94, 95, 96, 98, 99, 100, 118, 129, 135, 141, 175, 201, 218, 219, 223, 224, 225, 226, 323, 330, 331, 335, 337, 339, 340], "step_count": [13, 14, 16, 76, 80, 94, 100, 141, 330, 331, 339], "shutdown": [13, 14, 16, 17, 21, 328, 339], "del": [13, 14, 16, 328, 330, 333, 339, 340], "randompolici": [13, 14, 16, 18, 19, 20, 22, 109, 135, 321, 337], "lifespan": [13, 14, 16, 18, 19, 20, 329], "divis": [13, 14, 16, 18, 19, 20, 65, 66, 334], "endless": [13, 14, 16, 18, 19, 20], "dictionari": [13, 14, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 65, 66, 76, 80, 94, 100, 102, 143, 147, 224, 228, 257, 299, 317, 318, 319, 325, 329, 330, 335, 340], "span": [13, 14, 16, 17, 18, 19, 20, 21], "n_step": [13, 14, 16, 17, 18, 19, 20, 21, 32, 329, 330, 334], "ignor": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 43, 44, 46, 47, 76, 80, 94, 100, 116, 119, 139, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 189, 190, 191, 192, 195, 196, 197, 199, 202, 203, 205, 210, 216, 217, 219, 220, 221, 223, 226, 231, 234, 267, 337], "mainli": [13, 14, 16, 17, 18, 19, 20, 21, 40, 323, 334, 335], "round": [13, 14, 16], "closest": [13, 14, 16], "post": [13, 14, 16, 18, 19, 20, 21, 32, 53, 76, 80, 94, 100], "multistep": [13, 14, 16, 18, 19, 20, 21, 321, 329], "return_same_td": [13, 14, 16], "cautious": [13, 14, 16, 254], "whole": [13, 14, 16, 26, 28, 32, 45, 76, 80, 94, 100, 147, 224, 257, 294, 328, 330], "boolm": [13, 14], "update_policy_weight_": [13, 14], "sync": [13, 14, 18, 19, 20, 21, 305, 315, 325, 328, 339], "async": [13, 14, 18, 19, 20, 21, 152, 328, 339], "ratio": [13, 14, 40, 328, 330], "finish": [13, 14, 21, 80, 135, 340], "rest": [13, 14, 323, 330, 331, 335, 339], "earli": [13, 14, 80, 141, 339], "thread": [13, 14, 34, 36, 39, 91, 94, 100], "equal": [13, 14, 65, 66, 91, 94, 100, 126, 127, 165, 166, 174, 178, 180, 182, 184, 186, 192, 258, 262, 294, 317, 318, 328, 330, 336], "plu": [13, 14, 40, 94, 100, 335], "safeti": [13, 14, 90, 94, 100], "harm": [13, 14, 94, 100], "ordereddict": [13, 14, 16, 17, 21, 32, 76, 80, 94, 100, 147, 153, 257, 329], "form": [13, 14, 17, 32, 35, 38, 41, 42, 52, 53, 54, 55, 76, 80, 94, 100, 153, 178, 180, 182, 184, 236, 237, 239, 251, 254, 303, 323, 334], "worker0": [13, 14, 17], "state_dict0": [13, 14, 17], "worker1": [13, 14, 17], "state_dict1": [13, 14, 17], "reset_idx": [13, 14, 17], "static_se": [13, 14, 16, 17, 21, 76, 80, 94, 100, 147], "integ": [13, 14, 16, 17, 23, 30, 31, 32, 33, 40, 47, 67, 76, 80, 94, 100, 118, 122, 127, 141, 165, 166, 186, 191, 192, 250, 257, 337], "increment": [13, 14, 16, 17, 76, 80, 94, 100, 251], "env_fn": [13, 14, 16, 17, 77, 317, 318], "env_fn_parallel": [13, 14, 16, 17], "100": [13, 14, 16, 17, 32, 35, 38, 41, 42, 43, 52, 53, 54, 55, 57, 58, 76, 80, 94, 100, 112, 118, 127, 135, 141, 191, 219, 295, 315, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "300": [13, 14, 16, 17, 65, 66, 170, 171, 335], "out_se": [13, 14, 16, 17, 340], "shut": [13, 14, 16, 17], "irrevers": [13, 14, 17], "kwarg": [14, 16, 17, 21, 25, 26, 32, 52, 57, 58, 68, 70, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 107, 113, 131, 140, 143, 146, 147, 148, 150, 151, 154, 164, 165, 166, 168, 169, 170, 171, 174, 177, 180, 181, 184, 186, 187, 188, 191, 192, 198, 206, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 265, 266, 267, 268, 269, 270, 271, 286, 290, 291, 293, 296, 303, 308, 309, 312, 316, 317, 318, 324, 330, 334], "tupl": [15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 76, 80, 94, 100, 107, 116, 118, 124, 125, 127, 132, 162, 168, 174, 175, 180, 183, 184, 185, 186, 192, 195, 199, 200, 201, 218, 219, 225, 226, 231, 237, 238, 240, 244, 246, 250, 252, 254, 255, 256, 257, 259, 267, 268, 269, 270, 286, 297, 299, 301, 310, 311, 328], "rand": [15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 73, 86, 90, 107, 114, 117, 164, 188, 224, 237, 238, 240, 241, 243, 244, 250, 254, 255, 257, 259, 335, 339, 340], "describ": [15, 44, 110, 146, 206, 207, 241, 289, 324, 328, 330, 334, 335, 340], "tensor_spec": [15, 107, 163, 244, 254, 256], "boundedtensorspec": [15, 22, 26, 76, 80, 94, 100, 220, 221, 223, 224, 231, 237, 238, 240, 250, 254, 255, 257, 259, 321, 330, 334, 335, 339, 340], "cube": 15, "envcreat": [16, 22, 315, 316, 319, 321, 328, 329, 339, 340], "interruptor": 16, "_interruptor": 16, "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "chunk": 16, "policy_state_dict": 16, "env_state_dict": 16, "close": [16, 17, 80, 91, 125, 237, 239, 251, 254, 328, 333, 335, 339], "pin_memori": [17, 35, 38, 41, 42, 52, 53, 54, 55, 130, 328, 339], "regular": [17, 34, 36, 39, 76, 80, 94, 100, 147, 201, 219, 225, 226, 227, 228, 245, 305, 321, 325, 328, 329, 337, 340], "mere": 17, "greater": [17, 65, 66, 180, 184, 328, 329, 339], "sent": [17, 57, 58, 70, 153], "server": 17, "postprocessor": 17, "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 303], "string": [18, 19, 20, 32, 37, 45, 56, 76, 80, 94, 100, 106, 131, 141, 151, 180, 184, 218, 224, 225, 236, 285, 302, 312, 324, 328, 330, 331], "respect": [18, 19, 20, 32, 76, 80, 94, 100, 108, 113, 114, 117, 131, 132, 143, 146, 147, 149, 151, 178, 182, 191, 203, 227, 232, 298, 330, 331, 334], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 322, 329, 330, 333, 337], "serv": [18, 20, 21, 82, 337, 340], "fashion": [18, 20, 21, 34, 36, 39, 66], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 20, 21, 53, 55, 76, 80, 94, 100, 121], "seen": [18, 20, 21, 324, 328, 329, 331, 334, 337], "turn": [18, 20, 21, 34, 36, 39, 123, 148, 152, 218, 299, 324, 328, 329, 331, 335, 336], "submitit_delai": [18, 22], "former": [18, 19, 20, 35, 38, 41, 42, 52, 76, 80, 94, 100, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 191, 192, 195, 196, 197, 199, 202, 203, 205, 210, 216, 217, 219, 220, 221, 223, 226, 231, 234, 328], "whilst": [18, 19, 20], "latter": [18, 19, 20, 32, 52, 76, 80, 94, 100, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 191, 192, 195, 196, 197, 199, 202, 203, 205, 210, 216, 217, 219, 220, 221, 223, 226, 231, 234, 254, 317, 318], "homonym": [18, 19, 20, 335], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 328], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 33, 224, 228], "tensorpiperpcbackendopt": 20, "_td": [21, 77], "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 317, 318, 328, 329], "coordin": 21, "init": [21, 32, 76, 80, 94, 100, 328, 329, 330], "autodetect": 21, "similarli": [21, 32, 64, 76, 80, 94, 100, 191, 229, 230, 250, 340], "num_cpu": 21, "num_gpu": 21, "1024": [21, 172, 329, 337], "equat": [21, 80, 223, 236, 239, 258, 330, 335], "exce": [21, 330, 337], "indefinit": [21, 51], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 303, 328, 330, 331], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "32": [22, 26, 35, 38, 41, 42, 52, 53, 54, 55, 66, 98, 99, 101, 102, 165, 166, 167, 168, 169, 172, 177, 186, 191, 192, 196, 197, 199, 200, 209, 265, 327, 328, 329, 330, 331, 335, 336, 337, 338, 339, 340], "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": 22, "jump": 22, "host": [22, 32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227], "wherea": [22, 116, 252, 325], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 167, 172, 199, 217], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "rollout_tensordict": 23, "durat": [23, 334], "meta": [23, 44, 52, 78, 325, 330, 334, 337], "aren": [23, 142, 331], "assert_is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "belong": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 152, 153, 323, 328, 334], "encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 116, 197, 198, 202, 236, 323, 329, 330, 331, 335, 337], "ndarrai": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 80, 223, 231], "ignore_devic": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "np": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 80, 231, 335], "cast": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 56, 76, 80, 94, 100, 113, 114, 117, 125, 131, 143, 146, 147, 149, 151, 153, 227, 312, 340], "least": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 112, 340], "complient": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "singleton": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 165, 166, 186, 204, 205], "implements_for_spec": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "torch_funct": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "tensor_to_index": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 340], "project": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 116, 180, 182, 212, 216, 218, 219, 223, 224, 225, 226, 227, 228, 323, 339, 340], "uniform": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 41, 44, 46, 47, 60], "unbound": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 143, 159, 335, 337], "squeez": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 109, 140, 142, 165, 166, 204, 205, 328, 335, 337], "dim": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 65, 109, 110, 129, 143, 148, 153, 183, 185, 205, 210, 319, 329, 330, 335, 337], "to_numpi": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "transformed_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 146, 147, 195, 206, 319], "check_spec_encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "to_one_hot": [24, 27, 30], "hot": [24, 27, 30, 31, 33, 95, 96, 102, 107, 116, 175, 198, 201, 218, 219, 225, 226, 237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 265, 331], "to_one_hot_spec": [24, 27, 30], "onehotdiscretetensorspec": [24, 27, 175, 201, 218, 225, 241, 243, 244, 265, 321, 323], "convert": [24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 76, 80, 94, 100, 113, 114, 117, 131, 143, 146, 147, 149, 151, 153, 227, 236, 252, 328, 329, 330, 335, 337], "type_check": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "fill": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 143, 152, 184, 331, 335, 336], "upper": [25, 126], "unnam": 26, "pixels_spec": 26, "observation_vector_spec": 26, "33": [26, 32, 76, 80, 94, 100, 165, 166, 186, 328, 329, 335, 340], "composite_spec": 26, "observation_vector": [26, 110, 312, 328], "randn": [26, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 57, 58, 65, 66, 70, 127, 159, 167, 172, 175, 178, 179, 182, 183, 185, 189, 190, 191, 195, 198, 199, 201, 212, 213, 214, 215, 217, 218, 224, 225, 227, 230, 231, 232, 237, 238, 240, 241, 243, 244, 250, 254, 255, 256, 257, 259, 267, 268, 269, 270, 302, 323, 339, 340], "td_project": 26, "is_empti": [26, 28, 335], "include_nest": [26, 28], "leaves_onli": [26, 28], "itemsview": 26, "immedi": [26, 28, 32, 76, 80, 94, 100, 266, 334], "children": [26, 28, 32, 76, 80, 94, 100], "keysview": [26, 28], "reflect": [26, 28, 95, 96, 152, 162, 252, 306, 329, 330, 331, 334], "lock_": [26, 28], "recurs": [26, 28, 32, 48, 49, 76, 80, 94, 100, 252], "succeed": [26, 28, 330, 334, 335], "selected_kei": [26, 28, 139, 328], "unlock_": [26, 28], "unlock": [26, 28, 34, 36, 39], "valuesview": 26, "onehottensorspec": 27, "action_valu": [27, 33, 174, 175, 201, 218, 219, 225, 226, 244, 252, 265, 323, 331], "arang": [27, 33, 175, 190, 218, 294, 323, 337], "argmax": [27, 175, 201, 219, 226], "chosen_action_valu": [27, 33, 200, 201, 209, 225, 226, 265, 323, 331], "outcom": [27, 33, 173, 206], "lazi": [28, 29, 49, 50, 76, 80, 94, 100, 102, 131, 149, 165, 193, 229, 230, 328, 329, 333, 337, 340], "represent": [28, 29, 32, 76, 80, 94, 100, 131, 149, 151, 328, 335, 336, 340], "drawn": [28, 29, 143, 220, 224, 228, 330, 334], "lazystackedtensordict": [28, 76, 80, 90, 94, 100, 333, 339], "heterogen": [28, 29, 89, 95, 96, 155, 191, 192, 328, 329], "semant": [28, 29, 323], "thrown": [29, 32, 76, 80, 94, 100, 337], "nvec": [30, 31], "cardin": [30, 31, 175, 201, 218, 219, 226, 330], "ax": [30, 193, 194], "m": [30, 32, 76, 80, 94, 100, 116, 228, 323, 329, 335], "ts": [30, 31], "multionehotdiscretetensorspec": [30, 241, 244, 265, 321], "use_regist": [31, 33], "to_categor": [31, 33], "to_categorical_spec": [31, 33], "multidiscretetensorspec": [31, 321], "gamma": [32, 135, 188, 237, 238, 240, 241, 243, 244, 245, 246, 248, 250, 252, 254, 255, 256, 257, 259, 260, 261, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 315, 324, 328, 329, 330, 334, 339], "sutton": [32, 324, 334], "1988": 32, "tempor": [32, 180, 184, 188, 268, 269, 274, 275], "44": [32, 328, 329, 331, 335, 336], "discount": [32, 77, 135, 238, 243, 245, 246, 248, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 324, 329, 330, 334], "ahead": [32, 340], "add_modul": [32, 76, 80, 94, 100], "child": [32, 76, 80, 94, 100], "fn": [32, 37, 76, 80, 94, 100, 195, 317, 318], "init_weight": [32, 76, 80, 94, 100], "fill_": [32, 76, 80, 94, 100, 329, 331, 340], "net": [32, 76, 80, 94, 100, 185, 192, 237, 238, 244, 250, 254, 255, 256, 257, 312, 315, 329, 335, 336, 339], "in_featur": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 165, 166, 168, 169, 170, 171, 185, 186, 192, 193, 194, 213, 227, 241, 243, 339], "out_featur": [32, 76, 80, 90, 94, 100, 113, 131, 143, 146, 147, 149, 151, 164, 165, 166, 168, 169, 170, 171, 176, 177, 180, 184, 185, 186, 188, 191, 192, 193, 194, 213, 218, 227, 241, 243, 323, 328, 331, 339], "bia": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 165, 166, 176, 178, 179, 180, 182, 183, 184, 186, 192, 193, 194, 195, 220, 221, 223, 227, 234, 235, 236, 252, 257, 324, 328, 329, 330, 331, 334, 339], "requires_grad": [32, 76, 80, 94, 100, 125], "bfloat16": [32, 76, 80, 94, 100], "datatyp": [32, 76, 80, 94, 100, 337], "member": [32, 76, 80, 94, 100, 252], "xdoctest": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227, 252, 257], "skip": [32, 76, 80, 94, 100, 122, 147, 155, 224, 228, 252, 257, 267, 268, 269, 270, 285, 286, 296, 299, 328, 329, 330, 335], "buf": [32, 76, 80, 94, 100], "20l": [32, 76, 80, 94, 100, 252], "1l": [32, 76, 80, 94, 100, 252], "5l": [32, 76, 80, 94, 100, 252], "__call__": [32, 37, 76, 80, 94, 100, 228, 325], "doubl": [32, 46, 76, 80, 94, 100, 113, 114, 115, 117, 131, 143, 146, 147, 149, 151, 227, 241, 245, 249, 255, 258, 265, 328, 329, 330, 331, 340], "eval": [32, 76, 80, 94, 100, 147, 153, 328, 329, 330], "evalu": [32, 76, 80, 94, 100, 147, 173, 189, 190, 198, 208, 255, 308, 309, 329, 330], "dropout": [32, 76, 80, 94, 100, 147, 178, 180, 182, 184, 186, 331], "batchnorm": [32, 76, 80, 94, 100, 147], "disabl": [32, 76, 80, 94, 100, 147, 181, 208, 328], "comparison": [32, 76, 80, 94, 100, 147, 252, 328, 329], "similar": [32, 76, 80, 94, 95, 96, 100, 113, 131, 143, 146, 147, 149, 150, 151, 153, 213, 215, 224, 227, 228, 324, 328, 329, 330, 331, 335, 340], "confus": [32, 76, 80, 94, 100, 147], "extra_repr": [32, 76, 80, 94, 100], "shift": [32, 234, 267, 268, 269, 270, 330], "nontermin": 32, "original_reward": 32, "newli": [32, 76, 80, 94, 100], "OR": 32, "get_buff": [32, 76, 80, 94, 100], "throw": [32, 34, 36, 39, 76, 80, 94, 100, 340], "docstr": [32, 76, 80, 94, 100], "get_submodul": [32, 76, 80, 94, 100], "explan": [32, 76, 80, 94, 100], "qualifi": [32, 76, 80, 94, 100], "referenc": [32, 76, 80, 94, 100], "attributeerror": [32, 76, 80, 94, 100], "invalid": [32, 76, 80, 94, 100, 103, 189, 190], "resolv": [32, 76, 80, 94, 100], "someth": [32, 76, 80, 89, 94, 100, 322, 329, 330, 335, 340], "get_extra_st": [32, 76, 80, 94, 100, 153], "set_extra_st": [32, 76, 80, 94, 100, 153], "picklabl": [32, 76, 80, 94, 100, 153], "pickl": [32, 76, 80, 94, 100, 153], "get_paramet": [32, 76, 80, 94, 100], "sai": [32, 76, 80, 94, 100, 191, 336, 340], "net_b": [32, 76, 80, 94, 100], "net_c": [32, 76, 80, 94, 100], "conv": [32, 76, 80, 94, 100, 165, 166, 329], "conv2d": [32, 76, 80, 94, 100, 166, 191, 339], "kernel_s": [32, 76, 80, 94, 100, 165, 166, 168, 169, 191, 196, 329, 339], "stride": [32, 76, 80, 94, 100, 165, 166, 168, 169, 177, 191, 329, 339], "diagram": [32, 76, 80, 94, 100], "degre": [32, 76, 80, 94, 100], "named_modul": [32, 76, 80, 94, 100], "o": [32, 76, 80, 94, 100, 183], "transit": [32, 52, 66, 76, 80, 94, 100, 233, 328, 331, 335, 337], "half": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227, 328], "ipu": [32, 76, 80, 94, 100], "strict": [32, 34, 36, 39, 76, 80, 94, 100, 147, 257], "descend": [32, 76, 80, 94, 100, 147, 257], "persist": [32, 76, 80, 94, 100, 147, 162, 257], "enforc": [32, 64, 76, 80, 94, 100, 147, 229, 257, 335], "preserv": [32, 76, 80, 94, 100, 147, 257], "missing_kei": [32, 76, 80, 94, 100, 147, 257], "unexpected_kei": [32, 76, 80, 94, 100, 147, 257], "namedtupl": [32, 76, 80, 94, 100, 147, 257], "duplic": [32, 64, 76, 80, 94, 100, 241, 245, 252, 265], "l": [32, 76, 80, 94, 100, 178, 182, 266, 330, 335], "idx": [32, 76, 80, 94, 100], "named_buff": [32, 76, 80, 94, 100], "remove_dupl": [32, 76, 80, 94, 100, 252], "prepend": [32, 76, 80, 94, 100, 252], "running_var": [32, 76, 80, 94, 100], "named_children": [32, 76, 80, 94, 100], "conv4": [32, 76, 80, 94, 100], "conv5": [32, 76, 80, 94, 100], "memo": [32, 76, 80, 94, 100], "named_paramet": [32, 76, 80, 94, 100, 125, 252], "register_backward_hook": [32, 76, 80, 94, 100], "removablehandl": [32, 76, 80, 94, 100], "deprec": [32, 76, 80, 94, 100, 147, 156, 160, 174, 221, 237, 239, 241, 244, 245, 250, 251, 254, 255, 256, 257, 265, 267, 268, 269, 270, 275, 340], "favor": [32, 76, 80, 94, 100, 330], "register_full_backward_hook": [32, 76, 80, 94, 100], "register_buff": [32, 76, 80, 94, 100], "running_mean": [32, 76, 80, 94, 100], "alongsid": [32, 76, 80, 94, 100, 334], "num_featur": [32, 76, 80, 94, 100], "register_forward_hook": [32, 76, 80, 94, 100, 175, 201], "with_kwarg": [32, 76, 80, 94, 100], "always_cal": [32, 76, 80, 94, 100], "posit": [32, 35, 38, 41, 42, 52, 53, 54, 55, 76, 80, 94, 100, 121, 122, 140, 141, 144, 147, 148, 195, 257, 324, 330, 334, 335, 337], "signatur": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227, 324, 328, 335], "register_module_forward_hook": [32, 76, 80, 94, 100], "regardless": [32, 76, 80, 94, 100, 239, 251, 254], "register_forward_pre_hook": [32, 76, 80, 94, 100], "invok": [32, 76, 80, 94, 100], "And": [32, 76, 80, 94, 100], "forward_pr": [32, 76, 80, 94, 100], "register_module_forward_pre_hook": [32, 76, 80, 94, 100], "grad_input": [32, 76, 80, 94, 100], "grad_output": [32, 76, 80, 94, 100], "subsequ": [32, 76, 80, 94, 100, 331], "technic": [32, 76, 80, 94, 100, 329, 331], "caller": [32, 76, 80, 94, 100], "register_module_full_backward_hook": [32, 76, 80, 94, 100], "register_full_backward_pre_hook": [32, 76, 80, 94, 100], "backward_pr": [32, 76, 80, 94, 100], "register_module_full_backward_pre_hook": [32, 76, 80, 94, 100], "register_load_state_dict_post_hook": [32, 76, 80, 94, 100], "incompatible_kei": [32, 76, 80, 94, 100], "clear": [32, 76, 80, 84, 94, 100, 295], "register_modul": [32, 76, 80, 94, 100, 325], "alia": [32, 76, 80, 94, 100], "register_paramet": [32, 76, 80, 94, 100], "register_state_dict_pre_hook": [32, 76, 80, 94, 100], "keep_var": [32, 34, 36, 39, 76, 80, 94, 100, 147, 257], "requires_grad_": [32, 76, 80, 94, 100], "autograd": [32, 76, 80, 94, 100, 147, 257], "freez": [32, 76, 80, 94, 100], "finetun": [32, 76, 80, 94, 100], "gan": [32, 76, 80, 94, 100], "share_memori": [32, 76, 77, 80, 94, 100, 328], "share_memory_": [32, 76, 80, 94, 100, 339], "destin": [32, 34, 36, 39, 76, 80, 94, 100, 114, 115, 117, 147, 149, 153, 162, 257, 286], "averag": [32, 76, 80, 94, 100, 147, 153, 223, 246, 247, 257, 301, 328, 330], "shallow": [32, 76, 80, 94, 100, 147, 257, 331], "pleas": [32, 53, 76, 80, 94, 95, 96, 100, 109, 144, 147, 257, 322], "detach": [32, 76, 80, 94, 100, 147, 252, 257, 267, 268, 269, 270, 328], "non_block": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227, 331], "memory_format": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227], "channels_last": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227], "complex": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227, 328, 329], "integr": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 171, 180, 184, 188, 227, 323, 334, 335, 336], "unchang": [32, 76, 80, 94, 100, 113, 116, 131, 143, 146, 147, 149, 151, 220, 227, 300, 328, 337], "tri": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227], "pin": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227], "4d": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227], "ignore_w": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227], "1913": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227], "3420": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227], "5113": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227], "2325": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227], "torch_doctest_cuda1": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227], "gpu1": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227], "1914": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227], "5112": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227, 335], "2324": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227], "float16": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 179, 183, 227], "cdoubl": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227], "3741": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227], "j": [32, 35, 60, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227, 325], "2382": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227], "5593": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227, 335], "4443": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227], "complex128": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227], "6122": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227], "1150": [32, 76, 80, 94, 100, 113, 131, 143, 146, 147, 149, 151, 227], "to_empti": [32, 76, 80, 94, 100], "dst_type": [32, 76, 80, 94, 100], "xpu": [32, 76, 80, 94, 100], "set_to_non": [32, 76, 80, 94, 100], "unidimension": 33, "keepdim": 33, "user_regist": 33, "priori": 33, "definit": [33, 67, 191], "uniqu": [33, 65, 66, 109, 118, 142, 143, 144, 337], "discretebox": [33, 76, 80, 94, 100, 330, 334, 340], "chosen_data": [34, 56], "rewarddata": [34, 56, 321], "rejected_data": [34, 56], "from_dataset": [34, 36, 56], "dataset_nam": [34, 36, 40, 45, 56, 93], "max_length": [34, 36, 37, 43, 45, 56], "550": [34, 36, 40, 45, 56, 65, 66, 335], "root_dir": [34, 36, 45, 56], "from_disk": [34, 36, 45, 56], "num_work": [34, 36, 45, 56, 91, 94, 100, 328, 329], "carperai": [34, 36, 40, 45], "openai_summarize_comparison": [34, 36, 45], "sequen": [34, 36], "cach": [34, 36, 45, 52, 53, 55, 56, 65, 76, 80, 94, 100, 114, 117, 131, 147, 151, 295, 336], "load_from_disk": [34, 36, 45, 56], "load_dataset": [34, 36, 45, 56], "attention_mask": [34, 36, 37, 39, 40, 43, 45, 56], "memorymappedtensor": [34, 36, 45, 57, 336], "92534": 34, "input_id": [34, 36, 37, 39, 40, 43, 45, 56], "end_scor": [34, 39, 40, 56], "sub_data": [34, 36], "from_dict": [34, 36, 39, 45], "batch_dim": [34, 36, 39, 45, 319], "determin": [34, 35, 36, 39, 41, 52, 60, 76, 80, 94, 100, 131, 151, 191, 223, 329, 334], "input_dict": [34, 36, 39], "exclusinv": [34, 36, 39], "__maximum__": [34, 36, 39], "toler": [34, 36, 39, 173, 206], "sie": [34, 36, 39], "input_td": [34, 36, 39], "from_tensordict": [34, 36, 39], "non_tensordict": [34, 36, 39], "_no_default_": [34, 36, 39], "getattr": [34, 36, 39], "tensorclass": [34, 36, 39, 56, 57, 58, 70], "from_flatten": [34, 36, 39], "attemptedli": [34, 36, 39], "memmap": [34, 36, 39, 57, 94, 100, 153, 300, 337], "copy_exist": [34, 36, 39], "return_earli": [34, 36, 39], "mimic": [34, 36, 39, 76, 80, 94, 100], "renam": [34, 36, 39, 133, 135, 162, 328], "cross": [34, 36, 39, 164], "anymor": [34, 36, 39, 147, 227], "tensordictfutur": [34, 36, 39], "deepli": [34, 36, 39], "insid": [34, 36, 39, 340], "memmap_": [34, 36, 39, 153], "memmap_lik": [34, 36, 39], "contentless": [34, 36, 39], "1_000_000": [34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 65, 328, 331], "alloc": [34, 36, 39, 58, 189, 190, 328], "setattr": [34, 36, 39], "tent": [34, 36, 39, 45], "to_tensordict": [34, 36, 39, 331], "unbind": [34, 36, 39, 180, 184], "alpha": [35, 41, 60, 165, 166, 191, 238, 244, 253, 255, 257, 328, 337, 339], "ep": [35, 41, 60, 153, 223, 239, 258, 301, 328, 329, 331], "1e": [35, 41, 60, 153, 173, 176, 195, 206, 328, 329, 330, 334], "08": [35, 41, 60, 328, 329, 330, 331, 334, 335], "collate_fn": [35, 38, 41, 42, 52, 53, 54, 55, 337, 339], "prefetch": [35, 38, 41, 42, 52, 53, 54, 55, 56, 328, 329, 331, 337], "schaul": [35, 60], "quan": [35, 60], "antonogl": [35, 60], "silver": [35, 60], "2015": [35, 60], "arxiv": [35, 60, 109, 131, 149, 167, 168, 169, 170, 171, 172, 175, 176, 177, 182, 188, 194, 196, 197, 199, 200, 202, 203, 209, 219, 223, 237, 238, 241, 242, 243, 245, 246, 247, 248, 249, 250, 253, 254, 257, 258, 267, 272, 280, 336], "ab": [35, 60, 131, 149, 153, 167, 172, 176, 177, 182, 188, 194, 196, 197, 199, 200, 202, 203, 209, 237, 238, 241, 242, 243, 246, 247, 248, 249, 250, 253, 254, 257, 336], "1511": [35, 60, 177], "05952": [35, 60], "expon": [35, 41, 60], "\u03b1": [35, 41, 60], "delta": [35, 41, 60, 178, 182, 206, 224, 228, 321, 324], "null": [35, 41, 60, 108], "max_siz": [35, 38, 41, 42, 57, 58, 59, 67, 70], "1_000": [35, 38, 41, 42, 337], "merg": [35, 38, 41, 42, 52, 53, 54, 55, 335], "mini": [35, 38, 41, 42, 52, 53, 54, 55, 334], "decid": [35, 38, 41, 42, 339], "meth": [35, 38, 41, 42, 252, 335], "incompat": [35, 38, 41, 42, 337], "drop_last": [35, 38, 41, 42, 64, 66], "return_info": [35, 38, 41, 42, 52, 53, 54, 55, 337], "tensordictprioritizedreplaybuff": [35, 321, 339], "simplifi": [35, 335, 337], "manual_se": [35, 38, 41, 42, 55, 65, 66, 107, 116, 127, 135, 138, 142, 144, 189, 190, 198, 212, 219, 220, 221, 223, 231, 237, 238, 240, 250, 257, 334, 335, 339, 340], "_weight": [35, 41, 337, 339], "arrai": [35, 40, 118, 178, 179, 182, 183, 328, 337], "update_prior": [35, 60, 300, 325, 329, 337, 339], "36278465": 35, "tempfil": [35, 38, 41, 42, 45, 52, 53, 54, 55, 315, 328, 329, 337], "tqdm": [35, 38, 41, 42, 52, 53, 54, 55, 303, 328, 330, 331, 334, 335], "randomsampl": [35, 38, 41, 42, 52, 53, 54, 55, 321, 328], "td_error": [35, 38, 41, 42, 52, 53, 54, 55, 240, 241, 243, 244, 245, 250, 252, 255, 257, 259, 265, 328, 337, 339], "update_tensordict_prior": [35, 38, 41, 42, 52, 53, 54, 55, 328, 337, 339], "temporarydirectori": [35, 38, 41, 42, 45, 52, 53, 54, 55, 328, 329, 337], "tmpdir": [35, 38, 41, 42, 45, 52, 53, 54, 55, 328, 329], "rb_load": [35, 38, 41, 42, 52, 53, 54, 55], "cursor": [35, 38, 41, 42, 52, 53, 54, 55], "insert_transform": [35, 38, 41, 42, 52, 53, 54, 55], "insert": [35, 38, 41, 42, 52, 53, 54, 55, 62, 68, 69, 71, 148], "prompt_rindex": [36, 37, 40], "label": [36, 37, 40, 45, 328, 337], "os": [36, 45, 56, 329], "cpu_count": [36, 45, 56], "promptdatatldr": 36, "116722": 36, "prompt": [37, 40], "return_tensordict": [37, 43], "recip": [37, 76, 80, 94, 100, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 191, 192, 195, 196, 197, 199, 202, 203, 205, 210, 216, 217, 219, 220, 221, 223, 226, 231, 234], "text": [37, 40, 43, 53, 178, 179, 182, 183, 223, 330], "tensodict": [37, 43], "orign": [37, 43], "valid_sampl": 37, "identifi": 37, "eough": 37, "toknen": 37, "meet": 37, "criterion": 37, "autotoken": [37, 43, 45], "from_pretrain": [37, 40, 43], "gpt2": [37, 40, 43, 45, 167, 172, 199], "pad_token": [37, 43], "eos_token": 37, "enough": [37, 337], "inde": [37, 116, 330, 335], "roundrobinwrit": [38, 42, 52, 53, 54, 55, 321], "Not": 38, "ref_model": 40, "reward_model": [40, 233], "kl_coef": 40, "max_new_token": 40, "score_clip": 40, "kl_schedul": 40, "klcontrollerbas": 40, "num_step": 40, "causal": 40, "sentenc": 40, "frozen": [40, 125], "kl": [40, 125, 247, 251], "penalti": [40, 251], "strai": 40, "far": [40, 181, 207, 208, 335, 340], "calcul": [40, 135, 178, 243], "gpt2rewardmodel": 40, "get_dataload": [40, 321], "promptdata": [40, 321], "gpt2lmheadmodel": 40, "dl": 40, "block_siz": [40, 56], "tensorclass_typ": [40, 56], "openai_summarize_tldr": 40, "config_class": 40, "model_path": 40, "rollout_from_model": 40, "rollout_from_data": 40, "600": [40, 335, 337], "reward_kl": [40, 125], "reward_raw": 40, "sample_log_prob": [40, 213, 214, 215, 224, 228, 230, 254, 312, 330, 334, 339], "create_rollout_td": 40, "log_prob": [40, 173, 189, 190, 198, 208, 228], "log_ratio": 40, "replic": 40, "rindex": 40, "multipli": [40, 178, 182, 238, 239, 244, 251, 253, 254, 255, 257, 301, 328], "term": [40, 125, 182, 183, 193, 194, 236, 237, 244, 305, 329, 330, 334], "subtract": [40, 142], "ve": [40, 328, 331], "eo": 40, "limit": [40, 90, 109, 125, 328, 329, 331, 334, 335], "generation_config": 40, "generationconfig": 40, "ti": [40, 276, 277, 278, 279, 281, 282, 283, 284, 329], "log_probs_gen": 40, "logprobs_of_label": 40, "priority_kei": [41, 42, 241, 244, 245, 250, 252, 255, 257, 259, 265, 337, 339], "reduct": [41, 60], "prioritizedreplaybuff": [41, 321, 339], "min": [41, 60, 206, 207, 208, 217, 223, 238, 239, 244, 253, 255, 257, 329, 330, 334], "median": [41, 60, 224, 228], "include_info": [41, 42, 52, 53, 54, 55], "kw": [42, 62, 69], "int32": [42, 65, 86, 159], "huggingfac": [43, 222], "co": [43, 118, 335], "doc": [43, 329, 334], "pad_trunc": 43, "am": 43, "worri": 43, "me": 43, "reassur": 43, "ok": 43, "tokenizer_fn": 45, "tensordicttoken": [45, 321], "pre_tokenization_hook": 45, "valid_s": 45, "tokenizer_class": 45, "tokenizer_model_nam": 45, "tokein": 45, "condit": [45, 142, 218, 219, 225, 226, 236, 328, 335, 337], "elementwis": 45, "vocabulari": 45, "loader": [45, 330], "185068": 45, "dataset_to_tensordict": 45, "data_dir": 45, "nestedkei": [45, 65, 66, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 119, 121, 123, 124, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 149, 153, 162, 163, 216, 217, 220, 221, 223, 228, 241, 265, 286], "valid_mask_kei": 45, "conver": 45, "undergon": 45, "preprocess": [45, 329], "batch_dimens": 45, "filder": 45, "randint": [45, 145, 337], "data_memmap": 45, "exclus": [48, 49, 65, 66, 121, 178, 180, 182, 184, 189, 190, 218, 219, 225, 226, 258, 259, 267, 268, 269, 270, 271, 319, 323], "recurse_through_entri": 49, "recurse_through_stack": 49, "consolid": 49, "from_env": 52, "use_truncated_as_don": 52, "direct_download": 52, "terminate_on_end": 52, "env_kwarg": [52, 53, 55, 317, 318, 328], "reconstruct": [52, 65, 66, 247, 328, 340], "recov": [52, 53, 55, 65, 66, 216, 221, 223, 229, 250, 333], "regard": [52, 53, 55, 175, 219, 237, 245, 254, 328, 330, 335], "get_dataset": 52, "qlearning_dataset": 52, "fewer": 52, "left": [52, 113, 114, 115, 119, 125, 131, 133, 139, 141, 144, 146, 149, 151, 220, 329, 330], "possess": 52, "unexpectedli": 52, "absent": [52, 76, 80, 94, 100], "traj_split": 52, "dataset_id": [52, 53, 55], "observationnorm": [52, 153, 319, 328, 329, 330, 331, 339], "maze2d": 52, "umaz": 52, "128": [52, 66, 169, 172, 329, 331, 335, 336, 337], "loc": [52, 125, 127, 137, 181, 195, 207, 208, 213, 214, 215, 224, 228, 230, 237, 238, 250, 254, 255, 256, 257, 307, 312, 319, 323, 328, 329, 330, 331, 334, 339], "minari": [53, 55], "available_dataset": [53, 55, 65, 66], "currenrtli": 53, "minari_data": 53, "door": 53, "28": [53, 191, 328, 329, 335, 337], "39": [53, 329, 335, 336], "door_body_po": 53, "qpo": 53, "30": [53, 126, 202, 203, 329, 330, 334, 335], "qvel": 53, "dua": 54, "graff": 54, "2017": 54, "uci": 54, "archiv": 54, "ic": 54, "edu": 54, "ml": 54, "sklearn": 54, "adult_num": [54, 93], "adult_onehot": [54, 93], "mushroom_num": [54, 93], "mushroom_onehot": [54, 93], "covertyp": [54, 93], "shuttl": [54, 93], "magic": [54, 93], "roboset": 55, "h5": 55, "mmap": 55, "googl": [55, 72, 73, 330, 331, 334], "roboh": [55, 97], "excludetransform": [55, 139, 337], "fk1": 55, "v4": [55, 276, 277, 278, 279, 281, 282, 283, 284, 328, 330, 336], "expert": 55, "fk1_microopenrandom_v2d": 55, "concis": 55, "17": [55, 66, 312, 327, 328, 329, 330, 331, 334, 335, 336, 338], "18": [55, 66, 98, 99, 101, 102, 192, 329, 334, 335, 340], "15": [55, 66, 76, 80, 94, 100, 217, 223, 246, 327, 328, 329, 330, 331, 334, 335, 337, 338], "19": [55, 65, 66, 68, 327, 328, 329, 330, 331, 335, 336, 338], "75": [55, 328, 329, 335, 336, 337], "infinit": [56, 337], "three": [56, 323, 325, 330, 334, 335, 337, 340], "block": [56, 323, 331], "pairwisedataset": [56, 321], "256": [56, 172, 329, 330, 334, 335], "scratch_dir": [57, 328, 337], "mistak": [57, 58, 70], "myclass": [57, 58, 70], "foo": [57, 58, 70, 217, 337, 340], "bar": [57, 58, 70, 217, 296, 297, 299, 303, 325, 329], "attach": [57, 58, 59, 67, 70, 329], "entiti": [57, 58, 59, 67, 70], "auto": [58, 70, 152, 223, 238, 244, 253, 255, 257, 259, 324, 334], "zero_": [58, 70, 159], "max_capac": [60, 328, 337], "uniformli": [61, 252, 340], "roundrobin": [62, 69], "piec": [62, 69, 71, 328, 329, 330, 334, 335, 337], "consum": [64, 66, 329, 330, 334, 337], "incomplet": [64, 66], "fresh": 64, "caution": [64, 155, 340], "shuffl": [64, 334], "haven": [64, 336], "remain": [64, 115, 116, 125, 142, 194], "draw": [64, 220], "num_slic": [65, 66], "slice_len": [65, 66], "end_kei": [65, 66], "traj_kei": [65, 66], "cache_valu": 65, "truncated_kei": [65, 66, 135, 141], "strict_length": [65, 66], "slicesamplerwithoutreplac": [65, 321], "Will": [65, 286], "shorter": [65, 66], "Be": [65, 66], "320": [65, 66, 329, 335, 340], "700": [65, 66], "robosetexperiencereplai": [65, 66, 321], "dataid": [65, 66], "22": [65, 66, 152, 329, 331, 334, 335], "__len__": 67, "rank_kei": 68, "rank": [68, 164], "samplerwithoutreplac": [68, 321, 330, 334, 337], "get_insert_index": 68, "ant": [72, 73, 83, 336], "get_environ": 73, "87": [73, 329, 335, 336], "acrobot": [73, 340], "fetch": [73, 125, 336, 337], "task_nam": 74, "cheetah": [74, 75, 328], "frame_skip": [74, 75, 79, 80, 85, 87, 88, 122, 296, 299, 306, 325, 328, 329, 330, 339], "dm_control": [75, 328, 333, 340], "continuousbox": [76, 80, 94, 100, 159, 330, 334, 335, 339, 340], "unboundedcontinuoustensorspec": [76, 80, 90, 94, 100, 107, 114, 117, 143, 159, 164, 188, 212, 227, 230, 232, 256, 321, 330, 331, 334, 335, 340], "sort": [76, 80, 94, 100, 223], "depth": [76, 80, 90, 94, 100, 164, 165, 166, 168, 169, 170, 171, 176, 177, 186, 188, 191, 192, 196, 197, 218, 323, 329, 333, 334], "another_act": [76, 80, 94, 100], "mutabl": [76, 80, 94, 100], "batch_lock": [76, 78, 80, 94, 100, 143, 147, 335], "immut": [76, 80, 94, 100, 133, 147], "done_keys_group": [76, 80, 94, 100], "outer": [76, 80, 94, 100, 325, 328, 329, 340], "another_don": [76, 80, 94, 100], "empty_cach": [76, 80, 94, 100, 147], "fake_tensordict": [76, 80, 94, 100, 329], "fake": [76, 80, 94, 100, 328, 329], "afterward": [76, 80, 94, 100, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 191, 192, 195, 196, 197, 199, 202, 203, 205, 210, 216, 217, 219, 220, 221, 223, 226, 231, 234, 340], "silent": [76, 80, 94, 100, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 191, 192, 195, 196, 197, 199, 202, 203, 205, 210, 216, 217, 219, 220, 221, 223, 226, 231, 234], "braxenv": [76, 80, 94, 100, 133, 321], "envnam": [76, 80, 94, 100], "renametransform": [76, 80, 94, 100], "pipeline_st": [76, 80, 94, 100], "attibut": [76, 80, 94, 100], "speak": [76, 80, 94, 100, 328], "rand_act": [76, 80, 89, 94, 95, 96, 100], "_step": [76, 80, 94, 100, 107, 114, 117, 121, 133], "reset_kei": [76, 80, 94, 100, 109, 138, 142, 143, 144], "multitask": [76, 80, 94, 100], "multiag": [76, 80, 89, 94, 95, 96, 100, 163, 192, 200, 209, 265], "another_reward": [76, 80, 94, 100], "callback": [76, 80, 94, 100, 334], "auto_reset": [76, 80, 94, 100, 335], "auto_cast_to_devic": [76, 80, 94, 100, 334], "break_when_any_don": [76, 80, 94, 100, 334], "return_contigu": [76, 80, 94, 100, 155, 333], "soon": [76, 80, 94, 95, 96, 100], "ndim": [76, 80, 94, 100], "concomitt": [76, 80, 94, 100], "workspac": [76, 80, 94, 100], "prevail": [76, 80, 94, 100, 138, 163], "cartpol": [76, 80, 94, 100, 109, 138, 142, 329, 331, 337, 340], "creator": [77, 308, 309, 317, 318, 319], "substitut": [77, 142, 153], "vecnorm": [77, 319], "env_creat": [77, 328], "test_env1": 77, "observation_count": [77, 340], "test_env2": 77, "sleep": [77, 340], "ps": 77, "p1": 77, "p2": 77, "9934": 77, "env_str": 78, "info_dict_read": 80, "set_info_dict_read": 80, "put": [80, 102, 153, 319, 323, 329, 330, 331, 335], "read_act": 80, "read_don": 80, "reader": [80, 329], "interrupt": [80, 273], "nonsens": 80, "fallback": 80, "broken": [80, 155], "read_ob": 80, "dictat": [80, 224, 228, 254, 328, 335], "read_reward": 80, "baseinfodictread": 80, "info_dict": 80, "hoc": 80, "dict_read": 80, "default_info_dict_read": 80, "my_info_kei": 80, "some_env": 80, "placehold": [82, 118, 147], "secur": 82, "isaacgym": [83, 84], "isaacgymwrapp": [83, 321], "isaacgymenv": [84, 321], "webpag": 84, "isaac": 84, "essenc": 84, "04": [84, 328, 329, 330, 331, 335, 336], "snake": [85, 86], "6x6": [85, 86], "td1": [86, 237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 265, 328], "12x12": 86, "tsp50": 86, "tsp100": 86, "mo": [87, 88], "minecart": [87, 88], "mo_gym": 88, "qualnam": 89, "marl": [89, 103, 109, 144, 191, 334], "leverag": [89, 95, 96, 328, 334, 340], "neural": [89, 95, 96, 165, 166, 204, 227, 323, 329, 330, 331, 334, 335, 340], "group_map": [89, 95, 96, 102, 103], "constructiuon": [89, 95, 96], "premad": [89, 95, 96, 102, 265], "all_in_one_group": [89, 103], "agent_0": [89, 95, 96, 103], "agent_1": [89, 95, 96, 103], "agent_2": [89, 95, 96, 103], "agent_3": 89, "int8": [89, 95, 96], "one_group_per_ag": [89, 95, 96], "environn": 90, "constraint": [90, 330, 334], "mymbenv": [90, 164, 188], "world_model": [90, 164, 188, 247], "super": [90, 107, 114, 117, 164, 175, 188, 232, 238, 240, 244, 250, 255, 257, 259, 328, 335, 339], "hidden_observ": [90, 164, 188], "mlp": [90, 164, 165, 166, 168, 169, 170, 171, 180, 184, 185, 188, 192, 213, 218, 241, 243, 312, 323, 329, 333, 336, 339], "worldmodelwrapp": [90, 164, 188], "activation_class": [90, 164, 165, 166, 168, 169, 170, 171, 176, 177, 186, 188, 191, 192, 329, 334, 339], "relu": [90, 164, 172, 188, 195, 236], "activate_last_lay": [90, 164, 171, 186, 188], "run_type_check": 90, "less": [91, 210, 317, 318, 324, 330, 331, 337, 339], "readthedoc": 91, "en": 91, "python_interfac": 91, "task_id": 91, "106": [93, 335], "my_env_fun": [94, 100], "custom_attribute_list": [94, 100], "custom_attribut": [94, 100], "custom_method_list": [94, 100], "custom_method": [94, 100], "deploi": [94, 100], "slight": [94, 100, 329], "share_individual_td": [94, 100], "shared_memori": [94, 100], "policy_proof": [94, 100], "ll": [94, 100, 178, 179, 182, 183, 328, 329, 330, 331, 334, 340], "hidden": [94, 100, 176, 178, 179, 180, 182, 183, 184, 185, 196, 197, 202, 203, 213, 214, 215, 217, 227, 230, 239, 251, 254, 323, 331, 333, 339], "introduc": [94, 100, 178, 180, 182, 184, 223, 328], "drastic": [94, 337], "influenc": 94, "rule": [94, 114, 117, 228, 323, 330], "thumb": [94, 330], "suppos": [94, 299, 325, 340], "scenario": [94, 101, 102, 328, 334, 335], "myenv": [94, 114, 117], "update_kwarg": [94, 100], "pettingzoo": [95, 96], "pet": [95, 96], "zoo": [95, 96], "guid": [95, 96, 98, 99, 142, 322, 328, 334], "__": [95, 96], "aecenv": [95, 96], "use_mask": [95, 96], "dead": [95, 96], "compulsori": [95, 96], "adversary_0": [95, 96], "adversari": [95, 96], "marlgroupmaptyp": [95, 96, 102, 103, 321], "vectoris": [95, 96, 178, 179, 182, 183], "multiwalker_v9": 95, "return_st": [95, 96], "categorical_act": [95, 96, 98, 99, 102], "n_piston": [95, 96], "pistonball_v6": [95, 96], "piston": [95, 96], "piston_0": [95, 96], "piston_1": [95, 96], "piston_20": [95, 96], "aec": [95, 96], "tictactoe_v3": [95, 96], "player": [95, 96], "player_1": [95, 96], "player_2": [95, 96], "butterfli": 96, "parallel_env": [96, 328, 339, 340], "vikashplu": 97, "read_info": 97, "pars": [97, 337], "smacv2": [98, 99], "starcraft": [98, 99], "challeng": [98, 99, 335, 336], "v2": [98, 99, 262, 276, 277, 278, 279, 281, 282, 283, 284, 312, 331], "10gen_terran": [98, 99], "10gen_zerg": [98, 99], "10gen_protoss": [98, 99], "3m": [98, 99, 336], "8m": [98, 99, 336], "25m": [98, 99], "5m_vs_6m": [98, 99], "8m_vs_9m": [98, 99], "10m_vs_11m": [98, 99], "27m_vs_30m": [98, 99], "mmm": [98, 99], "mmm2": [98, 99], "2s3z": [98, 99], "3s5z": [98, 99], "3s5z_vs_3s6z": [98, 99], "3s_vs_3z": [98, 99], "3s_vs_4z": [98, 99], "3s_vs_5z": [98, 99], "1c3s5z": [98, 99], "2m_vs_1z": [98, 99], "corridor": [98, 99], "6h_vs_8z": [98, 99], "2s_vs_1sc": [98, 99], "so_many_banel": [98, 99], "bane_vs_ban": [98, 99], "2c_vs_64zg": [98, 99], "old": [98, 99, 251, 340], "smac": [98, 99], "map_nam": [98, 99], "176": [98, 99, 335], "battle_won": [98, 99], "dead_al": [98, 99], "dead_enemi": [98, 99], "episode_limit": [98, 99], "322": [98, 99, 335], "Or": [98, 99, 191], "procedur": [98, 99], "distribution_config": [98, 99], "n_unit": [98, 99], "n_enemi": [98, 99], "team_gen": [98, 99], "dist_typ": [98, 99], "weighted_team": [98, 99], "unit_typ": [98, 99], "marin": [98, 99], "maraud": [98, 99], "medivac": [98, 99], "exception_unit_typ": [98, 99], "start_posit": [98, 99], "surrounded_and_reflect": [98, 99], "map_x": [98, 99], "map_i": [98, 99], "capability_config": [98, 99], "88": [98, 99, 328, 329, 335], "131": [98, 99, 335], "starcraft2env": 99, "flock": [101, 102], "continuous_act": [101, 102, 334], "agent_collision_rew": [101, 102], "agent_distance_rew": [101, 102], "agent_nam": [102, 103], "agent_names_to_indices_map": 102, "unbatched_action_spec": [102, 334], "unbatched_observation_spec": 102, "unbatched_reward_spec": 102, "het_spec": 102, "het_specs_map": 102, "ca": 103, "environment4": 103, "get_group_map": 103, "sumbodul": 104, "model_bas": [105, 164, 188], "adapt": [107, 251, 328, 335], "masker": 107, "binarydiscretetensorspec": [107, 241, 244, 265, 321], "maskedenv": 107, "ones_lik": 107, "scatter": 107, "unsqueez": [107, 109, 110, 145, 148, 185, 328, 331, 334, 335], "_set_se": [107, 114, 117, 335], "transform_reward_spec": [108, 112, 113, 114, 115, 119, 125, 133, 136, 137, 139, 141, 146, 148], "padding_valu": [109, 189, 190], "as_invers": 109, "account": [109, 189, 190, 323, 329, 331, 337, 340], "movement": 109, "veloc": [109, 334, 335, 340], "propos": [109, 118, 187, 249, 258, 312, 323, 331, 337], "pdf": [109, 167, 168, 169, 170, 171, 175, 199, 219, 223, 245, 255, 258, 267, 272, 280, 312], "1312": [109, 329], "5602": 109, "constant": [109, 127, 142, 325, 328, 330, 331, 340], "unsqueezetransform": [109, 335, 337], "consumpt": 109, "followin": 109, "pictur": 109, "pixels_trsf": [109, 337], "grayscal": [109, 329, 331, 337, 340], "data_exclud": [109, 337], "transform_observation_spec": [109, 110, 111, 112, 113, 114, 115, 118, 119, 121, 123, 124, 125, 127, 129, 133, 134, 138, 139, 141, 142, 143, 144, 145, 146, 148, 149, 152, 335], "del_kei": [110, 149, 333, 335], "unsqueeze_if_oor": 110, "observation_posit": 110, "observation_veloc": 110, "delet": 110, "key1": [110, 294, 302], "key2": [110, 294, 302], "crop": [111, 132, 286], "center": [111, 286], "width": [111, 134], "height": [111, 134], "squar": [111, 181, 207, 208, 286], "out_keys_inv": [112, 114, 117, 127, 128, 129, 133, 146, 335], "scalar": [112, 136, 169, 171, 193, 194, 216, 220, 221, 223, 234, 237, 238, 239, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 265, 267, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 323, 329, 335], "permit": [112, 121, 148], "rewardsc": [113, 147, 328, 329, 331], "rewardclip": 113, "transformed_env": [113, 146, 147], "transform_env_devic": [113, 115, 146], "transform_input_spec": [113, 114, 115, 116, 127, 129, 133, 138, 141, 142, 143, 146, 148, 150], "transform_output_spec": [113, 114, 115, 119, 125, 133, 139, 141, 146], "untouch": [113, 114, 115, 119, 125, 133, 139, 141, 146], "transformfull_done_spec": [113, 114, 115, 119, 125, 133, 139, 141, 146], "dtype_in": 114, "dtype_out": 114, "scan": [114, 117, 229, 230], "resp": [114, 117], "not_transform": [114, 117], "constructedw": [114, 117], "orig_devic": 115, "unspecifi": 115, "transform_done_spec": [115, 146], "num_actions_effect": 116, "max_act": 116, "include_forward": 116, "dimension": [116, 180, 184, 267, 272, 280, 334], "num_act": [116, 244], "action_out": 116, "_call": [116, 121, 335], "eol_kei": 118, "life": 118, "lives_kei": 118, "eol_attribut": 118, "unwrap": 118, "al": [118, 129, 164, 340], "breakout": 118, "v5": [118, 129, 340], "210": [118, 129, 335, 340], "160": [118, 129, 329, 335, 340], "eol_transform": 118, "eol": 118, "dqnloss": [118, 237, 238, 240, 243, 244, 245, 246, 249, 250, 252, 254, 255, 256, 257, 258, 259, 260, 265, 310, 321, 324, 329, 331], "action_spac": [118, 175, 201, 218, 219, 225, 226, 237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 265, 331], "register_kei": 118, "loss_or_advantag": 118, "lossmodul": [118, 303, 314, 315, 321], "valueestimatorbas": [118, 252, 321], "excluded_kei": 119, "finit": [120, 337], "first_dim": 121, "last_dim": 121, "allow_positive_dim": [121, 148], "th": [121, 148, 178, 182, 335], "frameskip": 121, "repeatedli": [122, 330, 334], "init_kei": 124, "is_init": [124, 180, 184, 223, 331], "tracker": 124, "coef": 125, "pi_curr": 125, "pi_0": 125, "overfit": 125, "fine": [125, 336], "probabilist": [125, 224, 321, 330, 339], "get_dist": [125, 228, 229], "mod": [125, 180, 184, 231, 331], "normalparamextractor": [125, 323, 330, 334], "probabilisticactor": [125, 213, 214, 215, 217, 237, 238, 242, 244, 250, 253, 254, 255, 256, 257, 259, 323, 328, 330, 334], "tanhnorm": [125, 213, 214, 215, 224, 230, 237, 238, 250, 254, 255, 256, 257, 259, 321, 330, 334, 339], "n_ob": [125, 237, 238, 240, 241, 243, 244, 250, 254, 255, 256, 257, 259], "n_act": [125, 237, 238, 240, 241, 243, 244, 250, 254, 255, 256, 257, 259], "return_log_prob": [125, 213, 214, 215, 224, 228, 230, 256, 323, 330, 334, 339], "apply_": 125, "copy_": [125, 328], "formulat": 125, "diverg": [125, 180, 184, 224, 228, 247, 251], "noop": [126, 339], "trial": 126, "op": [126, 152, 216, 220, 221, 305], "randomli": [126, 127, 143, 220, 224, 228, 334, 335, 337], "standard_norm": [127, 137, 328, 329, 331], "affin": [127, 137], "layer": [127, 153, 165, 166, 168, 169, 176, 178, 179, 180, 182, 183, 184, 186, 191, 192, 193, 194, 196, 197, 204, 205, 211, 222, 231, 323, 329, 330, 331, 336], "normal": [127, 153, 165, 166, 181, 186, 189, 190, 195, 207, 208, 216, 224, 228, 239, 251, 254, 299, 301, 319, 323, 325, 331, 334, 340], "set_default_tensor_typ": 127, "doubletensor": 127, "isclos": 127, "next_ob": [127, 267, 268, 269, 270, 339], "rubric": [127, 230], "init_stat": [127, 328, 329, 330, 331], "3752e": 127, "01": [127, 223, 234, 239, 251, 254, 327, 328, 329, 331, 334, 335, 336, 338], "5087e": 127, "03": [127, 327, 328, 329, 335, 336, 338], "9294e": 127, "9636": 127, "5608": 127, "6408": 127, "num_it": [127, 329, 330], "reduce_dim": [127, 328, 329, 330, 331], "cat_dim": [127, 328, 329, 330, 331], "keep_dim": [127, 329, 331], "statist": [127, 153, 256, 319, 328, 329, 330, 340], "approach": [127, 328, 330, 340], "gaussian": [127, 143, 164, 188, 193, 194, 199, 216, 330], "empir": [127, 164, 188, 224, 228, 328, 330, 334], "3d": [127, 165], "third": [127, 219, 334], "reorder": 129, "in_keys_in": 129, "pong": [129, 340], "channel": [129, 191, 196, 197, 329], "r3m": [131, 336], "resnet": [131, 149, 151], "visual": [131, 149, 151, 330, 335], "embed": [131, 149, 150, 151, 200, 212, 213, 214, 215, 227, 232, 336], "ego4d": [131, 149, 151], "univers": [131, 149, 151], "suraj": [131, 149], "nair": [131, 149], "aravind": [131, 149], "rajeswaran": [131, 149], "vikash": [131, 149, 151], "kumar": [131, 149, 151], "chelsea": [131, 149], "finn": [131, 149], "abhinav": [131, 149], "gupta": [131, 149], "2203": [131, 149, 188, 336], "12601": [131, 149, 336], "_init": [131, 149, 328], "snippet": [131, 149, 328], "resnet50": [131, 151, 336], "model_nam": [131, 149, 151, 289], "resnet34": 131, "resnet18": 131, "r3m_vec": [131, 336], "feed": [131, 151, 252, 323, 328, 334, 337], "244": [131, 151, 335], "stack_imag": [131, 151], "tread": [131, 151], "separet": [131, 151], "hub": [131, 151, 336], "resnet50_weight": [131, 151], "imagenet1k_v1": [131, 151], "download_path": [131, 151], "tensor_pixels_kei": [131, 151], "dest": [131, 149, 151, 227], "sub_seq_len": 132, "sample_dim": [132, 328], "primarili": 132, "hesit": 132, "request": 132, "robust": 132, "mix": [132, 200, 209, 265, 328, 334], "improp": 132, "create_copi": 133, "stuff": 133, "newnam": 133, "interpol": [134, 329, 331], "bilinear": [134, 331], "r2g": 135, "99": [135, 153, 188, 248, 261, 266, 273, 315, 328, 329, 330, 335, 339], "reward_to_go": 135, "bernoulli_": 135, "9010": 135, "9404": [135, 273], "9701": [135, 273], "9900": [135, 273], "0000": [135, 144, 220, 221, 231, 273, 330, 331, 335, 339], "crash": 135, "clamp_min": 136, "clamp_max": 136, "clip_min": 136, "clip_max": 136, "episode_": 138, "reward1": 138, "reward2": 138, "episode_reward": [138, 334], "keep_reward": 139, "keep_don": 139, "squeeze_dim": 140, "step_count_kei": 141, "update_don": 141, "adaptec": 141, "accordingli": [141, 142, 182, 225, 331], "completet": 141, "recognis": 141, "accompani": 141, "target_return": 142, "chosen": [142, 143, 200, 201, 209, 226, 312, 323], "primer": [143, 331], "default_valu": [143, 331], "unit": [143, 164, 176, 178, 179, 196, 197, 202, 203, 330], "transfomedenv": 143, "mykei": 143, "__unless": 143, "exists__": 143, "pool": 144, "increas": [144, 223, 334], "10th": 144, "0216": 144, "1149": 144, "1990": 144, "2749": 144, "3281": 144, "9290": 144, "3702": 144, "8978": 144, "from_int": 145, "255": [145, 335, 337], "ri": 145, "principl": 146, "cattransform": 146, "notabl": 146, "rewardsum": [146, 334], "cache_spec": 147, "set_missing_toler": 147, "keyerror": 147, "unsqueeze_dim": [148, 335], "danger": 148, "vc1": 149, "vc1_vec": 149, "small": [149, 328, 330, 334, 340], "untrain": 149, "make_noload_model": 149, "naiv": 149, "vip": [150, 151, 336], "toward": 151, "implicit": [151, 250, 337], "jason": 151, "ma": 151, "shagun": 151, "sodhani": 151, "dinesh": 151, "jayaraman": 151, "osbert": 151, "bastani": 151, "ami": 151, "zhang": 151, "vip_vec": 151, "final_nam": 152, "sb3": 152, "terminal_obs_read": 152, "truli": [152, 339], "till": 152, "did": [152, 273, 329, 330, 337, 340], "nan": 152, "shared_td": 153, "decai": [153, 216, 220, 221, 258, 301, 328, 329, 331, 340], "9999": [153, 335], "0001": [153, 176, 195, 330, 335], "fly": [153, 251, 324, 330, 335, 337, 340], "to_observation_norm": 153, "underflow": [153, 301], "build_td_for_shared_vecnorm": 153, "memmori": 153, "queue": [153, 337], "td_share": 153, "v": [153, 178, 179, 182, 183, 213, 250, 257, 323, 328, 329], "state_dim": [154, 167, 172, 199, 202, 203, 217], "action_dim": [154, 167, 168, 170, 172, 199, 217, 328, 333], "gsde": [154, 255, 319], "func": 154, "gsdemodul": 154, "check_dtyp": 155, "short": [155, 182, 183, 329, 330, 334], "discrep": [155, 237, 239, 240, 241, 251, 254, 256, 265], "imposs": 155, "probabilistictdmodul": [160, 161, 186, 224, 228, 266, 299], "next_tensordict": 162, "keep_oth": [162, 335], "exclude_reward": 162, "exclude_don": 162, "exclude_act": 162, "next_": 162, "funtion": 162, "write_full_fals": 163, "leav": [163, 328], "_terminated_or_trunc": 163, "entropi": [164, 237, 238, 239, 244, 250, 251, 253, 254, 255, 257, 259, 334], "botev": 164, "et": 164, "2013": 164, "cem": 164, "plan": [164, 187, 188], "varianc": [164, 181, 195, 207, 208, 324, 328, 330, 334], "k": [164, 178, 179, 182, 183], "repeat": [164, 330, 334, 335], "maximis": [164, 168, 170, 188, 323, 328, 329, 330, 334], "horizon": [164, 188, 330], "modelbasedenv": [164, 188], "planning_horizon": [164, 188], "optim_step": [164, 188, 329], "mpc": [164, 187, 188], "num_candid": [164, 188], "candid": [164, 188], "top_k": [164, 188], "modelbasedenvbas": [164, 187, 188, 321], "safemodul": [164, 187, 213, 215, 228, 237, 238, 244, 250, 254, 255, 256, 257, 259, 308, 309, 315, 321, 339], "num_cel": [165, 166, 168, 169, 170, 171, 176, 177, 180, 184, 186, 191, 192, 213, 329, 330, 331, 334, 339], "elu": [165, 166, 168, 169, 170, 171, 176, 177, 191, 329, 339], "activation_kwarg": [165, 166, 186], "norm_class": [165, 166, 168, 169, 186], "norm_kwarg": [165, 166, 186], "bias_last_lay": [165, 166, 168, 169, 170, 171, 177, 186], "aggregator_class": [165, 166, 168, 169, 329, 331, 339], "squashdim": [165, 166, 168, 191, 339], "aggregator_kwarg": [165, 166, 168, 169, 329, 331], "squeeze_output": [165, 166, 168, 169, 329, 331], "convolut": [165, 166, 168, 169, 191, 204], "produc": [165, 166, 186, 192, 198, 213, 215, 217, 286, 330, 331, 337, 340], "cell": [165, 166, 178, 179, 180, 182, 183, 184, 186, 191, 192, 330], "kernel": [165, 166, 177, 185, 191], "cnet": [165, 166], "conv3d": 165, "34": [165, 166, 186, 328, 329, 331, 335, 336], "35": [165, 166, 186, 328, 329, 330, 331, 335, 336], "rectangular": [165, 166], "transformer_config": [167, 199, 217], "decisiontransform": [167, 199], "dtconfig": [167, 172, 199], "2202": [167, 172, 199, 253], "05607": [167, 172, 199, 253], "return_to_go": [167, 172, 199, 217], "conv_net_kwarg": [168, 169], "mlp_net_kwarg": [168, 169, 170], "use_avg_pool": [168, 169], "WITH": [168, 169, 170, 171, 223, 258], "1509": [168, 169, 170, 171, 188, 223, 241, 249, 258, 335], "02971": [168, 169, 170, 171, 223, 258], "convnet": [168, 191, 331, 339], "ndims_in": 168, "avgpool": [168, 169], "adaptiveavgpool2d": [169, 329, 331], "400": [170, 171, 334, 335, 337], "mlp_net_kwargs_net1": 171, "mlp_net_kwargs_net2": 171, "decion": 172, "desdescrib": 172, "n_embd": 172, "n_layer": [172, 178, 182], "n_head": 172, "n_inner": 172, "n_posit": 172, "resid_pdrop": 172, "attn_pdrop": 172, "gpt2config": 172, "atol": [173, 206], "06": [173, 206, 328, 329, 330, 335, 336], "rtol": [173, 206], "batch_shap": [173, 206], "event_shap": [173, 206], "absolut": [173, 206, 328], "densiti": [173, 189, 190, 198, 208], "mass": [173, 189, 190, 198, 208, 335], "rsampl": [173, 190, 198, 228], "sample_shap": [173, 189, 190, 198], "dqnet": 174, "atom": 174, "softmax": [174, 190, 198, 218, 219], "var_num": [175, 201, 218, 219, 226], "action_value_kei": [175, 201, 218, 219, 225, 226, 252, 265], "action_mask_kei": [175, 201, 218, 219, 220, 221, 225, 226], "perspect": [175, 219, 245, 330], "1707": [175, 219, 245, 254], "06887": [175, 219, 245], "mult": [175, 192, 201, 218, 219, 225, 226], "tensordict_modul": [175, 178, 179, 182, 183, 201, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 237, 238, 240, 244, 250, 254, 255, 256, 257, 259, 323], "nbin": [175, 218, 323], "customdistributionalqv": 175, "log_softmax": [175, 218], "from_modul": [175, 224, 227, 230, 232], "one_hot": [175, 190, 201], "qvalue_actor": [175, 201, 218, 225, 323], "to_modul": [175, 224, 227, 230, 232], "std_bia": 176, "std_min_val": 176, "belief": [176, 196, 202, 203], "1912": [176, 246, 247, 248], "01603": [176, 246, 247, 248], "softplu": [176, 195, 234, 235, 236], "out_features_valu": 177, "cnn_kwarg": [177, 329], "mlp_kwarg": [177, 185, 329], "duel": 177, "cnn": [177, 191, 329, 339], "06581": 177, "512": [177, 329, 335, 337], "input_s": [178, 179, 180, 182, 183, 184, 185, 331], "hidden_s": [178, 179, 180, 182, 183, 184, 185, 331], "num_lay": [178, 180, 182, 184, 196, 197], "batch_first": [178, 180, 182, 184, 331], "bidirect": [178, 182, 331], "cudnn": [178, 179, 182, 183, 331], "vmap": [178, 179, 182, 183, 210, 227, 230, 339], "rnn": [178, 179, 182, 183, 331], "device_count": [178, 179, 182, 183, 328, 329, 331, 336, 340], "els": [178, 179, 182, 183, 196, 323, 325, 328, 329, 330, 331, 334, 335, 336], "n_in": [178, 179, 182, 183], "n_out": [178, 179, 182, 183], "h0": [178, 179, 182, 183], "h1": [178, 179, 182, 183], "call_gru": [178, 179], "h_out": [178, 179, 182, 183], "batched_cal": [178, 179, 182, 183], "gate": [178, 179, 182], "r_t": 178, "sigma": [178, 179, 181, 182, 183, 199, 207, 208, 216, 223, 330], "w_": [178, 179, 182, 183], "ir": [178, 179], "x_t": [178, 182], "b_": [178, 179, 182, 183], "hr": [178, 179, 182], "h_": [178, 179, 182], "z_t": 178, "iz": [178, 179], "hz": [178, 179], "n_t": 178, "odot": [178, 179, 182, 183], "hn": [178, 179, 182], "h_t": [178, 182], "sigmoid": [178, 179, 182, 183], "hadamard": [178, 179, 182, 183], "multilay": [178, 182], "_t": [178, 182, 334, 335], "ge": [178, 182], "bernoulli": [178, 182], "b_ih": [178, 179, 182, 183, 184], "b_hh": [178, 179, 182, 183, 184], "seq": [178, 180, 182, 184, 331, 333], "h_0": [178, 182, 183], "unbatch": [178, 182], "pack": [178, 182, 330, 340], "pack_padded_sequ": [178, 182], "pack_sequ": [178, 182], "num": [178, 182], "_layer": [178, 182], "_size": [178, 179, 182, 183], "h_n": [178, 182], "packedsequ": [178, 182], "weight_ih_l": [178, 182], "learnabl": [178, 179, 182, 183], "w_ir": 178, "w_iz": 178, "w_in": 178, "num_direct": [178, 182], "weight_hh_l": [178, 182], "w_hr": 178, "w_hz": 178, "w_hn": 178, "bias_ih_l": [178, 182], "b_ir": 178, "b_iz": 178, "b_in": 178, "bias_hh_l": [178, 182], "b_hr": 178, "b_hz": 178, "b_hn": 178, "bias": [178, 179, 182, 183, 234, 324, 328], "mathcal": [178, 179, 182, 183], "sqrt": [178, 179, 182, 183, 223], "frac": [178, 179, 182, 183, 330], "seq_len": [178, 182], "subtli": 178, "matrix": [178, 182, 193, 194], "contrast": [178, 249, 337], "hx": [178, 179, 182, 183], "gru": [179, 180], "lstmcell": [179, 184], "gru_cel": 179, "z": 179, "weight_ih": [179, 183], "weight_hh": [179, 183], "bias_ih": [179, 183], "bias_hh": [179, 183], "rocm": [179, 183], "embedd": [180, 184, 185], "grucel": [180, 227], "proj_siz": [180, 182], "python_bas": [180, 184], "recurrent_st": [180, 331], "custom_kei": [180, 184], "recurrent_mod": [180, 184], "set_recurrent_mod": [180, 184, 331], "gru_modul": 180, "rs": [180, 328], "gru_module_train": 180, "policy_train": [180, 184], "traj_td": [180, 184], "policy_infer": [180, 184], "td_inf": [180, 184], "assert_clos": [180, 184], "upscal": [181, 207, 208], "tanh_loc": [181, 207, 208], "event_dim": [181, 206, 207], "ultim": [181, 207, 208], "poor": [181, 207, 208], "explos": [181, 207, 208], "switch": [181, 208], "formula": [181, 207, 208, 237, 239, 251, 254, 324, 330], "c0": [182, 183], "c1": [182, 183], "call_lstm": [182, 183], "c_out": [182, 183], "i_t": 182, "ii": [182, 183], "hi": [182, 183], "f_t": 182, "hf": [182, 183], "g_t": 182, "ig": [182, 183], "hg": [182, 183], "o_t": 182, "ho": [182, 183], "c_t": 182, "c_": 182, "forget": 182, "consequ": 182, "1402": 182, "1128": 182, "c_0": [182, 183], "proj": 182, "c_n": 182, "w_ii": 182, "w_if": 182, "w_ig": 182, "w_io": 182, "w_hi": 182, "w_hf": 182, "w_hg": 182, "w_ho": 182, "b_ii": 182, "b_if": 182, "b_ig": 182, "b_io": 182, "b_hi": 182, "b_hf": 182, "b_hg": 182, "b_ho": 182, "weight_hr_l": 182, "_revers": 182, "analog": 182, "cn": 182, "lstm_cell": 183, "h_1": 183, "c_1": 183, "time_step": [183, 185], "cx": 183, "trust": 184, "correspont": 184, "recurrent_state_h": [184, 331], "recurrent_state_c": [184, 331], "triplet": [184, 225, 226], "lstm_modul": 184, "rs_h": 184, "rs_c": 184, "hidden0": 184, "hidden1": 184, "lstm_kwarg": 185, "next_observ": [185, 237, 238, 240, 241, 243, 244, 250, 254, 255, 256, 257, 259, 333], "2d": [185, 334], "hidden0_in": 185, "hidden1_in": 185, "hidden0_out": 185, "hidden1_out": 185, "single_bias_last_lay": 186, "layer_class": 186, "layer_kwarg": 186, "perceptron": 186, "seamless": 186, "lazylinear": [186, 323, 330, 335, 336, 339], "42": [186, 237, 238, 240, 250, 257, 328, 329, 331, 335, 336], "noisylinear": [186, 193, 321, 329], "noisylazylinear": [186, 321], "At": [187, 220, 329, 330, 331, 333, 335, 336], "mpcplanner": 187, "tensordict_out": [187, 340], "mppi": 188, "covari": 188, "william": [188, 256], "aldrich": 188, "theodor": 188, "01149": 188, "hansen": 188, "wang": 188, "su": 188, "04955": 188, "valueoper": [188, 213, 214, 215, 237, 238, 239, 240, 244, 250, 251, 254, 255, 256, 257, 259, 315, 323, 328, 330], "tdlambdaestim": [188, 321, 328], "value_net": [188, 241, 243, 256, 267, 268, 269, 270, 330], "adv": 188, "lmbda": [188, 261, 267, 270, 272, 278, 279, 280, 283, 284, 324, 328, 330, 334], "95": [188, 261, 329, 330, 331, 335, 337], "value_network": [188, 240, 241, 243, 245, 250, 257, 267, 268, 269, 270, 324, 328, 330], "temperatur": [188, 238, 250], "neg_inf": [189, 190], "inf": [189, 190], "www": [189, 190], "api_doc": [189, 190], "tf_agent": [189, 190], "event": [189, 190, 198, 276, 277, 278, 279, 281, 282, 283, 284, 337], "unnorm": [189, 190, 198], "sparse_mask": [189, 190], "dens": [189, 190], "0831": [189, 190], "1203": [189, 190], "0928": [189, 190], "1972": [189, 190], "grad_method": [190, 198], "reparamgradientstrategi": [190, 198], "passthrough": [190, 198], "proxi": [190, 198, 324], "relaxedonehot": [190, 198], "zeros_lik": [190, 335], "sample_non_valid": 190, "centralis": [191, 192, 334], "share_param": [191, 192, 334], "basi": [191, 337], "homogen": [191, 192, 334], "agent_network": [191, 192], "modulelist": [191, 192, 312, 339], "lazyconv2d": [191, 339], "2592": [191, 329], "decentralis": [191, 334], "n_agent_input": [192, 334], "n_agent_output": [192, 334], "toech": 192, "centalis": 192, "shown": [192, 323, 333, 334, 337], "std_init": [193, 194], "initialize_paramet": 193, "isol": [193, 252], "1706": [194, 209], "10295v3": 194, "induc": 194, "aid": 194, "scale_map": 195, "biased_softplus_1": 195, "scale_lb": [195, 202, 203], "exp": [195, 236], "module_norm": 195, "decod": 196, "1803": [196, 197, 200], "10122": [196, 197], "rnn_hidden": 196, "latent": 197, "excacli": 198, "inres": 199, "mu": [199, 223, 330], "state_shap": [200, 265], "mixing_embed_dim": [200, 265], "qmix": [200, 334], "mixer": [200, 209, 265], "monoton": 200, "hyper": 200, "11485": 200, "qmixerloss": [200, 209], "qmix_vdn": [200, 209], "eventu": [200, 331, 335], "vdn": [200, 209], "greedi": [201, 219, 220, 221, 226, 329, 331], "hidden_dim": [202, 203], "posterior": [202, 247], "rssm": [202, 203, 247], "1811": [202, 203], "04551": [202, 203], "obs_embed": 202, "rnn_hidden_dim": 203, "dream": 203, "tanhtransform": 207, "decomposit": 209, "05296": 209, "hide": [210, 330, 334], "satisfi": [210, 323], "tensordictmodulebas": [210, 218, 225, 331], "vmap_dim": 210, "lam": 210, "sample_in": 210, "sample_in_td": 210, "vm": 210, "translat": [212, 224], "character": [212, 218, 224, 225, 227, 337], "overflow": [212, 218, 219, 224, 225, 226, 227, 228], "td_modul": [212, 213, 214, 215, 224, 227, 228, 230, 232, 339], "3635": 212, "0340": 212, "1476": 212, "3911": [212, 335], "1664": [212, 329, 335], "5455": 212, "2247": 212, "4583": 212, "2916": 212, "2160": 212, "5337": 212, "5193": 212, "grad_fn": [212, 220, 221, 339], "addmmbackward0": 212, "actorvalueoper": [213, 323], "get_policy_oper": [213, 214, 215, 239, 251, 254, 323], "standalon": [213, 214, 215], "tdmodul": [213, 214, 215, 315], "get_critic_oper": 213, "common_oper": [213, 215], "policy_oper": [213, 214, 215], "value_oper": [213, 214, 215], "normalparamwrapp": [213, 214, 215, 224, 230, 237, 238, 244, 250, 254, 255, 256, 257, 259, 321, 339], "module_hidden": [213, 215], "td_module_hidden": [213, 215], "module_act": [213, 215], "td_module_act": [213, 214, 215], "module_valu": [213, 214, 215], "td_module_valu": [213, 214, 215], "state_action_valu": [213, 232, 238, 257, 266, 312, 315, 323, 328, 339], "td_clone": [213, 214, 215], "tensordictmodulewrapp": [213, 308, 309, 315], "get_policy_head": [213, 214, 215], "safesequenti": [213, 214, 215, 265], "head": [213, 215, 239, 251, 254], "get_value_head": [213, 214, 215], "get_value_oper": [213, 214, 215, 239, 251, 254], "action_modul": 214, "state_valu": [214, 215, 232, 239, 251, 254, 255, 257, 267, 268, 269, 270, 272, 274, 276, 278, 280, 281, 283, 323, 328, 330, 334], "qualiti": [215, 323], "actorcriticoper": [215, 239, 251, 254, 323], "embeddig": 215, "refet": 215, "actorcriticwrapp": [215, 323, 328], "po": [216, 221], "sigma_init": 216, "epsilon": [216, 220, 221, 223, 258, 301, 329, 330, 331], "sigma_end": 216, "annealing_num_step": [216, 220, 221, 223, 328, 329, 331], "captur": [216, 220, 221, 223], "omiss": [216, 220, 221, 223], "ommit": [216, 220, 221, 223, 337], "inferec": 217, "set_tensor_kei": 217, "dt_inference_wrapp": 217, "baz": 217, "inference_context": 217, "obs_dim": 217, "tanhdelta": [217, 321, 328], "dtactor": 217, "actor_modul": [217, 339], "dist_class": 217, "dist_kwarg": 217, "distribution_kwarg": [217, 224, 228, 330, 334], "inference_actor": 217, "sequence_length": 217, "mask_context": 217, "out_act": 217, "qvaluemodul": [218, 225, 265, 331], "distributionaldqnnet": 218, "make_log_softmax": 218, "my_action_valu": [219, 226], "chanc": 219, "thid": 219, "threshold": [220, 238, 239, 330], "eps_init": [220, 221, 223, 329, 331], "eps_end": [220, 221, 223, 329], "explorative_polici": [220, 221, 223], "9055": [220, 221, 335], "9277": [220, 221], "6295": [220, 221], "2532": [220, 221], "addbackward0": [220, 221], "lmheadmodel": 222, "extract": [222, 328, 330], "actor_head": [222, 239, 251, 254], "base_model": 222, "lm_head": 222, "ornstein": 223, "uhlenbeck": 223, "ou": [223, 328], "correl": 223, "noise_t": 223, "noise_": 223, "theta": [223, 330, 335], "sigma_t": 223, "sigma_": 223, "anneal": 223, "ou_prev_nois": 223, "ou_step": 223, "x0": 223, "sigma_min": 223, "n_steps_ann": 223, "is_init_kei": 223, "_ou_prev_nois": 223, "_ou_step": 223, "default_interaction_typ": [224, 228], "interaction_typ": [224, 228], "set_interaction_typ": [224, 228], "cache_dist": [224, 228], "n_empirical_estim": [224, 228], "compound": 224, "compositedistribut": 224, "categ": 224, "distribution_map": 224, "chose": 226, "functionalmodul": 227, "functionalmodulewithbuff": 227, "td_fmodul": 227, "td_function": 227, "td_state": 227, "ensembl": [227, 255], "params_repeat": 227, "td_vmap": [227, 230], "random_sampl": [227, 228], "suppli": 228, "fist": 228, "log_prob_kei": [228, 334], "probabilistictensordictsequenti": [229, 237, 239, 251, 254, 256, 308, 309, 339], "partial_toler": [229, 230, 333], "who": [229, 230], "AND": [229, 230], "tensordictsequenci": 230, "tensordictsequ": 230, "safeprobabilisticmodul": [230, 323], "spec1": 230, "net1": 230, "module1": 230, "td_module1": 230, "spec2": 230, "module2": 230, "td_module2": 230, "clamp": [231, 247, 303, 335], "boundari": [231, 330, 334], "resolut": 231, "simplest": [231, 328, 330, 331, 334, 337, 340], "9944": 231, "9991": 231, "3020": 231, "2299": [231, 335], "5418": 231, "2989": 231, "6849": 231, "3169": 231, "2690": 231, "9649": [231, 335], "5686": 231, "8602": 231, "0315": 231, "8455": [231, 335], "6027": 231, "4746": 231, "7843": 231, "7782": 231, "2111": 231, "5115": 231, "4687": 231, "5760": 231, "custommodul": 232, "cat": [232, 238, 240, 250, 255, 257, 259, 339], "imaginari": 233, "imagin": 233, "transition_model": 233, "get_reward_oper": 233, "get_transition_model_oper": 233, "min_val": [234, 236], "_bia": 234, "invert": [235, 330], "surject": 236, "expln": 236, "biased_softplu": [236, 321], "beggin": 236, "biased_softplus_": 236, "syntax": [236, 328], "met": [236, 335], "1602": 237, "01783v2": 237, "entropy_bonu": [237, 239, 251, 254, 330], "favour": [237, 239, 251, 254], "samples_mc_entropi": [237, 239, 251, 253, 254], "mont": [237, 239, 251, 254, 328], "carlo": [237, 239, 251, 254, 328], "entropy_coef": [237, 239, 251, 254, 330, 334], "critic_coef": [237, 239, 251, 254, 330], "loss_critic_typ": [237, 239, 251, 254, 256, 330], "l1": [237, 239, 240, 241, 244, 251, 254, 255, 256, 259, 262, 265, 323, 328], "l2": [237, 239, 240, 241, 242, 243, 244, 247, 248, 251, 254, 255, 256, 259, 262, 265, 328], "smooth_l1": [237, 238, 239, 240, 241, 244, 250, 251, 254, 255, 256, 257, 259, 262, 265, 330], "separate_loss": [237, 239, 240, 244, 250, 251, 254, 255, 256, 257, 259], "propag": [237, 239, 240, 244, 250, 251, 254, 255, 256, 257, 259, 267, 268, 269, 270, 330, 334], "advantage_kei": [237, 239, 251, 254, 256, 267, 268, 269, 270], "value_target_kei": [237, 239, 251, 254, 256, 267, 268, 269, 270, 330], "value_target": [237, 239, 251, 254, 256, 267, 268, 269, 270, 330, 334], "loss_crit": [237, 254, 330, 334], "loss_entropi": [237, 254, 330, 334], "loss_object": [237, 254, 330, 334], "recur": [237, 238, 240, 241, 243, 244, 250, 254, 255, 256, 257, 259, 267, 268, 269, 270, 271], "next_reward": [237, 238, 240, 241, 243, 244, 250, 254, 255, 256, 257, 259, 267, 268, 269, 270], "next_don": [237, 238, 240, 241, 243, 244, 250, 254, 255, 256, 257, 259, 267, 268, 269, 270], "next_termin": [237, 238, 240, 241, 243, 244, 250, 254, 255, 256, 257, 259, 267, 268, 269, 270], "loss_obj": 237, "sacloss": [237, 249, 258, 321], "select_out_kei": [237, 238, 240, 244, 250, 254, 255, 257, 259], "essenti": [237, 238, 239, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 257, 259, 265, 329, 335, 337], "make_value_estim": [237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 260, 265, 324, 328, 329, 334], "value_typ": [237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 261, 265, 328], "valueestim": [237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 261, 265, 321, 324, 328, 334], "hyperparam": [237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 265, 328], "enum": [237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 261, 265, 328], "default_value_estim": [237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 265, 328], "refin": [237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 265], "default_value_kwarg": [237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 265, 321, 328], "dqn_loss": [237, 238, 240, 241, 243, 244, 245, 246, 250, 252, 254, 255, 256, 257, 259, 260, 265], "conserv": [238, 243], "2006": [238, 243, 335], "04779": [238, 243], "actor_network": [238, 240, 242, 244, 250, 253, 255, 257, 259, 328], "qvalue_network": [238, 244, 250, 255, 257, 259], "loss_funct": [238, 240, 241, 242, 243, 244, 250, 255, 257, 259, 262, 265, 328], "alpha_init": [238, 244, 253, 255, 257], "min_alpha": [238, 244, 253, 255, 257], "max_alpha": [238, 244, 253, 255, 257], "fixed_alpha": [238, 244, 253, 255, 257], "target_entropi": [238, 244, 253, 255, 257], "prod": [238, 253, 257], "n_action": [238, 241, 243, 253, 257], "delay_actor": [238, 240, 257, 259], "delay_qvalu": [238, 244, 255, 257, 259], "min_q_weight": 238, "max_q_backup": 238, "backup": 238, "deterministic_backup": 238, "num_random": 238, "with_lagrang": 238, "lagrang": 238, "lagrange_thresh": 238, "valueclass": [238, 240, 244, 250, 255, 257, 259], "qvalu": [238, 244, 250, 255, 257, 259, 312], "loss_actor": [238, 240, 244, 250, 255, 256, 257, 259, 298, 328, 339], "loss_alpha": [238, 244, 255, 257], "loss_alpha_prim": 238, "loss_qvalu": [238, 244, 250, 255, 257, 259], "clip_epsilon": [239, 330, 334], "normalize_advantag": [239, 251, 254, 334], "value_kei": [239, 251, 254, 267, 268, 269, 270, 328], "somemodul": [239, 251, 254], "someactor": [239, 251, 254], "value_head": [239, 251, 254], "somevalu": [239, 251, 254], "loss_modul": [239, 249, 251, 252, 254, 258, 303, 314, 315, 324, 325, 328, 329, 330, 334, 337], "ppoloss": [239, 251, 321], "delay_valu": [240, 241, 243, 245, 256, 257, 265, 329, 331], "loss_valu": [240, 250, 256, 257, 328, 330, 334, 339], "pred_valu": [240, 259, 328, 339], "pred_value_max": [240, 328, 339], "target_valu": [240, 255, 259, 266, 324, 328, 339], "target_value_max": [240, 328, 339], "qvalueactor": [241, 243, 265, 323, 329, 331], "double_dqn": 241, "06461": [241, 249], "mult_one_hot": [241, 244, 265], "loss_val": [241, 243, 324, 328, 330, 331, 334, 337], "2106": 242, "01345": 242, "distanc": [243, 251, 262, 266, 267, 334], "loss_cql": 243, "dcql_loss": 243, "ste": 244, "num_qvalue_net": [244, 250, 255, 257, 259], "target_entropy_weight": 244, "onehotcategor": [244, 321], "disctount": 245, "distributionalqvalueactor": [245, 323], "input_tensordict": [245, 328], "actor_model": 246, "value_model": [246, 248], "model_based_env": 246, "dreamerenv": [246, 321], "imagination_horizon": 246, "unrol": [246, 272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284], "discount_loss": [246, 248], "lambda_kl": 247, "lambda_reco": 247, "lambda_reward": 247, "reco_loss": 247, "reward_loss": 247, "free_nat": 247, "nat": 247, "delayed_clamp": 247, "global_averag": 247, "value_loss": 248, "fake_data": 248, "ddpgloss": [249, 258, 315, 321, 328, 339], "td3loss": [249, 258, 321], "value_network_update_interv": 249, "2110": 250, "06169": 250, "expectil": 250, "tau": [250, 258, 328, 329], "antmaz": 250, "sticht": 250, "loss_value_diff": 250, "diff": 250, "old_polici": 251, "new_polici": 251, "apart": [251, 334], "dtarg": 251, "samples_mc_kl": 251, "analyt": 251, "decrement": 251, "loss_": [252, 298, 324, 328], "equip": [252, 331], "gh": 252, "_acceptedkei": 252, "dataclass": [252, 312], "_forward_value_estimator_kei": 252, "alter": [252, 323], "value_estim": [252, 267, 268, 269, 270, 271, 324, 328, 334], "myloss": 252, "action2": 252, "convert_to_funct": [252, 328], "expand_dim": 252, "create_target_param": [252, 328], "compare_against": [252, 328], "_param": 252, "expans": 252, "resampl": 252, "_target_param": 252, "blend": 252, "upcom": [252, 276, 277, 278, 279, 281, 282, 283, 284, 328], "proxim": [254, 330, 334], "optimis": [254, 299, 330, 334], "flavour": [254, 334, 339], "clipppoloss": [254, 321, 330, 334], "klpenppoloss": [254, 321], "regularis": 254, "06347": 254, "gae": [254, 321, 324, 328, 330, 334], "ppo_loss": 254, "tdlambda": [254, 261, 324, 328], "base_lay": 254, "randn_lik": 254, "samplelogprob": 254, "openreview": [255, 312], "ay8zfzm0tdd": [255, 312], "sub_sample_len": 255, "subsampl": [255, 294, 325], "action_log_prob_actor": 255, "state_action_value_actor": [255, 259], "connectionist": 256, "1992": 256, "doi": 256, "1007": 256, "bf00992696": 256, "actor_net": [256, 328, 330], "1801": 257, "01290": 257, "applic": [257, 265, 335], "1812": 257, "05905": 257, "redqloss": [258, 321], "math": 258, "theta_t": [258, 335], "theta_": [258, 335], "polyak": 258, "policy_nois": 259, "noise_clip": 259, "next_state_valu": [259, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 321], "td0": [260, 328], "strict_shap": 262, "view_a": 262, "qmixer": [265, 321], "local_valu": 265, "visibl": [265, 334], "dafault": 265, "acceptedkei": 265, "global_valu": 265, "penultim": 265, "local_value_network": 265, "mixer_network": 265, "suggest": [265, 334], "value_modul": [265, 330, 339], "qnet": [265, 328], "next_val_kei": 266, "pred_next_v": 266, "usus": 266, "mse": 266, "q_valu": 266, "n_steps_to_next": 266, "value_next_st": 266, "1506": [267, 272, 280], "02438": [267, 272, 280], "exponenti": [267, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 301], "average_ga": [267, 330], "skip_exist": [267, 268, 269, 270], "advang": 267, "gradient_mod": 267, "value_error": [267, 268, 269, 270, 271], "sign": 267, "target_param": [267, 268, 269, 270, 271, 328, 334], "98": [267, 268, 269, 270, 328, 329, 335], "94": [267, 270, 328, 329, 335], "unpack": [267, 268, 269, 270], "tensor_kei": [267, 268, 269, 270, 271], "next_valu": [267, 268, 269, 270, 271], "aka": [268, 329], "average_reward": [268, 269, 270], "tdestim": [268, 269, 271], "infti": 269, "valuefunctionbas": 271, "time_dim": [272, 273, 276, 277, 278, 279, 280, 281, 282, 283, 284], "old_stat": [272, 274, 276, 278, 280, 281, 283], "new_stat": [272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284], "rolling_gamma": [276, 277, 278, 279, 281, 282, 283, 284], "g1": [276, 277, 278, 279, 281, 282, 283, 284], "g2": [276, 277, 278, 279, 281, 282, 283, 284], "g3": [276, 277, 278, 279, 281, 282, 283, 284], "g4": [276, 277, 278, 279, 281, 282, 283, 284], "v3": [276, 277, 278, 279, 281, 282, 283, 284], "out_file_bas": 285, "skip_reset": 285, "interv": [285, 286, 295, 305, 329, 335], "center_crop": 286, "make_grid": 286, "grid": 286, "exp_nam": [287, 288, 291, 292, 293, 315, 329], "log_dir": [287, 288, 290, 292, 329], "templat": 287, "csv": [288, 290, 329], "minim": [288, 337], "dependeci": 288, "experiment_nam": [289, 290], "uuid": [289, 329, 340], "date": 289, "logger_typ": 290, "logger_nam": 290, "tensorboard": [290, 292, 339], "wandb": [290, 293, 339], "mlflow": [290, 291], "wandb_kwarg": 290, "mlflow_kwarg": 290, "tracking_uri": 291, "uri": 291, "datastor": 291, "tb_log": 292, "tensoarboard": 292, "sub_traj_len": 294, "min_sub_traj_len": 294, "register_op": [294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 325, 329], "process_optim_batch": [294, 300, 301, 325], "td_out": [294, 302], "_process_optim_batch_hook": [294, 325], "batch_subsampl": 294, "clear_cuda": 295, "pre_optim_step": [295, 325], "counter": [296, 325], "log_pbar": [296, 297, 299, 301, 325, 329], "progress": [296, 297, 299, 303, 325, 329, 331, 340], "count_fram": 296, "pre_steps_log": [296, 297, 325], "count_frames_log": 296, "lognam": 297, "r_train": [297, 329], "log_reward": [297, 329], "loss_compon": 298, "appl": 298, "omit": [298, 330, 335, 337], "optimizer_hook": 298, "record_interv": [299, 328, 329], "record_fram": [299, 306, 328, 329], "policy_explor": [299, 315, 328, 329], "log_kei": [299, 329], "suffix": 299, "underestim": 299, "set_exploration_typ": [299, 321, 330, 331, 339], "r_evalu": [299, 328], "flatten_tensordict": [300, 329], "max_dim": 300, "rb_trainer": 300, "batch_process": [300, 301, 302, 325], "post_loss": [300, 325], "999": [301, 329], "jitter": 301, "finfo": 301, "default_dtyp": 301, "get_default_dtyp": 301, "reward_norm": 301, "update_reward_stat": 301, "normalize_reward": 301, "make_train": [302, 321], "_process_batch_hook": [302, 325], "select_kei": [302, 325], "versatil": 303, "optim_steps_per_batch": [303, 325, 329], "epoch": [303, 330, 334], "clip_grad_norm": 303, "clip_norm": 303, "progress_bar": 303, "save_trainer_interv": 303, "log_interv": [303, 329], "save_trainer_fil": [303, 325], "datacollectorbas": [305, 308, 309, 315, 321], "update_weights_interv": [305, 329], "sit": [305, 329], "update_weight": 305, "post_step": [305, 325], "cfg": [306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 319], "dictconfig": [306, 307, 308, 309, 312, 313, 314, 315, 316, 319], "divid": [306, 323, 328, 334, 335], "unknowingli": 306, "annealing_fram": [306, 328], "init_env_step": [306, 307, 328], "proof_environ": [307, 312, 328], "sta": 307, "ot": 307, "actor_model_explor": [308, 309, 328], "make_env_kwarg": [308, 309], "targetnetupdat": [310, 311, 314, 315], "redqloss_deprec": 311, "actor_net_kwarg": 312, "qvalue_net_kwarg": 312, "observation_kei": 312, "dummi": [312, 328, 340], "parser_env_arg": 312, "parser_model_args_continu": 312, "cattensor": [312, 328, 333, 335, 340], "hydra": 312, "config_stor": 312, "configstor": 312, "halfcheetah": [312, 328], "config_field": 312, "config_cl": 312, "redqmodelconfig": 312, "envconfig": 312, "make_dataclass": 312, "cls_name": 312, "cs": 312, "config_path": 312, "config_nam": 312, "replayargsconfig": 313, "target_net_updat": [315, 328, 329], "constitu": 315, "learnt": [315, 328, 330], "tensorboardlogg": [315, 321], "egreedywrapp": [315, 329, 331], "env_proof": 315, "obs_spec": 315, "net_valu": 315, "dir": [315, 325, 329], "gettempdir": 315, "argpars": [316, 319], "namespac": [316, 319], "parser": [316, 319], "transformed_env_constructor": [316, 321], "num_env_per_collector": [317, 318], "video_tag": 319, "norm_obs_onli": 319, "use_env_cr": 319, "custom_env_mak": 319, "custom_env": 319, "return_transformed_env": 319, "action_dim_gsd": 319, "state_dim_gsd": 319, "obs_norm_state_dict": 319, "wheter": 319, "maker": 319, "asyncdatacollector": 321, "distributedsyncdatacollector": 321, "submitit_delayed_launch": 321, "raycollector": 321, "tensordictmaxvaluewrit": 321, "d4rlexperiencereplai": 321, "minariexperiencereplai": 321, "openmlexperiencereplai": 321, "unboundeddiscretetensorspec": [321, 340], "lazystackedtensorspec": 321, "lazystackedcompositespec": 321, "prompttensordicttoken": 321, "rolloutfrommodel": 321, "tokenizeddatasetload": 321, "create_infinite_iter": 321, "consolidate_spec": 321, "check_no_exclusive_kei": 321, "contains_lazy_spec": 321, "check_marl_group": 321, "tensordictrecord": 321, "videorecord": [321, 330], "get_available_librari": 321, "set_exploration_mod": 321, "make_composite_from_td": [321, 335], "terminated_or_trunc": 321, "braxwrapp": 321, "dmcontrolenv": [321, 328, 333, 340], "dmcontrolwrapp": [321, 340], "jumanjienv": 321, "jumanjiwrapp": 321, "mogymenv": 321, "mogymwrapp": 321, "multithreadedenvwrapp": 321, "openmlenv": 321, "pettingzooenv": 321, "robohiveenv": 321, "smacv2env": 321, "smacv2wrapp": 321, "vmaswrapp": 321, "qvaluehook": 321, "distributionalqvaluehook": 321, "reset_nois": 321, "cemplann": 321, "mpcplannerbas": 321, "mppiplann": 321, "independentnorm": 321, "truncatednorm": 321, "maskedonehotcategor": 321, "inv_softplu": 321, "vmapmodul": 321, "distributionaldqnloss": [321, 329], "discretesacloss": 321, "iqlloss": 321, "cqlloss": 321, "discretecqlloss": 321, "dtloss": 321, "onlinedtloss": 321, "a2closs": 321, "reinforceloss": 321, "dreameractorloss": 321, "dreamermodelloss": 321, "dreamervalueloss": 321, "td0estim": [321, 328], "td1estim": [321, 328], "td0_return_estim": 321, "td0_advantage_estim": 321, "td1_return_estim": 321, "vec_td1_return_estim": 321, "td1_advantage_estim": 321, "vec_td1_advantage_estim": 321, "td_lambda_return_estim": 321, "vec_td_lambda_return_estim": 321, "td_lambda_advantage_estim": 321, "vec_td_lambda_advantage_estim": 321, "generalized_advantage_estim": 321, "vec_generalized_advantage_estim": 321, "reward2go": 321, "distance_loss": [321, 328], "hold_out_net": 321, "hold_out_param": [321, 328], "softupd": [321, 328, 329, 331], "hardupd": [321, 328], "batchsubsampl": [321, 325], "clearcudacach": 321, "countframeslog": 321, "logreward": [321, 325, 329], "optimizerhook": [321, 329], "replaybuffertrain": [321, 325, 329], "rewardnorm": 321, "selectkei": [321, 325], "trainerhookbas": [321, 325, 329], "updateweight": [321, 325, 329], "make_collector_offpolici": 321, "make_collector_onpolici": 321, "make_dqn_loss": 321, "make_redq_loss": 321, "make_redq_model": 321, "make_replay_buff": [321, 328], "make_target_updat": 321, "parallel_env_constructor": [321, 328], "sync_async_collector": 321, "sync_sync_collector": 321, "correct_for_frame_skip": 321, "get_stats_random_rollout": 321, "csvlogger": [321, 329], "mlflowlogg": 321, "wandblogg": 321, "get_logg": 321, "generate_exp_nam": 321, "journei": 322, "textbook": 322, "highlight": 322, "ever": [322, 334], "bump": 322, "think": [322, 330, 334, 340], "benefit": [322, 334, 337], "pr": 322, "ground": [323, 328, 335], "categori": [323, 325], "recycl": [323, 337], "impos": 323, "violat": 323, "noisier": 323, "Their": [323, 334], "sd": 323, "prob_modul": 323, "pick": [323, 328, 329], "tabl": [323, 329], "customari": 323, "hopefulli": [323, 329], "functional_modul": 323, "make_funct": [323, 339], "mathbb": [323, 329], "rightarrow": [323, 329], "soften": 323, "backbon": [323, 331, 333, 339], "make_actor": 323, "make_valu": 323, "shared_param": 323, "make_common": 323, "reusabl": [324, 328, 337], "swappabl": [324, 328], "characterist": [324, 328, 335], "trainabl": [324, 328, 336], "whatev": [324, 328], "smth": [324, 328], "metric": [324, 328], "nutshel": [324, 328], "barto": [324, 334], "chapter": 324, "significantli": [324, 328, 329, 334], "next_stat": 324, "value_net_loss": 324, "pow": [324, 328], "therebi": 324, "room": 324, "convers": 324, "signifi": [324, 334], "underperform": 324, "thin": 324, "intric": 324, "believ": 325, "scheme": [325, 340], "substenti": 325, "_pre_steps_log_hook": 325, "_pre_optim_hook": 325, "sub_batch": 325, "_post_loss_hook": 325, "_post_optim_hook": 325, "post_optim": [325, 329], "_post_optim_log": 325, "post_optim_log": 325, "_post_steps_hook": 325, "_post_steps_log_hook": 325, "post_steps_log": 325, "comment": [325, 329, 339], "reserv": 325, "logginghook": 325, "logging_hook": 325, "save_dict": 325, "some_valu": 325, "torchsnapshot": 325, "ckpt_backend": 325, "pt": [325, 336], "filepath": 325, "save_train": 325, "load_from_fil": 325, "262": [327, 335, 338], "galleri": [327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340], "mem": [327, 338], "mb": [327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340], "torchrl_demo": [327, 338, 339], "59": [327, 329, 331, 335, 336, 338, 339], "333": [327, 335, 338, 339], "torchrl_env": [327, 338, 340], "36": [327, 329, 330, 331, 335, 336, 338, 340], "791": [327, 335, 338, 340], "dqn_with_rnn": [327, 331, 338], "409": [327, 331, 335, 338], "1761": [327, 338], "02": [327, 328, 329, 330, 331, 335, 336, 338], "40": [327, 329, 330, 334, 335, 336, 337, 338], "984": [327, 335, 338], "rb_tutori": [327, 337, 338], "525": [327, 335, 337, 338], "414": [327, 335, 337, 338], "coding_dqn": [327, 329, 338], "37": [327, 328, 329, 335, 336, 338], "716": [327, 329, 338], "711": [327, 329, 338], "multiagent_ppo": [327, 334, 338], "563": [327, 334, 335, 338], "coding_ddpg": [327, 328, 338], "57": [327, 328, 329, 335, 336, 338], "453": [327, 328, 335, 338], "coding_ppo": [327, 330, 338], "359": [327, 330, 335, 338], "pretrained_model": [327, 336, 338], "00": [327, 328, 329, 330, 331, 334, 335, 336, 338], "54": [327, 329, 331, 335, 336, 338], "688": [327, 335, 336, 338], "3646": [327, 336, 338], "multi_task": [327, 333, 338], "49": [327, 329, 333, 335, 336, 338], "441": [327, 333, 335, 338], "author": [328, 329, 330, 331, 334, 335, 337], "vincent": [328, 329, 330, 331, 335, 337], "moen": [328, 329, 330, 331, 335, 337], "assembl": 328, "focus": 328, "straightforward": [328, 329, 337], "overview": [328, 330, 334, 339], "transpar": [328, 331], "understood": 328, "sota": [328, 329, 339], "illustr": [328, 329, 337], "loss_dict": 328, "modal": 328, "oblivi": [328, 330, 337], "elementari": 328, "didact": 328, "dilut": 328, "pessimist": [328, 329, 330], "target_actor_network_param": 328, "actor_in_kei": 328, "actor_crit": 328, "noth": [328, 330], "compromis": 328, "hp": 328, "hasattr": 328, "_value_estim": 328, "elif": [328, 329], "notimplementederror": 328, "unknown": 328, "_loss_actor": 328, "td_copi": 328, "actor_network_param": 328, "value_network_param": 328, "_loss_valu": 328, "pred_val": 328, "target_value_network_param": 328, "smooth": [328, 329], "loss_funt": 328, "glue": 328, "_forward": 328, "ndimens": 328, "remaind": 328, "focu": [328, 329, 330], "pixels_onli": [328, 329, 339, 340], "env_librari": 328, "env_task": 328, "env_arg": 328, "friendli": 328, "torchr": 328, "rescal": 328, "presum": 328, "make_transformed_env": 328, "reward_sc": 328, "double_to_float_list": 328, "double_to_float_inv_list": 328, "marker": 328, "env_per_collector": 328, "transform_state_dict": 328, "make_t_env": 328, "adjust": [328, 334, 335], "seem": [328, 331], "cheat": 328, "10m": 328, "cautiou": 328, "magnitud": 328, "thousand": [328, 331], "get_env_stat": 328, "proof_env": 328, "5000": [328, 329, 330], "maxim": [328, 335], "recal": [328, 330], "ddpgmlpactor": 328, "ddpgmlpqnet": 328, "materi": 328, "ornsteinuhlenbeckprocesswrapp": 328, "make_ddpg_actor": 328, "q_net": 328, "moduless": 328, "sugges": 328, "tight": 328, "10_000": [328, 330, 337], "traj_len": [328, 331], "make_record": 328, "recorder_obj": 328, "flavor": 328, "circular": 328, "buffer_s": [328, 329], "random_crop_len": 328, "prb": 328, "buffer_scratch_dir": 328, "temporari": 328, "dirrectori": 328, "trajecotri": 328, "25": [328, 329, 335], "sampel": 328, "dataflow": 328, "ceil_div": 328, "utd": [328, 331], "update_to_data": 328, "realiz": 328, "_must_": 328, "001": [328, 335], "outdat": 328, "trick": [328, 329], "despit": 328, "adam": [328, 329, 330, 331, 334, 335], "optimizer_actor": 328, "lr": [328, 329, 330, 331, 334, 335], "weight_decai": [328, 329], "optimizer_valu": 328, "total_collection_step": 328, "pretti": [328, 337], "rewards_ev": 328, "collected_fram": 328, "pbar": [328, 330, 331, 334, 335], "r0": 328, "numel": [328, 330, 331, 336, 337], "current_fram": 328, "sampled_tensordict": 328, "gn1": 328, "clip_grad_norm_": [328, 330, 334, 335], "gn2": 328, "gn": [328, 335], "td_record": 328, "rn": 328, "set_descript": [328, 330, 331, 334, 335], "2f": 328, "800": [328, 329], "2576": 328, "40it": [328, 329, 330], "1600": [328, 329], "987": 328, "23it": [328, 329, 335], "3200": [328, 329], "2074": 328, "54it": [328, 329, 335], "48": [328, 329, 335, 336], "4800": [328, 329, 335], "3008": [328, 329], "59it": [328, 329, 335], "85": [328, 329, 335], "58": [328, 329, 335, 336], "314": [328, 335], "69": [328, 329, 334, 335, 336], "56": [328, 329, 335], "5600": 328, "6400": [328, 339], "1364": 328, "60": [328, 329, 330, 334, 335, 339], "07": [328, 329, 334, 335, 336], "174": [328, 335], "70": [328, 329, 330, 334, 335, 336], "72": [328, 329, 335, 336], "7200": 328, "895": [328, 335], "02it": [328, 329], "68": [328, 329, 335, 336], "89": [328, 329, 335, 336, 337], "51": [328, 329, 335, 337], "91": [328, 329, 335, 336], "149": [328, 335], "31": [328, 329, 335, 336], "61": [328, 329, 335, 336], "80": [328, 329, 330, 334, 335, 336], "8000": [328, 330], "697": 328, "89it": [328, 329], "142": [328, 335], "188": [328, 335], "09": [328, 329, 331, 334, 335], "8800": 328, "592": [328, 335], "70it": [328, 330, 335], "93": [328, 329, 335, 336, 337], "63": [328, 329, 335, 337], "206": [328, 335], "84": [328, 329, 331, 335], "74": [328, 329, 335, 336], "96": [328, 329, 335, 336], "9600": 328, "443": [328, 335], "15it": [328, 335], "156": [328, 335], "65": [328, 329, 334, 335, 336, 337], "10400it": 328, "424": [328, 335], "81it": [328, 329, 335], "86": [328, 329, 335, 336], "111": [328, 335], "97": [328, 329, 335, 336, 337], "plot": [328, 330, 331, 334, 335], "mention": [328, 331, 337, 340], "matplotlib": [328, 330, 331, 334, 335, 337, 340], "pyplot": [328, 330, 331, 334, 335, 337, 340], "plt": [328, 330, 331, 334, 335, 337, 340], "zip": [328, 332], "legend": 328, "xlabel": [328, 331, 334, 335], "ylabel": [328, 334], "tight_layout": 328, "concret": [328, 330], "takeawai": [328, 329], "minut": [328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "jupyt": [328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340], "ipynb": [328, 329, 330, 331, 333, 334, 335, 336, 337, 339, 340], "sphinx": [328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340], "customis": [329, 334], "road": 329, "aspect": 329, "highest": 329, "prerequisit": [329, 331], "familiar": [329, 334, 340], "lookup": 329, "amort": [329, 330], "conjunct": 329, "cart": 329, "pole": 329, "un": 329, "actuat": 329, "frictionless": 329, "upright": 329, "duelingcnndqnet": 329, "is_notebook": 329, "shell": 329, "get_ipython": 329, "__class__": 329, "zmqinteractiveshel": 329, "qtconsol": 329, "terminalinteractiveshel": 329, "ipython": [329, 334, 335], "nameerror": 329, "umbrella": 329, "misplac": 329, "misus": 329, "orchestr": 329, "everyth": [329, 331], "five": [329, 330], "64x64": 329, "motion": [329, 335], "obs_norm_sd": 329, "simpler": 329, "get_norm_stat": 329, "test_env": 329, "make_model": 329, "dummy_env": 329, "output_s": [329, 331], "init_bia": 329, "actor_explor": 329, "eps_greedy_v": 329, "eps_greedy_val_env": 329, "get_replay_buff": 329, "n_optim": 329, "themselv": 329, "simplic": [329, 330, 336, 337], "get_collector": 329, "data_collector": 329, "bunch": 329, "concept": [329, 337], "power": 329, "ubiquit": 329, "get_loss_modul": 329, "target_updat": 329, "995": [329, 335], "sensit": 329, "variat": 329, "2e": [329, 335], "wd": 329, "upd": 329, "harder": [329, 339], "5_000": 329, "500000": 329, "100000": 329, "005": 329, "mandatori": [329, 330, 334, 335], "fairer": 329, "budget": [329, 330], "dqn_exp_": 329, "uuid1": [329, 340], "9895": 329, "0737": 329, "tmp": [329, 337], "tmpy6sl28bq": 329, "dqn_exp_1b28ffa8": 329, "9e9e": 329, "11ee": [329, 340], "a4b1": [329, 340], "0242ac110002": [329, 340], "registr": 329, "cumbersom": 329, "buffer_hook": 329, "weight_updat": 329, "descript": [329, 330], "aliv": 329, "total_reward": 329, "26it": [329, 335], "4497": 329, "9434": 329, "68it": [329, 331, 335], "4045": 329, "05": [329, 335, 336], "29it": 329, "78it": [329, 335], "00it": 329, "3380": 329, "192": [329, 335], "41": [329, 330, 335, 336], "14it": 329, "3893": 329, "224": [329, 335], "85it": 329, "4948": 329, "45it": 329, "288": [329, 335], "20it": 329, "4434": 329, "71": [329, 335, 336], "31it": 329, "4074": [329, 335], "352": [329, 335], "64it": [329, 335], "384": [329, 335], "78": [329, 335, 336], "4797": 329, "416": [329, 335], "09it": 329, "3952": 329, "448": [329, 335], "83": [329, 335, 336], "51it": 329, "480": [329, 335, 336], "52": [329, 335, 336, 337], "4314": 329, "05it": [329, 330], "544": [329, 335], "55it": 329, "576": [329, 335], "608": [329, 335], "4586": 329, "640": 329, "73it": [329, 335], "672": 329, "61it": [329, 335], "704": 329, "60it": [329, 335], "736": 329, "58it": [329, 330, 335], "4676": 329, "768": 329, "82it": [329, 330], "47": [329, 335], "16it": [329, 335], "832": 329, "4375": [329, 335], "864": 329, "08it": 329, "896": 329, "45": [329, 334, 335, 336], "24it": 329, "928": 329, "960": 329, "90": [329, 330, 334, 335], "12it": 329, "992": [329, 335], "63it": [329, 335], "4526": 329, "32it": [329, 335], "1056": 329, "52it": [329, 330, 335], "1088": 329, "74it": [329, 335], "1120": 329, "43": [329, 331, 335, 336], "1152": 329, "35it": 329, "1184": 329, "1216": 329, "93it": 329, "1248": 329, "17it": [329, 335], "1280": 329, "34it": [329, 335], "4524": 329, "62it": [329, 335], "1344": 329, "79it": 329, "1376": 329, "50it": 329, "1408": 329, "1440": 329, "65it": [329, 335], "1472": 329, "03it": 329, "1504": 329, "1536": 329, "1568": 329, "90it": 329, "43it": 329, "1632": 329, "11it": 329, "1696": 329, "72it": [329, 330, 335], "1728": 329, "86it": 329, "1760": 329, "1792": 329, "33it": [329, 335], "1824": 329, "67it": [329, 335], "1856": 329, "38it": 329, "1888": [329, 330], "1920": 329, "01it": 329, "1952": 329, "1984": 329, "2016": 329, "76it": [329, 335], "2048": [329, 336], "2080": 329, "71it": [329, 335], "2112": [329, 335], "2144": 329, "96it": 329, "2176": 329, "21it": 329, "2208": 329, "2240": 329, "2272": 329, "2304": 329, "2336": 329, "04it": 329, "2368": 329, "2400": 329, "07it": 329, "2432": 329, "87it": [329, 331], "2464": 329, "46it": 329, "2496": 329, "2528": [329, 335], "2560": 329, "13it": 329, "2624": 329, "83it": [329, 335], "53": [329, 334, 335, 336], "2656": [329, 335], "4224": 329, "2688": 329, "2720": [329, 335], "55": [329, 335, 336], "2752": 329, "94it": [329, 335], "2784": 329, "99it": 329, "2816": 329, "2848": 329, "2880": 329, "2912": 329, "2944": [329, 335], "41it": 329, "2976": [329, 335], "95it": [329, 335], "3040": 329, "3072": 329, "62": [329, 335], "3104": 329, "3136": 329, "3168": 329, "98it": 329, "28it": [329, 330, 335], "3232": [329, 335], "8824": 329, "3264": 329, "75it": [329, 335], "66": [329, 334, 335, 337], "3296": 329, "67": [329, 333, 334, 335, 336], "3328": 329, "3360": 329, "3392": 329, "80it": [329, 335], "3424": 329, "44it": [329, 335], "3456": [329, 335], "3488": 329, "56it": 329, "3520": 329, "3552": 329, "76": [329, 335, 337], "3584": 329, "22it": 329, "3616": 329, "82": [329, 335, 336], "73": [329, 335], "3648": 329, "3680": 329, "3712": 329, "3744": 329, "3776": 329, "92it": [329, 335], "3808": 329, "77": [329, 334, 335, 337], "3840": 329, "3872": 329, "10it": 329, "3904": 329, "79": [329, 335], "3936": 329, "39it": 329, "3968": 329, "4000": [329, 330], "4032": 329, "4064": 329, "53it": [329, 335], "4096": 329, "4128": [329, 335], "91it": 329, "4160": 329, "42it": [329, 331, 335], "4192": 329, "4256": [329, 335], "30it": [329, 335], "4288": [329, 335], "4320": 329, "4352": 329, "4384": 329, "4416": 329, "4448": 329, "4480": 329, "4512": 329, "4544": 329, "92": [329, 334, 335], "4576": 329, "47it": 329, "4608": 329, "4640": 329, "4672": [329, 335], "27it": 329, "4704": 329, "4736": 329, "4768": 329, "88it": [329, 330], "4832": 329, "4864": 329, "4896": 329, "4928": 329, "4960": 329, "36it": 329, "4992": 329, "5024it": 329, "print_csv_files_in_fold": 329, "folder_path": 329, "csv_file": 329, "output_str": 329, "dirpath": 329, "walk": [329, 333], "endswith": 329, "strip": 329, "4948333501815796": 329, "45859628915786743": 329, "44965070486068726": 329, "7424625754356384": 329, "4546852707862854": 329, "3898632526397705": 329, "2443896234035492": 329, "26767638325691223": 329, "20805610716342926": 329, "3408542573451996": 329, "29850101470947266": 329, "39190438389778137": 329, "grad_norm_0": 329, "7935965061187744": 329, "892691135406494": 329, "4263978004455566": 329, "1688742637634277": 329, "9203341007232666": 329, "6602232456207275": 329, "6153719425201416": 329, "4840738773345947": 329, "728618144989014": 329, "10000000894069672": 329, "882352828979492": 329, "qvaluenetwork": 329, "worst": 329, "accuraci": 329, "fanci": 329, "demonstr": [330, 334, 335, 340], "talk": 330, "repetit": 330, "six": 330, "sophist": [330, 334], "invent": 330, "theta_k": 330, "pi_": 330, "exceed": 330, "discourag": [330, 335], "indispens": 330, "analyz": 330, "lingua": 330, "franca": 330, "defaultdict": [330, 335], "has_cuda": [330, 334, 340], "3e": [330, 331, 334], "max_grad_norm": [330, 334], "ourselv": [330, 340], "benefici": 330, "errat": 330, "hamper": [330, 337], "reactiv": 330, "xy": 330, "sub_batch_s": 330, "num_epoch": [330, 334], "entropy_ep": [330, 334], "generalist": 330, "interchang": [330, 336, 337], "panel": 330, "charact": 330, "inverteddoublependulum": 330, "transmit": 330, "stai": 330, "supplementari": [330, 340], "told": 330, "stringent": [330, 334], "confid": [330, 334], "ran": 330, "f_": 330, "mu_": 330, "difficulti": [330, 340], "brought": [330, 331], "d_ob": 330, "d_action": 330, "policy_modul": [330, 334], "That": 330, "said": 330, "briefli": [330, 334], "refil": [330, 334], "conveni": [330, 334, 335], "easiest": [330, 334], "mathemat": [330, 334], "tradeoff": [330, 334], "advantage_modul": 330, "lr_schedul": [330, 335], "cosineannealinglr": [330, 335], "eval_str": 330, "tensordict_data": [330, 334], "data_view": [330, 334], "subdata": [330, 334], "cum_reward_str": 330, "4f": [330, 331, 335], "stepcount_str": 330, "param_group": 330, "lr_str": 330, "eval_rollout": 330, "nice": 330, "450": [330, 335], "120": [330, 335, 337], "0784": 330, "0844": 330, "0003": [330, 335], "1136": 330, "3000": 330, "452": [330, 335], "1537": [330, 335], "455": [330, 335], "0002": [330, 335], "458": [330, 335], "37it": 330, "2075": 330, "6000": 330, "460": [330, 335], "2266": 330, "7000": 330, "451": [330, 335], "2347": 330, "456": [330, 335], "2455": 330, "9000": 330, "459": [330, 335], "2587": 330, "462": [330, 335], "2630": 330, "cap": [330, 337], "figsiz": [330, 335], "subplot": [330, 335, 340], "titl": [330, 331, 334, 335], "bit": [330, 331, 334, 337], "lstmmodul": 331, "84x84": 331, "accessori": 331, "stamp": 331, "tensordictprim": 331, "assist": 331, "emb": 331, "n_cell": 331, "customiz": 331, "almost": 331, "wouldn": 331, "make_tensordict_prim": 331, "interpolationmod": 331, "qval": 331, "stoch_polici": 331, "opportun": 331, "coupl": [331, 335, 337], "uniniti": 331, "again": [331, 334, 336, 337, 340], "redund": 331, "strongli": 331, "million": 331, "sake": [331, 336, 337], "20_000": [331, 335], "longest": 331, "npai": 331, "action_spread": 331, "1000000": 331, "116": [331, 335], "48it": 331, "0008": [331, 335], "150": [331, 335], "148": [331, 335], "165": [331, 335], "0013": [331, 335], "1762": [331, 339], "tutorials_python": 332, "tutorials_jupyt": 332, "humanoid": 333, "env1_obs_kei": 333, "observation_stand": 333, "env2_obs_kei": 333, "observation_walk": 333, "tdreset1": 333, "tdreset2": 333, "tdreset": 333, "policy_common": 333, "policy_stand": 333, "policy_walk": 333, "But": 333, "exclusive_field": [333, 339], "stack_dim": [333, 339], "env1_mak": 333, "env2_mak": 333, "_single_task": 333, "td_rollout": 333, "matteo": 334, "bettini": 334, "maddpg": 334, "navig": 334, "lidar": 334, "sensor": 334, "collis": 334, "tie": 334, "mappo": 334, "ippo": 334, "phase": [334, 337], "mathbf": 334, "pi": [334, 335], "fed": [334, 337], "approxim": [334, 340], "literatur": 334, "overcom": 334, "stationari": 334, "concurr": 334, "analys": 334, "gui": 334, "visualis": 334, "multiagentmlp": 334, "divic": 334, "vmas_devic": 334, "6_000": 334, "team": [334, 339], "n_iter": 334, "minibatch_s": 334, "generalis": 334, "furthermor": 334, "simd": 334, "parallelis": 334, "warp": 334, "todai": 334, "circl": 334, "surround": 334, "dot": [334, 335], "collid": 334, "drag": 334, "elast": 334, "acceler": 334, "penalis": 334, "num_vmas_env": 334, "scenario_nam": 334, "four": [334, 335], "environmnet": 334, "final_rew": 334, "agent_collis": 334, "stress": 334, "paramount": 334, "n_rollout_step": 334, "evolut": 334, "yourself": 334, "utilis": 334, "n_actions_per_ag": 334, "n_obs_per_ag": 334, "share_parameters_polici": 334, "policy_net": 334, "denot": 334, "carefulli": [334, 340], "grant": 334, "converg": 334, "cooper": 334, "share_parameters_crit": 334, "critic_net": 334, "fantast": 334, "minibatch": 334, "desc": 334, "episode_reward_mean": 334, "episode_reward_mean_list": 334, "get_item_shap": 334, "critic_param": 334, "target_critic_param": 334, "refresh": 334, "3641679584980011": 334, "4940122067928314": 334, "0600677728652954": 334, "4344534873962402": 334, "1100871562957764": 334, "304917335510254": 334, "6943857669830322": 334, "871443748474121": 334, "8500826358795166": 334, "759843587875366": 334, "xvfb": 334, "pyvirtualdisplai": 334, "1400": [334, 335], "900": 334, "pil": 334, "rendering_callback": 334, "fromarrai": 334, "rgb_arrai": [334, 335], "gif": 334, "save_al": 334, "append_imag": 334, "profici": 334, "master": 334, "freeli": 335, "codebas": 335, "touch": 335, "undertaken": 335, "broader": 335, "wider": 335, "algebra": 335, "acquaint": 335, "avenu": 335, "_apply_to_composit": 335, "default_x": 335, "default_i": 335, "torqu": 335, "upward": 335, "angular": 335, "sin": 335, "rad": 335, "sec": 335, "gravit": 335, "angl": 335, "deleg": 335, "new_th": 335, "new_thdot": 335, "thdot": 335, "g_forc": 335, "max_torqu": 335, "angle_norm": 335, "max_spe": 335, "albeit": 335, "gen_param": 335, "high_th": 335, "high_thdot": 335, "low_th": 335, "low_thdot": 335, "rng": 335, "lazili": 335, "organ": [335, 337], "trivial": 335, "neither": 335, "shortcut": [335, 340], "irrelev": 335, "_make_spec": 335, "td_param": 335, "pseudo": 335, "render_mod": 335, "render_fp": 335, "random_": 335, "_make_step": 335, "staticmethod": 335, "complic": [335, 337, 340], "showcas": 335, "skeleton": 335, "_apply_transform": [335, 340], "_inv_apply_transform": [335, 340], "subset": [335, 336], "unitari": 335, "sine": 335, "cosin": 335, "sintransform": 335, "tensordict_reset": 335, "costransform": 335, "t_sin": 335, "t_co": 335, "cat_transform": 335, "mdp": 335, "simple_rollout": 335, "unexplor": 335, "recreat": 335, "init_td": 335, "traj_return": 335, "last_reward": 335, "is_ipython": 335, "inlin": 335, "get_backend": 335, "ion": 335, "gcf": 335, "clear_output": 335, "625": 335, "0488": 335, "0748": 335, "519": 335, "0499": 335, "4472": 335, "073": 335, "0685": 335, "0408": 335, "552": 335, "5154": 335, "9086": 335, "527": 335, "9385": 335, "155": 335, "2568": 335, "4981": 335, "223": 335, "69it": 335, "8929": 335, "4491": 335, "581": 335, "3233": 335, "0664": 335, "596": 335, "1021": 335, "5263": 335, "9579": 335, "5807": 335, "8075": 335, "212": 335, "2009": 335, "5525": 335, "914": 335, "2894": 335, "0115": 335, "0977": 335, "1845": 335, "1830": 335, "4858": 335, "233": 335, "2863": 335, "0297": 335, "464": 335, "4617": 335, "5997": 335, "904": 335, "1647": 335, "0777": 335, "901": 335, "4709": 335, "6813": 335, "8317": 335, "3221": 335, "5554": 335, "276": 335, "3353": 335, "701": 335, "8570": 335, "6656": 335, "463": 335, "7779": 335, "6911": 335, "875": 335, "0796": 335, "7082": 335, "308": 335, "0421": 335, "1496": 335, "5037": 335, "1755": 335, "5029": 335, "9454": 335, "665": 335, "9330": 335, "2118": 335, "444": 335, "0995": 335, "6294": 335, "3146": 335, "2909": 335, "461": 335, "9720": 335, "1298": 335, "9923": 335, "0345": 335, "3438": 335, "3688": 335, "6953": 335, "5233": 335, "411": 335, "8011": 335, "5329": 335, "2677": 335, "6969": 335, "7010": 335, "376": 335, "9352": 335, "7707": 335, "6178": 335, "5646": 335, "348": 335, "7304": 335, "9407": 335, "942": 335, "3882": 335, "7604": 335, "3507": 335, "8928": 335, "258": 335, "6978": 335, "4641": 335, "549": 335, "6047": 335, "66it": 335, "5005": 335, "4136": 335, "2993": 335, "3222": 335, "4046": 335, "7314": 335, "275": 335, "6331": 335, "9318": 335, "961": 335, "8331": 335, "1604": 335, "4099": 335, "4761": 335, "125": 335, "4262": 335, "6363": 335, "382": 335, "3593": 335, "7377": 335, "2847": 335, "3443": 335, "867": 335, "3592": 335, "4760": 335, "9950": 335, "8021": 335, "3528": 335, "1214": 335, "708": 335, "4023": 335, "3583": 335, "041": 335, "3801": 335, "0310": 335, "4244": 335, "2039": 335, "4850": 335, "8748": 335, "706": 335, "4897": 335, "9210": 335, "8964": 335, "0832": 335, "3934": 335, "8971": 335, "2933": 335, "3377": 335, "6996": 335, "2274": 335, "8916": 335, "098": 335, "2660": 335, "9110": 335, "4503": 335, "6956": 335, "9172": 335, "4026": 335, "946": 335, "9229": 335, "5205": 335, "294": 335, "8872": 335, "6637": 335, "019": 335, "9281": 335, "2082": 335, "724": 335, "8561": 335, "6574": 335, "357": 335, "4138": 335, "5230": 335, "385": 335, "4065": 335, "5642": 335, "921": 335, "9786": 335, "4129": 335, "5831": 335, "266": 335, "7723": 335, "4152": 335, "0898": 335, "389": 335, "5155": 335, "5376": 335, "5616": 335, "4094": 335, "283": 335, "5333": 335, "4803": 335, "6566": 335, "2588": 335, "662": 335, "4732": 335, "7503": 335, "068": 335, "0714": 335, "3370": 335, "059": 335, "8612": 335, "1915": 335, "3855": 335, "0349": 335, "9644": 335, "4538": 335, "445": 335, "77it": 335, "0392": 335, "4080": 335, "1648": 335, "9599": 335, "143": 335, "4284": 335, "5946": 335, "2590": 335, "9181": 335, "4621": 335, "9075": 335, "674": 335, "1772": 335, "9444": 335, "351": 335, "9391": 335, "5595": 335, "8673": 335, "6240": 335, "5919": 335, "0018": 335, "1071": 335, "9127": 335, "251": 335, "9799": 335, "3131": 335, "9612": 335, "9705": 335, "8741": 335, "2230": 335, "0972": 335, "0337": 335, "0350": 335, "0654": 335, "102": 335, "2441": 335, "4596": 335, "362": 335, "103": 335, "4362": 335, "171": 335, "104": 335, "4041": 335, "6907": 335, "105": 335, "4664": 335, "2760": 335, "0299": 335, "9712": 335, "349": 335, "107": 335, "3332": 335, "4479": 335, "772": 335, "108": 335, "4357": 335, "9591": 335, "543": 335, "109": 335, "6216": 335, "1353": 335, "692": 335, "110": 335, "6261": 335, "7086": 335, "496": 335, "7758": 335, "9818": 335, "112": 335, "7772": 335, "5055": 335, "113": [335, 337], "5840": 335, "3180": 335, "2083": 335, "115": 335, "5275": 335, "6873": 335, "4107": 335, "1624": 335, "117": 335, "6372": 335, "2571": 335, "118": 335, "4039": 335, "4428": 335, "119": 335, "4728": 335, "5628": 335, "6767": 335, "2466": 335, "522": 335, "121": [335, 340], "5873": 335, "5072": 335, "122": [335, 340], "6548": 335, "3766": 335, "123": 335, "5134": 335, "1955": 335, "124": 335, "2481": 335, "0591": 335, "4500": 335, "3368": 335, "126": [335, 337], "9708": 335, "7059": 335, "127": [335, 337], "3031": 335, "2534": 335, "843": 335, "3327": 335, "6193": 335, "129": 335, "4831": 335, "1172": 335, "2593": 335, "4219": 335, "962": 335, "8380": 335, "899": 335, "132": 335, "2721": 335, "9048": 335, "166": 335, "133": 335, "2419": 335, "5248": 335, "134": 335, "2139": 335, "4278": 335, "135": 335, "0690": 335, "5140": 335, "136": 335, "1140": 335, "7402": 335, "137": 335, "5356": 335, "1636": 335, "138": 335, "0671": 335, "8798": 335, "139": [335, 337], "8918": 335, "3298": 335, "307": 335, "140": 335, "1779": 335, "141": 335, "1771": 335, "3624": 335, "936": 335, "1683": 335, "4810": 335, "9373": 335, "4435": 335, "144": 335, "4396": 335, "8092": 335, "145": 335, "2572": 335, "146": 335, "4212": 335, "0260": 335, "147": 335, "0939": 335, "6478": 335, "605": 335, "6606": 335, "7289": 335, "9300": 335, "7193": 335, "1166": 335, "8514": 335, "151": 335, "9108": 335, "0672": 335, "292": 335, "152": [335, 337], "8591": 335, "3768": 335, "153": 335, "9976": 335, "154": 335, "0576": 335, "0067": 335, "935": 335, "4199": 335, "1722": 335, "8310": 335, "3466": 335, "157": 335, "8631": 335, "2492": 335, "158": 335, "8763": 335, "1277": 335, "159": 335, "5562": 335, "7446": 335, "1082": 335, "9830": 335, "161": [335, 337], "0946": 335, "5229": 335, "162": 335, "4574": 335, "6900": 335, "163": [335, 336], "2229": 335, "0318": 335, "482": 335, "164": 335, "0543": 335, "0817": 335, "761": 335, "2809": 335, "5118": 335, "366": 335, "1142": 335, "5635": 335, "167": 335, "1949": 335, "2327": 335, "982": 335, "168": 335, "0967": 335, "0387": 335, "457": 335, "169": [335, 337], "0782": 335, "2150": 335, "170": 335, "5222": 335, "3725": 335, "9288": 335, "9837": 335, "172": 335, "1416": 335, "1099": 335, "173": 335, "8620": 335, "8475": 335, "1807": 335, "175": 335, "1148": 335, "0645": 335, "2751": 335, "8313": 335, "177": 335, "9286": 335, "9770": 335, "178": 335, "5735": 335, "2837": 335, "179": 335, "2926": 335, "9489": 335, "180": 335, "1507": 335, "181": 335, "8724": 335, "3567": 335, "182": 335, "3574": 335, "6140": 335, "183": 335, "7895": 335, "2518": 335, "184": 335, "6146": 335, "185": 335, "8776": 335, "7358": 335, "186": 335, "3722": 335, "8428": 335, "187": 335, "7955": 335, "0092": 335, "7106": 335, "829": 335, "189": 335, "2264": 335, "6919": 335, "190": 335, "1438": 335, "1362": 335, "191": [335, 337], "0618": 335, "8217": 335, "9420": 335, "6765": 335, "193": 335, "7745": 335, "0709": 335, "194": 335, "9478": 335, "6867": 335, "195": 335, "6507": 335, "6225": 335, "196": 335, "2244": 335, "2195": 335, "197": 335, "5385": 335, "9263": 335, "198": 335, "1878": 335, "2374": 335, "199": 335, "8054": 335, "3504": 335, "557": 335, "0766": 335, "6825": 335, "201": 335, "2011": 335, "8393": 335, "202": 335, "0803": 335, "7815": 335, "203": 335, "8363": 335, "2460": 335, "204": 335, "8643": 335, "2191": 335, "593": 335, "205": 335, "0773": 335, "1343": 335, "8657": 335, "207": 335, "9304": 335, "7584": 335, "208": 335, "8752": 335, "2307": 335, "209": 335, "5250": 335, "4869": 335, "7837": 335, "5762": 335, "211": 335, "6661": 335, "8600": 335, "2502": 335, "1752": 335, "213": 335, "3075": 335, "8871": 335, "214": 335, "9406": 335, "8090": 335, "215": 335, "6291": 335, "8923": 335, "876": 335, "216": 335, "9504": 335, "21e": 335, "217": 335, "7431": 335, "7880": 335, "218": 335, "4463": 335, "5432": 335, "219": 335, "3793": 335, "3313": 335, "220": 335, "8843": 335, "0369": 335, "065": 335, "221": 335, "4828": 335, "8391": 335, "222": 335, "6265": 335, "2913": 335, "947": 335, "5541": 335, "1252": 335, "7342": 335, "2396": 335, "225": 335, "5936": 335, "1924": 335, "226": 335, "9975": 335, "2045": 335, "227": 335, "8367": 335, "9540": 335, "228": 335, "7259": 335, "6743": 335, "229": 335, "4827": 335, "7528": 335, "230": 335, "7361": 335, "8756": 335, "231": 335, "7646": 335, "1116": 335, "232": 335, "5426": 335, "8385": 335, "5662": 335, "8585": 335, "234": 335, "8234": 335, "7930": 335, "235": 335, "2648": 335, "9309": 335, "236": 335, "6817": 335, "237": 335, "0943": 335, "1533": 335, "238": 335, "3045": 335, "0483": 335, "239": 335, "240": [335, 339, 340], "6415": 335, "0201": 335, "241": 335, "4437": 335, "4365": 335, "242": 335, "0358": 335, "4943": 335, "243": 335, "1272": 335, "5003": 335, "1180": 335, "2637": 335, "245": 335, "7197": 335, "0873": 335, "246": 335, "2917": 335, "247": 335, "0160": 335, "0738": 335, "248": 335, "3689": 335, "0120": 335, "249": 335, "5570": 335, "0475": 335, "250": 335, "4423": 335, "2220": 335, "6803": 335, "252": 335, "1465": 335, "7214": 335, "253": 335, "8801": 335, "7034": 335, "254": 335, "9136": 335, "4076": 335, "7589": 335, "5013": 335, "8150": 335, "2241": 335, "257": 335, "0753": 335, "8081": 335, "1951": 335, "8314": 335, "259": 335, "0038": 335, "260": 335, "0889": 335, "4616": 335, "261": 335, "0655": 335, "8333": 335, "9476": 335, "263": 335, "7554": 335, "3798": 335, "264": 335, "3717": 335, "3947": 335, "529": 335, "265": 335, "3060": 335, "6495": 335, "7467": 335, "8889": 335, "267": 335, "8457": 335, "591": 335, "268": 335, "7137": 335, "0536": 335, "771": 335, "269": 335, "1651": 335, "388": 335, "270": 335, "8246": 335, "5709": 335, "281": 335, "271": 335, "7502": 335, "0521": 335, "032": 335, "272": 335, "5475": 335, "7253": 335, "273": 335, "2856": 335, "7130": 335, "274": 335, "2778": 335, "4122": 335, "8368": 335, "1841": 335, "9622": 335, "1603": 335, "003e": 335, "277": 335, "0247": 335, "346": 335, "278": 335, "2238": 335, "6418": 335, "279": 335, "0626": 335, "2538": 335, "280": 335, "0149": 335, "7380": 335, "2167": 335, "8911": 335, "282": 335, "8725": 335, "1983": 335, "8142": 335, "3709": 335, "284": 335, "4989": 335, "285": 335, "6464": 335, "6210": 335, "286": 335, "9726": 335, "0820": 335, "287": 335, "6975": 335, "9091": 335, "4926": 335, "4791": 335, "289": 335, "0905": 335, "3500": 335, "290": 335, "2287": 335, "291": 335, "9918": 335, "5543": 335, "9245": 335, "6444": 335, "631": 335, "293": 335, "0448": 335, "4769": 335, "8566": 335, "7208": 335, "295": 335, "0966": 335, "296": 335, "57it": 335, "5303": 335, "023": 335, "297": 335, "2682": 335, "564": 335, "298": 335, "4318": 335, "5063": 335, "299": 335, "7475": 335, "4190": 335, "8186": 335, "5077": 335, "301": 335, "1883": 335, "5291": 335, "472": 335, "302": 335, "1256": 335, "3998": 335, "303": 335, "3622": 335, "0930": 335, "626": 335, "304": 335, "9500": 335, "0075": 335, "5664": 335, "305": 335, "5697": 335, "3024": 335, "306": 335, "3117": 335, "0052": 335, "006": 335, "0981": 335, "9312": 335, "3873": 335, "309": 335, "0411": 335, "2650": 335, "310": 335, "1656": 335, "0228": 335, "004": 335, "311": 335, "1196": 335, "2478": 335, "312": 335, "7353": 335, "0812": 335, "313": 335, "3022": 335, "758": 335, "1406": 335, "4626": 335, "315": 335, "2156": 335, "851": 335, "316": 335, "1953": 335, "3774": 335, "317": 335, "6385": 335, "9917": 335, "318": 335, "2764": 335, "905": 335, "319": 335, "6391": 335, "9317": 335, "9748": 335, "2679": 335, "321": 335, "8495": 335, "5125": 335, "8177": 335, "6602": 335, "323": 335, "0704": 335, "5776": 335, "324": 335, "9833": [335, 339], "1339": 335, "402": 335, "325": 335, "1238": 335, "326": 335, "9299": 335, "0227": 335, "327": 335, "7727": 335, "1607": 335, "336": 335, "328": 335, "3958": 335, "3223": 335, "763": 335, "329": 335, "4742": 335, "1797": 335, "330": 335, "0144": 335, "0085": 335, "331": 335, "8284": 335, "0428": 335, "332": 335, "0098": 335, "7365": 335, "4566": 335, "0781": 335, "086": 335, "334": 335, "3355": 335, "0230": 335, "335": 335, "9346": 335, "0423": 335, "076": 335, "3711": 335, "1335": 335, "6855": 335, "337": 335, "0304": 335, "0023": 335, "8459": 335, "338": 335, "9998": 335, "4399": 335, "339": 335, "2303": 335, "1346": 335, "340": 335, "2915": 335, "7116": 335, "341": 335, "5560": 335, "0487": 335, "342": 335, "5119": 335, "061": 335, "343": 335, "3305": 335, "3705": 335, "957": 335, "344": 335, "6068": 335, "345": 335, "5731": 335, "3897": 335, "0376": 335, "347": 335, "0434": 335, "012": 335, "1300": 335, "1215": 335, "0968": 335, "0885": 335, "350": 335, "1348": 335, "0073": 335, "5052": 335, "4184": 335, "2817": 335, "8887": 335, "353": 335, "4779": 335, "1009": 335, "354": 335, "0604": 335, "599": 335, "355": 335, "4486": 335, "1176": 335, "656": 335, "356": 335, "2436": 335, "0668": 335, "8849": 335, "0012": 335, "358": 335, "7511": 335, "8804": 335, "8870": 335, "6728": 335, "360": 335, "8841": 335, "5508": 335, "361": 335, "5242": 335, "0268": 335, "6185": 335, "363": 335, "1378": 335, "0204": 335, "364": 335, "0355": 335, "685": 335, "365": 335, "4884": 335, "0231": 335, "0770": 335, "0014": 335, "6793": 335, "367": 335, "9834": 335, "863": 335, "368": 335, "6709": 335, "369": 335, "5199": 335, "9790": 335, "370": 335, "9401": 335, "7802": 335, "371": 335, "6723": 335, "372": 335, "2678": 335, "6201": 335, "373": 335, "2184": 335, "7385": 335, "374": 335, "6344": 335, "617": 335, "375": 335, "9945": 335, "0772": 335, "567": 335, "7576": 335, "0398": 335, "377": 335, "3396": 335, "0022": 335, "094": 335, "378": 335, "3073": 335, "4018": 335, "379": 335, "1869": 335, "380": 335, "0481": 335, "1117": 335, "381": 335, "6823": 335, "981": 335, "8305": 335, "0210": 335, "383": 335, "4908": 335, "0272": 335, "538": 335, "3267": 335, "0111": 335, "7965": 335, "1796": 335, "0039": 335, "5396": 335, "386": 335, "3757": 335, "0490": 335, "387": 335, "1394": 335, "4187": 335, "2986": 335, "7954": 335, "1274": 335, "0063": 335, "813": 335, "390": 335, "8706": 335, "0114": 335, "391": 335, "6922": 335, "0004": 335, "2423": 335, "392": 335, "9115": 335, "2602": 335, "393": 335, "2449": 335, "0783": 335, "394": 335, "0631": 335, "0057": 335, "7444": 335, "395": 335, "3339": 335, "0167": 335, "396": 335, "4806": 335, "397": 335, "4171": 335, "067": 335, "398": 335, "2618": 335, "5809": 335, "399": 335, "0054": 335, "3364": 335, "8733": 335, "0184": 335, "401": 335, "9137": 335, "0113": 335, "025": 335, "0386": 335, "0625": 335, "403": 335, "1332": 335, "0582": 335, "7816": 335, "404": 335, "8341": 335, "0941": 335, "854": 335, "405": 335, "8615": 335, "588": 335, "406": 335, "3849": 335, "008": 335, "407": 335, "9395": 335, "0765": 335, "055": 335, "408": 335, "2685": 335, "2235": 335, "3052": 335, "4249": 335, "410": 335, "6806": 335, "6383": 335, "3721": 335, "9981": 335, "412": 335, "1862": 335, "822": 335, "413": 335, "9811": 335, "0171": 335, "013": 335, "0252": 335, "0049": 335, "6205": 335, "415": 335, "1108": 335, "4921": 335, "9142": 335, "8130": 335, "417": 335, "1725": 335, "0036": 335, "3196": 335, "418": 335, "7795": 335, "0242": 335, "799": 335, "419": 335, "7737": 335, "0138": 335, "420": 335, "1462": 335, "0053": 335, "421": 335, "9226": 335, "6139": 335, "422": 335, "9889": 335, "0403": 335, "423": 335, "6194": 335, "0032": 335, "3989": 335, "0104": 335, "425": 335, "9960": 335, "0009": 335, "6009": 335, "426": 335, "2697": 335, "0914": 335, "427": 335, "1114": 335, "428": 335, "9862": 335, "1932": 335, "429": 335, "0637": 335, "0623": 335, "082": 335, "430": 335, "9906": 335, "2031": 335, "431": 335, "9948": 335, "0895": 335, "432": 335, "1970": 335, "0256": 335, "433": 335, "4231": 335, "0449": 335, "644": 335, "434": 335, "1039": 335, "1973": 335, "435": 335, "4561": 335, "1225": 335, "436": 335, "0211": 335, "2125": 335, "437": 335, "3866": 335, "0050": 335, "7202": 335, "438": 335, "6388": 335, "0072": 335, "439": 335, "1187": 335, "0015": 335, "5116": 335, "440": 335, "0432": 335, "0025": 335, "7809": 335, "1925": 335, "0103": 335, "442": 335, "9570": 335, "0871": 335, "5601": 335, "0165": 335, "0047": 335, "6061": 335, "2746": [335, 340], "0027": 335, "7887": 335, "446": 335, "1835": 335, "0035": 335, "855": 335, "447": 335, "8420": 335, "548": 335, "2653": 335, "0126": 335, "9736": 335, "449": 335, "0594": 335, "0119": 335, "6196": 335, "4509": 335, "0373": 335, "0620": 335, "6898": 335, "3235": 335, "687": 335, "5879": 335, "454": 335, "8406": 335, "0694": 335, "8259": 335, "0235": 335, "8500": 335, "0024": 335, "4054": 335, "2027": 335, "0894": 335, "5966": 335, "6942": 335, "0016": 335, "4254": 335, "6703": 335, "0145": 335, "8124": 335, "0218": 335, "9196": 335, "0188": 335, "8986": 335, "0884": 335, "0084": 335, "5624": 335, "465": 335, "8862": 335, "0006": 335, "5384": 335, "466": 335, "5837": 335, "467": 335, "8954": 335, "0101": 335, "6751": 335, "468": 335, "8063": 335, "0122": 335, "9635": 335, "469": 335, "0692": 335, "4216": 335, "470": 335, "1227": 335, "0586": 335, "162e": 335, "471": 335, "9690": 335, "0074": 335, "4166": 335, "6324": 335, "473": 335, "0778": 335, "474": 335, "8548": 335, "0017": 335, "4408": 335, "475": 335, "8125": 335, "1515": 335, "476": 335, "2733": 335, "0044": 335, "2836": 335, "477": 335, "7497": 335, "7681": 335, "478": 335, "8547": 335, "0105": 335, "7212": 335, "479": 335, "9848": 335, "0019": 335, "6498": 335, "1987": 335, "0011": 335, "5473": 335, "481": 335, "8991": 335, "0033": 335, "6091": 335, "9189": 335, "5771": 335, "483": 335, "6781": 335, "7542": 335, "484": 335, "5959": 335, "0064": 335, "4295": 335, "485": 335, "2547": 335, "486": 335, "0636": 335, "547": 335, "487": 335, "0065": 335, "488": 335, "1694": 335, "0083": 335, "5759": 335, "489": 335, "0493": 335, "0021": 335, "7805": 335, "490": 335, "0950": 335, "497": 335, "491": 335, "9717": 335, "3672": 335, "492": 335, "0207": 335, "493": 335, "8266": 335, "0069": 335, "5365": 335, "494": 335, "2623": 335, "5078": 335, "495": 335, "4545": 335, "09636": 335, "8754": 335, "0010": 335, "498": 335, "0031": 335, "8269": 335, "499": 335, "4082": 335, "6642": 335, "2284": 335, "501": 335, "9130": 335, "502": 335, "503": 335, "7624": 335, "0056": 335, "3858": 335, "504": 335, "0890": 335, "0042": 335, "505": 335, "7505": 335, "2157": 335, "506": 335, "8394": 335, "3413": 335, "507": 335, "9609": 335, "0041": 335, "6905": 335, "508": 335, "8467": 335, "4409": 335, "509": 335, "510": 335, "8128": 335, "3559": 335, "511": 335, "1479": 335, "0264": 335, "1589": 335, "566": 335, "513": 335, "2756": 335, "0046": 335, "5266": 335, "514": 335, "9873": 335, "0112": 335, "9314": 335, "515": 335, "3791": 335, "0721": 335, "516": 335, "4580": 335, "0758": 335, "6114": 335, "517": 335, "2431": 335, "518": 335, "1958": 335, "5553": 335, "8924": 335, "0097": 335, "520": 335, "3737": 335, "0234": 335, "521": 335, "9125": 335, "4623": 335, "3230": 335, "0589": 335, "3784": 335, "523": 335, "9482": 335, "0051": 335, "524": 335, "1979": 335, "0045": 335, "6401": 335, "1588": 335, "0048": 335, "6255": 335, "526": 335, "6084": 335, "3477": 335, "1475": 335, "0209": 335, "528": 335, "7611": 335, "1040": 335, "0099": 335, "0173": 335, "643": 335, "530": 335, "8189": 335, "4358": 335, "531": 335, "9897": 335, "532": 335, "1548": 335, "9751": 335, "533": 335, "6362": 335, "7495": 335, "534": 335, "1749": 335, "9513": 335, "535": 335, "7708": 335, "0371": 335, "536": 335, "2649": 335, "0437": 335, "537": 335, "5491": 335, "0276": 335, "6426": 335, "7294": 335, "078e": 335, "539": 335, "9928": 335, "540": 335, "7937": 335, "0124": 335, "9664": 335, "541": 335, "3342": 335, "542": 335, "2046": 335, "5496": 335, "0956": 335, "0059": 335, "545": 335, "9028": 335, "5843": 335, "546": 335, "0674": 335, "0178": 335, "797": 335, "2815": 335, "0599": 335, "1587": 335, "9276": 335, "8228": 335, "6164": 335, "551": 335, "6850": 335, "9167": 335, "3092": 335, "0670": 335, "9177": 335, "553": 335, "1599": 335, "0043": 335, "554": 335, "6367": 335, "555": 335, "3657": 335, "556": 335, "6694": 335, "2622": 335, "0372": 335, "4841": 335, "558": 335, "2707": 335, "0058": 335, "757": 335, "559": 335, "2267": 335, "5415": 335, "560": 335, "4556": 335, "0163": 335, "561": 335, "1839": 335, "0809": 335, "6262": 335, "562": 335, "0278": 335, "1112": 335, "6155": 335, "565": 335, "1427": 335, "3582": 335, "624": 335, "7870": 335, "9490": 335, "0439": 335, "8796": 335, "568": 335, "8026": 335, "612": 335, "569": 335, "3147": 335, "8486": 335, "570": 335, "7917": 335, "0129": 335, "571": 335, "9553": 335, "0020": 335, "6871": 335, "572": 335, "3132": 335, "0159": 335, "8646": 335, "573": 335, "5320": 335, "0269": 335, "574": 335, "2955": 335, "0245": 335, "575": 335, "3347": 335, "0179": 335, "9718": 335, "1629": 335, "804": 335, "577": 335, "4164": 335, "0070": 335, "4335": 335, "578": 335, "579": 335, "3049": 335, "9063": 335, "580": 335, "8785": 335, "3295": 335, "5184": 335, "0546": 335, "582": 335, "4589": 335, "583": 335, "4697": 335, "2476": 335, "584": 335, "2397": 335, "585": 335, "4953": 335, "1775": 335, "586": 335, "2258": 335, "0110": 335, "7671": 335, "587": 335, "3981": 335, "8590": 335, "0007": 335, "589": 335, "9820": 335, "4221": 335, "590": 335, "1293": 335, "0116": 335, "868": 335, "1675": 335, "5931": 335, "2910": 335, "5219": 335, "2124": 335, "1730": 335, "737": 335, "594": 335, "2914": 335, "0206": 335, "595": 335, "0172": 335, "3982": 335, "0945": 335, "0121": 335, "4789": 335, "597": 335, "3805": 335, "598": 335, "3310": 335, "5065": 335, "6028": 335, "6316": 335, "6724": 335, "6523": 335, "601": 335, "0136": 335, "4298": 335, "602": 335, "3524": 335, "2629": 335, "603": 335, "2635": 335, "7839": 335, "604": 335, "6041": 335, "8027": 335, "4170": 335, "4675": 335, "606": 335, "3153": 335, "9316": 335, "607": 335, "0649": 335, "9722": 335, "7989": 335, "0329": 335, "609": 335, "1976": 335, "6852": 335, "610": 335, "4793": 335, "1255": 335, "611": 335, "4581": 335, "0394": 335, "2047": 335, "0326": 335, "613": 335, "8967": 335, "8619": 335, "614": 335, "5906": 335, "6491": 335, "615": 335, "6634": 335, "4394": 335, "616": 335, "0624": 335, "0061": 335, "5676": 335, "3259": 335, "0131": 335, "7733": 335, "618": 335, "7515": 335, "0189": 335, "5575": 335, "619": 335, "9313": 335, "6286": 335, "620": 335, "4325": 335, "7832": 335, "621": 335, "1134": 335, "622": 335, "4572": 335, "0500": 335, "5838": 335, "623": 335, "3818": 335, "8623": 335, "1253": 335, "6622": 335, "subject": 335, "saw": [335, 337], "explain": 336, "semat": 336, "r3mtransform": 336, "embodi": 336, "ai": 336, "env_transform": [336, 340], "s3": 336, "amazonaw": 336, "r3m_50": 336, "374m": 336, "119mb": 336, "4mb": 336, "9m": 336, "7mb": 336, "8mb": 336, "0m": 336, "5mb": 336, "9mb": 336, "6m": 336, "6mb": 336, "102m": 336, "115m": 336, "0mb": 336, "120m": 336, "131m": 336, "147m": 336, "162m": 336, "168m": 336, "178m": 336, "184m": 336, "195m": 336, "199m": 336, "212m": 336, "217m": 336, "229m": 336, "1mb": 336, "244m": 336, "253m": 336, "3mb": 336, "261m": 336, "268m": 336, "2mb": 336, "277m": 336, "282m": 336, "293m": 336, "298m": 336, "308m": 336, "312m": 336, "326m": 336, "331m": 336, "342m": 336, "348m": 336, "359m": 336, "365m": 336, "wiser": 336, "conclud": 336, "_storag": [336, 337], "supervis": [337, 340], "pull": 337, "temporarili": 337, "ram": [337, 340], "batteri": 337, "dataliststorag": 337, "datalazytensorstorag": 337, "tensordidct": 337, "datalazymemmapstorag": 337, "buffer_list": 337, "lowest": 337, "medium": 337, "buffer_lazytensor": 337, "buffer_lazymemmap": 337, "tempdir": 337, "tmp0pnaxox": 337, "fullest": 337, "convini": 337, "mydata": 337, "background": 337, "question": [337, 339], "_i": 337, "artifici": 337, "0892946e": 337, "she": 337, "augment": 337, "proport": 337, "hist": 337, "barcontain": 337, "artist": 337, "revert": 337, "expens": 337, "reappear": 337, "unfold": 337, "problemat": 337, "window": 337, "4th": 337, "demo": 339, "icml": 339, "vmoen": 339, "fb": 339, "invest": 339, "platform": 339, "media": 339, "predominantli": 339, "tensordict1": 339, "tensordict2": 339, "tensordict_sampl": 339, "_sampler": 339, "_sum_tre": 339, "modulenotfounderror": 339, "28791671991348267": 339, "gym_env": 339, "noopresetenv": [339, 340], "backbone_modul": 339, "params_expand": 339, "tensordict_exp": 339, "base_modul": 339, "0137": 339, "1524": 339, "0641": 339, "viewbackward0": 339, "asstridedbackward0": 339, "8728": 339, "1334": 339, "3494": 339, "6887": 339, "6402": 339, "_safetanhbackward": 339, "1132": 339, "3430": 339, "2668": 339, "2918": 339, "6239": 339, "roughli": 339, "tensordicts_prealloc": 339, "tensordicts_stack": 339, "tensordict_rollout": [339, 340], "disclaim": 339, "concatmodul": 339, "loss_td": 339, "year": 339, "roadmap": 339, "compris": 339, "contributor": 339, "curiou": 339, "nascent": 339, "unsupervis": 340, "rom": 340, "licens": 340, "pygam": 340, "unifi": 340, "_build_env": 340, "adventur": 340, "airraid": 340, "alien": 340, "amidar": 340, "assault": 340, "8010": 340, "deserv": 340, "__episode__": 340, "__trajectory__": 340, "void": 340, "reproduct": 340, "tensordict_tprim": 340, "imshow": 340, "axesimag": 340, "0x7fe9eed33e50": 340, "inconsist": 340, "0x7feb1d73c580": 340, "swingup": 340, "wrapper1": 340, "wrapper2": 340, "obviou": 340, "truth": 340, "env0": 340, "env_transformed_bi": 340, "stanc": 340, "transformeddistribut": 340, "base_dist": 340, "concat": 340, "mofidi": 340, "transformedenviron": 340, "moderet": 340, "computation": 340, "legitim": 340, "incom": 340, "amongst": 340, "wor": 340, "convention": 340, "scope": 340, "markovian": 340, "3288080526": 340, "constain": 340, "bar_": 340, "get_someth": 340, "bar_52eaa794": 340, "9e9d": 340, "aargh": 340, "foo_list": 340, "batched_env": 340, "_dispatch_caller_parallel": 340, "0x7fea02de6520": 340, "bar_5a65eaba": 340, "9be6": 340, "bar_5a66c386": 340, "89b7": 340, "bar_5a66cbb0": 340, "8922": 340, "parallen": 340, "particularili": 340, "evolv": 340, "steadi": 340, "approx": 340, "0161": 340, "2790": 340, "1412": 340, "0568": 340, "1115": 340, "1223": 340, "_extra_st": 340, "observation_ssq": 340, "observation_sum": 340, "1321": 340, "2730": 340, "0217": 340, "2927": 340, "1927": 340, "dispach": 340, "absor": 340}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"], [11, 1, 1, "", "reset"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "RandomPolicy"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "BinaryDiscreteTensorSpec"], [25, 0, 1, "", "BoundedTensorSpec"], [26, 0, 1, "", "CompositeSpec"], [27, 0, 1, "", "DiscreteTensorSpec"], [28, 0, 1, "", "LazyStackedCompositeSpec"], [29, 0, 1, "", "LazyStackedTensorSpec"], [30, 0, 1, "", "MultiDiscreteTensorSpec"], [31, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [32, 0, 1, "", "MultiStep"], [33, 0, 1, "", "OneHotDiscreteTensorSpec"], [34, 0, 1, "", "PairwiseDataset"], [35, 0, 1, "", "PrioritizedReplayBuffer"], [36, 0, 1, "", "PromptData"], [37, 0, 1, "", "PromptTensorDictTokenizer"], [38, 0, 1, "", "ReplayBuffer"], [39, 0, 1, "", "RewardData"], [40, 0, 1, "", "RolloutFromModel"], [41, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [42, 0, 1, "", "TensorDictReplayBuffer"], [43, 0, 1, "", "TensorDictTokenizer"], [44, 0, 1, "", "TensorSpec"], [45, 0, 1, "", "TokenizedDatasetLoader"], [46, 0, 1, "", "UnboundedContinuousTensorSpec"], [47, 0, 1, "", "UnboundedDiscreteTensorSpec"], [48, 0, 1, "", "check_no_exclusive_keys"], [49, 0, 1, "", "consolidate_spec"], [50, 0, 1, "", "contains_lazy_spec"], [51, 0, 1, "", "create_infinite_iterator"], [56, 0, 1, "", "get_dataloader"]], "torchrl.data.BinaryDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "to_one_hot"], [24, 1, 1, "", "to_one_hot_spec"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "empty"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_empty"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "items"], [26, 1, 1, "", "keys"], [26, 1, 1, "", "lock_"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unlock_"], [26, 1, 1, "", "values"], [26, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "to_one_hot"], [27, 1, 1, "", "to_one_hot_spec"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "empty"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_empty"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "items"], [28, 1, 1, "", "keys"], [28, 1, 1, "", "lock_"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unlock_"], [28, 1, 1, "", "values"], [28, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to_categorical"], [31, 1, 1, "", "to_categorical_spec"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[32, 1, 1, "", "add_module"], [32, 1, 1, "", "apply"], [32, 1, 1, "", "bfloat16"], [32, 1, 1, "", "buffers"], [32, 1, 1, "", "children"], [32, 1, 1, "", "compile"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 1, 1, "", "double"], [32, 1, 1, "", "eval"], [32, 1, 1, "", "extra_repr"], [32, 1, 1, "", "float"], [32, 1, 1, "", "forward"], [32, 1, 1, "", "get_buffer"], [32, 1, 1, "", "get_extra_state"], [32, 1, 1, "", "get_parameter"], [32, 1, 1, "", "get_submodule"], [32, 1, 1, "", "half"], [32, 1, 1, "", "ipu"], [32, 1, 1, "", "load_state_dict"], [32, 1, 1, "", "modules"], [32, 1, 1, "", "named_buffers"], [32, 1, 1, "", "named_children"], [32, 1, 1, "", "named_modules"], [32, 1, 1, "", "named_parameters"], [32, 1, 1, "", "parameters"], [32, 1, 1, "", "register_backward_hook"], [32, 1, 1, "", "register_buffer"], [32, 1, 1, "", "register_forward_hook"], [32, 1, 1, "", "register_forward_pre_hook"], [32, 1, 1, "", "register_full_backward_hook"], [32, 1, 1, "", "register_full_backward_pre_hook"], [32, 1, 1, "", "register_load_state_dict_post_hook"], [32, 1, 1, "", "register_module"], [32, 1, 1, "", "register_parameter"], [32, 1, 1, "", "register_state_dict_pre_hook"], [32, 1, 1, "", "requires_grad_"], [32, 1, 1, "", "set_extra_state"], [32, 1, 1, "", "share_memory"], [32, 1, 1, "", "state_dict"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_empty"], [32, 1, 1, "", "train"], [32, 1, 1, "", "type"], [32, 1, 1, "", "xpu"], [32, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[34, 3, 1, "", "batch_size"], [34, 3, 1, "", "device"], [34, 1, 1, "", "from_dataset"], [34, 1, 1, "", "from_dict"], [34, 1, 1, "", "from_tensordict"], [34, 1, 1, "", "get"], [34, 1, 1, "", "load_state_dict"], [34, 1, 1, "", "memmap"], [34, 1, 1, "", "memmap_"], [34, 1, 1, "", "memmap_like"], [34, 1, 1, "", "set"], [34, 1, 1, "", "state_dict"], [34, 1, 1, "", "to_tensordict"], [34, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[35, 1, 1, "", "add"], [35, 1, 1, "", "append_transform"], [35, 1, 1, "", "dumps"], [35, 1, 1, "", "empty"], [35, 1, 1, "", "extend"], [35, 1, 1, "", "insert_transform"], [35, 1, 1, "", "loads"], [35, 1, 1, "", "sample"]], "torchrl.data.PromptData": [[36, 3, 1, "", "batch_size"], [36, 3, 1, "", "device"], [36, 1, 1, "", "from_dataset"], [36, 1, 1, "", "from_dict"], [36, 1, 1, "", "from_tensordict"], [36, 1, 1, "", "get"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "memmap"], [36, 1, 1, "", "memmap_"], [36, 1, 1, "", "memmap_like"], [36, 1, 1, "", "set"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to_tensordict"], [36, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[38, 1, 1, "", "add"], [38, 1, 1, "", "append_transform"], [38, 1, 1, "", "dumps"], [38, 1, 1, "", "empty"], [38, 1, 1, "", "extend"], [38, 1, 1, "", "insert_transform"], [38, 1, 1, "", "loads"], [38, 1, 1, "", "sample"]], "torchrl.data.RewardData": [[39, 3, 1, "", "batch_size"], [39, 3, 1, "", "device"], [39, 1, 1, "", "from_dict"], [39, 1, 1, "", "from_tensordict"], [39, 1, 1, "", "get"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "memmap"], [39, 1, 1, "", "memmap_"], [39, 1, 1, "", "memmap_like"], [39, 1, 1, "", "set"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to_tensordict"], [39, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[40, 1, 1, "", "create_rollout_td"], [40, 1, 1, "", "generate"], [40, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "dumps"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "loads"], [41, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "append_transform"], [42, 1, 1, "", "dumps"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert_transform"], [42, 1, 1, "", "loads"], [42, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[45, 1, 1, "", "dataset_to_tensordict"], [45, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "zero"]], "torchrl.data.datasets": [[52, 0, 1, "", "D4RLExperienceReplay"], [53, 0, 1, "", "MinariExperienceReplay"], [54, 0, 1, "", "OpenMLExperienceReplay"], [55, 0, 1, "", "RobosetExperienceReplay"]], "torchrl.data.datasets.D4RLExperienceReplay": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 1, 1, "", "dumps"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "loads"], [52, 1, 1, "", "sample"]], "torchrl.data.datasets.MinariExperienceReplay": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 1, 1, "", "dumps"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "loads"], [53, 1, 1, "", "sample"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[54, 1, 1, "", "add"], [54, 1, 1, "", "append_transform"], [54, 1, 1, "", "dumps"], [54, 1, 1, "", "empty"], [54, 1, 1, "", "extend"], [54, 1, 1, "", "insert_transform"], [54, 1, 1, "", "loads"], [54, 1, 1, "", "sample"]], "torchrl.data.datasets.RobosetExperienceReplay": [[55, 1, 1, "", "add"], [55, 1, 1, "", "append_transform"], [55, 1, 1, "", "dumps"], [55, 1, 1, "", "empty"], [55, 1, 1, "", "extend"], [55, 1, 1, "", "insert_transform"], [55, 1, 1, "", "loads"], [55, 1, 1, "", "sample"]], "torchrl.data.replay_buffers": [[57, 0, 1, "", "LazyMemmapStorage"], [58, 0, 1, "", "LazyTensorStorage"], [59, 0, 1, "", "ListStorage"], [60, 0, 1, "", "PrioritizedSampler"], [61, 0, 1, "", "RandomSampler"], [62, 0, 1, "", "RoundRobinWriter"], [63, 0, 1, "", "Sampler"], [64, 0, 1, "", "SamplerWithoutReplacement"], [65, 0, 1, "", "SliceSampler"], [66, 0, 1, "", "SliceSamplerWithoutReplacement"], [67, 0, 1, "", "Storage"], [68, 0, 1, "", "TensorDictMaxValueWriter"], [69, 0, 1, "", "TensorDictRoundRobinWriter"], [70, 0, 1, "", "TensorStorage"], [71, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[57, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[58, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[59, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[60, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[62, 1, 1, "", "add"], [62, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[67, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[68, 1, 1, "", "add"], [68, 1, 1, "", "extend"], [68, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[69, 1, 1, "", "add"], [69, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[70, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[71, 1, 1, "", "add"], [71, 1, 1, "", "extend"]], "torchrl.envs": [[72, 2, 1, "", "BraxEnv"], [73, 2, 1, "", "BraxWrapper"], [74, 2, 1, "", "DMControlEnv"], [75, 2, 1, "", "DMControlWrapper"], [76, 0, 1, "", "EnvBase"], [77, 0, 1, "", "EnvCreator"], [78, 0, 1, "", "EnvMetaData"], [79, 2, 1, "", "GymEnv"], [80, 0, 1, "", "GymLikeEnv"], [81, 2, 1, "", "GymWrapper"], [82, 2, 1, "", "HabitatEnv"], [83, 2, 1, "", "IsaacGymEnv"], [84, 2, 1, "", "IsaacGymWrapper"], [85, 2, 1, "", "JumanjiEnv"], [86, 2, 1, "", "JumanjiWrapper"], [87, 2, 1, "", "MOGymEnv"], [88, 2, 1, "", "MOGymWrapper"], [89, 2, 1, "", "MarlGroupMapType"], [90, 2, 1, "", "ModelBasedEnvBase"], [91, 2, 1, "", "MultiThreadedEnv"], [92, 2, 1, "", "MultiThreadedEnvWrapper"], [93, 2, 1, "", "OpenMLEnv"], [94, 0, 1, "", "ParallelEnv"], [95, 2, 1, "", "PettingZooEnv"], [96, 2, 1, "", "PettingZooWrapper"], [97, 2, 1, "", "RoboHiveEnv"], [98, 2, 1, "", "SMACv2Env"], [99, 2, 1, "", "SMACv2Wrapper"], [100, 0, 1, "", "SerialEnv"], [101, 2, 1, "", "VmasEnv"], [102, 2, 1, "", "VmasWrapper"], [103, 2, 1, "", "check_marl_grouping"], [104, 2, 1, "", "gym_backend"], [90, 1, 1, "", "rand_step"], [90, 1, 1, "", "reset"], [90, 1, 1, "", "rollout"], [106, 2, 1, "", "set_gym_backend"], [90, 1, 1, "", "set_seed"], [90, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[76, 3, 1, "", "action_key"], [76, 3, 1, "", "action_keys"], [76, 3, 1, "", "action_spec"], [76, 1, 1, "", "add_module"], [76, 1, 1, "", "apply"], [76, 3, 1, "", "batch_locked"], [76, 1, 1, "", "bfloat16"], [76, 1, 1, "", "buffers"], [76, 1, 1, "", "children"], [76, 1, 1, "", "compile"], [76, 1, 1, "", "cpu"], [76, 1, 1, "", "cuda"], [76, 3, 1, "", "done_key"], [76, 3, 1, "", "done_keys"], [76, 3, 1, "", "done_keys_groups"], [76, 3, 1, "", "done_spec"], [76, 1, 1, "", "double"], [76, 1, 1, "", "empty_cache"], [76, 1, 1, "", "eval"], [76, 1, 1, "", "extra_repr"], [76, 1, 1, "", "fake_tensordict"], [76, 1, 1, "", "float"], [76, 1, 1, "", "forward"], [76, 3, 1, "", "full_action_spec"], [76, 3, 1, "", "full_done_spec"], [76, 3, 1, "", "full_reward_spec"], [76, 3, 1, "", "full_state_spec"], [76, 1, 1, "", "get_buffer"], [76, 1, 1, "", "get_extra_state"], [76, 1, 1, "", "get_parameter"], [76, 1, 1, "", "get_submodule"], [76, 1, 1, "", "half"], [76, 3, 1, "", "input_spec"], [76, 1, 1, "", "ipu"], [76, 1, 1, "", "load_state_dict"], [76, 1, 1, "", "modules"], [76, 1, 1, "", "named_buffers"], [76, 1, 1, "", "named_children"], [76, 1, 1, "", "named_modules"], [76, 1, 1, "", "named_parameters"], [76, 3, 1, "", "observation_spec"], [76, 3, 1, "", "output_spec"], [76, 1, 1, "", "parameters"], [76, 1, 1, "", "rand_action"], [76, 1, 1, "id0", "rand_step"], [76, 1, 1, "", "register_backward_hook"], [76, 1, 1, "", "register_buffer"], [76, 1, 1, "", "register_forward_hook"], [76, 1, 1, "", "register_forward_pre_hook"], [76, 1, 1, "", "register_full_backward_hook"], [76, 1, 1, "", "register_full_backward_pre_hook"], [76, 1, 1, "", "register_load_state_dict_post_hook"], [76, 1, 1, "", "register_module"], [76, 1, 1, "", "register_parameter"], [76, 1, 1, "", "register_state_dict_pre_hook"], [76, 1, 1, "", "requires_grad_"], [76, 1, 1, "id1", "reset"], [76, 3, 1, "", "reset_keys"], [76, 3, 1, "", "reward_key"], [76, 3, 1, "", "reward_keys"], [76, 3, 1, "", "reward_spec"], [76, 1, 1, "id2", "rollout"], [76, 1, 1, "", "set_extra_state"], [76, 1, 1, "id3", "set_seed"], [76, 1, 1, "", "share_memory"], [76, 3, 1, "", "specs"], [76, 1, 1, "", "state_dict"], [76, 3, 1, "", "state_spec"], [76, 1, 1, "id4", "step"], [76, 1, 1, "", "step_and_maybe_reset"], [76, 1, 1, "", "to"], [76, 1, 1, "", "to_empty"], [76, 1, 1, "", "train"], [76, 1, 1, "", "type"], [76, 1, 1, "", "xpu"], [76, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[80, 3, 1, "", "action_key"], [80, 3, 1, "", "action_keys"], [80, 3, 1, "", "action_spec"], [80, 1, 1, "", "add_module"], [80, 1, 1, "", "apply"], [80, 3, 1, "", "batch_locked"], [80, 1, 1, "", "bfloat16"], [80, 1, 1, "", "buffers"], [80, 1, 1, "", "children"], [80, 1, 1, "", "close"], [80, 1, 1, "", "compile"], [80, 1, 1, "", "cpu"], [80, 1, 1, "", "cuda"], [80, 3, 1, "", "done_key"], [80, 3, 1, "", "done_keys"], [80, 3, 1, "", "done_keys_groups"], [80, 3, 1, "", "done_spec"], [80, 1, 1, "", "double"], [80, 1, 1, "", "empty_cache"], [80, 1, 1, "", "eval"], [80, 1, 1, "", "extra_repr"], [80, 1, 1, "", "fake_tensordict"], [80, 1, 1, "", "float"], [80, 1, 1, "", "forward"], [80, 3, 1, "", "full_action_spec"], [80, 3, 1, "", "full_done_spec"], [80, 3, 1, "", "full_reward_spec"], [80, 3, 1, "", "full_state_spec"], [80, 1, 1, "", "get_buffer"], [80, 1, 1, "", "get_extra_state"], [80, 1, 1, "", "get_parameter"], [80, 1, 1, "", "get_submodule"], [80, 1, 1, "", "half"], [80, 3, 1, "", "input_spec"], [80, 1, 1, "", "ipu"], [80, 1, 1, "", "load_state_dict"], [80, 1, 1, "", "modules"], [80, 1, 1, "", "named_buffers"], [80, 1, 1, "", "named_children"], [80, 1, 1, "", "named_modules"], [80, 1, 1, "", "named_parameters"], [80, 3, 1, "", "observation_spec"], [80, 3, 1, "", "output_spec"], [80, 1, 1, "", "parameters"], [80, 1, 1, "", "rand_action"], [80, 1, 1, "", "rand_step"], [80, 1, 1, "", "read_action"], [80, 1, 1, "", "read_done"], [80, 1, 1, "", "read_obs"], [80, 1, 1, "", "read_reward"], [80, 1, 1, "", "register_backward_hook"], [80, 1, 1, "", "register_buffer"], [80, 1, 1, "", "register_forward_hook"], [80, 1, 1, "", "register_forward_pre_hook"], [80, 1, 1, "", "register_full_backward_hook"], [80, 1, 1, "", "register_full_backward_pre_hook"], [80, 1, 1, "", "register_load_state_dict_post_hook"], [80, 1, 1, "", "register_module"], [80, 1, 1, "", "register_parameter"], [80, 1, 1, "", "register_state_dict_pre_hook"], [80, 1, 1, "", "requires_grad_"], [80, 1, 1, "", "reset"], [80, 3, 1, "", "reset_keys"], [80, 3, 1, "", "reward_key"], [80, 3, 1, "", "reward_keys"], [80, 3, 1, "", "reward_spec"], [80, 1, 1, "", "rollout"], [80, 1, 1, "", "set_extra_state"], [80, 1, 1, "", "set_info_dict_reader"], [80, 1, 1, "", "set_seed"], [80, 1, 1, "", "share_memory"], [80, 3, 1, "", "specs"], [80, 1, 1, "", "state_dict"], [80, 3, 1, "", "state_spec"], [80, 1, 1, "", "step"], [80, 1, 1, "", "step_and_maybe_reset"], [80, 1, 1, "", "to"], [80, 1, 1, "", "to_empty"], [80, 1, 1, "", "train"], [80, 1, 1, "", "type"], [80, 1, 1, "", "xpu"], [80, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[94, 3, 1, "", "action_key"], [94, 3, 1, "", "action_keys"], [94, 3, 1, "", "action_spec"], [94, 1, 1, "", "add_module"], [94, 1, 1, "", "apply"], [94, 3, 1, "", "batch_locked"], [94, 1, 1, "", "bfloat16"], [94, 1, 1, "", "buffers"], [94, 1, 1, "", "children"], [94, 1, 1, "", "compile"], [94, 1, 1, "", "cpu"], [94, 1, 1, "", "cuda"], [94, 3, 1, "", "done_key"], [94, 3, 1, "", "done_keys"], [94, 3, 1, "", "done_keys_groups"], [94, 3, 1, "", "done_spec"], [94, 1, 1, "", "double"], [94, 1, 1, "", "empty_cache"], [94, 1, 1, "", "eval"], [94, 1, 1, "", "extra_repr"], [94, 1, 1, "", "fake_tensordict"], [94, 1, 1, "", "float"], [94, 1, 1, "", "forward"], [94, 3, 1, "", "full_action_spec"], [94, 3, 1, "", "full_done_spec"], [94, 3, 1, "", "full_reward_spec"], [94, 3, 1, "", "full_state_spec"], [94, 1, 1, "", "get_buffer"], [94, 1, 1, "", "get_extra_state"], [94, 1, 1, "", "get_parameter"], [94, 1, 1, "", "get_submodule"], [94, 1, 1, "", "half"], [94, 3, 1, "", "input_spec"], [94, 1, 1, "", "ipu"], [94, 1, 1, "", "load_state_dict"], [94, 1, 1, "", "modules"], [94, 1, 1, "", "named_buffers"], [94, 1, 1, "", "named_children"], [94, 1, 1, "", "named_modules"], [94, 1, 1, "", "named_parameters"], [94, 3, 1, "", "observation_spec"], [94, 3, 1, "", "output_spec"], [94, 1, 1, "", "parameters"], [94, 1, 1, "", "rand_action"], [94, 1, 1, "", "rand_step"], [94, 1, 1, "", "register_backward_hook"], [94, 1, 1, "", "register_buffer"], [94, 1, 1, "", "register_forward_hook"], [94, 1, 1, "", "register_forward_pre_hook"], [94, 1, 1, "", "register_full_backward_hook"], [94, 1, 1, "", "register_full_backward_pre_hook"], [94, 1, 1, "", "register_load_state_dict_post_hook"], [94, 1, 1, "", "register_module"], [94, 1, 1, "", "register_parameter"], [94, 1, 1, "", "register_state_dict_pre_hook"], [94, 1, 1, "", "requires_grad_"], [94, 1, 1, "", "reset"], [94, 3, 1, "", "reset_keys"], [94, 3, 1, "", "reward_key"], [94, 3, 1, "", "reward_keys"], [94, 3, 1, "", "reward_spec"], [94, 1, 1, "", "rollout"], [94, 1, 1, "", "set_extra_state"], [94, 1, 1, "", "set_seed"], [94, 1, 1, "", "share_memory"], [94, 3, 1, "", "specs"], [94, 1, 1, "", "state_dict"], [94, 3, 1, "", "state_spec"], [94, 1, 1, "", "step"], [94, 1, 1, "", "step_and_maybe_reset"], [94, 1, 1, "", "to"], [94, 1, 1, "", "to_empty"], [94, 1, 1, "", "train"], [94, 1, 1, "", "type"], [94, 1, 1, "", "update_kwargs"], [94, 1, 1, "", "xpu"], [94, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[100, 3, 1, "", "action_key"], [100, 3, 1, "", "action_keys"], [100, 3, 1, "", "action_spec"], [100, 1, 1, "", "add_module"], [100, 1, 1, "", "apply"], [100, 3, 1, "", "batch_locked"], [100, 1, 1, "", "bfloat16"], [100, 1, 1, "", "buffers"], [100, 1, 1, "", "children"], [100, 1, 1, "", "compile"], [100, 1, 1, "", "cpu"], [100, 1, 1, "", "cuda"], [100, 3, 1, "", "done_key"], [100, 3, 1, "", "done_keys"], [100, 3, 1, "", "done_keys_groups"], [100, 3, 1, "", "done_spec"], [100, 1, 1, "", "double"], [100, 1, 1, "", "empty_cache"], [100, 1, 1, "", "eval"], [100, 1, 1, "", "extra_repr"], [100, 1, 1, "", "fake_tensordict"], [100, 1, 1, "", "float"], [100, 1, 1, "", "forward"], [100, 3, 1, "", "full_action_spec"], [100, 3, 1, "", "full_done_spec"], [100, 3, 1, "", "full_reward_spec"], [100, 3, 1, "", "full_state_spec"], [100, 1, 1, "", "get_buffer"], [100, 1, 1, "", "get_extra_state"], [100, 1, 1, "", "get_parameter"], [100, 1, 1, "", "get_submodule"], [100, 1, 1, "", "half"], [100, 3, 1, "", "input_spec"], [100, 1, 1, "", "ipu"], [100, 1, 1, "", "load_state_dict"], [100, 1, 1, "", "modules"], [100, 1, 1, "", "named_buffers"], [100, 1, 1, "", "named_children"], [100, 1, 1, "", "named_modules"], [100, 1, 1, "", "named_parameters"], [100, 3, 1, "", "observation_spec"], [100, 3, 1, "", "output_spec"], [100, 1, 1, "", "parameters"], [100, 1, 1, "", "rand_action"], [100, 1, 1, "", "rand_step"], [100, 1, 1, "", "register_backward_hook"], [100, 1, 1, "", "register_buffer"], [100, 1, 1, "", "register_forward_hook"], [100, 1, 1, "", "register_forward_pre_hook"], [100, 1, 1, "", "register_full_backward_hook"], [100, 1, 1, "", "register_full_backward_pre_hook"], [100, 1, 1, "", "register_load_state_dict_post_hook"], [100, 1, 1, "", "register_module"], [100, 1, 1, "", "register_parameter"], [100, 1, 1, "", "register_state_dict_pre_hook"], [100, 1, 1, "", "requires_grad_"], [100, 1, 1, "", "reset"], [100, 3, 1, "", "reset_keys"], [100, 3, 1, "", "reward_key"], [100, 3, 1, "", "reward_keys"], [100, 3, 1, "", "reward_spec"], [100, 1, 1, "", "rollout"], [100, 1, 1, "", "set_extra_state"], [100, 1, 1, "", "set_seed"], [100, 1, 1, "", "share_memory"], [100, 3, 1, "", "specs"], [100, 1, 1, "", "state_dict"], [100, 3, 1, "", "state_spec"], [100, 1, 1, "", "step"], [100, 1, 1, "", "step_and_maybe_reset"], [100, 1, 1, "", "to"], [100, 1, 1, "", "to_empty"], [100, 1, 1, "", "train"], [100, 1, 1, "", "type"], [100, 1, 1, "", "update_kwargs"], [100, 1, 1, "", "xpu"], [100, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[105, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[107, 0, 1, "", "ActionMask"], [108, 0, 1, "", "BinarizeReward"], [109, 0, 1, "", "CatFrames"], [110, 0, 1, "", "CatTensors"], [111, 0, 1, "", "CenterCrop"], [112, 0, 1, "", "ClipTransform"], [113, 0, 1, "", "Compose"], [114, 0, 1, "", "DTypeCastTransform"], [115, 0, 1, "", "DeviceCastTransform"], [116, 0, 1, "", "DiscreteActionProjection"], [117, 0, 1, "", "DoubleToFloat"], [118, 0, 1, "", "EndOfLifeTransform"], [119, 0, 1, "", "ExcludeTransform"], [120, 0, 1, "", "FiniteTensorDictCheck"], [121, 0, 1, "", "FlattenObservation"], [122, 0, 1, "", "FrameSkipTransform"], [123, 0, 1, "", "GrayScale"], [124, 0, 1, "", "InitTracker"], [125, 0, 1, "", "KLRewardTransform"], [126, 0, 1, "", "NoopResetEnv"], [127, 0, 1, "", "ObservationNorm"], [128, 0, 1, "", "ObservationTransform"], [129, 0, 1, "", "PermuteTransform"], [130, 0, 1, "", "PinMemoryTransform"], [131, 0, 1, "", "R3MTransform"], [132, 0, 1, "", "RandomCropTensorDict"], [133, 0, 1, "", "RenameTransform"], [134, 0, 1, "", "Resize"], [135, 0, 1, "", "Reward2GoTransform"], [136, 0, 1, "", "RewardClipping"], [137, 0, 1, "", "RewardScaling"], [138, 0, 1, "", "RewardSum"], [139, 0, 1, "", "SelectTransform"], [140, 0, 1, "", "SqueezeTransform"], [141, 0, 1, "", "StepCounter"], [142, 0, 1, "", "TargetReturn"], [143, 0, 1, "", "TensorDictPrimer"], [144, 0, 1, "", "TimeMaxPool"], [145, 0, 1, "", "ToTensorImage"], [146, 0, 1, "", "Transform"], [147, 0, 1, "", "TransformedEnv"], [148, 0, 1, "", "UnsqueezeTransform"], [149, 0, 1, "", "VC1Transform"], [150, 0, 1, "", "VIPRewardTransform"], [151, 0, 1, "", "VIPTransform"], [152, 0, 1, "", "VecGymEnvTransform"], [153, 0, 1, "", "VecNorm"], [154, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionMask": [[107, 1, 1, "", "forward"]], "torchrl.envs.transforms.BinarizeReward": [[108, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[109, 1, 1, "", "forward"], [109, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[110, 1, 1, "", "forward"], [110, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[111, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[112, 1, 1, "", "transform_observation_spec"], [112, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[113, 1, 1, "", "forward"], [113, 1, 1, "", "to"], [113, 1, 1, "", "transform_env_device"], [113, 1, 1, "", "transform_input_spec"], [113, 1, 1, "", "transform_observation_spec"], [113, 1, 1, "", "transform_output_spec"], [113, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[114, 1, 1, "", "forward"], [114, 1, 1, "", "transform_input_spec"], [114, 1, 1, "", "transform_observation_spec"], [114, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[115, 1, 1, "", "forward"], [115, 1, 1, "", "transform_done_spec"], [115, 1, 1, "", "transform_env_device"], [115, 1, 1, "", "transform_input_spec"], [115, 1, 1, "", "transform_observation_spec"], [115, 1, 1, "", "transform_output_spec"], [115, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[116, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[118, 1, 1, "", "forward"], [118, 1, 1, "", "register_keys"], [118, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[119, 1, 1, "", "forward"], [119, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[120, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[121, 1, 1, "", "forward"], [121, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[122, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[123, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[124, 1, 1, "", "forward"], [124, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[125, 1, 1, "", "forward"], [125, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[127, 1, 1, "", "init_stats"], [127, 1, 1, "", "transform_input_spec"], [127, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[129, 1, 1, "", "transform_input_spec"], [129, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[130, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[131, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[132, 1, 1, "", "forward"]], "torchrl.envs.transforms.RenameTransform": [[133, 1, 1, "", "forward"], [133, 1, 1, "", "transform_input_spec"], [133, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[134, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[135, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[136, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[137, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[138, 1, 1, "", "forward"], [138, 1, 1, "", "transform_input_spec"], [138, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[139, 1, 1, "", "forward"], [139, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.StepCounter": [[141, 1, 1, "", "forward"], [141, 1, 1, "", "transform_input_spec"], [141, 1, 1, "", "transform_observation_spec"], [141, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[142, 1, 1, "", "forward"], [142, 1, 1, "", "transform_input_spec"], [142, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[143, 1, 1, "", "forward"], [143, 1, 1, "", "to"], [143, 1, 1, "", "transform_input_spec"], [143, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[144, 1, 1, "", "forward"], [144, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[145, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[146, 3, 1, "", "container"], [146, 1, 1, "", "forward"], [146, 3, 1, "", "parent"], [146, 1, 1, "", "to"], [146, 1, 1, "", "transform_done_spec"], [146, 1, 1, "", "transform_env_device"], [146, 1, 1, "", "transform_input_spec"], [146, 1, 1, "", "transform_observation_spec"], [146, 1, 1, "", "transform_output_spec"], [146, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[147, 3, 1, "", "batch_locked"], [147, 1, 1, "", "empty_cache"], [147, 1, 1, "", "eval"], [147, 3, 1, "", "input_spec"], [147, 1, 1, "", "load_state_dict"], [147, 3, 1, "", "output_spec"], [147, 1, 1, "", "set_missing_tolerance"], [147, 1, 1, "", "set_seed"], [147, 1, 1, "", "state_dict"], [147, 1, 1, "", "to"], [147, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[148, 1, 1, "", "transform_input_spec"], [148, 1, 1, "", "transform_observation_spec"], [148, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[149, 1, 1, "", "forward"], [149, 1, 1, "", "make_noload_model"], [149, 1, 1, "", "to"], [149, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[150, 1, 1, "", "forward"], [150, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[151, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[152, 1, 1, "", "forward"], [152, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[153, 1, 1, "", "build_td_for_shared_vecnorm"], [153, 1, 1, "", "forward"], [153, 1, 1, "", "get_extra_state"], [153, 1, 1, "", "set_extra_state"], [153, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[155, 2, 1, "", "check_env_specs"], [156, 2, 1, "", "exploration_mode"], [157, 2, 1, "", "exploration_type"], [158, 2, 1, "", "get_available_libraries"], [159, 2, 1, "", "make_composite_from_td"], [160, 2, 1, "", "set_exploration_mode"], [161, 2, 1, "", "set_exploration_type"], [162, 2, 1, "", "step_mdp"], [163, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[164, 0, 1, "", "CEMPlanner"], [165, 0, 1, "", "Conv3dNet"], [166, 0, 1, "", "ConvNet"], [167, 0, 1, "", "DTActor"], [168, 0, 1, "", "DdpgCnnActor"], [169, 0, 1, "", "DdpgCnnQNet"], [170, 0, 1, "", "DdpgMlpActor"], [171, 0, 1, "", "DdpgMlpQNet"], [172, 0, 1, "", "DecisionTransformer"], [173, 0, 1, "", "Delta"], [174, 0, 1, "", "DistributionalDQNnet"], [175, 0, 1, "", "DistributionalQValueHook"], [176, 0, 1, "", "DreamerActor"], [177, 0, 1, "", "DuelingCnnDQNet"], [178, 0, 1, "", "GRU"], [179, 0, 1, "", "GRUCell"], [180, 0, 1, "", "GRUModule"], [181, 0, 1, "", "IndependentNormal"], [182, 0, 1, "", "LSTM"], [183, 0, 1, "", "LSTMCell"], [184, 0, 1, "", "LSTMModule"], [185, 0, 1, "", "LSTMNet"], [186, 0, 1, "", "MLP"], [187, 0, 1, "", "MPCPlannerBase"], [188, 0, 1, "", "MPPIPlanner"], [189, 0, 1, "", "MaskedCategorical"], [190, 0, 1, "", "MaskedOneHotCategorical"], [191, 0, 1, "", "MultiAgentConvNet"], [192, 0, 1, "", "MultiAgentMLP"], [193, 0, 1, "", "NoisyLazyLinear"], [194, 0, 1, "", "NoisyLinear"], [195, 0, 1, "", "NormalParamWrapper"], [196, 0, 1, "", "ObsDecoder"], [197, 0, 1, "", "ObsEncoder"], [198, 0, 1, "", "OneHotCategorical"], [199, 0, 1, "", "OnlineDTActor"], [200, 0, 1, "", "QMixer"], [201, 0, 1, "", "QValueHook"], [202, 0, 1, "", "RSSMPosterior"], [203, 0, 1, "", "RSSMPrior"], [204, 0, 1, "", "Squeeze2dLayer"], [205, 0, 1, "", "SqueezeLayer"], [206, 0, 1, "", "TanhDelta"], [207, 0, 1, "", "TanhNormal"], [208, 0, 1, "", "TruncatedNormal"], [209, 0, 1, "", "VDNMixer"], [210, 0, 1, "", "VmapModule"], [211, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[164, 1, 1, "", "planning"]], "torchrl.modules.Conv3dNet": [[165, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[166, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[167, 1, 1, "", "default_config"], [167, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[168, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[169, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[170, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[171, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[172, 0, 1, "", "DTConfig"], [172, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[173, 1, 1, "", "log_prob"], [173, 3, 1, "", "mean"], [173, 3, 1, "", "mode"], [173, 1, 1, "", "rsample"], [173, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[174, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[176, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[177, 1, 1, "", "forward"]], "torchrl.modules.GRU": [[178, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[179, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[180, 1, 1, "", "forward"], [180, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[181, 3, 1, "", "mode"]], "torchrl.modules.LSTM": [[182, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[183, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[184, 1, 1, "", "forward"], [184, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.LSTMNet": [[185, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[186, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[187, 1, 1, "", "forward"], [187, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[188, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[189, 1, 1, "", "log_prob"], [189, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[190, 1, 1, "", "log_prob"], [190, 1, 1, "", "rsample"], [190, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentConvNet": [[191, 1, 1, "", "forward"]], "torchrl.modules.MultiAgentMLP": [[192, 1, 1, "", "forward"]], "torchrl.modules.NoisyLazyLinear": [[193, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[195, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[196, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[197, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[198, 1, 1, "", "log_prob"], [198, 3, 1, "", "mode"], [198, 1, 1, "", "rsample"], [198, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[199, 1, 1, "", "default_config"], [199, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[200, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[202, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[203, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[205, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[206, 3, 1, "", "mean"], [206, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[207, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[208, 1, 1, "", "log_prob"], [208, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[209, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[210, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[212, 0, 1, "", "Actor"], [213, 0, 1, "", "ActorCriticOperator"], [214, 0, 1, "", "ActorCriticWrapper"], [215, 0, 1, "", "ActorValueOperator"], [216, 0, 1, "", "AdditiveGaussianWrapper"], [217, 0, 1, "", "DecisionTransformerInferenceWrapper"], [218, 0, 1, "", "DistributionalQValueActor"], [219, 0, 1, "", "DistributionalQValueModule"], [220, 0, 1, "", "EGreedyModule"], [221, 0, 1, "", "EGreedyWrapper"], [222, 0, 1, "", "LMHeadActorValueOperator"], [223, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [224, 0, 1, "", "ProbabilisticActor"], [225, 0, 1, "", "QValueActor"], [226, 0, 1, "", "QValueModule"], [227, 0, 1, "", "SafeModule"], [228, 0, 1, "", "SafeProbabilisticModule"], [229, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [230, 0, 1, "", "SafeSequential"], [231, 0, 1, "", "TanhModule"], [232, 0, 1, "", "ValueOperator"], [233, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[213, 1, 1, "", "get_critic_operator"], [213, 1, 1, "", "get_policy_head"], [213, 1, 1, "", "get_value_head"], [213, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[214, 1, 1, "", "get_policy_head"], [214, 1, 1, "", "get_policy_operator"], [214, 1, 1, "", "get_value_head"], [214, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[215, 1, 1, "", "get_policy_head"], [215, 1, 1, "", "get_policy_operator"], [215, 1, 1, "", "get_value_head"], [215, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[216, 1, 1, "", "forward"], [216, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[217, 1, 1, "", "forward"], [217, 1, 1, "", "mask_context"], [217, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[219, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[220, 1, 1, "", "forward"], [220, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.EGreedyWrapper": [[221, 1, 1, "", "forward"], [221, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[223, 1, 1, "", "forward"], [223, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[226, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[227, 1, 1, "", "random"], [227, 1, 1, "", "random_sample"], [227, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[228, 1, 1, "", "random"], [228, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[231, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[233, 1, 1, "", "get_reward_operator"], [233, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[234, 0, 1, "", "biased_softplus"], [235, 0, 1, "", "inv_softplus"], [236, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[234, 1, 1, "", "forward"]], "torchrl.objectives": [[237, 0, 1, "", "A2CLoss"], [238, 0, 1, "", "CQLLoss"], [239, 0, 1, "", "ClipPPOLoss"], [240, 0, 1, "", "DDPGLoss"], [241, 0, 1, "", "DQNLoss"], [242, 0, 1, "", "DTLoss"], [243, 0, 1, "", "DiscreteCQLLoss"], [244, 0, 1, "", "DiscreteSACLoss"], [245, 0, 1, "", "DistributionalDQNLoss"], [246, 0, 1, "", "DreamerActorLoss"], [247, 0, 1, "", "DreamerModelLoss"], [248, 0, 1, "", "DreamerValueLoss"], [249, 0, 1, "", "HardUpdate"], [250, 0, 1, "", "IQLLoss"], [251, 0, 1, "", "KLPENPPOLoss"], [252, 0, 1, "", "LossModule"], [253, 0, 1, "", "OnlineDTLoss"], [254, 0, 1, "", "PPOLoss"], [255, 0, 1, "", "REDQLoss"], [256, 0, 1, "", "ReinforceLoss"], [257, 0, 1, "", "SACLoss"], [258, 0, 1, "", "SoftUpdate"], [259, 0, 1, "", "TD3Loss"], [260, 0, 1, "", "ValueEstimators"], [261, 0, 1, "", "default_value_kwargs"], [262, 0, 1, "", "distance_loss"], [263, 0, 1, "", "hold_out_net"], [264, 0, 1, "", "hold_out_params"], [266, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[237, 1, 1, "", "forward"], [237, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[238, 1, 1, "", "forward"], [238, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[239, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[240, 1, 1, "", "forward"], [240, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[241, 1, 1, "", "forward"], [241, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[242, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[243, 1, 1, "", "forward"], [243, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteSACLoss": [[244, 1, 1, "", "forward"], [244, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[245, 1, 1, "", "forward"], [245, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[246, 1, 1, "", "forward"], [246, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[247, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[248, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[250, 1, 1, "", "forward"], [250, 1, 1, "", "loss_value_diff"], [250, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[251, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[252, 1, 1, "", "convert_to_functional"], [252, 1, 1, "", "forward"], [252, 1, 1, "", "make_value_estimator"], [252, 1, 1, "", "named_parameters"], [252, 1, 1, "", "parameters"], [252, 1, 1, "", "set_keys"], [252, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[253, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[254, 1, 1, "", "forward"], [254, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[255, 1, 1, "", "forward"], [255, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[256, 1, 1, "", "forward"], [256, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[257, 1, 1, "", "forward"], [257, 1, 1, "", "load_state_dict"], [257, 1, 1, "", "make_value_estimator"], [257, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3Loss": [[259, 1, 1, "", "forward"], [259, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[265, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[265, 1, 1, "", "forward"], [265, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[267, 0, 1, "", "GAE"], [268, 0, 1, "", "TD0Estimator"], [269, 0, 1, "", "TD1Estimator"], [270, 0, 1, "", "TDLambdaEstimator"], [271, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[267, 1, 1, "", "forward"], [267, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[268, 1, 1, "", "forward"], [268, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[269, 1, 1, "", "forward"], [269, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[270, 1, 1, "", "forward"], [270, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[271, 1, 1, "", "forward"], [271, 1, 1, "", "set_keys"], [271, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[272, 0, 1, "", "generalized_advantage_estimate"], [273, 0, 1, "", "reward2go"], [274, 0, 1, "", "td0_advantage_estimate"], [275, 0, 1, "", "td0_return_estimate"], [276, 0, 1, "", "td1_advantage_estimate"], [277, 0, 1, "", "td1_return_estimate"], [278, 0, 1, "", "td_lambda_advantage_estimate"], [279, 0, 1, "", "td_lambda_return_estimate"], [280, 0, 1, "", "vec_generalized_advantage_estimate"], [281, 0, 1, "", "vec_td1_advantage_estimate"], [282, 0, 1, "", "vec_td1_return_estimate"], [283, 0, 1, "", "vec_td_lambda_advantage_estimate"], [284, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[285, 2, 1, "", "TensorDictRecorder"], [286, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[287, 2, 1, "", "Logger"], [289, 2, 1, "", "generate_exp_name"], [290, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[288, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[291, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[292, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[293, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[294, 0, 1, "", "BatchSubSampler"], [295, 0, 1, "", "ClearCudaCache"], [296, 0, 1, "", "CountFramesLog"], [297, 0, 1, "", "LogReward"], [298, 0, 1, "", "OptimizerHook"], [299, 0, 1, "", "Recorder"], [300, 0, 1, "", "ReplayBufferTrainer"], [301, 0, 1, "", "RewardNormalizer"], [302, 0, 1, "", "SelectKeys"], [303, 0, 1, "", "Trainer"], [304, 0, 1, "", "TrainerHookBase"], [305, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[294, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[295, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[296, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[297, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[298, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[299, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[300, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[301, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[302, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[304, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[305, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[306, 2, 1, "", "correct_for_frame_skip"], [307, 2, 1, "", "get_stats_random_rollout"], [308, 2, 1, "", "make_collector_offpolicy"], [309, 2, 1, "", "make_collector_onpolicy"], [310, 2, 1, "", "make_dqn_loss"], [311, 2, 1, "", "make_redq_loss"], [312, 2, 1, "", "make_redq_model"], [313, 2, 1, "", "make_replay_buffer"], [314, 2, 1, "", "make_target_updater"], [315, 2, 1, "", "make_trainer"], [316, 2, 1, "", "parallel_env_constructor"], [317, 2, 1, "", "sync_async_collector"], [318, 2, 1, "", "sync_sync_collector"], [319, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 323, 324, 325, 326, 328, 329, 330, 334, 335, 339, 340], "tutori": [0, 330, 334], "basic": [0, 337], "intermedi": [0, 8], "advanc": 0, "refer": [0, 321], "knowledg": [0, 322], "base": [0, 7, 322], "indic": 0, "tabl": 0, "collector": [1, 328, 329, 330, 331, 334, 339], "packag": [1, 2, 3, 323, 324, 325, 326], "singl": [1, 4], "node": 1, "data": [1, 2, 4, 328, 329, 330, 334, 339], "distribut": [1, 323], "helper": [1, 3], "function": [1, 4, 324, 329, 330, 334, 339], "replai": [2, 328, 329, 330, 331, 334, 337, 339], "buffer": [2, 328, 329, 330, 331, 334, 337, 339], "compos": [2, 113], "share": 2, "across": 2, "process": 2, "store": [2, 329], "trajectori": 2, "checkpoint": [2, 325], "dataset": 2, "tensorspec": [2, 44], "reinforc": [2, 324, 330, 334], "learn": [2, 4, 330, 334], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 323, 324, 325], "env": [3, 335, 339, 340], "vector": [3, 339], "multi": [3, 323, 324, 333, 334], "agent": [3, 4, 323, 324, 334], "environ": [3, 4, 6, 7, 328, 329, 330, 331, 333, 334, 335, 339, 340], "transform": [3, 146, 328, 330, 334, 335, 337, 339, 340], "clone": [3, 7], "mask": 3, "action": [3, 4, 331, 335], "record": [3, 299, 325, 328], "domain": [3, 323], "specif": [3, 323, 333], "librari": [3, 339], "thing": [4, 328, 335], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 339], "gener": [4, 323], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 328, 335], "algorithm": [4, 323], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 328, 329], "return": [4, 324], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "polici": [4, 328, 330, 331, 333, 334, 335], "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 339], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 333], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 328, 329, 330], "standard": 4, "explor": [4, 323, 328, 329], "valu": [4, 323, 324, 328, 330, 331], "loss": [4, 328, 329, 330, 331, 334], "earli": 4, "train": [4, 8, 324, 328, 330, 331, 334, 335], "roughli": 4, "uniformli": 4, "random": [4, 334], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "episod": 4, "remain": 4, "constant": [4, 329], "increas": 4, "an": [4, 330, 331, 335], "dynam": [4, 337], "can": 4, "low": 4, "forward": [4, 328], "model": [4, 323, 328, 329, 331, 336, 339], "also": 4, "us": [4, 6, 9, 331, 336, 337, 339], "offlin": 4, "observ": [4, 328], "space": 4, "effect": [4, 335], "dramat": 4, "dure": [4, 7], "high": 4, "dimension": 4, "work": [5, 6, 7], "gym": [5, 340], "what": 5, "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "instal": [6, 7, 339], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": 7, "render": [7, 334, 340], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 328], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 335], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "randompolici": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "binarydiscretetensorspec": 24, "boundedtensorspec": 25, "compositespec": 26, "discretetensorspec": 27, "lazystackedcompositespec": 28, "lazystackedtensorspec": 29, "multidiscretetensorspec": 30, "multionehotdiscretetensorspec": 31, "multistep": 32, "onehotdiscretetensorspec": 33, "pairwisedataset": 34, "prioritizedreplaybuff": 35, "promptdata": 36, "prompttensordicttoken": 37, "replaybuff": 38, "rewarddata": 39, "rolloutfrommodel": 40, "tensordictprioritizedreplaybuff": 41, "tensordictreplaybuff": 42, "tensordicttoken": 43, "tokenizeddatasetload": 45, "unboundedcontinuoustensorspec": 46, "unboundeddiscretetensorspec": 47, "check_no_exclusive_kei": 48, "consolidate_spec": 49, "contains_lazy_spec": 50, "create_infinite_iter": 51, "d4rlexperiencereplai": 52, "minariexperiencereplai": 53, "openmlexperiencereplai": 54, "robosetexperiencereplai": 55, "get_dataload": 56, "lazymemmapstorag": 57, "lazytensorstorag": 58, "liststorag": 59, "prioritizedsampl": 60, "randomsampl": 61, "roundrobinwrit": 62, "sampler": 63, "samplerwithoutreplac": 64, "slicesampl": 65, "slicesamplerwithoutreplac": 66, "storag": [67, 328, 337], "tensordictmaxvaluewrit": 68, "tensordictroundrobinwrit": 69, "tensorstorag": 70, "writer": 71, "braxenv": 72, "braxwrapp": 73, "dmcontrolenv": 74, "dmcontrolwrapp": 75, "envbas": [76, 335], "envcreat": 77, "envmetadata": 78, "gymenv": 79, "gymlikeenv": 80, "gymwrapp": 81, "habitatenv": 82, "isaacgymenv": 83, "isaacgymwrapp": 84, "jumanjienv": 85, "jumanjiwrapp": 86, "mogymenv": 87, "mogymwrapp": 88, "marlgroupmaptyp": 89, "modelbasedenvbas": 90, "multithreadedenv": 91, "multithreadedenvwrapp": 92, "openmlenv": 93, "parallelenv": 94, "pettingzooenv": 95, "pettingzoowrapp": 96, "robohiveenv": 97, "smacv2env": 98, "smacv2wrapp": 99, "serialenv": 100, "vmasenv": 101, "vmaswrapp": 102, "check_marl_group": 103, "gym_backend": 104, "dreamerenv": 105, "set_gym_backend": 106, "actionmask": 107, "binarizereward": 108, "catfram": [109, 337], "cattensor": 110, "centercrop": 111, "cliptransform": 112, "dtypecasttransform": 114, "devicecasttransform": 115, "discreteactionproject": 116, "doubletofloat": 117, "endoflifetransform": 118, "excludetransform": 119, "finitetensordictcheck": 120, "flattenobserv": 121, "frameskiptransform": 122, "grayscal": 123, "inittrack": 124, "klrewardtransform": 125, "noopresetenv": 126, "observationnorm": 127, "observationtransform": 128, "permutetransform": 129, "pinmemorytransform": 130, "r3mtransform": 131, "randomcroptensordict": 132, "renametransform": 133, "resiz": 134, "reward2gotransform": 135, "rewardclip": 136, "rewardsc": 137, "rewardsum": 138, "selecttransform": 139, "squeezetransform": 140, "stepcount": 141, "targetreturn": 142, "tensordictprim": 143, "timemaxpool": 144, "totensorimag": 145, "transformedenv": 147, "unsqueezetransform": 148, "vc1transform": 149, "viprewardtransform": 150, "viptransform": 151, "vecgymenvtransform": 152, "vecnorm": [153, 340], "gsdenois": 154, "check_env_spec": 155, "exploration_mod": 156, "exploration_typ": 157, "get_available_librari": 158, "make_composite_from_td": 159, "set_exploration_mod": 160, "set_exploration_typ": 161, "step_mdp": 162, "terminated_or_trunc": 163, "cemplann": 164, "conv3dnet": 165, "convnet": 166, "dtactor": 167, "ddpgcnnactor": 168, "ddpgcnnqnet": 169, "ddpgmlpactor": 170, "ddpgmlpqnet": 171, "decisiontransform": 172, "delta": 173, "distributionaldqnnet": 174, "distributionalqvaluehook": 175, "dreameractor": 176, "duelingcnndqnet": 177, "gru": 178, "grucel": 179, "grumodul": 180, "independentnorm": 181, "lstm": [182, 331], "lstmcell": 183, "lstmmodul": 184, "lstmnet": 185, "mlp": [186, 331], "mpcplannerbas": 187, "mppiplann": 188, "maskedcategor": 189, "maskedonehotcategor": 190, "multiagentconvnet": 191, "multiagentmlp": 192, "noisylazylinear": 193, "noisylinear": 194, "normalparamwrapp": 195, "obsdecod": 196, "obsencod": 197, "onehotcategor": 198, "onlinedtactor": 199, "qmixer": [200, 324], "qvaluehook": 201, "rssmposterior": 202, "rssmprior": 203, "squeeze2dlay": 204, "squeezelay": 205, "tanhdelta": 206, "tanhnorm": 207, "truncatednorm": 208, "vdnmixer": 209, "vmapmodul": 210, "reset_nois": 211, "actor": [212, 323, 328], "actorcriticoper": 213, "actorcriticwrapp": 214, "actorvalueoper": 215, "additivegaussianwrapp": 216, "decisiontransformerinferencewrapp": 217, "distributionalqvalueactor": 218, "distributionalqvaluemodul": 219, "egreedymodul": 220, "egreedywrapp": 221, "lmheadactorvalueoper": 222, "ornsteinuhlenbeckprocesswrapp": 223, "probabilisticactor": 224, "qvalueactor": 225, "qvaluemodul": 226, "safemodul": [227, 323], "safeprobabilisticmodul": 228, "safeprobabilistictensordictsequenti": 229, "safesequenti": 230, "tanhmodul": 231, "valueoper": 232, "worldmodelwrapp": 233, "biased_softplu": 234, "inv_softplu": 235, "map": 236, "a2closs": 237, "cqlloss": 238, "clipppoloss": 239, "ddpgloss": 240, "dqnloss": 241, "dtloss": 242, "discretecqlloss": 243, "discretesacloss": 244, "distributionaldqnloss": 245, "dreameractorloss": 246, "dreamermodelloss": 247, "dreamervalueloss": 248, "hardupd": 249, "iqlloss": 250, "klpenppoloss": 251, "lossmodul": [252, 328], "onlinedtloss": 253, "ppoloss": 254, "redqloss": 255, "reinforceloss": 256, "sacloss": 257, "softupd": 258, "td3loss": 259, "valueestim": 260, "default_value_kwarg": 261, "distance_loss": 262, "hold_out_net": 263, "hold_out_param": 264, "qmixerloss": 265, "next_state_valu": 266, "gae": 267, "td0estim": 268, "td1estim": 269, "tdlambdaestim": 270, "valueestimatorbas": 271, "generalized_advantage_estim": 272, "reward2go": 273, "td0_advantage_estim": 274, "td0_return_estim": 275, "td1_advantage_estim": 276, "td1_return_estim": 277, "td_lambda_advantage_estim": 278, "td_lambda_return_estim": 279, "vec_generalized_advantage_estim": 280, "vec_td1_advantage_estim": 281, "vec_td1_return_estim": 282, "vec_td_lambda_advantage_estim": 283, "vec_td_lambda_return_estim": 284, "tensordictrecord": 285, "videorecord": 286, "logger": [287, 325], "csvlogger": 288, "generate_exp_nam": 289, "get_logg": 290, "mlflowlogg": 291, "tensorboardlogg": 292, "wandblogg": 293, "batchsubsampl": 294, "clearcudacach": 295, "countframeslog": 296, "logreward": 297, "optimizerhook": 298, "replaybuffertrain": 300, "rewardnorm": 301, "selectkei": 302, "trainer": [303, 325, 329], "trainerhookbas": 304, "updateweight": 305, "correct_for_frame_skip": 306, "get_stats_random_rollout": 307, "make_collector_offpolici": 308, "make_collector_onpolici": 309, "make_dqn_loss": 310, "make_redq_loss": 311, "make_redq_model": 312, "make_replay_buff": 313, "make_target_updat": 314, "make_train": 315, "parallel_env_constructor": 316, "sync_async_collector": 317, "sync_sync_collector": 318, "transformed_env_constructor": 319, "readm": [320, 332], "tuto": [320, 332], "api": 321, "contribut": [322, 339], "content": 322, "modul": [323, 328, 331, 339], "tensordict": [323, 337, 339], "wrapper": 323, "probabilist": 323, "q": [323, 329, 331], "oper": 323, "join": 323, "hook": [323, 325, 329], "regular": 323, "planner": 323, "object": [324, 328, 339], "dqn": [324, 329, 331], "ddpg": [324, 328], "sac": 324, "redq": 324, "iql": 324, "cql": 324, "dt": 324, "td3": 324, "ppo": [324, 330, 334], "a2c": 324, "dreamer": 324, "builder": 325, "_util": 326, "comput": [327, 329, 335, 338], "time": [327, 328, 338], "code": [328, 335], "setup": [328, 331], "The": 328, "__init__": 328, "method": 328, "estim": 328, "put": 328, "togeth": [328, 335], "call": 328, "parallel": [328, 333, 340], "execut": [328, 333, 335], "stat": 328, "build": [328, 329, 337], "evalu": 328, "batch": [328, 335, 337], "size": [328, 337], "construct": 328, "target": [328, 329], "network": [328, 329, 330, 331, 334], "updat": 328, "experi": [328, 335], "result": [328, 330, 334], "conclus": [328, 329, 330, 331, 334, 335, 337], "A": [329, 337], "exampl": [329, 337], "deep": 329, "collect": [329, 330], "paramet": [329, 330], "hyperparamet": [329, 330, 334], "regist": 329, "possibl": 329, "improv": 329, "defin": [330, 334], "loop": [330, 331, 334, 335], "next": [330, 334], "step": [330, 334, 340], "recurr": 331, "overview": 331, "convolut": 331, "select": 331, "further": 331, "read": 331, "divers": 333, "rollout": [333, 334, 335, 340], "critic": 334, "pendulum": 335, "write": 335, "_step": 335, "reset": [335, 340], "simul": 335, "_reset": 335, "metadata": 335, "_spec": 335, "spec": [335, 340], "shape": 335, "seed": [335, 340], "wrap": 335, "class": [335, 339], "test": 335, "our": 335, "custom": [335, 337], "simpl": 335, "pretrain": 336, "vanilla": 337, "integr": 337, "tensorclass": 337, "sampl": 337, "iter": 337, "over": 337, "fix": 337, "priorit": 337, "save": 337, "raw": 337, "imag": 337, "more": 337, "complex": 337, "introduct": 339, "config": 339, "tensordictmodul": 339, "sequenc": 339, "program": 339, "ensembl": 339, "meta": 339, "special": 339, "state": 339, "frame_skip": 340, "deepmind": 340, "control": 340, "devic": 340, "run": 340, "close": 340, "access": 340, "attribut": 340, "kwarg": 340}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})