Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "D4RLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "RandomSampler", "RoundRobinWriter", "Sampler", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerEnv", "set_gym_backend", "ActionMask", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "CEMPlanner", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "EGreedyWrapper", "LMHeadActorValueOperator", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "README Tutos", "Task-specific policy in multi-task environments", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 46, 47, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 65, 70, 71, 72, 73, 74, 77, 79, 80, 83, 93, 94, 96, 97, 98, 99, 103, 106, 110, 112, 113, 115, 118, 120, 121, 124, 130, 131, 135, 136, 137, 139, 146, 147, 148, 149, 150, 151, 153, 156, 157, 159, 169, 170, 172, 173, 174, 175, 182, 184, 186, 188, 189, 190, 191, 195, 196, 197, 201, 208, 209, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 232, 233, 237, 240, 241, 242, 243, 245, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 269, 271, 272, 273, 274, 275, 290, 293, 302, 303, 307, 308, 311, 320, 321, 322, 323, 326, 327, 328, 332, 333, 337, 338, 340, 341, 343, 344], "open": [0, 5, 7, 11, 55, 333, 338, 343], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344], "reinforc": [0, 3, 9, 113, 172, 173, 174, 175, 179, 223, 227, 241, 242, 246, 247, 249, 253, 254, 260, 261, 262, 325, 331, 333, 336, 339, 342, 343], "learn": [0, 3, 7, 8, 9, 18, 32, 54, 56, 57, 113, 172, 173, 174, 175, 179, 192, 198, 223, 227, 241, 242, 246, 247, 249, 253, 254, 259, 260, 261, 262, 325, 327, 328, 331, 332, 333, 335, 336, 337, 339, 341, 342, 343, 344], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 16, 17, 93, 146, 198, 216, 228, 236, 241, 256, 258, 298, 326, 327, 328, 329, 332, 333, 334, 338, 340, 341, 344], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 18, 19, 20, 37, 43, 87, 94, 162, 325, 326, 327, 330, 332, 333, 334, 338, 339, 344], "pytorch": [0, 1, 2, 3, 53, 149, 182, 186, 197, 198, 307, 326, 329, 332, 334, 335, 338, 339, 340, 343, 344], "It": [0, 2, 3, 4, 7, 32, 37, 40, 41, 43, 45, 52, 53, 55, 56, 57, 79, 83, 85, 93, 94, 97, 98, 99, 103, 112, 122, 129, 131, 136, 146, 151, 156, 159, 172, 174, 180, 195, 196, 204, 206, 207, 213, 214, 223, 224, 227, 230, 232, 241, 242, 243, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 262, 263, 269, 270, 271, 303, 316, 326, 327, 328, 332, 333, 335, 338, 339, 340, 341, 343, 344], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 30, 31, 32, 33, 35, 38, 41, 42, 45, 49, 52, 53, 54, 55, 56, 57, 58, 60, 64, 68, 69, 71, 79, 83, 93, 97, 98, 99, 103, 112, 113, 114, 115, 116, 118, 121, 125, 130, 131, 133, 135, 136, 138, 139, 142, 143, 146, 147, 148, 151, 153, 155, 156, 157, 167, 169, 170, 176, 179, 182, 183, 184, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 214, 216, 220, 223, 224, 225, 227, 228, 229, 230, 235, 241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 294, 298, 304, 311, 316, 319, 326, 327, 328, 329, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "python": [0, 3, 5, 6, 7, 10, 21, 109, 182, 183, 184, 186, 187, 188, 193, 194, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344], "first": [0, 1, 3, 4, 5, 7, 8, 18, 20, 21, 26, 28, 52, 53, 55, 56, 57, 60, 61, 68, 69, 73, 83, 113, 114, 125, 131, 135, 136, 149, 151, 153, 182, 184, 186, 188, 190, 195, 196, 197, 201, 216, 221, 222, 223, 228, 229, 231, 232, 243, 251, 255, 256, 258, 289, 306, 327, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "low": [0, 25, 79, 83, 97, 103, 116, 120, 163, 223, 228, 235, 332, 333, 334, 338, 339, 343, 344], "high": [0, 9, 25, 41, 79, 83, 97, 103, 116, 120, 130, 163, 223, 228, 235, 271, 276, 284, 332, 333, 334, 338, 339, 341, 343, 344], "level": [0, 3, 4, 22, 26, 28, 113, 145, 255, 332, 333, 343], "abstract": [0, 3, 8, 24, 25, 26, 27, 28, 29, 30, 44, 46, 47, 74, 79, 132, 191, 275, 299, 308, 329, 334, 339, 343], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 23, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 48, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 67, 69, 70, 73, 79, 80, 83, 92, 93, 96, 97, 98, 99, 100, 103, 105, 112, 113, 116, 117, 118, 120, 121, 122, 124, 125, 129, 130, 133, 135, 139, 142, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 163, 167, 168, 175, 177, 182, 183, 184, 186, 187, 188, 189, 191, 193, 194, 195, 198, 202, 204, 207, 221, 222, 224, 227, 228, 229, 231, 232, 233, 234, 235, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 266, 269, 270, 271, 272, 273, 274, 275, 304, 319, 323, 327, 328, 329, 330, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "intend": [0, 7, 13, 14, 16, 17, 18, 19, 20, 21, 45, 112, 120, 214, 256, 327, 343], "effici": [0, 1, 2, 4, 8, 182, 198, 327, 332, 333, 334, 335, 337, 338, 340, 341, 343], "modular": [0, 234, 341, 343], "document": [0, 5, 7, 18, 19, 21, 32, 55, 79, 83, 97, 103, 151, 333, 335, 343], "properli": [0, 79, 83, 97, 103, 334, 338, 339, 343], "test": [0, 3, 5, 153, 159, 184, 188, 189, 303, 319, 334, 335, 343], "The": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 68, 69, 70, 71, 79, 83, 87, 97, 98, 99, 103, 112, 113, 117, 118, 121, 122, 123, 131, 133, 135, 139, 141, 142, 143, 145, 146, 147, 150, 151, 153, 155, 156, 166, 167, 168, 172, 173, 174, 175, 176, 179, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 198, 199, 205, 206, 207, 216, 217, 221, 222, 223, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 269, 270, 271, 272, 273, 274, 275, 277, 292, 295, 296, 297, 298, 302, 319, 321, 322, 327, 328, 329, 333, 334, 335, 338, 339, 340, 341, 343, 344], "code": [0, 3, 5, 7, 8, 55, 79, 83, 97, 103, 135, 151, 153, 182, 183, 184, 186, 187, 188, 234, 331, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344], "aim": [0, 3, 7, 28, 29, 135, 153, 155, 190, 310, 326, 327, 328, 332, 333, 343], "support": [0, 1, 3, 18, 20, 26, 54, 57, 58, 60, 61, 70, 73, 94, 96, 98, 113, 122, 131, 147, 148, 150, 162, 179, 214, 222, 223, 228, 231, 234, 249, 271, 272, 273, 274, 295, 327, 329, 334, 335, 338, 339, 341, 343], "research": [0, 7, 9, 343], "most": [0, 3, 7, 8, 32, 68, 69, 120, 156, 332, 334, 339, 343, 344], "written": [0, 3, 34, 36, 39, 45, 52, 55, 60, 68, 69, 79, 83, 97, 103, 113, 122, 129, 142, 145, 148, 156, 166, 167, 216, 227, 228, 231, 232, 236, 241, 243, 255, 258, 260, 270, 289, 290, 327, 328, 329, 332, 335, 337, 339, 343], "highli": [0, 2, 343, 344], "wai": [0, 2, 3, 4, 53, 87, 135, 137, 155, 156, 186, 258, 271, 272, 273, 274, 327, 332, 333, 334, 337, 338, 339, 340, 341, 343, 344], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 57, 63, 67, 68, 69, 79, 80, 83, 87, 92, 97, 98, 99, 101, 102, 103, 105, 109, 110, 112, 113, 116, 117, 118, 120, 121, 122, 130, 131, 135, 136, 139, 142, 145, 146, 147, 150, 151, 153, 155, 157, 167, 168, 182, 184, 185, 186, 188, 191, 192, 195, 196, 198, 199, 212, 214, 216, 220, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 269, 270, 271, 272, 273, 274, 275, 303, 316, 321, 322, 323, 326, 327, 328, 329, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "easili": [0, 3, 7, 79, 83, 97, 103, 316, 328, 332, 333, 334, 338, 343, 344], "swap": [0, 3, 156, 334, 340, 343], "compon": [0, 2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 60, 61, 62, 70, 73, 179, 205, 222, 223, 230, 241, 242, 243, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 269, 302, 307, 332, 333, 334, 335, 337, 338, 339, 340, 343], "transform": [0, 1, 2, 4, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 40, 41, 42, 43, 52, 53, 54, 55, 56, 57, 79, 80, 83, 97, 98, 99, 103, 105, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 171, 172, 176, 179, 180, 203, 204, 205, 213, 221, 226, 235, 238, 240, 246, 257, 290, 304, 316, 323, 325, 331, 333, 335, 336, 340, 342], "them": [0, 2, 3, 7, 9, 21, 32, 35, 37, 38, 41, 42, 52, 53, 54, 55, 56, 57, 79, 80, 83, 87, 92, 97, 98, 99, 103, 105, 118, 121, 151, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 195, 196, 199, 200, 201, 203, 206, 207, 209, 213, 214, 220, 221, 223, 224, 225, 227, 230, 235, 238, 255, 261, 290, 332, 333, 335, 337, 338, 339, 340, 341, 343, 344], "write": [0, 3, 8, 23, 32, 34, 36, 37, 39, 45, 83, 116, 133, 134, 142, 145, 149, 167, 216, 231, 232, 234, 236, 244, 245, 247, 248, 254, 259, 261, 263, 270, 275, 290, 327, 329, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344], "new": [0, 2, 3, 4, 8, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 47, 63, 67, 79, 83, 94, 97, 101, 102, 103, 142, 150, 157, 166, 167, 182, 184, 188, 227, 231, 232, 237, 241, 242, 243, 245, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 269, 332, 334, 335, 338, 339, 343, 344], "ones": [0, 2, 15, 26, 32, 35, 41, 42, 79, 83, 97, 103, 114, 117, 118, 119, 121, 131, 135, 139, 147, 150, 151, 153, 155, 193, 194, 214, 231, 241, 242, 244, 254, 258, 259, 261, 263, 277, 332, 334, 338, 339, 341, 343, 344], "littl": [0, 3, 43, 334, 335, 341, 343, 344], "effort": [0, 3, 339, 341, 343], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 60, 61, 62, 67, 68, 69, 70, 71, 73, 79, 83, 85, 92, 93, 97, 98, 99, 103, 105, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 131, 135, 136, 137, 139, 142, 143, 145, 147, 148, 150, 151, 153, 154, 155, 156, 157, 159, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 209, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 238, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 269, 271, 272, 273, 274, 275, 289, 298, 300, 303, 304, 307, 309, 310, 311, 316, 319, 323, 326, 327, 328, 329, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "repo": [0, 6, 52, 113, 148, 153, 326, 338, 343], "attempt": [0, 68, 69, 220, 225, 227, 245, 254, 269, 343], "align": [0, 182, 186, 343], "exist": [0, 3, 4, 11, 18, 21, 32, 34, 36, 39, 45, 79, 83, 97, 103, 114, 119, 151, 261, 311, 323, 338, 343, 344], "ecosystem": [0, 343], "ha": [0, 2, 3, 4, 5, 7, 8, 10, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 44, 46, 47, 55, 68, 79, 80, 83, 87, 97, 103, 105, 113, 145, 146, 147, 148, 151, 182, 184, 186, 188, 195, 220, 223, 225, 227, 232, 255, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "dataset": [0, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 68, 69, 96, 157, 325, 332, 333, 340, 341, 343, 344], "pillar": [0, 343], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 110, 112, 113, 114, 118, 119, 120, 121, 126, 130, 131, 135, 136, 142, 145, 146, 147, 148, 150, 151, 153, 156, 157, 159, 168, 184, 188, 189, 191, 192, 220, 227, 247, 250, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 298, 300, 303, 310, 311, 312, 313, 316, 319, 320, 321, 322, 323, 325, 326, 327, 331, 336, 340, 341, 342], "model": [0, 1, 3, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 79, 83, 93, 97, 103, 118, 135, 147, 153, 155, 158, 169, 170, 171, 176, 184, 188, 190, 191, 192, 196, 203, 204, 213, 217, 218, 219, 226, 231, 237, 241, 242, 243, 245, 246, 247, 250, 251, 252, 254, 255, 256, 258, 259, 261, 269, 307, 312, 313, 314, 315, 316, 325, 326, 329, 331, 334, 336, 338, 339, 341, 342, 344], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 79, 81, 83, 93, 96, 97, 98, 99, 103, 110, 112, 113, 118, 119, 121, 123, 129, 131, 139, 145, 156, 159, 163, 167, 168, 179, 184, 188, 189, 192, 195, 196, 205, 214, 216, 222, 224, 225, 227, 228, 229, 231, 234, 235, 236, 241, 242, 244, 245, 247, 248, 254, 258, 259, 260, 261, 263, 269, 271, 272, 273, 274, 275, 298, 304, 307, 309, 312, 319, 321, 322, 323, 325, 327, 328, 329, 335, 339, 340, 341, 344], "util": [0, 3, 17, 23, 32, 40, 79, 83, 97, 98, 99, 103, 106, 135, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 176, 182, 186, 238, 239, 240, 256, 319, 325, 330, 332, 334, 338, 339, 343, 344], "e": [0, 1, 3, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 33, 60, 61, 73, 79, 80, 83, 97, 103, 112, 114, 117, 125, 131, 135, 142, 147, 150, 151, 153, 155, 159, 182, 184, 185, 186, 188, 192, 196, 199, 205, 211, 212, 221, 223, 228, 230, 231, 232, 261, 270, 271, 272, 273, 274, 298, 310, 322, 327, 332, 333, 334, 338, 340, 343, 344], "g": [0, 1, 3, 7, 8, 10, 11, 32, 33, 79, 80, 83, 97, 103, 112, 114, 117, 125, 131, 135, 142, 147, 150, 151, 153, 155, 159, 182, 184, 185, 186, 187, 188, 192, 196, 211, 212, 221, 228, 231, 232, 261, 270, 280, 281, 282, 283, 285, 286, 287, 288, 322, 327, 332, 333, 334, 338, 339, 340, 343, 344], "collector": [0, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 55, 68, 69, 113, 139, 145, 227, 304, 307, 309, 312, 313, 319, 321, 322, 325, 329, 341, 344], "contain": [0, 3, 7, 12, 13, 14, 16, 17, 19, 20, 26, 28, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 50, 52, 53, 54, 55, 56, 57, 59, 63, 65, 70, 72, 74, 79, 83, 93, 97, 103, 117, 118, 121, 135, 147, 150, 151, 153, 155, 156, 157, 166, 167, 168, 169, 170, 182, 183, 186, 187, 190, 192, 196, 216, 222, 223, 228, 230, 231, 236, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 269, 270, 271, 272, 273, 274, 275, 277, 294, 298, 310, 316, 319, 320, 321, 322, 323, 327, 328, 329, 332, 333, 334, 335, 338, 339, 340, 341, 343, 344], "etc": [0, 3, 7, 8, 11, 32, 46, 47, 55, 79, 83, 97, 103, 129, 151, 190, 196, 332, 333, 334, 341, 343, 344], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 13, 14, 17, 18, 20, 21, 26, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 67, 70, 79, 83, 97, 98, 99, 103, 113, 118, 121, 122, 129, 130, 131, 145, 150, 151, 157, 159, 167, 169, 170, 189, 190, 195, 196, 214, 233, 234, 241, 243, 255, 258, 266, 269, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 298, 307, 327, 328, 329, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "few": [0, 2, 8, 298, 334, 335, 338, 341, 343, 344], "depend": [0, 1, 2, 3, 4, 7, 8, 34, 36, 118, 121, 236, 258, 327, 332, 334, 335, 338, 339, 343, 344], "possibl": [0, 2, 3, 4, 27, 29, 32, 33, 34, 36, 39, 55, 57, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 169, 170, 182, 183, 186, 187, 231, 303, 307, 327, 332, 334, 335, 338, 339, 341, 343, 344], "standard": [0, 3, 131, 141, 157, 168, 180, 192, 197, 198, 220, 221, 263, 271, 272, 273, 274, 332, 333, 338, 341, 343], "numpi": [0, 11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 97, 103, 149, 307, 339, 341, 343, 344], "common": [0, 2, 3, 4, 21, 83, 110, 217, 218, 219, 226, 241, 242, 243, 248, 254, 255, 258, 259, 260, 261, 263, 319, 326, 327, 329, 332, 334, 337, 338, 339, 340, 343, 344], "openai": [0, 7, 82, 84, 100, 334, 339, 343, 344], "gym": [0, 1, 3, 4, 8, 11, 13, 14, 16, 17, 21, 22, 79, 80, 82, 83, 84, 87, 97, 100, 103, 107, 109, 113, 116, 122, 128, 129, 131, 133, 137, 139, 142, 147, 150, 156, 157, 316, 319, 326, 332, 333, 334, 335, 339, 340, 341, 343], "onli": [0, 1, 3, 4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 44, 46, 47, 52, 60, 61, 68, 69, 73, 79, 83, 87, 94, 97, 98, 99, 103, 113, 114, 116, 117, 118, 120, 121, 125, 131, 135, 136, 139, 145, 146, 147, 148, 150, 151, 153, 155, 157, 186, 188, 189, 195, 196, 216, 221, 222, 228, 229, 231, 232, 233, 234, 241, 243, 244, 248, 254, 255, 256, 258, 259, 260, 261, 262, 263, 271, 272, 273, 274, 275, 311, 329, 332, 333, 334, 335, 337, 338, 339, 341, 343, 344], "option": [0, 1, 3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 67, 68, 69, 73, 77, 79, 80, 83, 93, 96, 97, 98, 99, 100, 103, 105, 110, 112, 113, 114, 115, 116, 118, 120, 121, 122, 125, 126, 128, 129, 130, 131, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 210, 211, 212, 214, 216, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 269, 270, 271, 272, 273, 274, 275, 277, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 292, 295, 298, 300, 301, 302, 303, 304, 305, 307, 311, 312, 313, 314, 315, 316, 318, 319, 321, 322, 323, 327, 335, 338, 339, 341, 343], "On": [0, 3, 7, 18, 19, 20, 21, 183, 187, 327, 333, 338], "end": [0, 3, 13, 14, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 67, 68, 69, 79, 83, 97, 103, 122, 133, 145, 146, 151, 169, 170, 182, 183, 186, 187, 191, 261, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "come": [0, 1, 3, 8, 83, 92, 97, 103, 118, 121, 216, 217, 218, 219, 228, 236, 332, 333, 334, 335, 338, 341, 343, 344], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 32, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 60, 61, 67, 70, 73, 79, 81, 83, 93, 97, 98, 99, 103, 109, 110, 113, 114, 117, 118, 121, 128, 129, 135, 139, 145, 146, 147, 148, 150, 151, 153, 155, 157, 159, 164, 165, 167, 182, 184, 186, 188, 191, 195, 196, 220, 221, 231, 256, 258, 261, 275, 298, 303, 304, 313, 323, 326, 327, 328, 330, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "re": [0, 3, 8, 32, 67, 79, 83, 97, 103, 188, 193, 194, 228, 232, 329, 332, 334, 335, 337, 339, 343, 344], "usabl": [0, 329, 335, 343], "function": [0, 3, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 45, 46, 47, 49, 60, 61, 62, 70, 73, 79, 80, 83, 97, 103, 109, 118, 121, 151, 157, 159, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 193, 194, 195, 196, 199, 200, 201, 202, 203, 206, 207, 209, 212, 214, 217, 218, 219, 220, 221, 223, 224, 225, 227, 228, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 258, 259, 260, 261, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 316, 319, 325, 327, 332, 335, 337, 339, 341, 344], "cost": [0, 2, 27, 55, 332, 333, 338, 339, 341], "return": [0, 2, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 65, 68, 69, 71, 72, 74, 77, 79, 80, 83, 93, 96, 97, 98, 99, 103, 107, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 129, 131, 133, 135, 136, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 166, 167, 168, 171, 172, 173, 174, 175, 177, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 199, 202, 203, 204, 206, 207, 210, 211, 212, 213, 216, 217, 218, 219, 221, 228, 230, 231, 232, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 266, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 294, 307, 310, 312, 316, 319, 320, 321, 322, 323, 325, 327, 329, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "process": [0, 1, 3, 4, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 39, 43, 45, 56, 57, 79, 80, 83, 87, 92, 94, 97, 98, 99, 103, 112, 118, 121, 149, 157, 195, 196, 223, 227, 230, 325, 329, 332, 333, 335, 338, 339, 340, 341, 343, 344], "good": [0, 1, 4, 9, 332, 334, 335, 338, 343, 344], "runtim": [0, 3, 32, 79, 83, 97, 103, 339], "perform": [0, 3, 4, 8, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 79, 83, 97, 103, 106, 118, 121, 130, 151, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 195, 196, 199, 200, 201, 203, 206, 207, 209, 214, 220, 221, 223, 224, 225, 227, 230, 235, 238, 251, 258, 261, 303, 307, 328, 332, 333, 334, 335, 337, 338, 339, 344], "To": [0, 3, 4, 6, 7, 8, 9, 18, 19, 20, 32, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 68, 69, 79, 83, 92, 97, 98, 99, 101, 102, 103, 145, 157, 217, 218, 219, 227, 248, 256, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 327, 328, 332, 333, 334, 335, 338, 339, 340, 341, 343, 344], "read": [0, 2, 3, 7, 17, 23, 37, 40, 55, 60, 61, 62, 70, 73, 79, 83, 97, 103, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 125, 126, 128, 129, 133, 134, 136, 137, 139, 142, 143, 145, 146, 147, 148, 150, 153, 154, 156, 157, 167, 202, 216, 217, 218, 219, 222, 228, 231, 232, 234, 236, 237, 241, 242, 243, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 269, 271, 272, 273, 274, 275, 290, 303, 307, 316, 327, 332, 333, 334, 337, 338, 339, 340, 344], "more": [0, 2, 3, 4, 6, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 54, 55, 56, 57, 79, 83, 86, 87, 97, 98, 99, 103, 105, 149, 153, 158, 179, 186, 190, 197, 199, 216, 220, 222, 223, 231, 236, 241, 249, 256, 258, 271, 276, 284, 302, 326, 328, 329, 332, 333, 334, 335, 337, 338, 339, 340, 344], "about": [0, 2, 3, 5, 7, 9, 18, 19, 20, 43, 56, 57, 328, 332, 333, 334, 338, 339, 343, 344], "philosophi": [0, 9], "capabl": [0, 1, 7, 9, 329, 332, 337, 340, 344], "beyond": 0, "api": [0, 2, 3, 5, 98, 99, 100, 135, 155, 328, 329, 338, 339, 343, 344], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 48, 50, 68, 79, 80, 83, 93, 97, 103, 106, 113, 114, 124, 129, 136, 149, 159, 184, 188, 216, 222, 223, 228, 229, 230, 231, 232, 327, 328, 333, 334, 335, 337, 338, 339, 340, 341, 344], "paper": [0, 135, 153, 155, 182, 204, 213, 247, 253, 316, 332, 334, 338], "ppo": [0, 4, 8, 228, 232, 243, 255, 258, 325, 327, 331, 332, 333, 336, 342], "pendulum": [0, 3, 13, 14, 16, 17, 21, 22, 79, 80, 82, 83, 84, 94, 97, 103, 113, 116, 117, 123, 128, 129, 131, 137, 139, 145, 147, 148, 150, 151, 157, 184, 188, 319, 327, 331, 333, 334, 336, 342, 343, 344], "your": [0, 2, 3, 7, 8, 10, 18, 32, 79, 83, 87, 92, 97, 98, 99, 103, 157, 323, 326, 327, 328, 331, 333, 334, 335, 336, 338, 341, 342, 343], "introduct": [0, 328, 331, 336, 338, 342, 344], "multi": [0, 7, 9, 28, 29, 32, 79, 83, 97, 101, 102, 103, 182, 184, 186, 188, 189, 190, 195, 196, 269, 271, 272, 273, 274, 325, 331, 332, 333, 334, 335, 336, 339, 342, 343], "agent": [0, 9, 28, 29, 92, 98, 99, 101, 102, 104, 105, 106, 145, 146, 193, 194, 195, 196, 198, 204, 213, 269, 325, 331, 336, 339, 342], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 40, 52, 53, 55, 56, 57, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 184, 188, 191, 192, 231, 256, 289, 311, 312, 313, 316, 319, 321, 322, 323, 325, 327, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 63, 64, 68, 69, 73, 77, 79, 80, 83, 93, 96, 97, 98, 99, 100, 101, 102, 103, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 128, 129, 131, 135, 136, 137, 139, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 155, 157, 159, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 198, 199, 202, 203, 204, 205, 211, 212, 213, 214, 216, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 284, 293, 294, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 317, 319, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 342, 344], "pretrain": [0, 331, 336, 342], "recurr": [0, 112, 182, 183, 184, 186, 188, 207, 331, 333, 336, 341, 342], "dqn": [0, 122, 179, 222, 223, 241, 242, 244, 245, 247, 248, 249, 250, 253, 254, 256, 258, 259, 260, 261, 262, 263, 269, 314, 325, 327, 331, 336, 342], "train": [0, 1, 3, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 34, 36, 39, 40, 45, 58, 79, 83, 97, 98, 99, 103, 118, 126, 135, 146, 151, 153, 155, 159, 172, 174, 184, 188, 220, 224, 225, 227, 241, 242, 243, 244, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 269, 271, 307, 309, 319, 325, 329, 331, 333, 336, 340, 341, 342, 344], "polici": [0, 1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 79, 83, 93, 97, 103, 120, 129, 146, 164, 165, 179, 184, 188, 195, 196, 198, 205, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 235, 241, 242, 243, 244, 248, 254, 255, 257, 258, 259, 260, 261, 263, 303, 309, 312, 313, 319, 321, 322, 327, 328, 329, 331, 333, 336, 340, 341, 342, 343, 344], "replai": [0, 8, 13, 14, 16, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 63, 64, 65, 66, 67, 69, 70, 71, 72, 112, 113, 120, 136, 139, 147, 244, 245, 247, 248, 254, 259, 261, 263, 304, 307, 317, 319, 325, 329, 331, 336, 339, 340, 342], "buffer": [0, 1, 3, 4, 8, 13, 14, 16, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 79, 83, 93, 97, 103, 112, 113, 117, 120, 135, 136, 139, 147, 150, 151, 153, 155, 231, 234, 244, 245, 247, 248, 254, 259, 261, 263, 304, 307, 317, 319, 325, 329, 331, 336, 339, 340, 342, 344], "task": [0, 3, 9, 28, 29, 40, 45, 55, 77, 83, 86, 97, 98, 99, 100, 103, 135, 145, 153, 155, 254, 331, 332, 333, 334, 335, 336, 338, 339, 342, 343, 344], "specif": [0, 2, 5, 8, 41, 42, 83, 176, 221, 307, 325, 328, 329, 331, 334, 335, 336, 338, 341, 342], "object": [0, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 60, 61, 62, 70, 73, 79, 83, 97, 103, 118, 121, 122, 131, 135, 150, 151, 153, 157, 192, 204, 213, 216, 217, 228, 231, 232, 233, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 311, 312, 313, 318, 319, 323, 325, 327, 329, 331, 333, 334, 335, 336, 338, 339, 341, 342, 344], "ddpg": [0, 172, 173, 174, 175, 244, 253, 262, 325, 327, 331, 333, 336, 342], "loss": [0, 3, 8, 36, 122, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 269, 270, 271, 302, 307, 314, 315, 316, 319, 328, 329, 331, 336, 339, 341, 342, 343], "trainer": [0, 241, 242, 243, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 269, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 331, 332, 336, 342], "A": [0, 1, 2, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 70, 71, 72, 73, 74, 79, 81, 83, 85, 86, 97, 100, 103, 112, 116, 120, 126, 129, 135, 136, 137, 147, 150, 151, 153, 154, 156, 157, 158, 159, 166, 168, 169, 170, 179, 182, 183, 184, 186, 187, 188, 190, 192, 193, 194, 196, 198, 199, 214, 220, 221, 222, 223, 224, 225, 228, 229, 232, 234, 235, 238, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 266, 269, 271, 272, 273, 274, 275, 277, 291, 292, 295, 300, 307, 309, 316, 319, 328, 331, 332, 334, 336, 338, 339, 342, 344], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 60, 61, 68, 69, 71, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 88, 89, 90, 91, 93, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 128, 129, 131, 133, 135, 137, 138, 139, 142, 145, 146, 147, 148, 149, 150, 151, 153, 155, 157, 163, 166, 167, 168, 169, 170, 171, 176, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 195, 196, 199, 202, 203, 204, 205, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 234, 235, 236, 241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 264, 265, 269, 271, 272, 273, 274, 277, 298, 299, 300, 301, 302, 304, 305, 306, 309, 316, 319, 327, 328, 329, 331, 332, 334, 335, 336, 337, 338, 339, 340, 342, 343, 344], "packag": [0, 6, 7, 10, 109, 325, 326, 344], "singl": [0, 3, 13, 14, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 54, 55, 56, 57, 71, 79, 83, 97, 103, 113, 114, 135, 139, 155, 169, 170, 182, 183, 184, 186, 187, 188, 189, 190, 196, 230, 234, 243, 245, 247, 248, 249, 255, 258, 259, 263, 271, 272, 273, 274, 280, 281, 282, 283, 285, 286, 287, 288, 316, 323, 325, 332, 333, 334, 335, 337, 338, 339, 340, 341], "node": [0, 2, 18, 19, 20, 21, 22, 57, 316, 325], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 98, 99, 129, 131, 168, 177, 178, 179, 180, 185, 192, 193, 194, 199, 202, 203, 206, 207, 210, 211, 212, 220, 221, 222, 223, 228, 232, 233, 241, 242, 243, 248, 249, 254, 255, 258, 259, 260, 261, 263, 325, 329, 333, 334, 338, 339, 343, 344], "helper": [0, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 332, 333, 335, 339], "compos": [0, 3, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 64, 65, 66, 71, 72, 79, 83, 97, 103, 113, 138, 150, 151, 157, 226, 251, 261, 316, 325, 332, 333, 334, 335, 337, 338, 341, 343, 344], "tensorspec": [0, 3, 15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 46, 47, 48, 49, 50, 79, 83, 93, 97, 103, 105, 111, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 129, 131, 133, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 167, 207, 216, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 235, 242, 245, 248, 259, 261, 263, 269, 325, 339], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 67, 68, 69, 70, 71, 73, 79, 80, 83, 92, 93, 97, 98, 99, 101, 102, 103, 105, 106, 109, 110, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 128, 129, 131, 133, 135, 136, 137, 138, 139, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 163, 166, 167, 168, 172, 173, 174, 175, 176, 179, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 199, 202, 203, 204, 205, 211, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 241, 242, 243, 244, 245, 247, 248, 249, 250, 254, 255, 256, 258, 259, 260, 261, 263, 265, 269, 270, 271, 272, 273, 274, 277, 289, 290, 298, 304, 307, 310, 311, 316, 317, 319, 320, 323, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344], "human": [0, 53, 325, 339], "feedback": [0, 325, 343], "rlhf": [0, 40, 45, 58, 129, 325, 327], "envbas": [0, 3, 13, 14, 16, 17, 18, 19, 20, 21, 80, 83, 97, 103, 110, 118, 121, 130, 137, 150, 151, 157, 159, 168, 191, 192, 303, 311, 312, 313, 316, 319, 321, 322, 323, 325], "gymlikeenv": [0, 325], "envmetadata": [0, 325], "vector": [0, 1, 8, 24, 27, 33, 92, 98, 99, 105, 120, 156, 172, 174, 182, 183, 186, 187, 190, 271, 274, 284, 285, 286, 287, 288, 325, 332, 333, 335, 337, 338, 339, 340, 344], "mask": [0, 1, 4, 23, 27, 30, 31, 33, 98, 99, 110, 136, 179, 193, 194, 205, 221, 222, 223, 224, 225, 229, 230, 304, 325, 333, 335, 344], "action": [0, 2, 8, 9, 13, 14, 15, 16, 17, 21, 27, 33, 40, 44, 53, 55, 56, 57, 76, 79, 83, 89, 92, 93, 97, 98, 99, 101, 102, 103, 104, 105, 110, 116, 118, 120, 121, 122, 123, 126, 129, 130, 133, 137, 139, 143, 145, 151, 156, 163, 166, 168, 171, 172, 173, 174, 175, 176, 178, 179, 180, 184, 188, 190, 191, 192, 193, 194, 195, 203, 204, 205, 207, 210, 211, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 235, 236, 241, 242, 244, 245, 247, 248, 254, 256, 258, 259, 260, 261, 263, 269, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 316, 319, 323, 325, 327, 328, 329, 332, 333, 334, 337, 338, 340, 341, 343, 344], "record": [0, 32, 79, 83, 97, 103, 129, 258, 289, 290, 291, 292, 293, 294, 295, 296, 297, 319, 325, 333, 334], "domain": [0, 2, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 79, 83, 97, 103, 120, 147, 163, 216, 222, 223, 228, 229, 230, 231, 232, 233, 234, 325, 334, 335, 338, 339, 343, 344], "modul": [0, 2, 3, 4, 8, 11, 32, 40, 71, 79, 83, 92, 93, 97, 103, 109, 112, 117, 120, 122, 129, 135, 136, 146, 147, 150, 151, 153, 155, 157, 158, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 267, 269, 271, 272, 273, 274, 275, 307, 314, 315, 319, 325, 328, 329, 333, 334, 337, 338, 339, 340, 341], "tensordict": [0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 60, 61, 63, 68, 69, 71, 72, 73, 76, 79, 80, 81, 83, 89, 92, 93, 96, 97, 98, 99, 101, 102, 103, 104, 105, 110, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 133, 134, 135, 136, 137, 139, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 166, 167, 168, 178, 179, 184, 188, 189, 191, 192, 204, 205, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 269, 270, 271, 272, 273, 274, 275, 289, 298, 302, 303, 304, 306, 307, 316, 325, 328, 329, 332, 333, 334, 335, 337, 338, 339, 340, 344], "actor": [0, 3, 4, 15, 21, 129, 168, 171, 172, 174, 179, 180, 192, 203, 205, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 269, 316, 325, 328, 333, 334, 335, 338, 340, 343], "explor": [0, 1, 158, 198, 216, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 241, 303, 312, 313, 319, 325, 334, 335, 338, 339], "valu": [0, 1, 3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 55, 58, 68, 69, 79, 83, 92, 97, 103, 109, 111, 113, 114, 116, 118, 120, 121, 122, 130, 131, 135, 136, 138, 139, 140, 142, 147, 148, 150, 151, 155, 157, 163, 167, 172, 173, 174, 175, 177, 179, 180, 181, 184, 185, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 202, 204, 205, 210, 211, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 298, 300, 301, 302, 303, 304, 307, 316, 319, 325, 329, 333, 337, 338, 339, 341, 343, 344], "gener": [0, 1, 2, 3, 7, 8, 9, 16, 35, 38, 40, 66, 67, 79, 80, 83, 93, 97, 98, 99, 101, 102, 103, 117, 118, 119, 123, 129, 131, 137, 142, 143, 145, 150, 156, 167, 177, 193, 194, 202, 216, 228, 232, 236, 237, 259, 265, 271, 276, 284, 293, 307, 325, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344], "hook": [0, 32, 79, 83, 97, 103, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 195, 196, 199, 200, 201, 203, 205, 206, 207, 209, 214, 220, 221, 223, 224, 225, 227, 230, 235, 238, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 325], "planner": [0, 168, 192, 325], "sac": [0, 248, 259, 261, 325], "redq": [0, 259, 315, 316, 325], "iql": [0, 254, 325, 338], "cql": [0, 242, 247, 325], "dt": [0, 227, 325, 339], "td3": [0, 263, 325], "a2c": [0, 241, 325], "dreamer": [0, 108, 180, 250, 251, 252, 325, 327], "checkpoint": [0, 325, 340], "builder": [0, 325, 333, 344], "logger": [0, 290, 292, 293, 294, 295, 296, 297, 301, 307, 319, 323, 325, 333], "_util": [0, 3, 11, 325], "implement_for": [0, 3, 325], "contribut": 0, "thing": [0, 3, 7, 8, 326, 334, 335, 338, 341, 344], "consid": [0, 1, 3, 8, 20, 32, 34, 36, 39, 60, 61, 73, 79, 83, 97, 103, 120, 157, 177, 195, 210, 326, 332, 339, 341], "when": [0, 1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 60, 61, 62, 64, 67, 70, 73, 79, 80, 83, 92, 94, 96, 97, 98, 99, 103, 110, 112, 113, 117, 118, 120, 121, 129, 130, 131, 135, 136, 142, 147, 150, 151, 153, 155, 156, 157, 164, 165, 168, 179, 182, 183, 186, 187, 190, 191, 192, 193, 194, 197, 205, 211, 228, 231, 232, 234, 238, 243, 245, 249, 255, 258, 261, 264, 269, 270, 271, 272, 273, 274, 289, 290, 304, 323, 326, 327, 329, 332, 333, 334, 335, 338, 339, 340, 341, 344], "debug": [0, 6, 8, 40, 326, 344], "work": [0, 2, 3, 4, 8, 11, 32, 34, 36, 38, 39, 68, 69, 79, 83, 87, 97, 103, 114, 129, 135, 153, 156, 157, 169, 170, 190, 223, 230, 235, 243, 255, 258, 307, 326, 327, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "habitat": [0, 3, 85, 326, 340], "lab": [0, 3, 77, 78, 326], "mujoco": [0, 6, 8, 100, 326, 334, 335], "error": [0, 1, 3, 7, 10, 11, 29, 32, 79, 83, 97, 103, 106, 136, 159, 326, 332, 334, 338, 344], "solut": [0, 3, 6, 7, 9, 21, 326, 327, 329, 343], "resourc": [0, 1, 21, 326, 332, 334, 338], "version": [0, 1, 3, 6, 11, 32, 34, 36, 40, 57, 68, 79, 83, 97, 98, 103, 105, 156, 219, 256, 261, 271, 274, 326, 327, 332, 334, 335, 338, 339, 340, 344], "issu": [0, 4, 5, 8, 53, 60, 61, 73, 87, 113, 136, 148, 216, 222, 223, 228, 229, 230, 231, 232, 326, 343], "index": [0, 3, 7, 8, 10, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 65, 71, 72, 73, 74, 79, 83, 97, 103, 105, 113, 120, 166, 193, 194, 337, 338, 341, 343], "search": [0, 167, 333], "page": [0, 7], "somewhat": [1, 328, 344], "equival": [1, 3, 17, 24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 52, 53, 55, 56, 57, 58, 79, 83, 97, 103, 119, 122, 151, 179, 186, 205, 222, 223, 229, 230, 258, 304, 343, 344], "dataload": [1, 58, 67, 69, 333, 334, 341], "except": [1, 2, 3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 55, 79, 83, 97, 103, 113, 124, 139, 146, 147, 148, 182, 184, 186, 188, 202, 220, 224, 225, 227, 327, 333, 341, 343, 344], "1": [1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 68, 69, 71, 76, 79, 80, 83, 89, 92, 93, 96, 97, 98, 99, 101, 102, 103, 104, 105, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 126, 129, 131, 133, 135, 136, 137, 139, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 155, 157, 163, 166, 168, 169, 170, 171, 172, 173, 175, 176, 179, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 206, 207, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 221, 223, 224, 225, 227, 228, 229, 230, 231, 234, 235, 236, 238, 241, 242, 243, 244, 245, 247, 248, 251, 254, 255, 257, 258, 259, 260, 261, 262, 263, 269, 270, 271, 272, 273, 274, 277, 279, 280, 281, 285, 286, 288, 298, 303, 304, 305, 316, 319, 323, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344], "thei": [1, 2, 3, 4, 8, 9, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 55, 79, 83, 92, 97, 98, 99, 103, 105, 112, 124, 129, 135, 143, 150, 151, 155, 188, 189, 241, 242, 243, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 269, 304, 307, 327, 328, 329, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "collect": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 67, 97, 100, 103, 113, 131, 135, 155, 159, 227, 242, 244, 247, 248, 259, 261, 263, 298, 304, 307, 309, 310, 311, 319, 329, 332, 335, 338, 339, 340, 341, 343, 344], "over": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 42, 43, 45, 51, 55, 67, 71, 79, 83, 97, 103, 120, 131, 142, 148, 166, 214, 234, 249, 251, 256, 277, 310, 329, 332, 333, 334, 338, 339, 344], "non": [1, 3, 8, 21, 32, 34, 35, 36, 38, 39, 41, 42, 55, 79, 83, 97, 98, 99, 103, 111, 117, 125, 135, 147, 150, 151, 152, 153, 155, 166, 182, 184, 186, 188, 195, 231, 232, 241, 242, 244, 245, 247, 248, 249, 250, 251, 254, 256, 258, 259, 260, 261, 263, 269, 271, 272, 273, 274, 327, 332, 335, 338, 339, 341, 344], "static": [1, 11, 40, 45, 68, 69, 157, 254, 339, 341], "2": [1, 3, 8, 9, 10, 11, 13, 14, 16, 21, 22, 26, 28, 30, 31, 32, 35, 36, 37, 38, 41, 42, 43, 45, 55, 56, 58, 68, 69, 79, 80, 83, 92, 96, 97, 98, 99, 101, 102, 103, 104, 105, 112, 114, 117, 118, 119, 120, 121, 129, 131, 133, 135, 139, 142, 145, 146, 147, 150, 151, 153, 155, 157, 163, 167, 169, 170, 171, 172, 173, 174, 176, 179, 181, 182, 183, 184, 186, 187, 188, 189, 190, 193, 194, 195, 196, 199, 203, 214, 221, 222, 223, 224, 225, 227, 231, 235, 236, 241, 242, 243, 244, 248, 254, 255, 258, 259, 260, 261, 263, 270, 271, 272, 273, 274, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 298, 327, 328, 332, 333, 334, 335, 337, 338, 339, 341, 343, 344], "like": [1, 2, 3, 4, 7, 21, 26, 28, 32, 35, 38, 41, 42, 45, 69, 79, 83, 85, 92, 97, 98, 99, 103, 122, 149, 159, 182, 186, 196, 226, 259, 328, 332, 334, 335, 338, 339, 340, 341, 344], "being": [1, 2, 3, 7, 8, 17, 18, 20, 21, 32, 58, 79, 83, 97, 103, 112, 118, 120, 121, 130, 137, 151, 164, 165, 184, 188, 224, 227, 243, 255, 258, 261, 290, 304, 309, 321, 322, 323, 327, 332, 333, 334, 335, 338, 339, 341], "s": [1, 2, 3, 6, 7, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 68, 69, 79, 83, 87, 94, 97, 98, 99, 103, 113, 117, 135, 145, 147, 149, 150, 151, 153, 155, 157, 159, 169, 170, 184, 188, 194, 195, 196, 198, 204, 213, 217, 219, 220, 223, 224, 228, 231, 232, 235, 242, 254, 256, 261, 271, 272, 273, 274, 275, 316, 327, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "accept": [1, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 53, 56, 57, 58, 79, 83, 93, 97, 103, 113, 117, 125, 135, 142, 147, 150, 151, 152, 153, 155, 214, 231, 232, 233, 261, 329, 334, 344], "two": [1, 2, 3, 4, 8, 10, 32, 40, 55, 67, 69, 79, 83, 97, 103, 131, 135, 155, 175, 182, 184, 186, 188, 208, 232, 255, 266, 303, 307, 316, 328, 332, 333, 334, 335, 337, 338, 339, 341, 343, 344], "main": [1, 2, 3, 5, 20, 22, 57, 80, 232, 307, 327, 328, 332, 333, 337, 344], "argument": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 53, 55, 56, 57, 58, 67, 68, 69, 79, 83, 94, 97, 98, 103, 116, 117, 135, 143, 145, 147, 149, 150, 151, 153, 155, 166, 169, 170, 182, 184, 186, 188, 190, 193, 194, 195, 196, 197, 214, 216, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 235, 236, 241, 242, 243, 244, 245, 246, 247, 248, 253, 254, 255, 257, 258, 259, 260, 261, 263, 265, 269, 271, 272, 273, 274, 275, 279, 289, 300, 310, 316, 319, 320, 323, 332, 333, 334, 335, 338, 339, 341, 344], "list": [1, 6, 7, 8, 9, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 49, 52, 53, 54, 55, 56, 57, 62, 67, 68, 69, 70, 79, 83, 93, 97, 98, 99, 103, 105, 106, 112, 116, 118, 121, 129, 131, 133, 135, 142, 149, 151, 153, 155, 157, 166, 178, 184, 188, 190, 193, 194, 200, 205, 223, 229, 230, 232, 234, 235, 236, 256, 261, 268, 271, 274, 289, 303, 304, 321, 322, 327, 332, 334, 337, 339, 340, 341, 343, 344], "constructor": [1, 16, 18, 19, 20, 21, 38, 45, 55, 150, 241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 269, 271, 272, 273, 274, 275, 316, 320, 323, 327, 332, 333, 334, 338, 341], "iter": [1, 11, 13, 14, 16, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 67, 79, 83, 97, 103, 123, 131, 143, 169, 170, 190, 195, 196, 209, 216, 222, 228, 229, 231, 233, 234, 236, 256, 268, 303, 306, 307, 316, 328, 329, 332, 334, 335, 338, 339], "execut": [1, 3, 6, 7, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 41, 42, 52, 53, 54, 55, 56, 57, 79, 80, 83, 87, 93, 94, 97, 103, 110, 151, 182, 184, 186, 188, 224, 233, 234, 311, 323, 327, 329, 331, 333, 334, 335, 338, 341, 342, 344], "step": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 76, 79, 80, 83, 89, 93, 97, 98, 99, 103, 110, 112, 125, 128, 131, 145, 146, 147, 148, 151, 156, 166, 167, 168, 180, 182, 184, 186, 188, 189, 191, 192, 220, 224, 225, 227, 228, 232, 241, 250, 258, 270, 271, 272, 273, 274, 277, 278, 279, 289, 298, 303, 307, 329, 332, 333, 335, 337, 339, 340, 341, 343], "queri": [1, 3, 13, 14, 16, 17, 32, 34, 36, 39, 79, 83, 97, 103, 135, 150, 153, 157, 234, 332, 339, 343], "defin": [1, 2, 11, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 55, 79, 83, 97, 103, 136, 146, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 195, 196, 199, 200, 201, 203, 206, 207, 209, 214, 220, 221, 223, 224, 225, 227, 230, 235, 238, 245, 247, 256, 271, 272, 273, 274, 275, 289, 320, 332, 333, 335, 339, 341, 344], "number": [1, 2, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 73, 79, 83, 93, 94, 96, 97, 98, 99, 103, 112, 113, 120, 126, 130, 131, 141, 145, 148, 157, 168, 169, 170, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 195, 196, 199, 200, 201, 204, 206, 207, 210, 211, 212, 213, 216, 220, 221, 224, 225, 227, 228, 231, 232, 236, 240, 242, 248, 250, 254, 255, 257, 259, 261, 263, 298, 300, 303, 307, 309, 310, 311, 321, 322, 323, 327, 332, 333, 334, 335, 338, 339, 340, 344], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 54, 67, 79, 83, 97, 103, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 129, 130, 131, 133, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 182, 184, 188, 190, 197, 198, 241, 242, 243, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 269, 272, 273, 274, 304, 332, 334, 335, 338, 339, 341, 344], "deliv": [1, 16, 18, 19, 20, 55, 332, 333, 343], "stack": [1, 3, 7, 8, 18, 20, 21, 28, 29, 50, 79, 83, 92, 97, 98, 99, 103, 157, 182, 184, 186, 187, 188, 233, 234, 289, 298, 327, 333, 337, 339, 343], "user": [1, 2, 3, 5, 8, 21, 32, 52, 53, 55, 56, 57, 69, 79, 83, 97, 103, 146, 151, 176, 189, 258, 261, 320, 328, 329, 332, 333, 339, 343, 344], "reset": [1, 3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 69, 76, 79, 80, 83, 89, 92, 93, 94, 96, 97, 98, 99, 103, 113, 122, 125, 128, 130, 135, 142, 145, 146, 147, 148, 150, 153, 156, 157, 159, 167, 182, 184, 188, 215, 227, 289, 316, 332, 333, 334, 335, 337, 338, 343], "whenev": [1, 2, 3, 32, 35, 38, 41, 42, 55, 109, 128, 151, 156, 256, 271, 272, 273, 274, 309, 327], "reach": [1, 13, 14, 16, 17, 18, 19, 20, 21, 22, 40, 67, 79, 83, 97, 103, 145, 220, 224, 225, 227, 332, 334, 338, 343, 344], "done": [1, 2, 3, 4, 7, 8, 13, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 52, 53, 55, 56, 57, 68, 69, 76, 79, 80, 83, 89, 92, 93, 96, 97, 98, 99, 101, 102, 103, 104, 105, 110, 113, 118, 119, 121, 122, 123, 130, 131, 133, 137, 139, 141, 143, 145, 147, 148, 150, 151, 157, 166, 167, 168, 182, 184, 188, 192, 241, 242, 244, 245, 247, 248, 254, 258, 259, 260, 261, 263, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 316, 328, 332, 334, 335, 337, 338, 339, 340, 341, 343, 344], "state": [1, 2, 3, 4, 13, 14, 16, 17, 32, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 76, 79, 83, 89, 93, 97, 98, 99, 101, 102, 103, 112, 113, 114, 116, 122, 131, 137, 145, 146, 150, 151, 157, 166, 167, 168, 171, 176, 180, 182, 183, 184, 186, 187, 188, 189, 190, 192, 200, 203, 204, 206, 207, 213, 217, 231, 237, 241, 243, 247, 255, 256, 258, 259, 260, 261, 269, 270, 271, 272, 273, 274, 275, 323, 327, 328, 332, 333, 334, 335, 338, 339, 344], "after": [1, 2, 3, 8, 13, 14, 18, 20, 21, 26, 32, 40, 79, 83, 87, 97, 103, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 129, 130, 131, 133, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 166, 182, 184, 188, 197, 220, 222, 224, 225, 229, 251, 261, 333, 334, 335, 338, 339, 340, 341, 344], "predefin": [1, 333, 334, 335, 341], "becaus": [1, 3, 4, 7, 34, 36, 39, 40, 79, 83, 97, 103, 122, 129, 145, 150, 156, 175, 189, 196, 216, 222, 223, 228, 229, 230, 231, 232, 332, 333, 335, 337, 338, 339, 341, 344], "potenti": [1, 2, 339, 341], "comput": [1, 3, 4, 8, 13, 16, 21, 27, 32, 40, 79, 83, 97, 103, 131, 151, 154, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 199, 200, 201, 202, 203, 206, 207, 209, 211, 212, 214, 217, 220, 221, 223, 224, 225, 227, 228, 230, 232, 235, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 311, 328, 332, 334, 335, 337, 338, 340, 341], "heavi": [1, 8, 341], "crucial": [1, 220, 224, 225, 227, 254, 256, 332, 333, 334, 335, 338, 339, 344], "configur": [1, 8, 13, 14, 16, 17, 21, 22, 40, 129, 171, 176, 203, 256, 258, 316, 327, 332, 333, 334, 338, 339], "hyperparamet": [1, 241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 269, 332, 339, 341], "appropri": [1, 3, 4, 7, 13, 14, 16, 17, 59, 65, 71, 72, 74, 97, 103, 122, 320, 323, 332, 341], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 67, 70, 73, 77, 78, 79, 80, 83, 93, 94, 96, 97, 98, 99, 100, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 319, 320, 321, 322, 323, 327, 328, 332, 335, 338, 339, 340, 343], "take": [1, 3, 8, 23, 40, 79, 83, 97, 103, 116, 145, 148, 150, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 195, 196, 199, 200, 201, 203, 206, 207, 209, 214, 220, 221, 223, 224, 225, 226, 227, 228, 230, 235, 238, 240, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 298, 309, 327, 329, 332, 333, 334, 338, 339, 341, 344], "consider": [1, 3, 8, 333, 338, 341], "whether": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 46, 47, 52, 53, 54, 55, 56, 57, 79, 83, 93, 97, 98, 99, 100, 103, 105, 118, 121, 146, 151, 167, 169, 170, 184, 188, 190, 236, 242, 243, 244, 245, 247, 248, 249, 255, 256, 258, 259, 261, 263, 269, 271, 274, 332, 333, 334, 338, 339, 344], "should": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 68, 69, 70, 71, 79, 83, 92, 93, 97, 98, 99, 100, 103, 113, 116, 117, 118, 119, 122, 123, 125, 129, 131, 136, 137, 139, 142, 143, 145, 146, 148, 150, 151, 156, 157, 159, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 195, 196, 199, 200, 201, 203, 206, 207, 209, 214, 220, 221, 223, 224, 225, 227, 228, 230, 231, 232, 235, 238, 248, 253, 255, 256, 258, 259, 262, 270, 271, 272, 273, 274, 275, 290, 302, 303, 304, 307, 319, 321, 322, 323, 327, 329, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "occur": [1, 8, 14, 28, 29, 114, 131, 136, 156, 167, 216, 222, 223, 228, 229, 230, 231, 232, 251, 341, 344], "serial": [1, 2, 3, 32, 79, 83, 97, 103, 157], "optim": [1, 2, 8, 32, 40, 79, 83, 97, 103, 151, 168, 192, 197, 198, 242, 256, 257, 258, 261, 302, 307, 319, 328, 329, 334, 335, 338, 339], "parallel": [1, 3, 8, 17, 98, 99, 156, 159, 241, 320, 321, 322, 323, 333, 334, 338], "syncdatacollector": [1, 13, 14, 17, 18, 19, 20, 21, 113, 139, 319, 322, 325, 334, 335, 338, 341], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 79, 80, 81, 83, 85, 92, 93, 97, 98, 99, 103, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 321, 322, 323, 327, 328, 329, 332, 333, 334, 335, 338, 341, 344], "worker": [1, 2, 13, 14, 16, 17, 18, 19, 20, 21, 22, 36, 45, 58, 80, 94, 97, 103, 157, 321, 322, 323, 332, 334, 343, 344], "multisyncdatacollector": [1, 18, 19, 20, 21, 322, 325, 334, 343], "split": [1, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 45, 52, 53, 55, 56, 57, 58, 68, 69, 92, 98, 99, 182, 186, 241, 242, 243, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 269, 327, 329, 334, 341, 343], "workload": 1, "across": [1, 3, 8, 18, 19, 20, 21, 35, 38, 41, 42, 68, 69, 87, 157, 195, 227, 309, 325, 327, 332, 338, 339], "aggreg": [1, 3, 167, 169, 170, 172, 173, 234], "result": [1, 3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 67, 68, 69, 79, 80, 83, 97, 103, 111, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 129, 130, 131, 133, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 166, 167, 182, 184, 186, 188, 190, 195, 205, 221, 223, 224, 230, 241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 269, 271, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 309, 327, 333, 335, 339, 340, 343, 344], "final": [1, 3, 4, 21, 34, 36, 39, 40, 156, 182, 184, 186, 188, 195, 220, 224, 225, 226, 227, 233, 271, 303, 327, 332, 333, 334, 338, 339, 344], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 321, 325, 332, 333, 334, 343], "sever": [1, 8, 30, 32, 45, 79, 83, 97, 103, 114, 116, 151, 258, 332, 334, 341, 344], "batch": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 67, 68, 69, 71, 73, 79, 83, 93, 94, 96, 97, 103, 113, 125, 131, 133, 136, 139, 147, 151, 152, 156, 157, 167, 177, 178, 182, 183, 184, 186, 187, 188, 189, 193, 194, 195, 196, 197, 202, 204, 210, 214, 227, 231, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 269, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 298, 301, 304, 305, 306, 307, 309, 321, 322, 323, 329, 333, 334, 335, 337, 338, 340, 343, 344], "gather": [1, 3, 18, 20, 21, 45, 58, 60, 61, 73, 136, 194, 202, 270, 311, 326, 332, 333, 334, 335, 338, 339, 341, 344], "continu": [1, 9, 25, 46, 69, 79, 83, 97, 98, 99, 103, 163, 172, 173, 174, 175, 227, 234, 241, 242, 248, 254, 258, 259, 260, 261, 262, 263, 271, 276, 284, 327, 332, 334, 335, 338, 339, 341, 343, 344], "concomitantli": 1, "network": [1, 4, 8, 32, 79, 83, 92, 97, 98, 99, 103, 169, 170, 172, 173, 174, 175, 178, 180, 181, 186, 190, 195, 196, 198, 200, 201, 204, 206, 207, 208, 213, 217, 218, 219, 221, 231, 235, 242, 243, 244, 245, 247, 248, 249, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 267, 269, 271, 272, 273, 274, 275, 318, 319, 327, 328, 329, 337, 339, 344], "impli": [1, 344], "weight": [1, 4, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 40, 79, 83, 97, 101, 102, 103, 117, 135, 147, 150, 151, 153, 155, 182, 183, 184, 186, 187, 188, 195, 198, 231, 241, 242, 243, 248, 251, 261, 309, 318, 327, 329, 332, 333, 334, 335, 337, 339, 341, 343], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 20, 21, 28, 29, 32, 52, 53, 55, 56, 57, 79, 83, 97, 103, 129, 131, 143, 151, 152, 157, 159, 190, 195, 328, 329, 332, 333, 334, 335, 338, 339, 340, 341, 343, 344], "slightli": [1, 327, 328, 335, 339, 340, 341, 344], "lag": [1, 13, 14, 16, 17, 332, 333, 334], "therefor": [1, 3, 7, 56, 57, 79, 83, 97, 103, 139, 258, 269, 344], "although": [1, 8, 79, 83, 97, 103, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 195, 196, 199, 200, 201, 203, 206, 207, 209, 214, 220, 221, 223, 224, 225, 227, 230, 235, 238, 329, 332, 333, 341], "fastest": 1, "price": 1, "suitabl": [1, 2], "where": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 60, 61, 68, 69, 71, 73, 79, 83, 92, 93, 96, 97, 98, 99, 103, 110, 113, 122, 129, 135, 139, 142, 145, 146, 148, 150, 152, 155, 156, 166, 167, 182, 183, 186, 187, 193, 194, 195, 220, 224, 225, 227, 228, 231, 232, 240, 241, 242, 243, 248, 249, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 328, 329, 332, 333, 334, 337, 338, 339, 341, 344], "asynchron": [1, 9, 14, 21, 32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231, 241, 321, 333, 334], "off": [1, 2, 4, 185, 212, 222, 261, 303, 312, 327, 329, 332, 333, 334, 338, 340, 344], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 16, 17, 18, 20, 21, 32, 52, 53, 55, 56, 57, 68, 79, 83, 97, 98, 99, 103, 118, 121, 125, 131, 146, 151, 156, 179, 182, 184, 186, 188, 196, 197, 217, 219, 221, 223, 229, 241, 249, 254, 258, 303, 327, 329, 332, 333, 334, 335, 338, 339, 340, 341, 344], "remot": [1, 2, 18, 19, 20, 21, 97, 103, 344], "rollout": [1, 2, 3, 13, 14, 16, 21, 23, 40, 79, 83, 86, 93, 94, 97, 98, 99, 101, 102, 103, 104, 105, 110, 113, 116, 118, 121, 122, 123, 129, 133, 137, 142, 143, 145, 146, 148, 159, 168, 184, 188, 192, 227, 241, 311, 327, 332, 334, 335, 340, 341, 343], "necessari": [1, 4, 6, 8, 13, 14, 16, 17, 53, 55, 56, 57, 143, 259, 271, 272, 273, 274, 275, 328, 332, 334], "synchronis": [1, 80, 338], "either": [1, 5, 22, 32, 40, 58, 79, 83, 97, 103, 145, 146, 237, 263, 294, 329, 332, 333, 335, 340, 341, 343, 344], "update_policy_weights_": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 332, 338, 343], "update_at_each_batch": [1, 13, 14, 17, 332], "true": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 67, 68, 69, 77, 78, 79, 80, 81, 83, 93, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 112, 113, 114, 117, 120, 125, 128, 129, 130, 131, 135, 136, 137, 138, 141, 143, 145, 147, 149, 150, 151, 152, 153, 155, 157, 159, 163, 166, 167, 168, 169, 170, 172, 173, 174, 175, 181, 182, 183, 184, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 211, 212, 216, 217, 218, 219, 220, 222, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 241, 242, 243, 244, 247, 248, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 266, 271, 272, 273, 274, 277, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 300, 301, 303, 304, 307, 323, 327, 328, 329, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "second": [1, 3, 8, 182, 184, 186, 188, 223, 243, 255, 258, 261, 306, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 55, 56, 57, 58, 60, 61, 73, 76, 79, 81, 83, 86, 87, 89, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 117, 118, 119, 121, 122, 123, 129, 133, 134, 135, 137, 139, 143, 145, 147, 149, 150, 151, 153, 155, 163, 166, 168, 169, 170, 171, 172, 173, 174, 175, 179, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 195, 196, 197, 198, 203, 204, 205, 213, 216, 217, 218, 219, 221, 222, 223, 227, 228, 229, 230, 231, 234, 236, 241, 242, 244, 245, 247, 248, 254, 258, 259, 260, 261, 263, 269, 271, 272, 273, 274, 304, 309, 316, 317, 327, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343], "oper": [1, 3, 4, 7, 8, 13, 14, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 44, 45, 46, 47, 79, 83, 97, 103, 125, 129, 150, 178, 179, 183, 187, 199, 217, 218, 219, 222, 223, 226, 231, 237, 241, 243, 244, 245, 249, 255, 258, 260, 269, 270, 271, 272, 273, 274, 307, 316, 325, 329, 332, 333, 334, 335, 337, 338, 339, 344], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 43, 44, 45, 52, 55, 68, 69, 78, 79, 80, 83, 93, 97, 103, 113, 131, 147, 150, 157, 163, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 195, 196, 199, 200, 201, 203, 206, 207, 209, 214, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 238, 245, 248, 256, 269, 271, 272, 273, 274, 290, 294, 303, 311, 312, 313, 316, 319, 321, 322, 327, 328, 329, 332, 334, 335, 339, 341, 344], "cpu": [1, 3, 8, 10, 13, 14, 16, 18, 19, 20, 21, 24, 26, 28, 32, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 53, 55, 56, 57, 58, 60, 61, 73, 76, 79, 83, 89, 92, 93, 96, 97, 98, 99, 101, 102, 103, 104, 105, 117, 118, 119, 121, 122, 123, 133, 135, 137, 139, 143, 145, 147, 150, 151, 153, 155, 163, 166, 168, 182, 183, 184, 186, 187, 188, 192, 197, 198, 204, 205, 213, 216, 217, 218, 219, 221, 222, 223, 228, 229, 230, 231, 234, 236, 241, 242, 244, 245, 247, 248, 254, 258, 259, 260, 261, 263, 269, 304, 316, 327, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "slower": 1, "than": [1, 2, 3, 4, 8, 13, 14, 16, 17, 52, 55, 68, 69, 79, 83, 87, 97, 103, 137, 175, 184, 186, 188, 190, 199, 214, 216, 220, 222, 231, 236, 256, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 326, 328, 332, 333, 334, 338, 339, 341, 343, 344], "one": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 52, 53, 54, 55, 56, 57, 59, 63, 65, 68, 69, 70, 72, 74, 79, 80, 83, 87, 92, 96, 97, 98, 99, 103, 105, 110, 113, 116, 118, 119, 120, 121, 130, 131, 135, 139, 142, 144, 146, 147, 148, 150, 151, 152, 155, 157, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 195, 196, 199, 200, 201, 202, 203, 205, 206, 207, 209, 214, 216, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 235, 236, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 254, 255, 256, 258, 259, 260, 261, 262, 263, 269, 271, 272, 273, 274, 278, 279, 300, 302, 303, 307, 311, 316, 323, 326, 327, 328, 329, 332, 333, 334, 335, 337, 338, 339, 340, 341, 344], "cuda": [1, 3, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 79, 83, 86, 87, 97, 103, 117, 129, 134, 135, 147, 150, 151, 153, 155, 182, 183, 186, 187, 231, 247, 299, 332, 333, 334, 335, 338, 340, 344], "multipl": [1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 27, 43, 97, 103, 114, 116, 120, 130, 139, 142, 145, 150, 157, 182, 186, 188, 189, 195, 197, 198, 216, 222, 228, 229, 231, 232, 235, 243, 248, 255, 258, 259, 263, 277, 316, 323, 327, 329, 332, 333, 334, 338, 339, 341, 343], "infer": [1, 97, 103, 113, 157, 184, 188, 197, 221, 247, 332, 334, 341], "run": [1, 3, 4, 5, 6, 7, 8, 10, 13, 14, 17, 21, 32, 77, 78, 79, 83, 93, 97, 103, 130, 131, 151, 157, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 195, 196, 199, 200, 201, 203, 206, 207, 209, 214, 220, 221, 223, 224, 225, 227, 230, 233, 234, 235, 238, 261, 303, 321, 322, 323, 326, 329, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343], "dispatch": [1, 18, 19, 20, 21, 214], "avail": [1, 3, 4, 6, 21, 57, 67, 87, 97, 98, 99, 112, 129, 179, 205, 228, 232, 256, 321, 322, 327, 332, 333, 334, 335, 338, 339, 341, 344], "speed": [1, 2, 4, 8, 27, 97, 103, 328, 332, 333, 334, 335, 338, 339, 341], "up": [1, 2, 3, 8, 9, 13, 14, 16, 27, 40, 52, 53, 55, 56, 57, 97, 103, 112, 148, 150, 258, 326, 327, 328, 332, 333, 334, 335, 338, 339, 341, 344], "avoid": [1, 32, 60, 61, 73, 79, 83, 97, 103, 109, 151, 157, 216, 231, 236, 243, 255, 258, 261, 310, 334, 338], "oom": [1, 60, 61, 73], "choic": [1, 2, 52, 53, 55, 56, 57, 97, 199, 327, 328, 332, 333, 338], "size": [1, 2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 67, 68, 69, 70, 71, 73, 76, 79, 81, 83, 89, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 112, 114, 118, 121, 122, 123, 125, 133, 135, 137, 139, 143, 144, 145, 147, 149, 150, 151, 152, 155, 157, 163, 166, 168, 169, 170, 171, 176, 177, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 199, 202, 203, 204, 205, 206, 207, 210, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 234, 236, 241, 242, 244, 245, 247, 248, 254, 256, 258, 259, 260, 261, 263, 269, 270, 271, 272, 273, 274, 275, 290, 298, 304, 316, 327, 333, 334, 335, 337, 338, 339, 340, 343, 344], "pass": [1, 3, 4, 13, 14, 16, 18, 19, 20, 21, 22, 26, 32, 35, 38, 40, 41, 42, 45, 53, 55, 56, 57, 60, 61, 71, 73, 79, 80, 81, 83, 92, 94, 97, 98, 99, 103, 118, 121, 137, 150, 152, 157, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 195, 196, 197, 199, 200, 201, 203, 204, 206, 207, 209, 213, 214, 216, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 238, 243, 255, 256, 258, 271, 272, 273, 274, 275, 304, 321, 322, 323, 327, 332, 333, 334, 335, 337, 338, 339, 341, 344], "ie": [1, 3, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 45, 46, 47, 55, 63, 69, 79, 83, 87, 96, 97, 103, 113, 125, 152, 157, 167, 184, 188, 221, 241, 243, 244, 248, 254, 255, 258, 259, 260, 261, 263, 271, 272, 273, 274, 327, 328, 333, 334, 338, 341], "store": [1, 3, 8, 13, 14, 16, 17, 20, 26, 32, 34, 36, 37, 39, 41, 42, 43, 45, 55, 56, 58, 60, 61, 62, 63, 73, 79, 83, 97, 103, 156, 157, 168, 189, 192, 241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 269, 316, 325, 329, 332, 334, 335, 338, 340, 341, 344], "while": [1, 3, 7, 8, 32, 79, 83, 97, 103, 139, 151, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 195, 196, 199, 200, 201, 203, 206, 207, 209, 214, 220, 221, 223, 224, 225, 227, 230, 235, 238, 254, 255, 258, 261, 327, 332, 334, 335, 338, 339, 340, 341, 343], "wait": [1, 20, 21, 22, 335, 339], "also": [1, 2, 3, 8, 9, 11, 32, 34, 36, 39, 41, 53, 55, 56, 57, 58, 60, 61, 73, 79, 83, 97, 98, 99, 103, 109, 112, 113, 120, 131, 137, 139, 142, 143, 145, 147, 151, 182, 186, 207, 228, 233, 234, 235, 241, 242, 244, 245, 247, 248, 254, 258, 261, 271, 278, 279, 327, 329, 332, 333, 334, 335, 337, 338, 339, 341, 344], "impact": [1, 55, 118, 121, 333, 335, 338], "memori": [1, 2, 3, 8, 21, 27, 32, 34, 36, 39, 45, 52, 53, 55, 56, 57, 60, 79, 80, 83, 87, 97, 103, 113, 117, 135, 147, 150, 151, 153, 155, 157, 186, 187, 231, 323, 329, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "manag": [1, 8, 267, 268, 271, 272, 273, 274, 303], "kei": [1, 2, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 68, 69, 71, 79, 83, 97, 103, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 134, 135, 136, 137, 139, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 166, 167, 168, 178, 179, 184, 188, 191, 192, 205, 216, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 269, 270, 271, 272, 273, 274, 275, 290, 301, 302, 303, 305, 306, 307, 311, 316, 328, 329, 332, 334, 335, 337, 338, 339, 341, 343, 344], "control": [1, 3, 5, 8, 16, 77, 78, 92, 98, 99, 120, 166, 172, 173, 174, 175, 184, 188, 191, 192, 207, 214, 227, 231, 232, 233, 241, 243, 255, 258, 262, 271, 276, 284, 327, 329, 332, 333, 334, 338, 339, 341], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 57, 58, 67, 79, 83, 87, 94, 97, 100, 103, 113, 114, 118, 121, 126, 129, 130, 131, 135, 136, 145, 147, 148, 150, 151, 153, 159, 182, 183, 185, 186, 187, 188, 193, 194, 195, 212, 217, 218, 219, 221, 228, 231, 232, 234, 241, 242, 243, 245, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 266, 269, 271, 272, 273, 274, 298, 302, 316, 327, 328, 329, 332, 333, 334, 335, 337, 338, 339, 340, 341, 344], "storing_devic": [1, 13, 14, 16, 17, 18, 19, 20, 21, 332, 333, 338, 343], "dure": [1, 3, 13, 14, 16, 17, 18, 19, 20, 36, 40, 45, 52, 53, 54, 55, 56, 57, 58, 79, 83, 97, 98, 99, 103, 113, 116, 118, 121, 126, 133, 151, 184, 188, 303, 307, 328, 332, 333, 334, 335, 338, 339, 341, 344], "heurist": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 227, 332, 344], "usual": [1, 3, 4, 6, 7, 8, 52, 79, 83, 97, 103, 198, 258, 271, 272, 273, 274, 275, 289, 316, 326, 327, 329, 332, 333, 334, 335, 338, 341, 344], "same": [1, 2, 3, 4, 11, 13, 14, 16, 18, 19, 20, 21, 28, 29, 32, 34, 36, 39, 43, 45, 52, 55, 67, 79, 80, 83, 92, 97, 98, 99, 103, 113, 118, 120, 121, 126, 130, 131, 150, 151, 157, 169, 170, 183, 184, 187, 188, 190, 193, 194, 195, 196, 221, 227, 235, 261, 332, 333, 334, 337, 338, 340, 341, 344], "storag": [1, 2, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 60, 61, 62, 67, 68, 69, 71, 73, 79, 81, 83, 97, 103, 112, 113, 118, 121, 139, 325, 329, 333, 334, 335, 338, 340], "default": [1, 2, 3, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 67, 68, 69, 73, 77, 79, 83, 96, 97, 98, 99, 100, 103, 105, 110, 112, 113, 114, 118, 120, 121, 122, 125, 129, 130, 131, 133, 135, 136, 139, 141, 143, 145, 146, 147, 148, 149, 151, 152, 153, 155, 156, 157, 159, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 209, 210, 211, 212, 216, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 235, 236, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 266, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 316, 319, 323, 329, 332, 333, 334, 335, 340, 341, 343, 344], "behaviour": [1, 3, 21, 55, 83, 114, 118, 121, 131, 136, 146, 166, 184, 185, 188, 212, 303, 327, 333, 341], "besid": 1, "those": [1, 2, 3, 5, 7, 26, 28, 97, 103, 113, 118, 121, 131, 147, 148, 188, 228, 232, 233, 234, 309, 321, 322, 327, 332, 333, 338, 339, 344], "choos": [1, 92, 184, 188, 258, 327, 328, 332, 333, 334, 338, 341], "follow": [1, 2, 3, 6, 7, 8, 32, 34, 36, 37, 39, 40, 52, 54, 79, 83, 93, 96, 97, 98, 99, 101, 102, 103, 105, 129, 135, 153, 169, 170, 182, 184, 186, 188, 190, 223, 229, 230, 240, 241, 242, 243, 244, 248, 254, 255, 258, 259, 260, 261, 263, 307, 316, 327, 328, 329, 332, 333, 334, 335, 337, 338, 339, 341, 343, 344], "max_frames_per_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 310, 332, 334, 343], "frame": [1, 2, 13, 14, 16, 17, 18, 19, 20, 21, 32, 113, 126, 220, 224, 225, 227, 289, 290, 300, 303, 307, 310, 311, 332, 333, 334, 335, 338, 341, 343, 344], "call": [1, 2, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 67, 70, 73, 79, 83, 96, 97, 103, 113, 116, 117, 120, 125, 128, 129, 131, 133, 134, 135, 142, 147, 150, 151, 153, 155, 156, 157, 159, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 195, 196, 197, 199, 200, 201, 203, 206, 207, 209, 214, 220, 221, 223, 224, 225, 227, 230, 231, 232, 234, 235, 238, 243, 255, 258, 261, 270, 271, 272, 273, 274, 289, 303, 329, 333, 334, 335, 338, 339, 341, 344], "frames_per_batch": [1, 13, 14, 16, 17, 18, 19, 20, 21, 113, 139, 310, 332, 333, 334, 335, 338, 341, 343], "each": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 30, 31, 32, 40, 41, 52, 55, 68, 69, 79, 80, 83, 97, 98, 99, 103, 105, 135, 139, 142, 145, 146, 147, 148, 155, 157, 179, 182, 183, 184, 186, 188, 195, 196, 200, 204, 205, 213, 220, 222, 223, 224, 230, 234, 277, 280, 281, 282, 283, 285, 286, 287, 288, 303, 304, 321, 322, 327, 332, 333, 334, 335, 338, 339, 340, 341, 343, 344], "init_random_fram": [1, 13, 14, 16, 17, 18, 19, 20, 21, 310, 332, 333], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 44, 46, 47, 55, 57, 64, 79, 83, 93, 97, 103, 120, 130, 131, 147, 159, 182, 184, 186, 188, 224, 228, 231, 232, 242, 259, 303, 311, 327, 332, 333, 334, 335, 339, 340, 341, 343, 344], "rand_step": [1, 3, 75, 77, 78, 79, 80, 82, 83, 84, 88, 90, 91, 93, 94, 97, 103, 128, 147, 157, 339, 343, 344], "reset_at_each_it": [1, 13, 14, 16, 17, 18, 19, 20, 21, 332], "split_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 52, 53, 55, 56, 57, 332, 333, 334], "trajectori": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 32, 41, 52, 53, 55, 56, 57, 63, 68, 69, 71, 79, 83, 97, 103, 136, 145, 150, 168, 188, 192, 227, 258, 271, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 298, 325, 328, 332, 333, 334, 335, 339, 341, 343, 344], "pad": [1, 2, 3, 23, 37, 43, 52, 53, 55, 56, 57, 113, 169, 170, 172, 173, 188, 189, 193, 194, 195, 304], "along": [1, 2, 3, 23, 28, 29, 34, 36, 39, 40, 45, 52, 53, 55, 56, 57, 61, 68, 69, 73, 112, 113, 114, 131, 133, 136, 142, 149, 188, 190, 193, 194, 198, 222, 228, 231, 232, 256, 327, 332, 333, 335, 338, 339, 341], "point": [1, 2, 3, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 54, 59, 63, 65, 71, 72, 74, 79, 83, 97, 103, 112, 113, 117, 135, 146, 147, 149, 150, 151, 153, 155, 191, 231, 240, 249, 307, 326, 333, 334, 337, 338, 339, 341, 344], "boolean": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 83, 136, 145, 167, 193, 194, 220, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 329, 335], "repres": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 41, 53, 79, 83, 97, 103, 105, 126, 136, 157, 179, 193, 194, 205, 222, 223, 229, 230, 232, 266, 271, 304, 332, 334, 335, 338], "valid": [1, 3, 23, 34, 36, 37, 45, 58, 106, 136, 151, 169, 170, 190, 193, 194, 220, 227, 255, 271, 272, 273, 274, 304, 329, 344], "exploration_typ": [1, 13, 14, 16, 18, 19, 20, 21, 303, 325, 332, 333], "strategi": [1, 2, 16, 55, 92, 194, 202, 224, 327, 329, 332, 333, 338, 341], "reset_when_don": [1, 13, 14, 16, 18, 19, 20, 21], "These": [1, 2, 7, 32, 40, 57, 79, 83, 97, 103, 135, 155, 327, 328, 332, 334, 338, 339, 341, 344], "tool": [1, 2, 3, 5, 335, 339, 341, 344], "backend": [1, 3, 7, 11, 18, 19, 21, 22, 97, 107, 109, 329, 332, 334, 335, 339], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 325], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 325], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "torch": [1, 2, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 67, 68, 69, 71, 73, 76, 79, 80, 83, 89, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 112, 114, 117, 118, 119, 120, 121, 122, 123, 129, 131, 133, 135, 137, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 155, 157, 163, 166, 167, 168, 169, 170, 171, 176, 177, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 210, 211, 212, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 239, 241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 298, 305, 306, 316, 319, 327, 328, 329, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "multiprocess": [1, 2, 3, 18, 19, 20, 80, 81, 157, 333, 334, 339, 344], "synchron": [1, 13, 19, 21, 94, 321, 322, 333, 334], "mode": [1, 6, 13, 14, 16, 18, 19, 20, 21, 32, 79, 83, 94, 97, 103, 118, 121, 146, 151, 157, 160, 164, 165, 177, 184, 185, 188, 202, 210, 211, 212, 228, 232, 256, 303, 332, 333, 335, 338, 343, 344], "find": [1, 4, 6, 7, 18, 19, 20, 35, 37, 43, 68, 69, 186, 220, 227, 301, 305, 332, 333, 338], "dedic": [1, 2, 3, 18, 19, 20, 21, 217, 218, 219, 327, 332, 337, 338], "folder": [1, 2, 333], "sub": [1, 2, 3, 13, 14, 18, 19, 20, 21, 55, 68, 79, 83, 97, 103, 136, 233, 234, 298, 307, 327, 332, 333, 334, 337, 343, 344], "all": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 44, 46, 47, 49, 57, 79, 80, 83, 93, 97, 98, 99, 103, 105, 106, 112, 113, 116, 117, 118, 119, 121, 124, 129, 130, 131, 135, 142, 147, 148, 150, 151, 153, 155, 157, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 195, 196, 199, 200, 201, 203, 206, 207, 209, 214, 220, 221, 223, 224, 225, 227, 230, 231, 232, 234, 235, 238, 251, 256, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 302, 307, 310, 321, 322, 323, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 343, 344], "variou": [1, 3, 13, 14, 16, 17, 184, 188, 241, 242, 243, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 264, 269, 321, 322, 332, 333, 334, 338, 344], "machin": [1, 7, 18, 19, 20, 32, 54, 87, 338], "One": [1, 2, 4, 8, 31, 33, 45, 113, 139, 153, 202, 220, 231, 235, 262, 266, 294, 332, 333, 341, 344], "wonder": 1, "why": [1, 3, 339, 344], "parallelenv": [1, 2, 3, 13, 14, 16, 17, 20, 79, 83, 94, 98, 99, 103, 320, 325, 332, 333, 334, 337, 343, 344], "instead": [1, 4, 7, 8, 11, 27, 32, 55, 79, 83, 97, 103, 125, 147, 151, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 195, 196, 199, 200, 201, 203, 206, 207, 209, 214, 220, 221, 223, 224, 225, 227, 230, 235, 238, 241, 243, 245, 248, 249, 254, 255, 258, 259, 260, 261, 269, 271, 275, 279, 323, 327, 339, 341, 344], "In": [1, 3, 4, 5, 7, 8, 10, 11, 17, 21, 22, 32, 52, 53, 55, 56, 57, 79, 83, 97, 98, 99, 103, 117, 118, 119, 121, 135, 139, 143, 146, 147, 149, 150, 151, 153, 155, 156, 182, 185, 186, 190, 195, 207, 211, 212, 231, 234, 240, 241, 242, 244, 245, 247, 248, 254, 256, 258, 259, 260, 261, 263, 309, 321, 322, 323, 327, 328, 332, 333, 334, 335, 337, 338, 339, 340, 341, 344], "lower": [1, 2, 3, 17, 21, 25, 116, 157, 206, 207, 235, 334, 339], "io": [1, 94, 186, 187], "footprint": [1, 2, 341], "need": [1, 2, 3, 4, 7, 8, 10, 11, 18, 19, 20, 21, 32, 34, 36, 70, 79, 83, 87, 92, 97, 98, 99, 103, 113, 116, 125, 135, 137, 148, 151, 155, 157, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 195, 196, 197, 199, 200, 201, 203, 206, 207, 209, 214, 220, 221, 223, 224, 225, 227, 229, 230, 231, 235, 238, 240, 248, 259, 260, 261, 263, 270, 275, 290, 307, 323, 327, 328, 332, 333, 334, 335, 338, 339, 341, 343, 344], "commun": [1, 2, 3, 326, 334, 344], "yet": [1, 340], "spec": [1, 2, 3, 15, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 48, 49, 50, 52, 79, 81, 83, 93, 97, 103, 105, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 129, 131, 133, 135, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 159, 163, 167, 179, 205, 207, 216, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 241, 242, 244, 245, 247, 248, 254, 258, 259, 260, 261, 263, 269, 316, 327, 332, 333, 334, 335, 337, 338, 343], "plai": [1, 3, 98, 99, 113, 333, 334, 341, 344], "role": [1, 3, 333, 344], "opposit": 1, "direct": [1, 32, 79, 83, 97, 103, 182, 186, 256, 333], "sinc": [1, 2, 3, 4, 5, 7, 32, 35, 38, 41, 42, 57, 69, 79, 83, 97, 98, 99, 103, 166, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 195, 196, 199, 200, 201, 203, 206, 207, 209, 214, 220, 221, 222, 223, 224, 225, 227, 229, 230, 235, 238, 332, 333, 334, 335, 339, 340, 341, 343, 344], "faster": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 56, 57, 94, 271, 272, 273, 274, 335, 338], "share": [1, 3, 6, 8, 34, 36, 39, 60, 61, 62, 70, 73, 80, 97, 103, 157, 184, 188, 195, 196, 217, 218, 219, 241, 243, 244, 248, 254, 255, 258, 259, 260, 261, 263, 323, 325, 327, 334, 335, 337, 338, 343, 344], "among": [1, 3, 98, 99, 338], "achiev": [1, 3, 4, 32, 79, 83, 87, 97, 103, 146, 167, 304, 329, 332, 333, 334, 335, 338, 339, 344], "via": [1, 4, 7, 8, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 97, 135, 150, 155, 246, 256, 328, 329, 332, 333, 334, 335, 341, 344], "prohibit": [1, 3], "slow": [1, 3, 4, 34, 36, 39], "compar": [1, 3, 55, 303, 328, 332, 334, 338, 341, 344], "gpu": [1, 7, 8, 32, 60, 61, 73, 79, 83, 87, 97, 103, 332, 334, 335, 338, 344], "nativ": [1, 7, 9, 53, 79, 83, 97, 103, 113, 335, 341], "driver": [1, 7], "practic": [1, 3, 4, 5, 8, 185, 211, 212, 240, 326, 332, 333, 334, 335, 338, 340, 344], "mean": [1, 2, 3, 4, 7, 13, 14, 16, 18, 19, 20, 21, 34, 36, 39, 41, 63, 83, 131, 157, 168, 177, 180, 182, 184, 186, 188, 189, 192, 210, 220, 228, 232, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 327, 328, 332, 333, 334, 338, 339, 341, 343, 344], "keyword": [1, 3, 13, 14, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 53, 55, 56, 57, 58, 68, 69, 79, 83, 97, 103, 116, 117, 135, 143, 147, 149, 150, 151, 153, 155, 184, 188, 193, 194, 216, 220, 221, 222, 224, 225, 227, 228, 229, 231, 232, 235, 241, 242, 243, 244, 245, 246, 247, 248, 253, 254, 255, 257, 258, 259, 260, 261, 263, 265, 269, 271, 272, 273, 274, 275, 279, 320, 332, 333, 334, 338, 341, 344], "build": [1, 3, 7, 23, 26, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 79, 83, 97, 100, 103, 139, 157, 168, 184, 188, 192, 226, 228, 232, 307, 314, 315, 317, 318, 327, 329, 334, 335, 338, 339, 340, 343, 344], "given": [1, 2, 3, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 40, 41, 42, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 68, 69, 79, 83, 93, 97, 103, 117, 120, 131, 135, 147, 150, 151, 153, 155, 166, 168, 179, 180, 182, 186, 192, 205, 209, 216, 222, 223, 224, 227, 230, 231, 232, 233, 234, 236, 240, 244, 245, 247, 270, 271, 272, 273, 274, 275, 277, 299, 303, 319, 327, 329, 332, 333, 334, 338, 339, 344], "mani": [1, 3, 4, 38, 79, 241, 243, 248, 255, 258, 259, 263, 327, 332, 333, 334, 338, 339, 341, 344], "eg": [1, 2, 3, 11, 34, 36, 39, 60, 61, 62, 70, 73, 79, 83, 87, 97, 103, 120, 145, 151, 195, 221], "gymnasium": [1, 3, 5, 11, 79, 83, 90, 91, 97, 103, 107, 109, 123, 143, 145, 156, 333, 334, 339, 343], "other": [1, 2, 3, 4, 7, 8, 21, 22, 32, 35, 38, 41, 42, 45, 52, 53, 55, 56, 57, 60, 61, 62, 67, 68, 69, 70, 73, 79, 83, 93, 97, 103, 116, 119, 120, 143, 149, 153, 157, 182, 184, 188, 198, 199, 221, 223, 224, 230, 232, 241, 242, 243, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 269, 271, 304, 316, 321, 322, 327, 329, 332, 333, 334, 335, 338, 339, 340, 341, 343, 344], "warn": [1, 3, 220, 224, 225, 227, 333], "quickli": [1, 3, 333, 338, 344], "becom": [1, 3, 4, 21, 182, 186, 338, 344], "quit": [1, 3, 327, 332, 333, 334, 338, 344], "annoi": [1, 3], "By": [1, 2, 3, 33, 79, 83, 97, 98, 99, 103, 105, 214, 232, 256, 303, 323, 332, 340, 341, 344], "filter": [1, 3, 4, 45, 241, 242, 244, 248, 254, 258, 259, 261], "out": [1, 3, 4, 5, 9, 21, 32, 34, 36, 39, 45, 52, 55, 79, 83, 97, 98, 99, 103, 147, 159, 182, 183, 186, 193, 194, 197, 198, 216, 221, 222, 223, 227, 228, 229, 230, 231, 232, 267, 268, 329, 332, 333, 334, 335, 338, 339, 341, 343, 344], "If": [1, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 60, 61, 67, 68, 69, 71, 73, 79, 80, 83, 87, 93, 97, 98, 99, 103, 105, 107, 113, 114, 115, 116, 118, 119, 120, 121, 123, 125, 129, 130, 131, 135, 136, 138, 139, 142, 143, 146, 147, 148, 149, 150, 151, 153, 155, 157, 166, 167, 169, 170, 182, 183, 184, 186, 187, 188, 189, 190, 193, 194, 195, 196, 214, 216, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 254, 255, 256, 258, 259, 260, 261, 263, 269, 270, 271, 272, 273, 274, 275, 285, 286, 287, 288, 294, 302, 304, 307, 309, 311, 316, 319, 323, 326, 332, 333, 334, 335, 337, 338, 339, 341, 343, 344], "still": [1, 2, 3, 9, 55, 220, 255, 256, 332, 333, 335, 337, 339, 341, 344], "wish": [1, 3, 55, 109, 341], "see": [1, 3, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 54, 55, 56, 57, 58, 68, 79, 83, 86, 94, 97, 98, 99, 103, 105, 117, 135, 147, 149, 150, 151, 153, 155, 158, 169, 170, 182, 185, 186, 190, 196, 197, 204, 212, 213, 217, 219, 231, 232, 304, 332, 333, 334, 335, 338, 339, 341, 344], "displai": [1, 3, 7, 307, 329, 332, 333, 338, 339], "filter_warnings_subprocess": [1, 3], "fals": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 60, 61, 67, 68, 69, 73, 76, 77, 79, 80, 83, 89, 92, 93, 96, 97, 98, 99, 101, 102, 103, 104, 105, 110, 113, 114, 117, 118, 121, 122, 123, 125, 128, 129, 130, 131, 133, 135, 136, 137, 139, 141, 143, 145, 147, 149, 150, 151, 152, 153, 155, 157, 159, 166, 167, 168, 169, 170, 172, 179, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 204, 205, 211, 212, 213, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 266, 269, 271, 272, 273, 274, 280, 281, 282, 283, 285, 286, 287, 288, 300, 301, 303, 304, 305, 307, 316, 323, 327, 329, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "central": [2, 195, 332, 333, 338, 341], "part": [2, 4, 8, 32, 40, 53, 55, 56, 57, 79, 83, 97, 103, 112, 131, 139, 142, 184, 188, 236, 298, 323, 332, 334, 335, 339, 344], "algorithm": [2, 3, 8, 9, 13, 14, 93, 126, 241, 258, 259, 260, 261, 298, 312, 325, 328, 329, 332, 333, 334, 335, 338, 340, 341, 343], "implement": [2, 3, 9, 11, 16, 32, 70, 79, 83, 94, 97, 103, 117, 118, 119, 123, 129, 137, 143, 145, 150, 157, 169, 182, 183, 184, 185, 186, 187, 188, 210, 211, 212, 241, 242, 246, 247, 254, 256, 257, 258, 261, 316, 327, 329, 332, 333, 334, 335, 339, 343], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 26, 32, 34, 36, 39, 40, 42, 52, 55, 57, 67, 69, 79, 80, 83, 87, 97, 103, 113, 129, 135, 137, 153, 156, 157, 168, 188, 189, 195, 196, 241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 269, 326, 327, 328, 329, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "give": [2, 3, 7, 41, 79, 83, 93, 97, 103, 113, 326, 328, 332, 333, 338, 339, 340, 343], "abil": [2, 256, 339, 341], "veri": [2, 3, 333, 339, 341, 343, 344], "influenti": 2, "sampl": [2, 4, 8, 9, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 67, 68, 69, 71, 73, 79, 83, 93, 96, 97, 103, 112, 113, 136, 139, 160, 161, 164, 165, 168, 177, 185, 192, 193, 194, 202, 203, 206, 211, 212, 216, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 241, 242, 243, 244, 245, 247, 255, 257, 258, 263, 298, 304, 307, 310, 327, 332, 333, 334, 335, 338, 340, 343, 344], "latenc": 2, "especi": [2, 3, 7, 8, 114], "larger": [2, 4, 254], "volum": 2, "lazymemmapstorag": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 68, 69, 112, 113, 325, 332, 333, 335, 340, 341], "advis": [2, 344], "due": [2, 3, 5, 340, 341, 344], "serialis": [2, 34, 36, 39], "memmaptensor": 2, "well": [2, 3, 8, 17, 21, 32, 35, 37, 38, 41, 42, 70, 79, 83, 97, 103, 186, 206, 207, 256, 275, 332, 333, 335, 340, 341, 343, 344], "specifi": [2, 11, 13, 14, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 79, 83, 97, 98, 99, 103, 105, 118, 119, 121, 142, 144, 146, 152, 168, 186, 231, 232, 256, 262, 327, 332, 334, 335], "file": [2, 6, 7, 8, 34, 36, 39, 52, 53, 55, 56, 57, 289, 329, 331, 333, 341, 342], "locat": [2, 7, 34, 36, 39, 45, 57, 79, 83, 97, 103, 122, 131, 141, 185, 199, 211, 212, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 332, 333, 334, 338, 341], "improv": [2, 4, 126, 241, 328, 338, 341], "failur": [2, 4], "recoveri": 2, "liststorag": [2, 35, 38, 41, 42, 325, 341], "were": [2, 7, 97, 103, 334, 341], "found": [2, 3, 6, 7, 10, 21, 26, 32, 34, 36, 39, 45, 52, 53, 55, 56, 57, 68, 69, 79, 83, 87, 97, 103, 110, 113, 139, 142, 148, 157, 167, 224, 225, 228, 232, 255, 256, 258, 332, 333, 335], "rough": 2, "benchmark": [2, 3, 9], "http": [2, 5, 6, 7, 10, 18, 19, 20, 35, 43, 54, 56, 57, 63, 87, 94, 98, 99, 100, 113, 135, 153, 171, 172, 173, 174, 175, 176, 179, 180, 181, 186, 192, 193, 194, 198, 200, 201, 203, 204, 206, 207, 213, 223, 227, 241, 242, 245, 246, 247, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 271, 276, 284, 316, 340, 343], "github": [2, 5, 6, 7, 10, 18, 19, 20, 53, 98, 99, 100, 153, 343], "com": [2, 5, 6, 7, 10, 18, 19, 20, 56, 87, 98, 99, 100, 340, 343], "tree": [2, 34, 36, 39, 79, 83, 97, 103], "type": [2, 3, 14, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 57, 58, 79, 83, 92, 93, 97, 98, 99, 103, 117, 118, 119, 122, 123, 129, 135, 137, 143, 145, 147, 150, 151, 153, 155, 157, 161, 165, 169, 170, 190, 195, 196, 198, 204, 213, 220, 222, 228, 231, 232, 241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 265, 269, 277, 316, 321, 327, 332, 333, 334, 338, 339, 341, 344], "1x": 2, "lazytensorstorag": [2, 41, 42, 71, 139, 325, 334, 338, 341], "83x": 2, "3": [2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 17, 21, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 68, 69, 79, 83, 86, 92, 94, 96, 97, 98, 99, 101, 102, 103, 110, 113, 117, 120, 122, 123, 129, 131, 133, 135, 137, 139, 142, 143, 145, 146, 147, 149, 150, 151, 153, 155, 163, 168, 169, 170, 172, 173, 176, 179, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 195, 196, 199, 202, 204, 214, 216, 217, 218, 219, 222, 223, 228, 230, 231, 234, 235, 236, 241, 242, 244, 245, 247, 248, 249, 250, 251, 254, 256, 258, 259, 260, 261, 263, 269, 271, 272, 273, 274, 277, 280, 281, 282, 283, 285, 286, 287, 288, 290, 306, 327, 329, 331, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 344], "44x": 2, "between": [2, 3, 4, 5, 13, 14, 16, 17, 21, 32, 40, 55, 67, 69, 79, 83, 97, 103, 120, 130, 140, 151, 159, 169, 170, 182, 184, 188, 190, 195, 196, 223, 228, 232, 241, 243, 244, 247, 248, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 266, 271, 303, 307, 328, 332, 333, 335, 338, 339, 344], "long": [2, 3, 13, 14, 16, 17, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 44, 46, 47, 120, 186, 187, 335, 341], "sharabl": 2, "featur": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 33, 45, 53, 68, 69, 79, 83, 92, 97, 98, 99, 101, 102, 103, 113, 125, 129, 133, 147, 148, 152, 157, 169, 170, 180, 181, 182, 183, 184, 186, 187, 188, 190, 197, 198, 232, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 323, 327, 332, 333, 334, 335, 339, 341, 344], "allow": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 29, 32, 33, 55, 68, 69, 79, 83, 97, 103, 137, 166, 190, 241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 264, 266, 269, 327, 329, 332, 334, 335, 338, 339, 341, 344], "popul": [2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 128, 147, 332, 334, 335, 339, 341], "collabor": [2, 55], "rather": [2, 4, 137, 332, 333, 334, 338], "incur": 2, "some": [2, 3, 4, 7, 8, 9, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 44, 45, 46, 47, 52, 53, 55, 56, 57, 60, 61, 71, 73, 79, 83, 97, 98, 99, 103, 105, 135, 151, 153, 159, 172, 184, 188, 209, 232, 233, 234, 298, 310, 327, 329, 332, 333, 334, 335, 338, 339, 341, 343, 344], "transmiss": 2, "overhead": [2, 97, 103], "includ": [2, 3, 4, 7, 9, 21, 32, 57, 60, 61, 62, 70, 73, 79, 83, 93, 97, 103, 146, 151, 157, 256, 261, 310, 327, 329, 332, 333, 334, 335, 338, 339, 341, 344], "ani": [2, 3, 5, 8, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 65, 67, 69, 70, 71, 72, 73, 74, 79, 80, 83, 97, 98, 99, 103, 105, 110, 125, 135, 136, 139, 151, 153, 157, 159, 167, 169, 170, 176, 190, 198, 221, 231, 232, 233, 234, 241, 242, 244, 245, 247, 248, 254, 256, 258, 259, 260, 261, 263, 271, 295, 307, 326, 332, 333, 334, 338, 339, 341, 343, 344], "subclass": [2, 3, 79, 83, 97, 103, 150, 156, 159, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 195, 196, 199, 200, 201, 203, 206, 207, 209, 214, 220, 221, 223, 224, 225, 227, 230, 231, 232, 233, 235, 238, 256, 258, 333, 335, 339, 341], "tensorstorag": [2, 325], "instanti": [2, 3, 21, 34, 36, 39, 87, 150, 196, 332, 333, 338, 339, 341, 344], "content": [2, 8, 13, 14, 16, 26, 28, 34, 35, 36, 38, 39, 41, 42, 67, 94, 169, 170, 190, 195, 196, 228, 256, 334, 339, 343], "map": [2, 3, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 60, 79, 83, 92, 97, 98, 99, 101, 102, 103, 105, 106, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 129, 131, 133, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 163, 179, 199, 216, 217, 218, 219, 222, 228, 229, 231, 232, 234, 235, 236, 237, 261, 269, 303, 325, 327, 328, 332, 333, 334, 335, 340], "tensor": [2, 3, 8, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 68, 69, 71, 72, 73, 74, 76, 79, 80, 83, 89, 92, 93, 96, 97, 98, 99, 101, 102, 103, 104, 105, 110, 112, 113, 114, 117, 118, 120, 121, 122, 123, 125, 128, 131, 133, 135, 136, 137, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 157, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 241, 242, 244, 245, 247, 248, 251, 252, 254, 256, 258, 259, 260, 261, 263, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 316, 327, 329, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "writer": [2, 38, 42, 52, 53, 54, 55, 56, 57, 59, 65, 71, 72, 325, 334], "tensordictroundrobinwrit": [2, 325], "current": [2, 3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 69, 79, 83, 85, 94, 97, 103, 113, 136, 146, 147, 148, 150, 151, 160, 161, 166, 180, 189, 207, 227, 249, 261, 293, 329, 332, 333, 334, 335, 338, 339, 343, 344], "goe": [2, 4, 98, 99, 332, 334, 338, 344], "sampler": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 73, 136, 245, 249, 269, 325, 332, 334, 338, 341], "prioritizedsampl": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 245, 249, 269, 325, 332, 341], "extend": [2, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 59, 65, 68, 69, 71, 72, 74, 112, 139, 304, 329, 332, 333, 334, 335, 338, 340, 341, 343], "access": [2, 3, 7, 8, 32, 35, 54, 79, 83, 97, 103, 135, 153, 323, 326, 332, 338, 339, 341], "show": [2, 32, 79, 83, 97, 103, 196, 327, 332, 334, 335, 338, 339, 341, 343], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 17, 21, 22, 35, 37, 38, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 68, 69, 71, 73, 79, 80, 83, 91, 93, 97, 98, 99, 101, 102, 103, 106, 107, 109, 110, 112, 113, 116, 122, 123, 128, 129, 131, 133, 135, 137, 138, 139, 142, 143, 145, 146, 147, 148, 150, 155, 157, 163, 166, 167, 168, 179, 182, 183, 184, 186, 187, 188, 190, 192, 195, 196, 199, 204, 205, 213, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 234, 235, 236, 241, 242, 243, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 269, 271, 272, 273, 274, 300, 303, 316, 319, 327, 328, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "tensordictreplaybuff": [2, 35, 38, 41, 52, 53, 54, 55, 56, 57, 68, 69, 71, 112, 113, 304, 319, 325, 332, 333, 335, 341], "mp": [2, 18, 19, 20, 80, 157], "def": [2, 3, 11, 22, 32, 79, 80, 83, 93, 97, 103, 109, 110, 118, 121, 168, 179, 182, 183, 186, 187, 192, 228, 236, 242, 244, 248, 254, 256, 259, 261, 263, 329, 332, 333, 337, 338, 339, 343, 344], "rb": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 68, 69, 71, 113, 139, 333, 335, 338, 340, 341, 343], "updat": [2, 3, 4, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 39, 40, 41, 63, 79, 83, 93, 97, 98, 99, 103, 110, 118, 120, 121, 145, 146, 151, 154, 157, 167, 168, 182, 184, 188, 192, 220, 224, 225, 227, 228, 229, 230, 231, 232, 241, 242, 244, 245, 247, 248, 249, 250, 253, 254, 256, 258, 259, 260, 261, 262, 263, 269, 271, 272, 273, 274, 275, 303, 307, 309, 312, 313, 318, 319, 329, 333, 334, 335, 338, 339, 341, 343, 344], "td": [2, 3, 15, 26, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 71, 75, 76, 77, 78, 82, 84, 88, 89, 90, 91, 110, 112, 114, 118, 119, 120, 121, 128, 129, 131, 139, 142, 147, 149, 151, 157, 166, 168, 179, 184, 188, 191, 192, 204, 205, 213, 216, 217, 218, 219, 221, 222, 224, 225, 227, 228, 229, 231, 234, 236, 269, 272, 273, 274, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 289, 298, 306, 316, 327, 328, 332, 335, 338, 339, 343, 344], "10": [2, 7, 22, 26, 35, 38, 40, 41, 42, 43, 45, 60, 61, 68, 69, 71, 73, 80, 93, 98, 99, 101, 102, 104, 105, 110, 112, 113, 146, 148, 149, 168, 171, 176, 182, 183, 186, 187, 189, 192, 203, 214, 224, 225, 227, 228, 235, 242, 245, 247, 248, 258, 259, 260, 263, 269, 271, 272, 273, 274, 277, 298, 329, 332, 333, 334, 335, 338, 339, 341, 343, 344], "__name__": [2, 22, 80, 333], "__main__": [2, 22, 80], "21": [2, 55, 56, 69, 98, 99, 331, 332, 333, 335, 337, 339, 342], "zero": [2, 3, 4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 42, 44, 45, 46, 47, 52, 61, 68, 69, 73, 79, 83, 97, 103, 112, 114, 118, 120, 121, 131, 139, 163, 166, 168, 182, 183, 184, 186, 187, 188, 189, 193, 194, 196, 204, 213, 224, 225, 227, 230, 238, 241, 242, 244, 245, 247, 248, 254, 258, 259, 260, 261, 263, 269, 271, 272, 273, 274, 277, 335, 343], "proc": 2, "target": [2, 4, 8, 21, 32, 79, 80, 83, 97, 103, 146, 150, 231, 232, 241, 242, 243, 244, 245, 247, 248, 249, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 269, 270, 271, 272, 273, 274, 275, 310, 318, 319, 328, 329, 335, 339], "arg": [2, 12, 14, 26, 28, 32, 60, 61, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 110, 117, 135, 144, 147, 150, 151, 152, 154, 155, 168, 169, 170, 178, 184, 188, 190, 191, 192, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 269, 271, 272, 273, 274, 275, 297, 300, 304, 307, 323, 333], "start": [2, 3, 4, 5, 13, 21, 45, 57, 68, 69, 80, 92, 166, 302, 332, 333, 338, 339, 341, 344], "join": [2, 80, 325, 333, 334], "now": [2, 3, 7, 35, 113, 196, 332, 333, 334, 335, 337, 338, 340, 341, 344], "length": [2, 17, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 40, 43, 44, 45, 46, 47, 55, 58, 68, 69, 79, 83, 97, 103, 136, 157, 168, 169, 170, 172, 174, 176, 178, 182, 186, 190, 192, 195, 196, 216, 231, 236, 298, 304, 332, 334, 335, 339, 341, 344], "20": [2, 45, 56, 68, 69, 71, 79, 83, 87, 97, 103, 146, 182, 183, 186, 187, 221, 298, 333, 334, 335, 338, 339, 343, 344], "assert": [2, 3, 6, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 83, 86, 109, 113, 116, 118, 121, 129, 137, 157, 159, 163, 196, 199, 214, 271, 272, 273, 274, 298, 306, 337, 341, 344], "len": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 60, 61, 73, 133, 169, 170, 190, 196, 332, 339, 340, 341, 343], "_data": [2, 339], "0": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 21, 22, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 49, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 68, 69, 73, 76, 79, 83, 86, 89, 93, 97, 100, 101, 102, 103, 110, 111, 113, 114, 116, 117, 119, 120, 129, 130, 131, 135, 139, 142, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 159, 168, 169, 170, 172, 173, 175, 176, 180, 182, 184, 185, 186, 187, 188, 190, 192, 194, 195, 196, 197, 198, 199, 202, 206, 207, 210, 211, 212, 214, 216, 220, 221, 223, 224, 225, 227, 230, 231, 234, 235, 238, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 269, 270, 271, 272, 273, 274, 277, 278, 279, 298, 305, 319, 323, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344], "too": [2, 7, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 44, 46, 47, 97, 103, 130, 147, 185, 211, 212, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 269, 271, 272, 273, 274, 333, 334, 339, 341, 344], "difficult": [2, 4], "element": [2, 13, 14, 16, 18, 19, 20, 21, 30, 31, 33, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 69, 71, 73, 96, 113, 136, 146, 169, 170, 182, 183, 186, 216, 220, 222, 231, 232, 236, 298, 332, 334, 341, 344], "pai": [2, 8, 332, 335], "attent": [2, 8, 332, 335, 344], "alwai": [2, 3, 20, 26, 28, 32, 58, 79, 83, 97, 103, 129, 130, 249, 256, 327, 328, 333, 334, 335, 338, 339, 341], "lead": [2, 3, 4, 8, 10, 11, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 67, 147, 185, 204, 211, 212, 332, 335, 338, 339, 341, 343], "dimens": [2, 3, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 53, 55, 56, 57, 60, 61, 68, 69, 71, 73, 79, 83, 97, 103, 105, 112, 113, 114, 125, 131, 133, 136, 142, 144, 149, 152, 157, 169, 170, 171, 176, 184, 186, 188, 190, 193, 194, 195, 197, 198, 203, 204, 208, 209, 210, 211, 214, 222, 241, 242, 243, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 323, 327, 332, 333, 334, 335, 338, 339, 341], "word": [2, 3, 40, 52, 53, 55, 56, 57, 256, 332, 339, 344], "creat": [2, 3, 4, 5, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 45, 55, 57, 58, 79, 80, 83, 87, 94, 97, 98, 103, 113, 135, 150, 151, 153, 156, 157, 163, 166, 169, 170, 172, 173, 174, 175, 176, 181, 184, 188, 190, 191, 195, 196, 221, 232, 245, 249, 259, 261, 269, 290, 304, 311, 312, 313, 319, 321, 322, 327, 332, 333, 334, 335, 338, 339, 340, 341, 343, 344], "1m": [2, 55, 310, 332, 334, 335], "multidimension": [2, 41, 63, 341], "doe": [2, 3, 18, 34, 35, 36, 39, 41, 45, 52, 55, 63, 70, 176, 182, 183, 184, 186, 187, 188, 197, 214, 221, 233, 234, 241, 243, 249, 255, 258, 270, 307, 327, 329, 332, 333, 334, 335, 339, 341, 344], "howev": [2, 3, 5, 7, 32, 79, 83, 97, 103, 113, 142, 146, 151, 261, 327, 332, 333, 334, 335, 339, 341, 344], "episod": [2, 52, 55, 56, 57, 68, 69, 83, 139, 142, 146, 168, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 333, 338], "flatten": [2, 34, 36, 39, 125, 304, 335, 338], "capac": [2, 334], "desir": [2, 3, 32, 79, 83, 97, 103, 117, 131, 133, 135, 136, 147, 150, 151, 153, 155, 164, 165, 169, 170, 190, 196, 216, 222, 223, 228, 229, 230, 231, 232, 327, 332, 338, 339], "diversifi": 2, "make": [2, 3, 4, 7, 32, 34, 36, 39, 40, 52, 53, 54, 55, 56, 57, 70, 79, 83, 84, 87, 89, 91, 94, 97, 103, 123, 131, 135, 136, 139, 145, 153, 159, 182, 183, 186, 187, 195, 196, 197, 222, 232, 258, 271, 272, 273, 274, 304, 313, 323, 327, 328, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "offer": [2, 3, 7, 327, 333, 339, 344], "distinct": [2, 3, 337], "accomplish": 2, "slicesampl": [2, 325], "slice": [2, 3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 52, 55, 68, 69, 112], "anoth": [2, 3, 8, 34, 36, 39, 55, 79, 83, 87, 97, 103, 118, 119, 121, 147, 150, 190, 241, 242, 243, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 269, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 327, 328, 332, 334, 335, 337, 338, 339, 344], "recommend": [2, 4, 7, 34, 36, 39, 87, 338], "__especially__": 2, "offlin": [2, 8, 13, 14, 16, 17, 18, 19, 20, 21, 113, 159, 242, 247, 254, 329, 340, 341, 343], "convent": [2, 3, 105, 328, 332, 335, 338, 339], "requir": [2, 3, 4, 7, 8, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 79, 83, 87, 94, 97, 100, 103, 117, 135, 147, 150, 151, 153, 155, 190, 214, 231, 233, 234, 241, 242, 243, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 269, 327, 329, 332, 333, 334, 335, 338, 339, 341, 344], "reshap": [2, 32, 55, 68, 184, 188, 190, 334, 338], "extens": [2, 69, 329, 341], "detail": [2, 3, 5, 6, 7, 32, 79, 83, 97, 98, 99, 103, 149, 151, 179, 182, 186, 223, 241, 249, 258, 326, 333, 337, 341], "independ": [2, 13, 14, 16, 17, 18, 19, 20, 21, 150, 152, 196, 328, 329, 332, 333, 338, 341, 343], "differ": [2, 3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 55, 79, 83, 92, 97, 98, 99, 103, 113, 120, 131, 137, 151, 152, 179, 182, 183, 184, 186, 187, 188, 190, 192, 195, 196, 205, 254, 258, 266, 271, 272, 273, 277, 278, 279, 303, 307, 309, 321, 322, 327, 328, 329, 332, 333, 334, 337, 338, 339, 340, 341, 344], "congruent": 2, "shape": [2, 3, 13, 14, 16, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 53, 55, 56, 57, 58, 60, 61, 73, 79, 83, 92, 96, 97, 98, 99, 101, 102, 103, 104, 105, 112, 114, 118, 121, 122, 123, 129, 131, 133, 137, 139, 143, 145, 147, 149, 157, 158, 159, 163, 166, 168, 171, 176, 177, 178, 182, 183, 184, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 199, 202, 203, 204, 205, 210, 213, 216, 217, 218, 219, 221, 222, 223, 228, 229, 230, 231, 234, 235, 236, 241, 242, 244, 245, 247, 248, 254, 258, 259, 260, 261, 263, 266, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 298, 304, 307, 319, 327, 332, 333, 334, 335, 337, 338, 340, 341, 343, 344], "custom": [2, 3, 5, 32, 79, 83, 97, 103, 153, 195, 196, 235, 249, 258, 264, 323, 327, 332, 333, 334, 335, 338], "name": [2, 3, 6, 7, 11, 16, 32, 34, 36, 39, 45, 52, 54, 57, 58, 77, 79, 83, 92, 94, 97, 98, 99, 100, 103, 105, 106, 120, 123, 137, 142, 143, 145, 151, 153, 156, 167, 184, 188, 222, 229, 241, 242, 243, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 269, 275, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 316, 329, 332, 333, 334, 335, 338, 339, 344], "randomcroptensordict": [2, 332], "note": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 38, 39, 41, 42, 79, 83, 97, 103, 118, 121, 157, 167, 182, 184, 186, 188, 227, 228, 232, 249, 332, 333, 337, 338, 344], "unlik": [2, 67, 249, 258, 333, 343], "base": [2, 3, 4, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 35, 38, 41, 42, 45, 55, 66, 71, 72, 74, 87, 93, 94, 95, 97, 103, 139, 147, 153, 154, 195, 217, 226, 241, 242, 244, 245, 247, 248, 250, 254, 258, 259, 260, 261, 263, 307, 316, 327, 328, 329, 332, 333, 335, 338, 339, 341, 344], "here": [2, 3, 4, 7, 8, 9, 10, 56, 57, 79, 83, 87, 97, 98, 99, 103, 113, 327, 328, 332, 333, 334, 335, 338, 339, 341, 343, 344], "stop": [2, 3, 16, 21, 40, 57, 68, 69, 79, 83, 97, 103, 334, 338, 343, 344], "signal": [2, 3, 17, 52, 53, 55, 56, 57, 68, 69, 83, 113, 122, 145, 148, 167, 328, 332, 334, 338, 341, 344], "isn": [2, 3, 8, 34, 36, 39, 55, 122, 222, 231, 338], "t": [2, 3, 4, 6, 7, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 44, 46, 47, 55, 63, 67, 71, 79, 80, 83, 94, 97, 103, 113, 118, 121, 122, 135, 138, 139, 146, 148, 155, 157, 166, 182, 186, 222, 227, 231, 262, 271, 272, 273, 274, 275, 277, 307, 309, 323, 326, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "how": [2, 3, 18, 19, 20, 32, 35, 41, 55, 63, 79, 83, 97, 98, 99, 103, 105, 241, 243, 253, 255, 258, 307, 326, 327, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "our": [2, 3, 7, 8, 18, 113, 327, 332, 333, 334, 335, 337, 338, 340, 341, 343], "enjoi": [2, 3, 55], "separ": [2, 4, 8, 13, 14, 17, 18, 20, 21, 23, 135, 155, 242, 244, 247, 248, 259, 261, 263, 332, 333, 338, 341, 344], "save": [2, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 79, 83, 97, 103, 156, 289, 307, 329, 338], "disk": [2, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 307, 329, 332, 333, 335, 341], "dump": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 289], "load": [2, 6, 7, 13, 14, 16, 17, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 78, 79, 83, 97, 103, 109, 157, 323, 329, 332, 341], "json": 2, "metadata": [2, 52, 334, 338, 344], "cannot": [2, 3, 4, 7, 22, 26, 27, 28, 31, 33, 68, 69, 79, 83, 87, 97, 103, 118, 121, 136, 142, 229, 333, 334, 335, 338, 339], "anticip": [2, 118, 121], "compli": [2, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 55], "structur": [2, 3, 7, 34, 35, 36, 38, 39, 40, 41, 42, 45, 71, 79, 83, 97, 103, 118, 121, 167, 195, 227, 271, 272, 273, 274, 275, 328, 332, 334, 335, 338, 339, 340, 341], "guarante": [2, 32, 34, 36, 39, 60, 61, 62, 70, 73, 79, 83, 97, 103, 157, 343], "back": [2, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 44, 46, 47, 52, 156, 216, 222, 223, 228, 229, 230, 231, 232, 334, 338, 339, 341], "exact": [2, 3, 97, 186], "look": [2, 3, 5, 7, 8, 32, 79, 83, 92, 97, 98, 99, 103, 135, 136, 153, 228, 232, 233, 234, 328, 334, 335, 338, 339, 340, 341, 343, 344], "statu": [2, 3], "its": [2, 3, 4, 5, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 44, 46, 47, 49, 79, 83, 93, 97, 98, 99, 103, 106, 112, 113, 122, 129, 145, 146, 150, 151, 156, 157, 169, 170, 193, 194, 195, 196, 220, 222, 228, 229, 232, 235, 241, 242, 243, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 269, 307, 319, 329, 332, 333, 334, 335, 338, 339, 340, 341, 344], "prioriti": [2, 4, 35, 41, 42, 60, 61, 62, 63, 70, 73, 244, 245, 247, 248, 249, 254, 259, 261, 263, 269, 329, 332, 333, 341], "max": [2, 23, 33, 36, 41, 45, 58, 63, 120, 148, 210, 211, 212, 221, 227, 242, 243, 248, 257, 259, 261, 332, 334, 335, 338], "heap": 2, "under": [2, 3, 4, 21, 32, 40, 52, 53, 55, 56, 57, 79, 83, 97, 103, 216, 222, 223, 228, 229, 230, 231, 232, 256, 271, 272, 273, 274, 275, 328, 332, 333, 339, 344], "hood": [2, 21, 339], "just": [2, 3, 4, 11, 79, 83, 92, 97, 98, 99, 103, 116, 167, 196, 298, 327, 329, 332, 333, 334, 335, 338, 339, 341, 343, 344], "public": [2, 54, 135, 155], "method": [2, 3, 4, 11, 13, 14, 15, 16, 17, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 70, 73, 79, 83, 97, 103, 113, 117, 118, 119, 122, 123, 125, 129, 131, 135, 137, 138, 139, 143, 145, 147, 150, 151, 153, 155, 168, 189, 216, 217, 218, 219, 221, 222, 223, 224, 226, 228, 229, 230, 231, 232, 233, 241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 269, 275, 289, 320, 328, 329, 330, 333, 334, 335, 339, 341, 344], "don": [2, 3, 4, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 113, 333, 334, 341, 343, 344], "assum": [2, 3, 6, 26, 33, 40, 41, 42, 52, 53, 55, 56, 57, 83, 97, 103, 112, 115, 125, 135, 136, 142, 147, 153, 155, 163, 184, 188, 189, 214, 235, 245, 249, 261, 269, 280, 281, 282, 283, 285, 286, 287, 288, 290, 332, 334, 335, 337, 339], "serializ": 2, "altern": [2, 4, 27, 94, 176, 193, 194, 195, 240, 332, 334, 338], "state_dict": [2, 13, 14, 16, 17, 21, 32, 34, 36, 39, 79, 83, 97, 103, 151, 157, 261, 323, 329, 332, 333, 344], "load_state_dict": [2, 13, 14, 16, 17, 21, 32, 34, 36, 39, 79, 83, 97, 103, 151, 157, 261, 329, 332], "drawback": 2, "struggl": 2, "big": [2, 334, 341, 344], "wrapper": [2, 3, 11, 15, 17, 34, 36, 39, 40, 41, 42, 75, 76, 77, 78, 82, 84, 85, 87, 88, 89, 90, 91, 93, 95, 98, 99, 100, 101, 102, 104, 105, 107, 156, 199, 214, 220, 221, 225, 227, 232, 237, 271, 295, 296, 297, 323, 325, 334, 335, 338, 340, 344], "around": [2, 5, 7, 15, 17, 41, 42, 93, 232, 271, 332, 333, 338, 344], "present": [2, 3, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 63, 67, 79, 83, 97, 103, 123, 139, 143, 166, 167, 171, 172, 173, 174, 175, 181, 186, 198, 203, 227, 231, 232, 233, 234, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 269, 271, 272, 273, 274, 275, 323, 329, 332, 337, 338, 341, 343], "replaybuff": [2, 41, 42, 74, 113, 136, 139, 245, 249, 269, 317, 319, 325, 334, 338, 340, 341, 343], "promptli": 2, "virtual": [2, 3], "instal": [2, 3, 5, 10, 18, 19, 20, 52, 54, 98, 99, 101, 102, 307, 326, 334, 335, 338, 344], "respons": [2, 3, 8, 307, 344], "d4rl": [2, 52, 53, 55, 56, 57], "clone": [2, 4, 8, 26, 28, 129, 217, 218, 219, 231, 254, 316, 325, 332, 339, 343], "repositori": [2, 7, 53, 54, 57], "latest": [2, 3, 10, 94, 98, 99, 304, 334, 338, 339, 343], "wheel": [2, 334], "publish": 2, "pypi": [2, 343], "openml": [2, 54, 96], "scikit": [2, 54], "panda": [2, 54], "parent": [2, 3, 21, 26, 28, 44, 79, 113, 114, 117, 119, 122, 125, 126, 131, 135, 142, 145, 146, 147, 148, 150, 152, 153, 217, 256, 258, 275, 332, 339, 343, 344], "basic": [2, 93, 327, 334, 344], "properti": [2, 3, 32, 34, 36, 39, 79, 83, 93, 97, 103, 150, 151, 177, 185, 197, 202, 210, 211, 212, 256, 261, 339, 341], "observ": [2, 3, 8, 13, 14, 16, 17, 21, 32, 44, 52, 53, 55, 56, 57, 76, 77, 78, 79, 80, 83, 89, 92, 93, 96, 97, 98, 99, 101, 102, 103, 104, 105, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 127, 128, 129, 131, 132, 133, 137, 138, 139, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 166, 171, 172, 173, 174, 175, 176, 179, 184, 188, 189, 195, 200, 201, 203, 205, 206, 216, 217, 218, 219, 221, 222, 224, 225, 227, 228, 229, 236, 237, 241, 242, 243, 244, 245, 247, 248, 251, 254, 255, 258, 259, 260, 261, 263, 269, 271, 272, 273, 274, 275, 290, 316, 319, 327, 329, 333, 334, 335, 337, 338, 339, 341, 343, 344], "dtype": [2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 55, 56, 57, 58, 60, 61, 63, 68, 69, 73, 76, 79, 83, 89, 92, 93, 96, 97, 98, 99, 101, 102, 103, 104, 105, 110, 117, 118, 119, 120, 121, 122, 123, 129, 131, 133, 135, 137, 139, 143, 145, 147, 149, 150, 151, 153, 155, 159, 163, 166, 167, 168, 179, 182, 183, 184, 186, 187, 188, 192, 197, 198, 204, 205, 213, 216, 217, 218, 219, 221, 222, 223, 227, 228, 229, 230, 231, 234, 236, 241, 242, 244, 245, 247, 248, 254, 258, 259, 260, 261, 263, 269, 271, 272, 273, 274, 277, 316, 327, 334, 335, 337, 338, 339, 340, 341, 343, 344], "match": [2, 3, 6, 8, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 79, 80, 83, 97, 103, 111, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 129, 131, 133, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 169, 170, 177, 184, 188, 190, 195, 196, 210, 216, 221, 222, 228, 229, 231, 232, 235, 236, 242, 248, 255, 257, 259, 261, 304, 309, 327, 332, 334, 337, 338, 339, 341, 343, 344], "input": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 46, 47, 79, 83, 93, 96, 97, 98, 99, 100, 103, 105, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 133, 134, 135, 136, 137, 139, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 166, 167, 169, 170, 172, 173, 174, 175, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 195, 196, 197, 198, 205, 206, 207, 208, 209, 214, 216, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 240, 241, 242, 243, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 269, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 301, 305, 310, 319, 327, 328, 329, 332, 333, 334, 335, 338, 339, 343, 344], "output": [2, 3, 4, 13, 14, 16, 17, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 68, 69, 79, 83, 93, 96, 97, 98, 99, 100, 103, 105, 113, 116, 117, 118, 119, 121, 123, 129, 131, 135, 137, 142, 143, 145, 148, 150, 153, 155, 156, 159, 167, 169, 170, 171, 172, 173, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 189, 190, 195, 196, 199, 205, 214, 216, 217, 220, 221, 222, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 241, 242, 243, 244, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 269, 271, 272, 273, 274, 275, 290, 298, 327, 328, 332, 333, 334, 335, 337, 338, 339, 340, 343, 344], "send": [2, 3, 8, 343], "receiv": [2, 3, 32, 40, 79, 83, 97, 103, 150, 190, 277, 328, 332, 334, 337, 339], "spawn": [2, 3, 4, 18, 22, 87, 94, 338], "check_env_spec": [2, 3, 325, 334, 338, 339], "saniti": [2, 3, 7, 159, 334], "utmost": 2, "techniqu": [2, 8, 333, 341], "commonli": [2, 68, 69, 344], "emploi": [2, 198], "realm": 2, "languag": [2, 40], "scarc": 2, "address": [2, 341], "subdomain": 2, "within": [2, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 46, 47, 55, 79, 83, 97, 103, 113, 118, 121, 122, 145, 156, 157, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 195, 196, 199, 200, 201, 203, 206, 207, 209, 214, 220, 221, 223, 224, 225, 227, 230, 235, 238, 245, 249, 269, 327, 339, 343], "facilit": [2, 3, 7, 134, 135, 153, 155, 217, 218, 219, 327, 332, 335, 339], "interact": [2, 4, 5, 7, 8, 13, 14, 16, 18, 19, 20, 21, 55, 228, 232, 332, 334, 338, 339, 344], "extern": [2, 3, 118, 121, 344], "consist": [2, 3, 32, 35, 38, 41, 42, 55, 79, 83, 97, 103, 129, 156, 170, 190, 332, 333, 334, 339, 340, 344], "token": [2, 36, 37, 40, 43, 45, 58], "format": [2, 17, 31, 32, 33, 55, 56, 57, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231, 332, 333, 344], "manner": [2, 83, 135, 153, 327, 332, 333, 334, 337, 339, 341], "handl": [3, 21, 32, 79, 83, 97, 103, 156, 157, 188, 190, 307, 321, 322, 332, 333, 334, 338, 341], "dm": [3, 332, 344], "goal": [3, 4, 146, 332, 333, 334, 335, 338, 339], "abl": [3, 92, 98, 99, 332, 334, 335, 337, 338, 339, 341, 343], "experi": [3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 63, 159, 292, 293, 294, 295, 296, 297, 326, 333, 334, 338, 341], "even": [3, 4, 8, 14, 18, 20, 21, 60, 61, 62, 70, 73, 79, 80, 83, 87, 97, 103, 167, 332, 334, 338, 339, 344], "simul": [3, 5, 7, 8, 100, 105, 108, 168, 192, 327, 332, 334, 338], "box": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 16, 17, 21, 22, 79, 80, 83, 97, 98, 99, 101, 102, 103, 113, 116, 122, 128, 129, 131, 133, 137, 139, 142, 147, 150, 156, 157, 316, 319, 332, 333, 334, 335, 337, 338, 340, 341, 343, 344], "hope": 3, "imit": 3, "nn": [3, 13, 14, 16, 17, 21, 32, 40, 79, 83, 93, 97, 103, 117, 120, 122, 129, 135, 147, 150, 151, 153, 155, 168, 169, 170, 172, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 190, 192, 194, 195, 196, 199, 204, 205, 213, 216, 217, 218, 219, 221, 222, 224, 225, 227, 228, 229, 231, 232, 233, 234, 236, 241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 269, 271, 272, 273, 274, 316, 319, 327, 328, 332, 333, 334, 335, 337, 338, 339, 340, 343], "typic": [3, 4, 8, 32, 79, 83, 97, 103, 122, 146, 228, 242, 256, 258, 261, 327, 328, 329, 334, 338, 339], "organis": [3, 56, 333], "arbitrari": [3, 33, 97, 103, 327, 332, 333, 339], "nest": [3, 26, 28, 32, 34, 36, 39, 48, 60, 61, 73, 79, 83, 97, 103, 113, 145, 148, 167, 271, 272, 273, 274, 275, 329, 333, 334, 338, 339, 341, 343], "attribut": [3, 4, 32, 34, 36, 39, 45, 55, 79, 83, 97, 103, 122, 135, 153, 184, 188, 232, 241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 269, 332, 335, 339], "batch_siz": [3, 8, 13, 14, 15, 16, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 68, 69, 71, 73, 76, 79, 81, 83, 86, 89, 92, 93, 96, 97, 98, 99, 101, 102, 103, 104, 105, 112, 113, 118, 121, 122, 123, 133, 137, 139, 143, 145, 147, 150, 166, 167, 168, 176, 179, 184, 188, 192, 204, 205, 213, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 234, 235, 236, 241, 242, 244, 245, 247, 248, 254, 258, 259, 260, 261, 263, 269, 298, 304, 316, 327, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "togeth": [3, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 40, 79, 83, 92, 97, 98, 99, 103, 113, 136, 182, 184, 186, 188, 213, 217, 218, 219, 237, 327, 333, 334, 335], "expect": [3, 4, 7, 26, 32, 38, 44, 45, 67, 79, 83, 93, 96, 97, 100, 103, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 129, 131, 133, 135, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 159, 182, 183, 184, 186, 187, 188, 195, 196, 223, 227, 231, 234, 241, 242, 243, 244, 245, 247, 248, 254, 255, 256, 258, 259, 260, 261, 263, 269, 311, 326, 327, 328, 329, 332, 334, 335, 338, 339, 341, 344], "live": [3, 12, 13, 14, 16, 17, 19, 20, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 79, 83, 93, 97, 103, 122], "actual": [3, 4, 7, 17, 52, 53, 55, 56, 57, 79, 83, 97, 103, 156, 310, 328, 332, 334, 338, 339], "do": [3, 4, 7, 57, 83, 105, 136, 156, 157, 166, 196, 197, 218, 271, 329, 332, 333, 334, 335, 337, 338, 339, 341, 343, 344], "retriev": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 79, 83, 97, 103, 114, 119, 122, 131, 166, 168, 169, 192, 228, 232, 235, 241, 242, 243, 245, 255, 258, 259, 261, 263, 269, 271, 272, 273, 274, 316, 323, 329, 333, 334, 339, 344], "care": [3, 8, 79, 83, 97, 103, 150, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 195, 196, 199, 200, 201, 203, 206, 207, 209, 214, 220, 221, 223, 224, 225, 227, 230, 235, 238, 332, 334, 338, 339, 341], "below": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 58, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 169, 170, 182, 185, 186, 190, 196, 212, 231, 304, 332, 333, 334, 335, 339], "parametr": [3, 198, 232, 242, 254, 261, 332, 334], "hardwar": 3, "observation_spec": [3, 79, 83, 93, 97, 103, 110, 113, 114, 115, 116, 117, 118, 119, 121, 122, 125, 127, 128, 129, 131, 133, 135, 138, 142, 145, 146, 147, 148, 149, 150, 152, 153, 156, 168, 184, 188, 192, 311, 319, 332, 334, 337, 338, 339, 344], "compositespec": [3, 28, 49, 79, 81, 83, 93, 97, 103, 110, 118, 119, 120, 121, 123, 129, 137, 143, 145, 147, 150, 163, 167, 168, 192, 216, 220, 228, 234, 235, 325, 332, 334, 335, 338, 339, 344], "pair": [3, 32, 34, 36, 39, 52, 79, 83, 97, 103, 139, 147, 184, 217, 228, 232, 256, 271, 272, 273, 274, 275, 327, 328, 332, 333, 334, 337, 339, 344], "state_spec": [3, 79, 83, 93, 97, 103, 110, 168, 192, 334, 339, 344], "empti": [3, 26, 28, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 79, 83, 96, 97, 103, 135, 148, 151, 153, 155, 294, 332, 339], "action_spec": [3, 13, 14, 15, 16, 18, 19, 20, 76, 79, 83, 89, 93, 97, 98, 99, 103, 110, 113, 118, 121, 129, 139, 168, 179, 192, 205, 207, 216, 222, 228, 229, 242, 245, 247, 259, 261, 263, 319, 327, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "reward_spec": [3, 79, 83, 93, 97, 103, 110, 111, 116, 117, 118, 119, 121, 140, 141, 142, 150, 152, 168, 192, 334, 338, 339, 344], "reward": [3, 13, 14, 16, 32, 34, 39, 40, 44, 45, 53, 55, 56, 57, 58, 71, 76, 79, 83, 89, 93, 96, 97, 101, 102, 103, 104, 105, 110, 111, 116, 117, 118, 119, 121, 122, 123, 129, 133, 137, 139, 140, 141, 142, 143, 145, 146, 150, 151, 152, 154, 155, 157, 163, 166, 168, 184, 192, 221, 237, 241, 242, 244, 245, 247, 248, 251, 254, 256, 258, 259, 260, 261, 263, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 300, 301, 303, 305, 323, 328, 329, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "done_spec": [3, 79, 83, 97, 103, 118, 119, 121, 122, 150, 167, 334, 338, 339, 344], "flag": [3, 8, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 105, 227, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 327, 338, 339, 340], "section": [3, 4, 182, 186, 333, 338], "termin": [3, 7, 32, 40, 52, 53, 55, 56, 57, 79, 83, 97, 98, 99, 101, 102, 103, 104, 105, 122, 167, 168, 184, 188, 192, 233, 241, 242, 244, 245, 247, 248, 254, 258, 259, 260, 261, 263, 269, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "input_spec": [3, 79, 83, 93, 97, 103, 117, 118, 119, 120, 131, 133, 137, 142, 143, 145, 146, 147, 150, 151, 152, 154, 339], "full_action_spec": [3, 79, 83, 97, 103, 168, 192, 338], "full_state_spec": [3, 79, 83, 97, 103, 168, 192], "lock": [3, 26, 28, 34, 36, 39, 79, 83, 97, 103, 147, 157, 339], "modifi": [3, 7, 8, 26, 28, 32, 45, 79, 83, 97, 103, 117, 125, 129, 135, 147, 150, 151, 153, 155, 221, 227, 231, 310, 316, 332, 333, 334, 338, 339], "directli": [3, 4, 8, 79, 83, 93, 97, 103, 139, 156, 256, 323, 327, 334, 338, 339, 341], "output_spec": [3, 79, 83, 97, 103, 117, 118, 119, 123, 129, 137, 143, 145, 150, 151, 339], "full_observation_spec": [3, 79, 83, 97, 103, 168, 192], "full_reward_spec": [3, 79, 83, 97, 103, 338], "full_done_spec": [3, 79, 83, 97, 103, 167, 338], "importantli": [3, 228, 232], "4": [3, 7, 24, 26, 27, 28, 33, 34, 35, 36, 38, 39, 40, 41, 42, 52, 53, 54, 55, 56, 57, 68, 69, 77, 78, 79, 82, 83, 88, 90, 91, 92, 93, 97, 101, 102, 103, 110, 113, 122, 139, 145, 146, 157, 168, 169, 170, 171, 172, 173, 176, 179, 180, 181, 182, 183, 186, 187, 189, 190, 192, 195, 196, 199, 200, 201, 202, 203, 204, 205, 213, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 234, 236, 241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 269, 289, 327, 332, 333, 334, 335, 338, 339, 340, 341, 343, 344], "action_s": 3, "help": [3, 4, 32, 79, 83, 97, 103, 122, 326, 328, 332, 333, 334, 335, 338], "prealloc": [3, 339], "With": [3, 92, 146, 329, 332, 333, 338, 341, 344], "necessarili": [3, 344], "0s": [3, 55, 147, 335], "stateless": [3, 150, 256, 332, 339, 344], "step_and_maybe_reset": [3, 79, 83, 97, 103], "partial": [3, 79, 83, 97, 103, 112, 113, 146, 147, 148, 307, 335], "next": [3, 4, 8, 13, 14, 16, 26, 28, 32, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 68, 69, 71, 76, 79, 80, 83, 89, 93, 97, 101, 102, 103, 104, 105, 112, 113, 118, 121, 122, 123, 128, 129, 133, 137, 139, 142, 143, 145, 147, 156, 157, 163, 166, 168, 183, 184, 187, 188, 192, 207, 237, 241, 242, 244, 245, 247, 248, 249, 254, 258, 259, 260, 261, 263, 269, 270, 271, 272, 273, 274, 275, 301, 303, 305, 332, 333, 335, 337, 339, 340, 341, 343, 344], "step_mdp": [3, 184, 188, 325, 335, 339, 343, 344], "done_kei": [3, 79, 83, 97, 103, 122, 139, 145, 166, 338], "assign": [3, 4, 13, 14, 32, 34, 36, 39, 79, 83, 97, 103, 151, 244, 245, 247, 261, 334, 338, 341], "_reset": [3, 79, 83, 93, 97, 103, 110, 113, 118, 121, 167, 168, 192], "data_": [3, 79, 83, 97, 103], "i": [3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 35, 38, 42, 43, 60, 61, 63, 69, 73, 79, 83, 97, 103, 135, 139, 142, 151, 155, 183, 187, 199, 205, 223, 228, 230, 231, 232, 271, 272, 273, 274, 298, 310, 332, 333, 334, 335, 338, 339, 341, 343, 344], "rang": [3, 4, 8, 11, 27, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 60, 61, 71, 79, 80, 83, 97, 103, 139, 149, 157, 183, 187, 255, 263, 328, 329, 332, 334, 335, 338, 339, 341, 343], "n": [3, 6, 7, 24, 27, 32, 33, 40, 79, 83, 97, 103, 113, 120, 125, 152, 182, 183, 186, 192, 227, 232, 241, 248, 256, 270, 304, 327, 329, 333, 334, 335, 338, 341, 344], "append": [3, 8, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 79, 80, 83, 97, 103, 116, 139, 147, 156, 183, 184, 187, 188, 222, 229, 332, 333, 334, 335, 338, 339, 340, 341, 343], "set_se": [3, 13, 14, 16, 17, 21, 76, 79, 83, 89, 93, 97, 103, 131, 137, 142, 146, 148, 151, 339, 343, 344], "seed": [3, 13, 14, 16, 17, 21, 56, 77, 79, 83, 93, 97, 98, 99, 103, 104, 105, 110, 118, 121, 151, 159, 307], "determinist": [3, 32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 171, 180, 200, 207, 216, 225, 231, 232, 235, 242, 327, 332, 333, 335, 339, 344], "preced": [3, 189, 335], "without": [3, 7, 9, 32, 40, 52, 55, 68, 69, 79, 83, 97, 103, 105, 110, 118, 121, 149, 182, 183, 186, 187, 218, 219, 241, 242, 244, 245, 247, 248, 254, 258, 259, 260, 261, 263, 270, 271, 272, 273, 274, 275, 319, 326, 327, 332, 333, 334, 338, 339, 341, 344], "risk": [3, 136], "overlap": [3, 41], "consecut": [3, 67, 87, 188, 227, 335, 338, 344], "reproduc": [3, 113, 159, 332, 334, 338], "maximum": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 40, 43, 45, 58, 60, 61, 62, 73, 79, 83, 97, 103, 120, 140, 145, 146, 148, 210, 211, 212, 235, 242, 248, 254, 256, 257, 261, 304, 332, 333, 334, 335, 338, 341], "max_step": [3, 13, 79, 83, 93, 97, 103, 104, 105, 145, 338, 343, 344], "tensordictmodul": [3, 13, 14, 16, 17, 20, 21, 40, 93, 112, 129, 179, 184, 188, 192, 204, 205, 213, 214, 217, 218, 219, 220, 221, 222, 225, 227, 228, 229, 230, 231, 233, 234, 235, 237, 242, 244, 248, 250, 251, 252, 254, 256, 259, 261, 263, 269, 270, 271, 272, 273, 274, 303, 319, 327, 332, 334, 335, 337, 338, 339, 340], "compat": [3, 7, 11, 18, 19, 32, 34, 36, 39, 52, 68, 69, 70, 79, 83, 85, 96, 97, 103, 113, 145, 153, 157, 182, 183, 184, 186, 187, 188, 229, 241, 242, 244, 245, 247, 248, 254, 256, 258, 259, 260, 261, 263, 266, 332, 335, 341, 343], "mark": [3, 16, 57, 79, 83, 97, 103, 184, 188], "trail": [3, 157], "time": [3, 4, 7, 8, 13, 14, 16, 17, 18, 20, 21, 32, 35, 38, 40, 41, 42, 55, 56, 71, 79, 80, 83, 92, 96, 97, 98, 99, 103, 109, 112, 114, 136, 142, 147, 148, 157, 166, 180, 182, 186, 188, 189, 227, 243, 248, 251, 255, 256, 258, 259, 263, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 307, 327, 328, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "treat": 3, "figur": [3, 332, 334, 335, 338, 339, 344], "summar": [3, 339], "brief": [3, 334], "entri": [3, 13, 14, 18, 19, 20, 21, 23, 26, 28, 32, 34, 36, 37, 39, 45, 49, 52, 53, 54, 56, 57, 68, 69, 79, 83, 97, 103, 113, 115, 116, 118, 121, 122, 125, 128, 131, 133, 135, 137, 139, 142, 145, 146, 147, 155, 157, 166, 167, 184, 193, 194, 221, 222, 229, 230, 242, 261, 271, 272, 273, 274, 327, 332, 334, 335, 338, 339, 340, 341, 344], "deliveri": 3, "design": [3, 13, 14, 32, 33, 79, 83, 97, 103, 113, 136, 151, 221, 241, 242, 243, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 269, 332, 333, 334, 335, 337, 338, 339, 341, 344], "metaclass": 3, "ensur": [3, 32, 35, 41, 63, 67, 79, 83, 97, 103, 113, 135, 145, 153, 157, 222, 327, 333, 334, 339, 341], "everi": [3, 8, 17, 26, 28, 32, 33, 70, 79, 83, 97, 103, 145, 146, 157, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 195, 196, 199, 200, 201, 203, 206, 207, 209, 214, 220, 221, 223, 224, 225, 227, 230, 235, 238, 307, 329, 332, 333, 334, 335, 338, 339], "flank": [3, 335], "dual": 3, "strictli": [3, 8, 32, 79, 83, 97, 103, 151, 261, 332, 334], "refer": [3, 7, 8, 9, 21, 32, 40, 79, 83, 97, 103, 151, 157, 168, 179, 180, 192, 193, 194, 195, 200, 201, 206, 207, 223, 241, 249, 250, 251, 252, 258, 261, 271, 276, 284, 331, 332, 334, 338], "union": [3, 11, 13, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 63, 79, 83, 97, 103, 110, 120, 122, 128, 131, 135, 136, 139, 141, 153, 155, 157, 166, 169, 170, 172, 173, 174, 175, 177, 179, 181, 189, 190, 193, 194, 195, 196, 197, 198, 202, 204, 205, 210, 211, 212, 213, 231, 247, 248, 253, 259, 262, 284, 290, 301, 303, 304, 312, 313, 316, 317, 319, 320, 321, 322, 323], "interpret": [3, 333], "last": [3, 4, 11, 13, 14, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 46, 47, 52, 67, 69, 79, 83, 97, 103, 112, 125, 131, 136, 146, 148, 149, 169, 170, 182, 184, 186, 188, 189, 190, 193, 194, 200, 208, 214, 220, 221, 224, 225, 232, 333, 334, 335, 338, 339, 340, 341, 343, 344], "indic": [3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 65, 67, 68, 69, 71, 72, 74, 79, 83, 97, 103, 113, 114, 145, 146, 147, 148, 151, 167, 169, 170, 190, 193, 194, 196, 227, 229, 230, 238, 241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 269, 311, 323, 326, 329, 334, 335, 339, 341, 344], "truncat": [3, 13, 14, 16, 18, 19, 20, 21, 37, 43, 45, 52, 53, 55, 56, 57, 68, 69, 79, 83, 97, 98, 99, 103, 122, 123, 130, 139, 145, 167, 184, 188, 212, 277, 332, 334, 335, 337, 340, 341, 343, 344], "carri": [3, 21, 45, 79, 83, 97, 103, 147, 256, 333, 335, 338, 339, 341], "assess": [3, 106, 332], "split_trajectori": [3, 13, 14, 16, 17, 18, 19, 20, 21, 55, 68, 69, 325], "adjac": [3, 23, 125], "reli": [3, 182, 183, 186, 187, 241, 328, 332, 334, 339, 344], "traj_id": [3, 13, 14, 16, 23, 139, 335, 341, 343], "junction": 3, "miss": [3, 4, 6, 7, 11, 26, 32, 79, 83, 97, 103, 151, 166, 233, 234, 261, 326, 332, 335], "context": [3, 5, 8, 32, 79, 80, 83, 96, 97, 103, 147, 152, 196, 197, 221, 267, 268, 271, 272, 273, 274, 276, 284, 303, 327, 328, 332, 333, 334, 338, 339, 340, 341], "through": [3, 4, 5, 8, 11, 16, 18, 20, 21, 26, 28, 55, 87, 92, 97, 98, 99, 103, 118, 121, 136, 190, 204, 228, 232, 233, 234, 238, 271, 272, 273, 274, 327, 332, 333, 334, 337, 338, 339, 340, 341, 344], "inittrack": [3, 184, 188, 332, 335], "tutori": [3, 331, 332, 333, 335, 336, 337, 339, 340, 341, 342, 344], "inform": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 43, 55, 79, 80, 83, 86, 97, 103, 169, 170, 190, 196, 328, 329, 332, 333, 334, 335, 338, 339, 341], "scratch": [3, 8, 333, 339], "better": [3, 8, 9, 184, 188, 328, 334, 339], "intens": [3, 8], "gym3": 3, "envpool": [3, 94, 95], "interfac": [3, 86, 96, 190, 197, 327, 332, 334, 339, 341], "simultan": [3, 20, 97, 103, 339], "often": [3, 8, 253, 307, 332, 333, 339, 341, 344], "competit": [3, 338], "advantag": [3, 8, 181, 241, 243, 255, 258, 260, 271, 272, 273, 274, 275, 276, 278, 280, 282, 284, 285, 287, 328, 329, 332, 333, 334, 335, 338, 339, 344], "scale": [3, 4, 52, 113, 129, 131, 141, 146, 149, 180, 185, 199, 206, 207, 211, 212, 217, 218, 219, 228, 232, 234, 241, 242, 254, 258, 259, 260, 261, 305, 311, 316, 323, 327, 332, 333, 334, 335, 338, 343], "varieti": 3, "own": [3, 13, 14, 17, 22, 32, 79, 83, 97, 98, 99, 103, 333, 334, 338, 339], "As": [3, 4, 79, 83, 92, 97, 98, 99, 103, 139, 232, 271, 327, 332, 333, 334, 335, 338, 339, 340, 341, 343, 344], "inherit": [3, 191, 256, 329, 334, 338], "serialenv": [3, 79, 83, 97, 147, 325, 344], "Of": [3, 7, 326, 339, 344], "cours": [3, 4, 326, 334, 339, 344], "correspond": [3, 4, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 47, 55, 57, 63, 79, 83, 93, 94, 97, 103, 135, 147, 151, 155, 157, 184, 186, 188, 193, 194, 224, 225, 227, 228, 232, 245, 248, 261, 269, 271, 272, 273, 274, 275, 332, 333, 334, 338, 339, 340], "count": [3, 80, 145, 227, 303, 307, 310, 332, 333, 334, 335, 341, 344], "make_env": [3, 105, 157, 312, 313, 332, 333, 344], "gymenv": [3, 5, 13, 14, 16, 17, 21, 22, 79, 80, 83, 85, 97, 103, 113, 116, 117, 122, 128, 129, 131, 133, 137, 138, 139, 142, 146, 147, 148, 150, 151, 157, 184, 188, 316, 319, 325, 327, 332, 333, 334, 335, 340, 341, 343, 344], "v1": [3, 13, 14, 16, 17, 21, 22, 52, 53, 79, 80, 83, 94, 97, 103, 113, 116, 123, 128, 129, 131, 137, 139, 142, 145, 146, 147, 148, 150, 184, 188, 266, 280, 281, 282, 283, 285, 286, 287, 288, 327, 333, 335, 339, 341, 343, 344], "from_pixel": [3, 77, 78, 113, 138, 316, 332, 333, 335, 340, 341, 343, 344], "9": [3, 7, 32, 35, 38, 41, 56, 57, 69, 71, 92, 98, 99, 146, 157, 241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 264, 269, 328, 331, 332, 333, 334, 338, 339, 341, 342], "81": [3, 332, 333, 339], "must": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 53, 55, 56, 57, 58, 60, 61, 62, 68, 69, 70, 73, 79, 80, 83, 97, 98, 99, 103, 113, 116, 122, 126, 129, 131, 133, 143, 146, 147, 148, 151, 152, 157, 169, 170, 179, 184, 188, 190, 193, 194, 195, 196, 205, 216, 222, 223, 228, 229, 230, 231, 232, 235, 236, 241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 262, 263, 269, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 316, 332, 333, 334, 335, 337, 339, 341, 343], "print": [3, 6, 7, 13, 14, 16, 21, 22, 24, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 53, 55, 56, 57, 58, 68, 69, 71, 75, 76, 77, 78, 79, 80, 82, 83, 84, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 101, 102, 103, 104, 105, 107, 109, 113, 114, 118, 119, 120, 121, 128, 131, 137, 139, 142, 145, 147, 148, 149, 157, 163, 166, 167, 169, 170, 176, 179, 184, 190, 193, 194, 195, 196, 199, 202, 205, 216, 217, 218, 219, 221, 222, 224, 225, 227, 229, 231, 234, 236, 256, 316, 319, 327, 329, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "simpli": [3, 6, 34, 36, 39, 45, 123, 143, 156, 256, 327, 328, 332, 334, 338, 344], "b": [3, 7, 8, 23, 26, 28, 34, 36, 39, 40, 41, 42, 71, 182, 183, 186, 187, 195, 196, 197, 198, 204, 213, 235, 271, 272, 273, 274, 275, 277, 290, 327, 333, 340, 341], "c": [3, 6, 7, 26, 34, 36, 39, 41, 42, 54, 131, 149, 186, 187, 333, 341], "d": [3, 35, 54, 56, 57, 58, 63, 182, 186, 228, 232, 343], "get": [3, 4, 6, 7, 8, 9, 34, 35, 36, 38, 39, 52, 55, 60, 61, 68, 69, 70, 71, 73, 80, 97, 103, 110, 112, 114, 118, 120, 121, 129, 131, 136, 146, 147, 149, 157, 216, 224, 225, 228, 229, 232, 271, 272, 273, 274, 275, 294, 327, 332, 333, 334, 335, 338, 339, 341, 343, 344], "forc": [3, 6, 7, 13, 14, 18, 20, 21, 53, 55, 56, 57, 333, 338, 339], "privat": [3, 79, 83, 97, 103, 156, 339, 344], "absenc": 3, "total": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 30, 31, 33, 69, 243, 255, 258, 298, 300, 303, 307, 310, 311, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344], "unless": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 55, 67, 79, 83, 97, 103, 334], "wa": [3, 5, 7, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 67, 79, 83, 97, 103, 151, 167, 186, 253, 262, 277, 328, 333, 334, 337, 341, 343], "abov": [3, 7, 32, 79, 83, 97, 103, 185, 211, 212, 240, 328, 329, 332, 334, 338, 339, 344], "deal": [3, 332, 334, 338, 341], "proper": [3, 4, 6, 7, 271, 272, 273, 274, 333, 334, 338, 341], "behav": [3, 85, 93, 182, 186, 202, 254, 340], "accord": [3, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 39, 40, 131, 141, 185, 197, 206, 211, 212, 269, 327, 339, 341], "develop": [3, 4, 7, 87, 332, 343], "inner": [3, 79, 83, 97, 103, 120, 329, 333, 334, 338, 344], "logic": 3, "nevertheless": [3, 334, 341], "kept": [3, 13, 14, 16, 17, 67, 69, 120, 143, 150, 159, 166, 185, 211, 212], "mind": [3, 55, 68, 69, 338], "desig": 3, "previou": [3, 4, 10, 32, 40, 41, 147, 167, 182, 186, 207, 221, 334, 335, 339, 344], "wherev": 3, "expos": [3, 100, 118, 121, 233, 333], "modif": [3, 5, 26, 28, 32, 79, 83, 97, 103, 125, 167, 256, 334, 339], "lost": [3, 8, 156], "eras": [3, 79, 83, 97, 103, 151], "intern": [3, 330], "face": [3, 5, 8, 9, 344], "NOT": [3, 136], "outsid": [3, 16, 338, 339], "keep": [3, 4, 7, 8, 14, 42, 67, 71, 97, 103, 131, 135, 155, 157, 166, 227, 300, 307, 332, 333, 334, 335, 338, 339, 341, 343, 344], "right": [3, 6, 7, 40, 189, 333, 334, 338, 339, 344], "preliminari": 3, "warranti": 3, "affect": [3, 8, 32, 79, 83, 97, 103, 150, 151, 159, 271, 272, 273, 274], "assumpt": [3, 339, 341], "made": [3, 32, 60, 61, 62, 70, 73, 79, 83, 97, 103, 227, 245, 269, 332, 333, 335, 338, 340], "preclud": 3, "presenc": 3, "annihil": 3, "effect": [3, 26, 32, 55, 68, 69, 79, 83, 97, 103, 113, 151, 307, 332, 341, 344], "reason": [3, 4, 8, 32, 55, 79, 83, 97, 98, 99, 103, 135, 153, 188, 328, 332, 333, 334, 339, 341], "root": [3, 26, 28, 52, 53, 55, 56, 57, 113, 148, 166, 185, 211, 212, 335, 338, 339, 340, 341, 344], "known": [3, 5, 7, 8, 278, 279, 332, 333], "advanc": [3, 21, 35, 38, 41, 42, 341], "explicitli": [3, 4, 333, 335, 338, 341], "place": [3, 13, 14, 16, 17, 26, 28, 32, 34, 36, 39, 60, 61, 73, 79, 80, 83, 97, 103, 117, 122, 135, 147, 150, 151, 153, 155, 156, 157, 167, 221, 231, 304, 309, 310, 333, 334, 338, 339, 341], "superse": 3, "pettingzoowrapp": [3, 325], "group": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 79, 83, 92, 97, 98, 99, 103, 105, 106, 327, 333, 334, 338], "associ": [3, 32, 34, 36, 39, 79, 83, 97, 103, 206, 323, 332, 341], "environemtn": 3, "__not__": 3, "constrain": [3, 129, 184, 188, 258], "li": 3, "fact": [3, 7, 8, 332, 334, 338, 339, 340, 341, 344], "predict": [3, 32, 40, 180, 191, 192, 221, 237, 247, 249, 251, 252, 270, 327, 332, 333], "know": [3, 4, 9, 35, 38, 41, 42, 220, 259, 303, 332, 333, 334, 335, 338, 341], "meaning": 3, "could": [3, 4, 6, 333, 334, 338, 340, 344], "perfectli": [3, 329, 332, 339], "case": [3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 32, 35, 41, 53, 55, 56, 57, 63, 79, 83, 97, 103, 118, 119, 121, 149, 151, 159, 188, 190, 196, 228, 231, 232, 234, 235, 240, 241, 242, 244, 245, 247, 248, 254, 258, 259, 260, 261, 263, 271, 272, 273, 274, 298, 309, 321, 322, 323, 327, 329, 332, 333, 334, 335, 338, 339, 341, 344], "meaningless": 3, "discard": [3, 45, 52, 53, 83, 153, 166, 289, 341, 344], "val": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 343], "agent0": 3, "agent1": 3, "overridden": [3, 53, 55, 56, 57, 79, 83, 97, 103, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 195, 196, 199, 200, 201, 203, 206, 207, 209, 214, 220, 221, 223, 224, 225, 227, 230, 235, 238, 335], "overrid": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 38, 44, 46, 47, 79, 83, 97, 103, 323, 327], "elimin": 3, "field": [3, 13, 14, 16, 17, 26, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 53, 55, 56, 57, 60, 61, 73, 76, 79, 83, 89, 92, 93, 96, 97, 98, 99, 101, 102, 103, 104, 105, 118, 121, 122, 123, 133, 137, 139, 143, 145, 147, 151, 166, 168, 179, 184, 188, 192, 204, 205, 213, 216, 217, 218, 219, 221, 222, 223, 227, 228, 229, 230, 231, 234, 236, 241, 242, 244, 245, 247, 248, 254, 258, 259, 260, 261, 263, 269, 311, 316, 326, 327, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "bool": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 67, 68, 69, 76, 77, 78, 79, 80, 81, 83, 89, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 113, 114, 118, 120, 121, 122, 123, 125, 129, 130, 131, 133, 135, 137, 139, 141, 143, 145, 147, 149, 151, 152, 153, 155, 157, 159, 166, 167, 168, 169, 170, 172, 173, 182, 183, 184, 185, 186, 187, 188, 190, 192, 195, 196, 197, 198, 211, 212, 216, 222, 223, 227, 228, 229, 230, 231, 232, 233, 234, 235, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 266, 269, 271, 272, 273, 274, 277, 280, 281, 282, 283, 285, 286, 287, 288, 289, 290, 300, 301, 303, 304, 305, 307, 316, 323, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "pixel": [3, 7, 26, 57, 113, 115, 122, 125, 127, 131, 133, 135, 138, 149, 153, 155, 172, 200, 201, 290, 316, 327, 332, 333, 335, 340, 341, 343, 344], "500": [3, 332, 333, 339, 343, 344], "uint8": [3, 34, 36, 39, 47, 55, 122, 133, 149, 333, 340, 341, 343, 344], "none": [3, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 69, 70, 71, 73, 79, 80, 83, 92, 93, 97, 98, 99, 103, 104, 105, 107, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 125, 127, 129, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 153, 155, 157, 158, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 257, 258, 259, 260, 261, 262, 263, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 301, 302, 303, 304, 305, 306, 307, 311, 312, 313, 316, 319, 321, 322, 323, 327, 329, 332, 333, 334, 335, 338, 339, 341, 343, 344], "is_shar": [3, 13, 14, 16, 26, 34, 36, 37, 39, 40, 41, 42, 43, 45, 53, 55, 56, 57, 58, 60, 61, 73, 76, 79, 83, 89, 92, 93, 96, 97, 98, 99, 101, 102, 103, 104, 105, 118, 121, 122, 123, 133, 137, 139, 143, 145, 147, 157, 166, 168, 179, 184, 188, 192, 204, 205, 213, 216, 217, 218, 219, 221, 222, 223, 227, 228, 229, 230, 231, 234, 236, 241, 242, 244, 245, 247, 248, 254, 258, 259, 260, 261, 263, 269, 316, 327, 334, 335, 337, 338, 339, 340, 341, 343, 344], "launch": [3, 13, 14, 18, 19, 20, 22, 97, 103], "bottleneck": [3, 8], "so": [3, 4, 6, 7, 10, 32, 34, 36, 39, 40, 79, 83, 97, 103, 147, 157, 233, 234, 334, 335, 338, 339, 344], "onc": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 55, 79, 83, 97, 103, 139, 151, 220, 225, 227, 305, 329, 333, 334, 335, 339, 341, 344], "great": [3, 7, 8, 343], "speedup": [3, 8, 344], "precis": [3, 118, 121, 166, 183, 187, 332, 334], "misspecifi": 3, "caus": [3, 7, 8, 60, 61, 73, 79, 83, 87, 97, 103, 136, 344], "breakag": 3, "rais": [3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 55, 79, 83, 97, 103, 106, 113, 124, 130, 139, 146, 147, 148, 151, 159, 220, 224, 225, 227, 261, 332, 334, 338, 341], "mismatch": [3, 333], "mostli": [3, 17, 328, 341, 344], "purpos": [3, 7, 113, 182, 319, 332, 334, 335, 338, 340, 344], "want": [3, 6, 7, 8, 69, 131, 241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 269, 327, 332, 333, 334, 335, 338, 339, 340, 341, 343, 344], "subprocess": [3, 13, 14, 80, 97, 103], "addit": [3, 4, 32, 52, 79, 83, 94, 97, 103, 117, 135, 147, 150, 151, 153, 155, 182, 220, 221, 231, 240, 256, 271, 328, 332, 333, 338, 341], "multithread": [3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 94, 95, 341], "multithreadedenv": [3, 325], "underneath": 3, "higher": [3, 4, 116, 235, 332, 333, 334, 341, 344], "restrict": [3, 333, 340, 341, 344], "flexibl": [3, 9, 94, 264, 328, 329, 341, 344], "cover": [3, 326, 334, 339, 343], "popular": [3, 327, 335, 338], "atari": [3, 4, 113, 344], "classic": [3, 93, 99, 333], "benchmark_batched_env": 3, "py": [3, 109, 204, 213, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344], "pipelin": [3, 7, 327, 334], "seamlessli": [3, 339], "infrastructur": [3, 338], "view": [3, 8, 27, 32, 33, 55, 56, 79, 83, 97, 103, 110, 179, 182, 186, 190, 339, 341, 343, 344], "core": [3, 8, 316, 329, 335, 343], "decis": [3, 171, 203, 221, 246, 257, 335, 338, 341, 344], "act": [3, 4, 68, 69, 98, 99, 196, 242, 244, 254, 259, 261, 263, 335, 338], "world": [3, 5, 93, 237, 251, 338, 339, 344], "paradigm": [3, 17, 338], "decpodp": 3, "markov": [3, 344], "game": [3, 4, 5], "per": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 87, 97, 98, 99, 116, 142, 180, 195, 196, 224, 307, 321, 322, 332, 333, 334, 335, 338, 341, 343], "accommod": [3, 13, 14, 16, 17], "thank": [3, 332], "carrier": [3, 334, 335, 341], "particular": [3, 32, 45, 52, 79, 83, 97, 103, 151, 328, 329, 333, 335, 337, 338, 341], "thu": [3, 255, 338], "hand": [3, 7, 21, 338, 339], "let": [3, 6, 7, 32, 43, 79, 83, 97, 98, 99, 103, 113, 184, 188, 195, 196, 222, 303, 328, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "understand": [3, 8, 332, 333, 338], "go": [3, 7, 92, 136, 139, 221, 277, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "vma": [3, 104, 105, 338], "robot": [3, 5, 7, 55, 135, 153, 155, 338], "what": [3, 8, 35, 44, 79, 83, 97, 103, 122, 147, 166, 229, 326, 327, 328, 333, 334, 335, 338, 339, 340, 341, 343, 344], "vmasenv": [3, 325, 338], "balanc": [3, 332, 333], "num_env": [3, 21, 86, 104, 105, 338], "n_agent": [3, 104, 105, 195, 196, 204, 213, 269, 338], "5": [3, 24, 26, 28, 35, 38, 41, 42, 68, 69, 80, 89, 94, 101, 102, 104, 105, 112, 139, 145, 146, 168, 169, 170, 179, 180, 182, 185, 186, 189, 190, 192, 195, 196, 200, 205, 211, 212, 221, 222, 229, 235, 255, 258, 260, 263, 327, 331, 332, 333, 338, 339, 341, 342, 343, 344], "info": [3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 68, 69, 79, 83, 97, 98, 99, 100, 101, 102, 103, 104, 105, 153, 156, 158, 338, 341], "ground_rew": 3, "pos_rew": [3, 338], "16": [3, 32, 56, 69, 79, 83, 97, 103, 113, 331, 332, 333, 335, 339, 340, 341, 342, 343], "style": [3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57], "relat": [3, 4, 10, 35, 125, 241, 242, 244, 245, 247, 248, 254, 258, 259, 260, 261, 263, 333, 339], "vari": [3, 98, 99, 136, 338], "creation": [3, 97, 103, 332, 344], "info_spec": 3, "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 33, 79, 83, 97, 103, 110, 167, 245, 248, 269, 325, 334, 338, 344], "you": [3, 5, 6, 7, 8, 9, 10, 32, 43, 79, 83, 87, 92, 97, 98, 99, 101, 102, 103, 109, 157, 186, 326, 327, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "simpl": [3, 9, 32, 33, 79, 83, 97, 103, 172, 232, 245, 247, 256, 260, 271, 327, 328, 332, 333, 334, 338, 344], "composit": [3, 26, 28, 79, 83, 97, 103, 334, 339], "prefix": [3, 23, 32, 34, 36, 39, 45, 79, 83, 97, 103, 151, 256, 261, 289, 335, 344], "exactli": [3, 32, 79, 83, 85, 97, 103, 151, 182, 186, 261, 332, 335, 338], "action_kei": [3, 15, 79, 83, 97, 103, 110, 120, 166, 168, 191, 192, 220, 224, 225, 227, 338], "reward_kei": [3, 79, 83, 97, 103, 166, 168, 192, 301, 305, 338], "automat": [3, 5, 57, 60, 61, 73, 79, 83, 97, 98, 99, 103, 118, 121, 131, 156, 169, 216, 228, 327, 332, 334, 338, 339, 341, 343], "sure": [3, 4, 7, 54, 70, 87, 139, 222, 323, 327, 332, 334, 335, 338, 339, 341, 343, 344], "set_kei": [3, 122, 241, 243, 245, 248, 249, 254, 255, 256, 258, 259, 260, 261, 269, 275, 338], "awai": [3, 334, 338], "eas": [3, 338], "leaf": [3, 26, 28, 79, 83, 97, 103, 145, 232], "would": [3, 32, 40, 79, 83, 97, 103, 182, 184, 186, 188, 190, 195, 329, 333, 334, 335, 339, 341, 344], "full": [3, 79, 83, 97, 103, 184, 188, 223, 298, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "raw": [3, 4, 40, 185, 211, 212, 333, 339], "torchvis": [3, 135, 155, 343, 344], "transformedenv": [3, 13, 79, 80, 83, 97, 103, 110, 113, 116, 117, 118, 121, 122, 123, 125, 128, 129, 130, 131, 133, 137, 138, 139, 142, 143, 145, 146, 147, 148, 150, 157, 184, 188, 316, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "primit": [3, 4, 55, 241, 242, 244, 245, 247, 248, 254, 258, 259, 260, 261, 263], "built": [3, 5, 7, 241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 264, 269, 317, 319, 320, 323, 332, 333, 334, 335, 341, 344], "base_env": [3, 79, 83, 97, 103, 110, 116, 118, 120, 121, 129, 133, 138, 145, 147, 148, 332, 333, 334, 340, 343, 344], "totensorimag": [3, 57, 113, 138, 333, 335, 341, 343, 344], "in_kei": [3, 13, 14, 16, 17, 21, 52, 93, 111, 112, 113, 114, 115, 116, 118, 120, 121, 125, 127, 129, 131, 132, 133, 135, 137, 138, 139, 140, 141, 142, 146, 148, 149, 150, 151, 153, 155, 157, 168, 178, 184, 188, 192, 204, 213, 214, 216, 217, 218, 219, 221, 222, 228, 229, 231, 232, 234, 235, 236, 241, 242, 243, 244, 245, 247, 248, 254, 255, 258, 259, 260, 261, 263, 269, 271, 272, 273, 274, 289, 290, 316, 319, 327, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "resiz": [3, 57, 113, 333, 335, 341, 344], "64": [3, 34, 36, 39, 55, 113, 138, 172, 173, 181, 184, 188, 196, 204, 269, 332, 333, 334, 335, 337, 339, 340, 341, 343, 344], "appar": [3, 300], "bring": [3, 334, 344], "signific": [3, 5, 8, 334, 344], "kind": [3, 38, 44, 166, 341], "consult": 3, "interest": [3, 228, 232, 327, 333, 334, 338, 339, 344], "resize_par": 3, "out_kei": [3, 13, 14, 16, 17, 21, 93, 111, 112, 113, 114, 115, 116, 118, 121, 125, 127, 129, 131, 132, 133, 135, 137, 138, 139, 140, 141, 142, 146, 148, 149, 150, 153, 155, 157, 168, 178, 179, 184, 188, 192, 204, 205, 213, 214, 216, 217, 218, 219, 221, 223, 228, 229, 230, 231, 232, 234, 235, 236, 241, 242, 243, 248, 254, 255, 258, 259, 260, 261, 269, 271, 272, 273, 274, 290, 303, 319, 327, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "easi": [3, 5, 54, 220, 224, 225, 227, 327, 328, 332, 333, 334, 338, 340, 341, 344], "graph": [3, 4, 8, 267, 268, 332, 339], "inv": [3, 116, 120, 133, 139, 339], "appli": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 43, 44, 46, 47, 52, 53, 54, 55, 56, 57, 79, 83, 97, 103, 110, 112, 113, 114, 117, 118, 119, 120, 122, 123, 124, 125, 126, 128, 129, 130, 134, 136, 137, 139, 142, 143, 145, 146, 147, 148, 150, 151, 153, 154, 156, 157, 182, 186, 211, 222, 271, 302, 329, 332, 333, 334, 339, 343, 344], "revers": [3, 186], "order": [3, 16, 32, 33, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 67, 69, 79, 83, 97, 103, 118, 121, 133, 151, 216, 222, 231, 233, 234, 236, 241, 242, 244, 248, 254, 258, 259, 260, 261, 263, 333, 338], "chain": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 117, 120, 169, 170, 234, 344], "taken": [3, 79, 83, 97, 103, 138, 193, 194, 225, 328, 332, 334, 335, 338, 339], "invers": [3, 4, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 113, 118, 121, 131, 139, 239, 254, 339], "in_keys_inv": [3, 116, 118, 121, 131, 132, 133, 137, 139, 150, 332, 337, 339, 344], "append_transform": [3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 112, 135, 147, 153, 332, 335, 339, 343, 344], "doubletofloat": [3, 316, 332, 334, 337], "float32": [3, 13, 14, 16, 26, 34, 35, 36, 39, 40, 41, 42, 44, 45, 53, 55, 57, 60, 61, 63, 73, 76, 79, 83, 89, 93, 96, 97, 101, 102, 103, 104, 105, 118, 121, 122, 123, 131, 133, 137, 139, 143, 145, 147, 149, 163, 166, 168, 179, 184, 188, 192, 204, 205, 213, 216, 217, 218, 219, 221, 222, 227, 228, 229, 230, 231, 234, 236, 241, 242, 244, 245, 247, 248, 254, 258, 259, 260, 261, 263, 269, 316, 327, 334, 335, 337, 338, 339, 340, 341, 343, 344], "float64": [3, 32, 53, 55, 56, 79, 83, 97, 103, 117, 118, 121, 135, 147, 150, 151, 153, 155, 231, 337, 344], "regist": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 79, 83, 97, 103, 118, 121, 122, 151, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 195, 196, 199, 200, 201, 203, 206, 207, 209, 214, 220, 221, 223, 224, 225, 227, 230, 235, 238, 241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 269, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 329, 332, 334, 341], "manipul": [3, 4, 8, 135, 153], "third_transform": 3, "replac": [3, 6, 7, 26, 28, 32, 55, 68, 69, 120, 122, 166, 224, 327, 341], "unexpect": [3, 32, 79, 83, 97, 103, 151, 261, 344], "behviour": 3, "fortun": [3, 335], "ident": [3, 13, 14, 16, 32, 34, 36, 39, 97, 103, 122, 195, 196, 271, 272, 273, 274, 321, 322, 333, 338], "alreadi": [3, 8, 11, 32, 34, 36, 39, 45, 79, 83, 97, 103, 147, 167, 232, 271, 272, 273, 274, 332, 334, 338], "chang": [3, 5, 7, 32, 35, 38, 41, 42, 60, 61, 62, 67, 70, 73, 79, 83, 97, 103, 117, 118, 119, 121, 123, 129, 137, 143, 145, 150, 151, 157, 186, 241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 269, 328, 332, 334, 335, 338, 339, 340, 341, 344], "happen": [3, 79, 83, 97, 103, 220, 333, 340, 344], "catfram": [3, 333], "hold": [3, 267, 268, 339, 341], "notic": [3, 113, 334, 339], "parenthood": 3, "henc": [3, 35, 136, 167, 195, 327, 332, 334, 338, 339], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 339], "discret": [3, 24, 27, 30, 31, 33, 47, 79, 83, 97, 98, 99, 103, 105, 120, 202, 205, 247, 248, 249, 327, 333, 334, 338, 344], "might": [3, 34, 36, 37, 39, 294, 326, 332, 344], "throughout": [3, 241, 242, 243, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 269, 334, 344], "action_mask": [3, 98, 99, 101, 102, 110], "unavail": [3, 98, 99], "probabl": [3, 4, 8, 40, 177, 179, 182, 184, 186, 188, 190, 193, 194, 202, 212, 224, 228, 232, 327, 333, 343], "categor": [3, 27, 31, 33, 98, 99, 105, 110, 122, 179, 202, 205, 222, 223, 228, 229, 230, 245, 248, 269, 335], "probabilistictensordictmodul": [3, 129, 232, 233, 343], "tensordictsequenti": [3, 184, 188, 222, 224, 233, 327, 332, 335, 337, 340, 343], "maskedcategor": [3, 194, 325], "linear": [3, 13, 14, 16, 17, 21, 32, 79, 83, 93, 97, 103, 117, 129, 135, 147, 150, 151, 153, 155, 168, 169, 170, 179, 190, 192, 195, 196, 197, 198, 199, 205, 206, 207, 216, 217, 218, 219, 224, 225, 226, 227, 228, 229, 231, 234, 236, 241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 269, 271, 272, 273, 274, 319, 327, 333, 337, 340, 343], "in_feat": 3, "out_feat": 3, "logit": [3, 36, 40, 193, 194, 202, 223, 228, 248, 327], "dist": [3, 10, 193, 194, 202], "distribution_class": [3, 129, 217, 218, 219, 221, 228, 232, 234, 241, 242, 248, 254, 258, 259, 260, 261, 327, 332, 334, 338, 343], "wrap": [3, 5, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 53, 79, 83, 97, 98, 99, 103, 105, 159, 184, 188, 214, 217, 218, 219, 220, 225, 227, 229, 237, 269, 327, 332, 333, 334, 335, 338, 344], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 110, 136], "add": [3, 4, 6, 21, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 59, 65, 71, 72, 74, 79, 83, 97, 103, 113, 129, 184, 188, 197, 226, 241, 302, 334, 335, 338, 339, 341, 343], "enviorn": [3, 98, 99, 105, 338], "itself": [3, 32, 79, 83, 97, 103, 107, 256, 334], "log": [3, 4, 8, 40, 177, 178, 179, 193, 194, 202, 212, 222, 223, 228, 232, 241, 242, 243, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 269, 300, 301, 303, 307, 319, 327, 328, 329, 332, 333, 334, 338, 339, 343], "mission": 3, "irrespect": [3, 231, 232], "dmcontrol": [3, 332], "jumanji": [3, 88, 89], "natur": [3, 332, 335], "special": [3, 327, 332, 335, 344], "framework": [3, 4, 9, 22, 93, 182, 343, 344], "Its": [3, 32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 157, 231, 275], "success": [3, 53, 113, 150, 224, 333, 339, 341, 343], "been": [3, 5, 7, 8, 17, 18, 20, 21, 40, 67, 79, 83, 87, 97, 103, 129, 145, 146, 150, 182, 186, 220, 225, 227, 332, 333, 334, 335, 337, 338, 339, 341, 344], "foundat": [3, 5, 98, 99, 334, 338], "inspir": [3, 339], "gone": [3, 4, 5], "sometim": [3, 335, 344], "hard": [3, 7, 253, 333, 344], "adopt": [3, 5, 332, 344], "prefer": [3, 17, 20, 35, 38, 41, 42, 136, 143, 258, 304, 327, 334, 338, 341], "moreov": 3, "maintain": [3, 5, 9, 339], "both": [3, 7, 32, 55, 79, 80, 83, 97, 98, 99, 103, 113, 137, 151, 167, 169, 170, 184, 187, 188, 190, 195, 196, 217, 218, 219, 223, 230, 241, 243, 244, 248, 254, 255, 256, 258, 259, 260, 261, 263, 303, 327, 332, 334, 338, 339, 340, 341, 344], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 333, 334, 335, 338, 339, 341, 344], "decor": [3, 8, 11, 109, 256, 271, 272, 273, 274], "set_gym_backend": [3, 107, 325], "relev": [3, 40, 271, 272, 273, 274, 275, 339], "gym_backend": [3, 109, 325], "env1": [3, 337], "path": [3, 6, 7, 32, 34, 35, 36, 38, 39, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 60, 79, 83, 97, 103, 109, 135, 155, 192, 307, 329, 333], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 56, 109], "__init__": [3, 7, 93, 109, 110, 118, 121, 168, 179, 182, 186, 192, 236, 242, 244, 248, 254, 259, 261, 263, 329, 339, 344], "env2": [3, 337], "_env": [3, 6, 344], "classic_control": 3, "pendulumenv": [3, 339], "0x15147e190": 3, "0x1629916a0": 3, "further": [3, 5, 334], "tell": [3, 4, 7, 98, 99, 332, 335, 338], "mo_gymnasium": [3, 91, 107], "handi": 3, "side": [3, 4, 344], "v0": [3, 82, 83, 84, 88, 89, 90, 91, 117, 151, 157, 319], "26": [3, 333, 334, 335, 339, 340, 341], "fun": [3, 11, 109, 334, 338], "reveal": 4, "bug": [4, 343], "curv": 4, "won": [4, 32, 55, 79, 80, 83, 97, 103, 135, 155, 307, 323, 333, 334], "exploit": 4, "video": [4, 9, 290, 303, 323, 338], "cv": 4, "flip": 4, "imag": [4, 7, 55, 77, 115, 135, 149, 155, 190, 332, 333, 338, 340, 344], "correspondingli": 4, "prescript": 4, "tune": [4, 129, 338, 340], "coeffici": [4, 40, 129, 338], "bonu": [4, 241, 243, 255, 258], "beta": [4, 35, 41, 63, 254, 255, 332, 333, 341, 343], "reduc": [4, 6, 27, 146, 333, 334], "downstream": [4, 332], "formul": [4, 338], "ob": [4, 8, 26, 28, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 68, 69, 71, 110, 118, 119, 121, 131, 149, 163, 166, 195, 196, 229, 236, 242, 244, 248, 254, 259, 261, 263, 271, 272, 273, 274, 333, 337, 339, 343, 344], "rate": [4, 157, 270, 333, 334, 338], "gradient": [4, 32, 79, 83, 97, 103, 151, 185, 194, 198, 202, 211, 212, 241, 243, 244, 248, 254, 255, 256, 258, 259, 260, 261, 263, 270, 271, 272, 273, 274, 307, 332, 334, 338, 339], "norm": [4, 8, 307, 332, 333, 334, 338, 339], "easier": [4, 327, 332], "behavior": [4, 32, 79, 83, 97, 103, 151, 254, 334, 335, 338, 339], "local": [4, 7, 10, 16, 21, 32, 79, 83, 97, 103, 151, 195, 196, 204, 213, 269, 295, 338], "optima": 4, "sens": [4, 339], "product": [4, 9, 182, 183, 186, 187, 321, 322], "sum": [4, 21, 31, 33, 71, 112, 142, 193, 194, 213, 251, 270, 277, 328, 332, 333, 334, 335, 338, 339, 344], "track": [4, 13, 14, 16, 17, 18, 19, 20, 21, 42, 67, 142, 157, 227, 295, 300, 333, 335, 338, 339, 341], "stat": [4, 131, 311, 323, 333, 334], "w": [4, 113, 115, 138, 149, 182, 227, 290, 333, 335, 341], "r": [4, 32, 110, 116, 131, 183, 232, 240, 270, 327, 333, 339, 344], "yield": [4, 16, 21, 32, 79, 83, 97, 103, 256, 332], "insight": 4, "auxiliari": 4, "credit": 4, "futur": [4, 32, 34, 36, 39, 79, 83, 97, 103, 135, 151, 155, 190, 241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 269, 326, 343], "past": [4, 333, 341], "spars": [4, 335], "ineffici": 4, "ad": [4, 13, 14, 16, 32, 35, 38, 41, 42, 49, 52, 53, 54, 55, 56, 57, 63, 79, 83, 97, 103, 142, 151, 197, 198, 227, 241, 243, 245, 249, 255, 258, 261, 269, 333, 335, 341, 344], "intermedi": [4, 112, 184, 188, 223, 332, 340], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 332], "discov": 4, "score": [4, 40], "undesir": 4, "though": [4, 79, 83, 97, 103, 190, 334, 338], "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 343], "individu": [4, 18, 19, 20, 21, 32, 45, 79, 83, 97, 103, 332, 338], "select": [4, 15, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 98, 99, 105, 110, 112, 113, 114, 117, 118, 119, 121, 122, 123, 124, 125, 126, 128, 129, 130, 134, 136, 137, 139, 142, 143, 145, 146, 147, 148, 150, 153, 154, 156, 157, 168, 184, 188, 222, 229, 306, 332, 341], "fall": [4, 52], "explicit": [4, 11, 45, 189, 341], "mechan": [4, 32, 79, 83, 97, 103, 151, 333, 339], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 34, 36, 39, 79, 83, 97, 103, 186, 254, 334, 338], "addition": 4, "timestep": [4, 40, 52, 139, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 338], "realli": 4, "larg": [4, 27, 34, 36, 39, 118, 121, 153, 333, 334, 338, 341], "huge": [4, 196, 335], "std": [4, 131, 157, 199, 203, 220, 332, 344], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 331, 335, 336, 337, 340, 341, 342], "initi": [4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 40, 79, 83, 97, 103, 112, 131, 135, 147, 150, 151, 153, 158, 168, 182, 183, 186, 187, 192, 197, 198, 220, 224, 225, 227, 241, 242, 244, 245, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 260, 261, 263, 269, 316, 323, 333, 335, 339, 344], "estim": [4, 68, 69, 122, 129, 217, 218, 219, 241, 242, 243, 244, 245, 247, 248, 249, 250, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 269, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 328, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "encount": [4, 55, 326, 333, 339], "unseen": 4, "extrins": 4, "wrong": 4, "bonus": 4, "denser": 4, "prior": [4, 207, 251, 338], "freshli": 4, "doesn": [4, 11, 94, 118, 121], "drop": [4, 67, 69, 166], "meant": [4, 93], "encourag": [4, 332, 333, 341], "measur": [4, 334], "novelti": 4, "revisit": 4, "previous": [4, 334, 344], "diminish": 4, "decreas": 4, "ideal": [4, 131, 339], "down": [4, 13, 14, 16, 17, 335], "anyth": 4, "try": [4, 7, 8, 9, 26, 28, 34, 36, 39, 333, 334, 335, 338, 339, 343, 344], "distil": 4, "nois": [4, 158, 198, 215, 227, 259, 263, 303, 323, 332], "exploratori": [4, 241, 243, 255, 258], "misalign": 4, "trade": 4, "unavoid": 4, "schedul": [4, 7, 40, 303, 334, 339], "divers": [4, 97, 103], "bootstrap": [4, 249, 272, 278, 279, 332, 335], "noisi": [4, 197, 198, 215, 327], "unstabl": [4, 185, 211, 212], "inher": 4, "stochast": [4, 129, 180, 198, 200, 207, 242, 246, 248, 254, 257, 259, 261, 327, 334, 338], "enemi": 4, "variabl": [4, 7, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 53, 56, 57, 105, 182, 183, 184, 186, 187, 188, 192, 217, 218, 219, 256, 259, 329, 333], "pomdp": [4, 341], "loos": [4, 327, 333, 334], "nonexist": 4, "architectur": [4, 176, 338], "sequenc": [4, 13, 14, 16, 17, 26, 28, 30, 31, 35, 37, 38, 40, 43, 45, 55, 58, 59, 65, 71, 72, 74, 111, 112, 113, 114, 115, 118, 120, 121, 125, 127, 131, 132, 136, 137, 138, 139, 140, 141, 142, 146, 148, 149, 150, 157, 169, 170, 177, 179, 182, 186, 190, 193, 194, 195, 196, 202, 205, 209, 221, 233, 234, 246, 289, 290, 302, 303, 304, 306, 307, 316, 327, 332, 334, 335, 337, 338, 344], "lstm": [4, 187, 188, 189, 199], "rel": [4, 147, 177, 210, 332, 333, 338, 341], "tend": 4, "stabl": [4, 9, 10], "compens": 4, "descent": [4, 198], "1000": [4, 38, 68, 69, 79, 83, 97, 103, 113, 157, 224, 227, 228, 232, 253, 332, 333, 334, 335, 340, 341], "minimum": [4, 97, 103, 140, 180, 199, 210, 211, 212, 235, 238, 240, 242, 248, 256, 257, 261, 298, 332, 334, 338], "manual": [4, 18, 20, 21, 332, 335, 341], "deviat": [4, 131, 157, 168, 180, 192, 197, 198, 220, 258, 263, 332, 338], "radic": 4, "begin": [4, 13, 14, 16, 18, 19, 20, 21, 182, 183, 186, 187], "stabil": [4, 126], "stage": [4, 332, 339], "never": 4, "prevent": [4, 26, 28, 185, 211, 212, 255, 258, 305, 341], "solv": [4, 9, 10, 326, 332, 333, 334, 338, 339, 341], "entir": [4, 55, 195, 334, 339, 341], "submit": [4, 326, 343], "suffici": [4, 332], "system": [4, 5, 334, 338, 339], "adequ": [4, 159, 334, 338], "infeas": 4, "allevi": [4, 327], "prune": 4, "fire": [4, 32, 79, 83, 97, 103], "certain": [4, 18, 20, 21, 32, 45, 79, 83, 97, 103, 109, 126, 145, 151, 183, 187, 224, 255, 327, 332, 333, 334, 338, 344], "illeg": 4, "move": [4, 21, 32, 57, 79, 83, 97, 103, 117, 119, 135, 147, 150, 151, 153, 155, 157, 166, 190, 231, 305, 332, 333, 335, 343, 344], "chess": 4, "combin": [4, 150, 333, 341], "grasp": 4, "releas": [4, 7, 10, 32, 79, 83, 97, 103, 151, 261, 343], "top": [4, 71, 168, 192], "p": [4, 80, 101, 102], "wherein": 4, "cumul": [4, 142, 146, 168, 277, 334], "q": [4, 9, 79, 83, 97, 103, 172, 173, 174, 175, 178, 179, 181, 204, 205, 213, 219, 223, 229, 230, 242, 244, 245, 247, 248, 249, 253, 254, 259, 261, 263, 269, 316, 325, 332], "flow": [4, 332, 334, 338, 339, 341], "reparameter": [4, 177, 194, 202], "soft": [4, 253, 261, 262], "critic": [4, 8, 217, 226, 241, 243, 244, 248, 254, 255, 258, 259, 260, 261, 263, 332, 334], "clip": [4, 40, 116, 140, 243, 263, 307, 334, 338, 339], "oppos": [4, 45], "incorrect": 4, "thought": [4, 79, 83, 97, 103], "bound": [4, 17, 21, 25, 26, 32, 79, 83, 97, 103, 116, 130, 157, 206, 207, 216, 222, 223, 227, 228, 229, 230, 231, 232, 235, 263, 327, 332, 333, 334, 344], "region": 4, "squash": [4, 335, 343], "tanh": [4, 169, 170, 182, 183, 185, 186, 187, 190, 196, 210, 211, 212, 235, 334, 338, 339, 340, 343], "correct": [4, 34, 36, 39, 129, 310, 334, 335], "prob": [4, 193, 194, 202, 334, 338], "rememb": 4, "remap": 4, "origin": [4, 8, 13, 14, 16, 17, 34, 36, 39, 40, 87, 119, 120, 129, 135, 151, 155, 182, 228, 231, 232, 253, 256, 258, 316, 332, 337, 339, 344], "real": [5, 55, 232, 328, 335, 339], "histor": 5, "ceas": 5, "fork": 5, "farama": [5, 90, 91, 98, 99, 334, 339], "usag": [5, 7, 52, 53, 55, 56, 57, 113, 122, 184, 188, 254, 261, 264, 327, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "bc": [5, 343], "break": [5, 13, 14, 16, 21, 32, 38, 42, 53, 55, 56, 57, 58, 68, 69, 79, 83, 97, 103, 113, 139, 157, 333, 341, 343], "against": [5, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 79, 83, 97, 103, 159, 216, 222, 223, 228, 229, 230, 231, 232, 334, 338], "13": [5, 10, 11, 68, 69, 100, 156, 331, 332, 333, 334, 335, 338, 339, 340, 341, 342], "construct": [5, 32, 35, 38, 41, 42, 79, 83, 97, 98, 103, 118, 121, 159, 184, 188, 207, 232, 307, 327, 333, 334, 335, 339, 341, 344], "best": [5, 9, 87, 184, 188, 338, 341, 343], "gymwrapp": [5, 79, 83, 97, 103, 123, 143, 145, 156, 325, 334, 343], "feel": [5, 326, 343], "free": [5, 7, 118, 121, 241, 251, 258, 329, 334, 338, 343], "gladli": 5, "instruct": [6, 7, 10, 22, 52, 120, 122, 332, 333, 334, 335, 338, 341], "prepar": [6, 334], "conda": [6, 7, 326], "7": [6, 10, 27, 33, 35, 38, 41, 69, 146, 168, 169, 170, 189, 190, 192, 195, 277, 331, 332, 333, 338, 339, 341, 342, 343], "cmake": 6, "14": [6, 11, 57, 68, 69, 131, 332, 333, 334, 335, 339, 341], "activ": [6, 7, 9, 169, 170, 176, 180, 190, 195, 196, 243, 255, 258, 327, 339, 343], "sim": 6, "bullet": 6, "physic": [6, 7, 97, 100, 329, 332, 338, 339], "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 326], "withbullet": 6, "forg": [6, 7], "aihabitat": 6, "nightli": 6, "y": [6, 7, 96, 189, 195, 214, 332, 334, 338], "git": [6, 7, 10], "facebookresearch": 6, "subdirectori": 6, "verbos": 6, "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 49, 79, 83, 97, 103, 144, 256, 338, 344], "command": [6, 7, 10, 334, 338, 339, 344], "readm": [6, 7], "md": [6, 7], "habitatenv": [6, 325], "_has_habitat": 6, "available_env": [6, 75, 76, 77, 78, 79, 82, 83, 84, 88, 89, 90, 91, 97, 101, 102, 103, 344], "startswith": [6, 328, 332], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 80, 256, 332], "env_nam": [6, 75, 77, 82, 88, 90, 94, 100, 332, 334, 344], "llvmlite": 6, "config": [6, 7, 135, 155, 171, 176, 203, 311, 312, 313, 316, 317, 320], "var": [6, 7, 32, 79, 83, 97, 103, 151, 256, 261], "ld_preload": [6, 7], "8": [6, 7, 38, 55, 56, 63, 68, 69, 76, 79, 83, 97, 103, 146, 169, 170, 172, 173, 181, 190, 217, 218, 219, 228, 231, 234, 254, 331, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343], "bind": 6, "deactiv": [6, 7, 222], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 32, 79, 83, 97, 103, 151, 256, 261, 341], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 333], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 52], "stand": [7, 337, 339], "joint": [7, 333], "dynam": [7, 55, 57, 254, 334, 339], "contact": [7, 37], "engin": [7, 100, 339], "biomechan": 7, "graphic": 7, "anim": [7, 338], "area": 7, "demand": [7, 344], "fast": [7, 9, 76, 137, 259, 332, 333, 334], "accur": [7, 52, 53, 55, 56, 57, 333, 339, 341], "articul": 7, "recent": [7, 11, 156, 344], "acquir": [7, 334], "deepmind": [7, 8, 9, 77, 78, 122, 334], "whomev": 7, "licenc": 7, "incorpor": [7, 220, 224, 225, 227, 335, 339], "relianc": 7, "obsolet": 7, "seri": [7, 8, 33, 59, 65, 71, 72, 74, 103, 130, 150, 290, 327, 328, 332, 333, 334, 338, 341, 344], "legaci": 7, "pro": [7, 326], "tip": [7, 326], "glfw": 7, "osmesa": 7, "egl": 7, "advic": [7, 55, 344], "sudo": [7, 326], "enabl": [7, 8, 52, 60, 61, 67, 73, 184, 188, 227, 303, 334, 338, 339, 341], "apt": [7, 338], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 60, 61, 62, 70, 73, 333, 335], "workflow": [7, 217, 218, 219], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "pre": [7, 22, 32, 45, 55, 61, 79, 83, 97, 103, 135, 153, 155, 344], "binari": [7, 24, 27, 33, 111, 179, 205, 222, 223, 229, 230, 245, 248, 269], "setup": [7, 87], "mkdir": 7, "cd": 7, "tag": [7, 290, 295, 323], "earlier": [7, 332, 334, 335, 338, 341], "roboti": 7, "download": [7, 10, 52, 53, 55, 56, 57, 87, 135, 155, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344], "html": [7, 94], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": [7, 13, 14, 97, 103], "obtain": [7, 40, 79, 83, 97, 103, 112, 135, 146, 155, 168, 204, 304, 332, 334, 338], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 34, 36, 45, 58], "bin": [7, 179, 223, 327], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 175, 228, 232, 332, 334, 341], "nvidia": [7, 87], "older": [7, 11], "hack": [7, 332], "line": [7, 32, 79, 83, 97, 103, 333, 338], "adatp": 7, "script": [7, 159, 316, 319, 323, 327, 328, 329, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "unnot": [7, 136], "until": [7, 21, 148, 150, 334, 335, 338], "complet": [7, 9, 67, 83, 113, 145, 326, 328, 332, 334, 337], "mujoco_pi": 7, "trigger": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 333, 341], "troubleshoot": 7, "gl": 7, "h": [7, 113, 115, 138, 149, 182, 183, 184, 186, 187, 188, 192, 290, 333, 335, 341], "eglshim": 7, "fatal": 7, "No": 7, "directori": [7, 34, 36, 39, 45, 52, 53, 55, 56, 57, 60, 295, 329], "devel": 7, "ubuntu": [7, 87], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "38": [7, 331, 333, 338, 339, 341, 342], "disappear": [7, 333, 335, 337], "libstdc": 7, "6": [7, 13, 14, 16, 17, 38, 56, 57, 69, 89, 101, 102, 131, 133, 146, 169, 170, 177, 183, 189, 190, 195, 196, 200, 210, 228, 236, 316, 331, 332, 333, 338, 339, 341, 342, 343, 344], "glibcxx_3": 7, "29": [7, 332, 333, 334, 339, 341], "compil": [7, 32, 79, 83, 97, 103, 182, 183, 186, 187], "libosmesa": 7, "libgcc": 7, "Then": [7, 156, 334, 337], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 26, 28, 32, 79, 83, 97, 103, 130, 151, 261, 344], "job": [7, 18, 19, 20, 22], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 333, 338, 339, 341], "114": [7, 339, 341], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 339], "offscreenopenglcontext": 7, "fail": [7, 22, 26, 28, 110, 159], "opengl": [7, 338], "global": [7, 32, 79, 83, 97, 98, 99, 103, 204, 213, 228, 232, 269, 329, 332, 338], "cuda_visible_devic": 7, "id": [7, 23, 40, 227, 259, 293, 316], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "onscreen": 7, "101": [7, 339, 341], "correctli": [7, 32, 79, 83, 97, 103], "lgl": 7, "libegl": 7, "x11": [7, 338], "xlib": 7, "libx11": 7, "xorg": 7, "loop": [8, 13, 14, 16, 17, 34, 36, 39, 83, 166, 220, 224, 225, 227, 258, 307, 329, 332, 333, 337, 341], "sketch": [8, 329], "_": [8, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 80, 87, 105, 114, 118, 120, 121, 129, 131, 137, 149, 157, 216, 231, 236, 240, 241, 242, 244, 248, 254, 258, 259, 261, 263, 271, 272, 273, 274, 332, 333, 334, 335, 338, 339, 341, 343], "n_training_step": 8, "datapoint": [8, 45, 341], "onlin": [8, 13, 17, 113, 176, 203, 241, 246, 257, 258, 298, 323, 334, 335, 338, 341], "n_data_per_train": 8, "no_grad": [8, 32, 79, 83, 97, 103, 129, 182, 183, 186, 187, 271, 272, 273, 274, 334, 335, 338], "replay_buff": [8, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 304, 319, 332, 333, 334, 338, 341], "loss_fn": [8, 335, 343], "backward": [8, 32, 79, 83, 97, 103, 157, 182, 183, 186, 187, 241, 242, 244, 248, 254, 258, 259, 260, 261, 263, 332, 334, 335, 338, 339], "zero_grad": [8, 32, 79, 83, 97, 103, 329, 332, 334, 335, 338, 339], "backpropag": [8, 241, 242, 243, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 269, 338, 339], "differenti": [8, 45, 129, 271, 272, 273, 274, 335, 338, 339], "denomin": 8, "artifact": 8, "numer": [8, 38, 157, 185, 211, 212, 216, 222, 223, 228, 229, 230, 231, 232, 305, 334, 341, 344], "misconcept": 8, "freed": 8, "appear": [8, 33, 55, 68, 69, 339, 341], "compuat": 8, "twice": 8, "fix": [8, 147, 242, 257, 261, 333, 339, 344], "retain_graph": 8, "discuss": [8, 9, 338], "inplac": [8, 32, 34, 36, 39, 79, 83, 97, 103, 151, 261, 332], "accumul": 8, "onto": [8, 33, 34, 36, 39, 163, 216, 220, 222, 223, 227, 228, 229, 230, 231, 232, 335, 339], "exclud": [8, 52, 56, 113, 123, 166, 204, 338, 341], "forward": [8, 32, 79, 83, 97, 103, 110, 112, 113, 114, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 131, 134, 135, 136, 137, 139, 142, 143, 145, 146, 147, 148, 150, 153, 154, 156, 157, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 195, 196, 197, 199, 200, 201, 203, 204, 206, 207, 209, 213, 214, 220, 221, 223, 224, 225, 227, 228, 230, 231, 232, 235, 236, 238, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 269, 271, 272, 273, 274, 275, 328, 339, 343], "submodul": [8, 32, 79, 83, 97, 103, 107, 256], "param": [8, 32, 40, 79, 83, 93, 97, 103, 117, 118, 119, 123, 129, 137, 143, 145, 150, 177, 179, 210, 221, 228, 231, 234, 236, 256, 265, 268, 271, 272, 273, 274, 275, 332, 338, 339, 340, 343], "grad": [8, 32, 79, 83, 97, 103, 332, 334], "whose": [8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 79, 83, 97, 98, 99, 103, 117, 135, 147, 150, 151, 153, 155, 199, 204, 231], "neg": [8, 13, 14, 16, 17, 18, 19, 20, 21, 35, 41, 63, 113, 125, 136, 152, 250, 328, 334, 338, 339], "ask": [8, 55, 68, 69, 332, 334, 335, 338, 340, 344], "much": [8, 13, 14, 35, 41, 55, 63, 97, 103, 255, 258, 334, 338, 339, 341, 344], "render": [8, 303, 332, 333, 334], "upon": [8, 339], "factor": [8, 32, 139, 185, 198, 211, 212, 220, 224, 225, 227, 242, 247, 249, 250, 252, 262, 277, 332, 333, 338, 341, 344], "fit": [8, 11, 131, 328, 329, 332], "bottlneck": 8, "brax": [8, 75, 76, 137, 344], "jax": [8, 11], "improperli": 8, "item": [8, 13, 26, 28, 32, 38, 45, 58, 67, 71, 79, 83, 97, 103, 124, 151, 193, 194, 244, 245, 247, 261, 298, 328, 329, 332, 334, 335, 338, 339, 341], "underli": [8, 79, 83, 97, 103, 256, 339], "tedeiou": 8, "priorit": [8, 35, 41, 63, 244, 245, 247, 248, 254, 259, 261, 263, 332, 333], "amount": [8, 227, 333, 341], "contigu": [8, 55, 56, 79, 83, 97, 103, 163, 334, 338, 339, 341, 343, 344], "costli": [8, 339], "concaten": [8, 21, 30, 31, 55, 113, 114, 131, 150, 186, 190, 234, 332, 333, 338, 339, 341, 344], "constitut": [8, 333, 338, 339], "plain": 8, "profil": 8, "fulli": [8, 32, 79, 83, 97, 103, 183, 187, 333, 339, 341], "frequent": [8, 341], "program": [8, 254, 344], "functorch": [8, 10], "incl": 8, "suit": [8, 78, 334, 344], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "expand": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 68, 69, 231, 234, 256, 338, 339, 343], "new_shap": 8, "permut": [8, 67, 133, 343, 344], "idea": [9, 259, 329, 335, 338], "introductori": 9, "intro": [9, 334, 335], "dai": [9, 343], "2022": [9, 10, 339, 343], "spin": 9, "deep": [9, 113, 172, 173, 174, 175, 178, 227, 241, 253, 261, 262, 332], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": 9, "summari": [9, 131, 157, 332, 333, 334, 335], "reddit": 9, "reagent": 9, "orient": [9, 57, 344], "baselines3": 9, "tf": 9, "bandit": [9, 96], "tensorflow": [9, 193, 194], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": 9, "salina": 9, "sequenti": [9, 32, 79, 83, 97, 103, 112, 129, 233, 234, 258, 327, 334, 335, 338, 339, 340, 344], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 343], "grade": 9, "factori": [9, 43], "throughput": [9, 332], "cherri": 9, "jaxrl": 9, "space": [9, 33, 44, 79, 83, 97, 103, 116, 120, 163, 176, 179, 195, 201, 205, 216, 220, 222, 223, 225, 227, 228, 229, 230, 231, 232, 234, 235, 236, 245, 247, 248, 263, 269, 327, 333, 334, 335, 338, 339, 343, 344], "mbrl": [9, 93, 327], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 339], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 334, 335, 338], "notebook": [10, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344], "24": [10, 56, 69, 333, 335, 338, 339], "11": [10, 27, 33, 45, 60, 61, 69, 73, 80, 149, 168, 192, 331, 332, 333, 334, 338, 339, 340, 341, 342], "12": [10, 56, 60, 61, 69, 73, 101, 102, 332, 333, 334, 338, 339, 341], "pip": [10, 54, 338, 343, 344], "pip3": [10, 334, 335, 338], "extra": [10, 32, 79, 83, 97, 103, 113, 157, 166, 327, 334, 335, 341], "url": 10, "org": [10, 35, 57, 63, 113, 135, 153, 171, 172, 173, 174, 175, 176, 179, 180, 181, 186, 192, 193, 194, 198, 200, 201, 203, 204, 206, 207, 213, 223, 227, 241, 242, 245, 246, 247, 249, 250, 251, 252, 253, 254, 257, 258, 260, 261, 262, 271, 276, 284, 340], "whl": 10, "u": [10, 54, 182, 183, 186, 187, 339], "There": [10, 184, 188, 327, 329, 334, 335, 338, 339, 341, 344], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 256], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 60, 63, 77, 79, 81, 83, 96, 97, 98, 99, 100, 103, 105, 106, 107, 110, 113, 120, 122, 128, 129, 131, 135, 136, 138, 145, 146, 151, 153, 155, 156, 157, 160, 164, 166, 167, 168, 169, 170, 172, 173, 174, 175, 178, 179, 181, 184, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 204, 205, 213, 216, 222, 223, 228, 229, 230, 231, 232, 235, 236, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 266, 269, 270, 271, 272, 273, 274, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 311, 316, 317, 323, 333, 334], "callabl": [11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 79, 80, 83, 93, 97, 103, 109, 122, 240, 312, 313, 321, 322, 323, 333], "from_vers": 11, "to_vers": 11, "intersect": [11, 145], "vs": [11, 184, 188, 189, 343], "longer": [11, 333, 338, 341], "self": [11, 26, 28, 32, 34, 36, 39, 79, 83, 93, 97, 103, 110, 117, 118, 121, 135, 147, 150, 151, 153, 155, 168, 179, 192, 204, 213, 220, 224, 225, 228, 231, 236, 241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 269, 271, 272, 273, 274, 275, 329, 332, 333, 339, 343], "x": [11, 23, 26, 32, 38, 40, 55, 69, 129, 149, 170, 179, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 195, 196, 214, 222, 228, 229, 238, 240, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 307, 332, 334, 339, 341, 343], "23": [11, 56, 69, 333, 334, 335, 338, 339], "lambda": [11, 13, 14, 16, 17, 21, 22, 38, 79, 80, 83, 97, 103, 109, 129, 147, 214, 222, 229, 250, 252, 271, 274, 282, 283, 287, 288, 319, 328, 332, 333, 338, 341, 343, 344], "import_modul": 11, "27": [11, 331, 332, 333, 335, 339, 342], "get_class_that_defined_method": 11, "f": [11, 83, 187, 240, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 332, 333, 334, 335, 338, 339, 341, 344], "otherwis": [11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 43, 44, 45, 46, 47, 52, 58, 68, 69, 79, 83, 92, 97, 98, 99, 103, 105, 113, 120, 131, 146, 147, 148, 151, 157, 182, 185, 186, 195, 196, 211, 212, 222, 229, 235, 242, 251, 256, 257, 261, 303, 304, 329, 332, 333, 334, 335, 339, 344], "classmethod": [11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 153, 171, 203], "module_set": 11, "setters_dict": 11, "dict": [11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 34, 36, 39, 56, 79, 80, 83, 97, 98, 99, 103, 105, 106, 129, 147, 151, 156, 157, 169, 170, 171, 172, 173, 174, 175, 176, 181, 189, 190, 203, 228, 232, 261, 294, 295, 303, 312, 313, 316, 321, 322, 323, 332, 333, 334, 344], "setter": 11, "setter_dict": 11, "copi": [11, 18, 19, 20, 21, 32, 34, 36, 39, 40, 45, 55, 79, 83, 97, 103, 137, 146, 151, 166, 184, 188, 221, 256, 261, 328, 332, 333, 335, 341], "kwd": 12, "policy_weight": [12, 13, 14, 16, 17, 19, 20], "tensordictbas": [12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 32, 41, 42, 52, 53, 54, 55, 56, 57, 79, 81, 83, 97, 103, 110, 112, 113, 114, 117, 118, 119, 122, 123, 124, 125, 128, 129, 134, 136, 137, 139, 142, 143, 145, 146, 147, 148, 150, 156, 157, 166, 167, 168, 184, 188, 191, 192, 220, 221, 223, 224, 225, 227, 230, 231, 232, 241, 242, 243, 244, 245, 246, 247, 248, 249, 254, 255, 256, 257, 258, 259, 260, 261, 263, 269, 270, 271, 272, 273, 274, 275, 307, 332, 339], "udpdat": [12, 13, 14, 16, 17, 19, 20], "create_env_fn": [13, 14, 16, 17, 18, 19, 20, 21, 80, 97, 103, 332, 343], "int": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 77, 79, 83, 93, 97, 98, 99, 103, 105, 112, 113, 114, 115, 120, 125, 126, 130, 131, 133, 135, 136, 138, 144, 145, 148, 151, 152, 153, 155, 159, 163, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 213, 214, 220, 221, 222, 223, 224, 225, 227, 228, 230, 231, 232, 241, 242, 243, 248, 250, 251, 255, 256, 257, 258, 259, 263, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 298, 299, 300, 303, 304, 307, 309, 316, 317, 321, 322, 323, 339], "200": [13, 14, 16, 17, 21, 32, 79, 83, 97, 103, 104, 105, 139, 172, 173, 180, 206, 207, 332, 335, 339], "total_fram": [13, 14, 16, 17, 18, 19, 20, 21, 113, 139, 307, 310, 319, 329, 332, 333, 334, 335, 338, 341, 343], "device_typ": [13, 16, 27, 30, 33, 169, 170, 171, 172, 173, 174, 175, 181, 190, 197, 198, 203], "create_env_kwarg": [13, 14, 16, 17, 80, 94, 97, 103, 332], "postproc": [13, 14, 16, 17, 18, 19, 20, 21, 139, 333, 341], "explorationtyp": [13, 14, 16, 20, 21, 256, 303, 332, 333, 334, 335, 343], "interactiontyp": [13, 16, 18, 19, 20, 21, 161, 165, 228, 232, 303], "exploration_mod": [13, 16, 18, 19, 20, 325, 327], "preemptive_threshold": [13, 14], "float": [13, 14, 25, 27, 32, 33, 35, 40, 41, 46, 55, 63, 79, 83, 97, 103, 113, 117, 118, 121, 129, 131, 135, 139, 140, 141, 146, 147, 149, 150, 151, 153, 155, 157, 177, 180, 182, 185, 186, 190, 193, 194, 197, 198, 206, 207, 210, 212, 220, 231, 235, 238, 239, 240, 241, 242, 247, 248, 251, 252, 253, 254, 257, 259, 261, 262, 263, 270, 276, 277, 278, 279, 280, 281, 282, 283, 284, 305, 332, 333, 341, 344], "num_thread": [13, 14, 34, 36, 39, 97, 103], "num_sub_thread": [13, 14, 97, 103], "datacollector": [13, 14, 16, 17, 228, 232, 258, 334], "recept": 13, "safe": [13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 216, 220, 222, 223, 227, 228, 229, 230, 231, 232, 234, 327, 343], "stepcount": [13, 79, 83, 97, 103, 150, 332, 333, 334, 335, 338, 343], "env_mak": [13, 14, 16, 21, 319, 344], "50": [13, 14, 16, 21, 37, 40, 57, 68, 69, 332, 333, 334, 335, 338, 339, 340], "2000": [13, 14, 16, 45, 86, 334, 341], "enumer": [13, 14, 16, 21, 32, 38, 42, 69, 79, 83, 97, 103, 264, 328, 332, 333, 334, 335, 341, 343], "int64": [13, 14, 16, 24, 27, 30, 34, 36, 37, 39, 40, 41, 43, 45, 53, 55, 56, 57, 58, 79, 83, 92, 96, 97, 98, 99, 101, 102, 103, 122, 133, 139, 145, 179, 205, 222, 223, 227, 228, 229, 230, 327, 334, 335, 339, 341, 343, 344], "step_count": [13, 14, 16, 79, 83, 97, 103, 145, 334, 335, 343], "shutdown": [13, 14, 16, 17, 21, 332, 343], "del": [13, 14, 16, 332, 334, 337, 343, 344], "randompolici": [13, 14, 16, 18, 19, 20, 22, 113, 139, 325, 341], "lifespan": [13, 14, 16, 18, 19, 20, 333], "divis": [13, 14, 16, 18, 19, 20, 55, 68, 69, 338], "endless": [13, 14, 16, 18, 19, 20], "dictionari": [13, 14, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 68, 69, 79, 83, 97, 103, 105, 147, 151, 228, 232, 261, 303, 321, 322, 323, 329, 333, 334, 339, 344], "span": [13, 14, 16, 17, 18, 19, 20, 21, 55], "n_step": [13, 14, 16, 17, 18, 19, 20, 21, 32, 333, 334, 338], "ignor": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 43, 44, 46, 47, 79, 83, 97, 103, 120, 123, 143, 149, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 193, 194, 195, 196, 199, 200, 201, 203, 206, 207, 209, 214, 220, 221, 223, 224, 225, 227, 230, 235, 238, 271, 341], "mainli": [13, 14, 16, 17, 18, 19, 20, 21, 40, 327, 338, 339], "round": [13, 14, 16], "closest": [13, 14, 16], "post": [13, 14, 16, 18, 19, 20, 21, 32, 53, 79, 83, 97, 103], "multistep": [13, 14, 16, 18, 19, 20, 21, 325, 333], "return_same_td": [13, 14, 16], "cautious": [13, 14, 16, 258], "whole": [13, 14, 16, 26, 28, 32, 45, 79, 83, 97, 103, 151, 228, 261, 298, 332, 334], "boolm": [13, 14], "update_policy_weight_": [13, 14], "sync": [13, 14, 18, 19, 20, 21, 309, 319, 329, 332, 343], "async": [13, 14, 18, 19, 20, 21, 156, 332, 343], "ratio": [13, 14, 40, 332, 334], "finish": [13, 14, 21, 83, 139, 344], "rest": [13, 14, 327, 334, 335, 339, 343], "earli": [13, 14, 83, 145, 343], "thread": [13, 14, 34, 36, 39, 94, 97, 103], "equal": [13, 14, 68, 69, 94, 97, 103, 130, 131, 169, 170, 178, 182, 184, 186, 188, 190, 196, 262, 266, 298, 321, 322, 332, 334, 340], "plu": [13, 14, 40, 97, 103, 339], "safeti": [13, 14, 93, 97, 103], "harm": [13, 14, 97, 103], "ordereddict": [13, 14, 16, 17, 21, 32, 79, 83, 97, 103, 151, 157, 261, 333], "form": [13, 14, 17, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 79, 83, 97, 103, 157, 182, 184, 186, 188, 240, 241, 243, 255, 258, 307, 327, 338], "worker0": [13, 14, 17], "state_dict0": [13, 14, 17], "worker1": [13, 14, 17], "state_dict1": [13, 14, 17], "reset_idx": [13, 14, 17], "static_se": [13, 14, 16, 17, 21, 79, 83, 97, 103, 151], "integ": [13, 14, 16, 17, 23, 30, 31, 32, 33, 40, 47, 70, 79, 83, 97, 103, 122, 126, 131, 145, 169, 170, 190, 195, 196, 254, 261, 341], "increment": [13, 14, 16, 17, 79, 83, 97, 103, 255], "env_fn": [13, 14, 16, 17, 80, 321, 322], "env_fn_parallel": [13, 14, 16, 17], "100": [13, 14, 16, 17, 32, 35, 38, 41, 42, 43, 52, 53, 54, 55, 56, 57, 60, 61, 79, 83, 97, 103, 116, 122, 131, 139, 145, 195, 223, 299, 319, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "300": [13, 14, 16, 17, 68, 69, 174, 175, 339], "out_se": [13, 14, 16, 17, 344], "shut": [13, 14, 16, 17], "irrevers": [13, 14, 17], "kwarg": [14, 16, 17, 21, 25, 26, 32, 52, 60, 61, 71, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 110, 117, 135, 144, 147, 150, 151, 152, 154, 155, 158, 168, 169, 170, 172, 173, 174, 175, 178, 181, 184, 185, 188, 190, 191, 192, 195, 196, 202, 210, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 263, 265, 269, 270, 271, 272, 273, 274, 275, 290, 294, 295, 297, 300, 307, 312, 313, 316, 320, 321, 322, 328, 334, 338], "tupl": [15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 79, 83, 97, 103, 110, 120, 122, 128, 129, 131, 136, 166, 172, 178, 179, 184, 187, 188, 189, 190, 196, 199, 203, 204, 205, 222, 223, 229, 230, 235, 241, 242, 244, 248, 250, 254, 256, 258, 259, 260, 261, 263, 271, 272, 273, 274, 290, 301, 303, 305, 314, 315, 332], "rand": [15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 76, 89, 93, 110, 118, 121, 168, 192, 228, 241, 242, 244, 245, 247, 248, 254, 258, 259, 261, 263, 339, 343, 344], "describ": [15, 44, 114, 150, 210, 211, 245, 293, 328, 332, 334, 338, 339, 344], "tensor_spec": [15, 110, 167, 248, 258, 260], "boundedtensorspec": [15, 22, 26, 79, 83, 97, 103, 224, 225, 227, 228, 235, 241, 242, 244, 254, 258, 259, 261, 263, 325, 334, 338, 339, 343, 344], "cube": 15, "envcreat": [16, 22, 319, 320, 323, 325, 332, 333, 343, 344], "interruptor": 16, "_interruptor": 16, "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "chunk": 16, "policy_state_dict": 16, "env_state_dict": 16, "close": [16, 17, 83, 94, 129, 241, 243, 255, 258, 332, 337, 339, 343], "pin_memori": [17, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 134, 332, 343], "regular": [17, 34, 36, 39, 79, 83, 97, 103, 151, 205, 223, 229, 230, 231, 232, 249, 309, 325, 329, 332, 333, 341, 344], "mere": 17, "greater": [17, 68, 69, 184, 188, 332, 333, 343], "sent": [17, 60, 61, 73, 157], "server": 17, "postprocessor": 17, "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 307], "string": [18, 19, 20, 32, 37, 45, 58, 79, 83, 97, 103, 109, 135, 145, 155, 184, 188, 222, 228, 229, 240, 289, 306, 316, 328, 332, 334, 335], "respect": [18, 19, 20, 32, 79, 83, 97, 103, 111, 117, 118, 121, 135, 136, 147, 150, 151, 153, 155, 182, 186, 195, 207, 231, 236, 302, 334, 335, 338], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 326, 333, 334, 337, 341], "serv": [18, 20, 21, 85, 341, 344], "fashion": [18, 20, 21, 34, 36, 39, 69], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 20, 21, 53, 55, 56, 57, 79, 83, 97, 103, 125], "seen": [18, 20, 21, 328, 332, 333, 335, 338, 341], "turn": [18, 20, 21, 34, 36, 39, 127, 152, 156, 222, 303, 328, 332, 333, 335, 339, 340], "submitit_delai": [18, 22], "former": [18, 19, 20, 35, 38, 41, 42, 52, 79, 83, 97, 103, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 195, 196, 199, 200, 201, 203, 206, 207, 209, 214, 220, 221, 223, 224, 225, 227, 230, 235, 238, 332], "whilst": [18, 19, 20], "latter": [18, 19, 20, 32, 52, 79, 83, 97, 103, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 195, 196, 199, 200, 201, 203, 206, 207, 209, 214, 220, 221, 223, 224, 225, 227, 230, 235, 238, 258, 321, 322], "homonym": [18, 19, 20, 339], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 332], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 33, 228, 232], "tensorpiperpcbackendopt": 20, "_td": [21, 80], "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 321, 322, 332, 333], "coordin": 21, "init": [21, 32, 79, 83, 97, 103, 332, 333, 334], "autodetect": 21, "similarli": [21, 32, 67, 79, 83, 97, 103, 195, 233, 234, 254, 344], "num_cpu": 21, "num_gpu": 21, "1024": [21, 176, 333, 341], "equat": [21, 55, 83, 227, 240, 243, 262, 334, 339], "exce": [21, 334, 341], "indefinit": [21, 51], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 307, 332, 334, 335], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "32": [22, 26, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 69, 101, 102, 104, 105, 169, 170, 171, 172, 173, 176, 181, 190, 195, 196, 200, 201, 203, 204, 213, 269, 331, 332, 333, 334, 335, 339, 340, 341, 342, 343, 344], "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": 22, "jump": 22, "host": [22, 32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231], "wherea": [22, 55, 120, 256, 329], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 171, 176, 203, 221], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "rollout_tensordict": 23, "durat": [23, 338], "meta": [23, 44, 52, 81, 329, 334, 338, 341], "aren": [23, 146, 335], "assert_is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "belong": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 55, 156, 157, 327, 332, 338], "encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 120, 201, 202, 206, 240, 327, 333, 334, 335, 339, 341], "ndarrai": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 83, 227, 235], "ignore_devic": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "np": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 83, 235, 339], "cast": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 58, 79, 83, 97, 103, 117, 118, 121, 129, 135, 147, 150, 151, 153, 155, 157, 231, 316, 344], "least": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 116, 344], "complient": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "singleton": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 169, 170, 190, 208, 209], "implements_for_spec": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "torch_funct": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "tensor_to_index": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 344], "project": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 120, 184, 186, 216, 220, 222, 223, 227, 228, 229, 230, 231, 232, 327, 343, 344], "uniform": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 41, 44, 46, 47, 63], "unbound": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 147, 163, 339, 341], "squeez": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 113, 144, 146, 169, 170, 208, 209, 332, 339, 341], "dim": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 68, 113, 114, 133, 147, 152, 157, 187, 189, 209, 214, 323, 333, 334, 339, 341], "to_numpi": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "transformed_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 150, 151, 199, 210, 323], "check_spec_encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "to_one_hot": [24, 27, 30], "hot": [24, 27, 30, 31, 33, 98, 99, 105, 110, 120, 179, 202, 205, 222, 223, 229, 230, 241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 269, 335], "to_one_hot_spec": [24, 27, 30], "onehotdiscretetensorspec": [24, 27, 179, 205, 222, 229, 245, 247, 248, 269, 325, 327], "convert": [24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 79, 83, 97, 103, 117, 118, 121, 135, 147, 150, 151, 153, 155, 157, 231, 240, 256, 332, 333, 334, 339, 341], "type_check": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "fill": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 147, 156, 188, 335, 339, 340], "upper": [25, 130], "unnam": 26, "pixels_spec": 26, "observation_vector_spec": 26, "33": [26, 32, 79, 83, 97, 103, 169, 170, 190, 332, 333, 339, 344], "composite_spec": 26, "observation_vector": [26, 114, 316, 332], "randn": [26, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 60, 61, 68, 69, 73, 112, 131, 163, 171, 176, 179, 182, 183, 186, 187, 189, 193, 194, 195, 199, 202, 203, 205, 216, 217, 218, 219, 221, 222, 228, 229, 231, 234, 235, 236, 241, 242, 244, 245, 247, 248, 254, 258, 259, 260, 261, 263, 271, 272, 273, 274, 306, 327, 343, 344], "td_project": 26, "is_empti": [26, 28, 339], "include_nest": [26, 28], "leaves_onli": [26, 28], "itemsview": 26, "immedi": [26, 28, 32, 79, 83, 97, 103, 270, 338], "children": [26, 28, 32, 79, 83, 97, 103], "keysview": [26, 28], "reflect": [26, 28, 98, 99, 156, 166, 256, 310, 333, 334, 335, 338], "lock_": [26, 28], "recurs": [26, 28, 32, 48, 49, 79, 83, 97, 103, 256], "succeed": [26, 28, 334, 338, 339], "selected_kei": [26, 28, 143, 332], "unlock_": [26, 28], "unlock": [26, 28, 34, 36, 39], "valuesview": 26, "onehottensorspec": 27, "action_valu": [27, 33, 178, 179, 205, 222, 223, 229, 230, 248, 256, 269, 327, 335], "arang": [27, 33, 179, 194, 222, 298, 327, 341], "argmax": [27, 179, 205, 223, 230], "chosen_action_valu": [27, 33, 204, 205, 213, 229, 230, 269, 327, 335], "outcom": [27, 33, 177, 210], "lazi": [28, 29, 49, 50, 79, 83, 97, 103, 105, 135, 153, 169, 197, 233, 234, 332, 333, 337, 341, 344], "represent": [28, 29, 32, 79, 83, 97, 103, 135, 153, 155, 332, 339, 340, 344], "drawn": [28, 29, 147, 224, 228, 232, 334, 338], "lazystackedtensordict": [28, 79, 83, 93, 97, 103, 337, 343], "heterogen": [28, 29, 92, 98, 99, 159, 195, 196, 332, 333], "semant": [28, 29, 327], "thrown": [29, 32, 79, 83, 97, 103, 341], "nvec": [30, 31], "cardin": [30, 31, 179, 205, 222, 223, 230, 334], "ax": [30, 197, 198], "m": [30, 32, 79, 83, 97, 103, 120, 232, 327, 333, 339], "ts": [30, 31], "multionehotdiscretetensorspec": [30, 245, 248, 269, 325], "use_regist": [31, 33], "to_categor": [31, 33], "to_categorical_spec": [31, 33], "multidiscretetensorspec": [31, 325], "gamma": [32, 139, 192, 241, 242, 244, 245, 247, 248, 249, 250, 252, 254, 256, 258, 259, 260, 261, 263, 264, 265, 269, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 319, 328, 332, 333, 334, 338, 343], "sutton": [32, 328, 338], "1988": 32, "tempor": [32, 184, 188, 192, 272, 273, 278, 279], "44": [32, 332, 333, 335, 339], "discount": [32, 55, 80, 139, 242, 247, 249, 250, 252, 270, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 328, 333, 334, 338], "ahead": [32, 344], "add_modul": [32, 79, 83, 97, 103], "child": [32, 79, 83, 97, 103], "fn": [32, 37, 79, 83, 97, 103, 199, 321, 322], "init_weight": [32, 79, 83, 97, 103], "fill_": [32, 79, 83, 97, 103, 333, 335, 344], "net": [32, 79, 83, 97, 103, 189, 196, 241, 242, 248, 254, 258, 259, 260, 261, 316, 319, 333, 339, 340, 343], "in_featur": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 169, 170, 172, 173, 174, 175, 189, 190, 196, 197, 198, 217, 231, 245, 247, 343], "out_featur": [32, 79, 83, 93, 97, 103, 117, 135, 147, 150, 151, 153, 155, 168, 169, 170, 172, 173, 174, 175, 180, 181, 184, 188, 189, 190, 192, 195, 196, 197, 198, 217, 222, 231, 245, 247, 327, 332, 335, 343], "bia": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 169, 170, 180, 182, 183, 184, 186, 187, 188, 190, 196, 197, 198, 199, 224, 225, 227, 231, 238, 239, 240, 256, 261, 328, 332, 333, 334, 335, 338, 343], "requires_grad": [32, 79, 83, 97, 103, 129], "bfloat16": [32, 79, 83, 97, 103], "datatyp": [32, 79, 83, 97, 103, 341], "member": [32, 79, 83, 97, 103, 256], "xdoctest": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231, 256, 261], "skip": [32, 79, 83, 97, 103, 126, 151, 159, 228, 232, 256, 261, 271, 272, 273, 274, 289, 290, 300, 303, 332, 333, 334, 339], "buf": [32, 79, 83, 97, 103], "20l": [32, 79, 83, 97, 103, 256], "1l": [32, 79, 83, 97, 103, 256], "5l": [32, 79, 83, 97, 103, 256], "__call__": [32, 37, 79, 83, 97, 103, 232, 329], "doubl": [32, 46, 79, 83, 97, 103, 117, 118, 119, 121, 135, 147, 150, 151, 153, 155, 231, 245, 249, 253, 259, 262, 269, 332, 333, 334, 335, 344], "eval": [32, 79, 83, 97, 103, 151, 157, 332, 333, 334], "evalu": [32, 79, 83, 97, 103, 151, 177, 193, 194, 202, 212, 259, 312, 313, 333, 334], "dropout": [32, 79, 83, 97, 103, 151, 182, 184, 186, 188, 190, 335], "batchnorm": [32, 79, 83, 97, 103, 151], "disabl": [32, 79, 83, 97, 103, 151, 185, 212, 332], "comparison": [32, 79, 83, 97, 103, 151, 256, 332, 333], "similar": [32, 55, 79, 83, 97, 98, 99, 103, 117, 135, 147, 150, 151, 153, 154, 155, 157, 217, 219, 228, 231, 232, 328, 332, 333, 334, 335, 339, 344], "confus": [32, 79, 83, 97, 103, 151], "extra_repr": [32, 79, 83, 97, 103], "shift": [32, 238, 271, 272, 273, 274, 334], "nontermin": 32, "original_reward": 32, "newli": [32, 79, 83, 97, 103], "OR": 32, "get_buff": [32, 79, 83, 97, 103], "throw": [32, 34, 36, 39, 79, 83, 97, 103, 344], "docstr": [32, 79, 83, 97, 103], "get_submodul": [32, 79, 83, 97, 103], "explan": [32, 79, 83, 97, 103], "qualifi": [32, 79, 83, 97, 103], "referenc": [32, 79, 83, 97, 103], "attributeerror": [32, 79, 83, 97, 103], "invalid": [32, 79, 83, 97, 103, 106, 193, 194], "resolv": [32, 79, 83, 97, 103], "someth": [32, 79, 83, 92, 97, 103, 326, 333, 334, 339, 344], "get_extra_st": [32, 79, 83, 97, 103, 157], "set_extra_st": [32, 79, 83, 97, 103, 157], "picklabl": [32, 79, 83, 97, 103, 157], "pickl": [32, 79, 83, 97, 103, 157], "get_paramet": [32, 79, 83, 97, 103], "sai": [32, 79, 83, 97, 103, 195, 340, 344], "net_b": [32, 79, 83, 97, 103], "net_c": [32, 79, 83, 97, 103], "conv": [32, 79, 83, 97, 103, 169, 170, 333], "conv2d": [32, 79, 83, 97, 103, 170, 195, 343], "kernel_s": [32, 79, 83, 97, 103, 169, 170, 172, 173, 195, 200, 333, 343], "stride": [32, 79, 83, 97, 103, 169, 170, 172, 173, 181, 195, 333, 343], "diagram": [32, 79, 83, 97, 103], "degre": [32, 79, 83, 97, 103], "named_modul": [32, 79, 83, 97, 103], "o": [32, 79, 83, 97, 103, 187], "transit": [32, 52, 55, 69, 79, 83, 97, 103, 237, 332, 335, 339, 341], "half": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231, 332], "ipu": [32, 79, 83, 97, 103], "strict": [32, 34, 36, 39, 79, 83, 97, 103, 151, 261], "descend": [32, 79, 83, 97, 103, 151, 261], "persist": [32, 79, 83, 97, 103, 151, 166, 261], "enforc": [32, 67, 79, 83, 97, 103, 151, 233, 261, 339], "preserv": [32, 79, 83, 97, 103, 151, 261], "missing_kei": [32, 79, 83, 97, 103, 151, 261], "unexpected_kei": [32, 79, 83, 97, 103, 151, 261], "namedtupl": [32, 79, 83, 97, 103, 151, 261], "duplic": [32, 67, 79, 83, 97, 103, 245, 249, 256, 269], "l": [32, 79, 83, 97, 103, 182, 186, 270, 334, 339], "idx": [32, 79, 83, 97, 103], "named_buff": [32, 79, 83, 97, 103], "remove_dupl": [32, 79, 83, 97, 103, 256], "prepend": [32, 79, 83, 97, 103, 256], "running_var": [32, 79, 83, 97, 103], "named_children": [32, 79, 83, 97, 103], "conv4": [32, 79, 83, 97, 103], "conv5": [32, 79, 83, 97, 103], "memo": [32, 79, 83, 97, 103], "named_paramet": [32, 79, 83, 97, 103, 129, 256], "register_backward_hook": [32, 79, 83, 97, 103], "removablehandl": [32, 79, 83, 97, 103], "deprec": [32, 79, 83, 97, 103, 151, 160, 164, 178, 225, 241, 243, 245, 248, 249, 254, 255, 258, 259, 260, 261, 269, 271, 272, 273, 274, 279, 344], "favor": [32, 79, 83, 97, 103, 334], "register_full_backward_hook": [32, 79, 83, 97, 103], "register_buff": [32, 79, 83, 97, 103], "running_mean": [32, 79, 83, 97, 103], "alongsid": [32, 79, 83, 97, 103, 338], "num_featur": [32, 79, 83, 97, 103], "register_forward_hook": [32, 79, 83, 97, 103, 179, 205], "with_kwarg": [32, 79, 83, 97, 103], "always_cal": [32, 79, 83, 97, 103], "posit": [32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 79, 83, 97, 103, 125, 126, 144, 145, 148, 151, 152, 199, 261, 328, 334, 338, 339, 341], "signatur": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231, 328, 332, 339], "register_module_forward_hook": [32, 79, 83, 97, 103], "regardless": [32, 79, 83, 97, 103, 243, 255, 258], "register_forward_pre_hook": [32, 79, 83, 97, 103], "invok": [32, 79, 83, 97, 103], "And": [32, 79, 83, 97, 103], "forward_pr": [32, 79, 83, 97, 103], "register_module_forward_pre_hook": [32, 79, 83, 97, 103], "grad_input": [32, 79, 83, 97, 103], "grad_output": [32, 79, 83, 97, 103], "subsequ": [32, 79, 83, 97, 103, 335], "technic": [32, 79, 83, 97, 103, 333, 335], "caller": [32, 79, 83, 97, 103], "register_module_full_backward_hook": [32, 79, 83, 97, 103], "register_full_backward_pre_hook": [32, 79, 83, 97, 103], "backward_pr": [32, 79, 83, 97, 103], "register_module_full_backward_pre_hook": [32, 79, 83, 97, 103], "register_load_state_dict_post_hook": [32, 79, 83, 97, 103], "incompatible_kei": [32, 79, 83, 97, 103], "clear": [32, 79, 83, 87, 97, 103, 299], "register_modul": [32, 79, 83, 97, 103, 329], "alia": [32, 79, 83, 97, 103], "register_paramet": [32, 79, 83, 97, 103], "register_state_dict_pre_hook": [32, 79, 83, 97, 103], "keep_var": [32, 34, 36, 39, 79, 83, 97, 103, 151, 261], "requires_grad_": [32, 79, 83, 97, 103], "autograd": [32, 79, 83, 97, 103, 151, 261], "freez": [32, 79, 83, 97, 103], "finetun": [32, 79, 83, 97, 103], "gan": [32, 79, 83, 97, 103], "share_memori": [32, 79, 80, 83, 97, 103, 332], "share_memory_": [32, 79, 83, 97, 103, 343], "destin": [32, 34, 36, 39, 79, 83, 97, 103, 112, 118, 119, 121, 151, 153, 157, 166, 261, 290], "averag": [32, 79, 83, 97, 103, 151, 157, 227, 250, 251, 261, 305, 332, 334], "shallow": [32, 79, 83, 97, 103, 151, 261, 335], "pleas": [32, 53, 79, 83, 97, 98, 99, 103, 113, 148, 151, 261, 326], "detach": [32, 79, 83, 97, 103, 151, 256, 261, 271, 272, 273, 274, 332], "non_block": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231, 335], "memory_format": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231], "channels_last": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231], "complex": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231, 332, 333], "integr": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 175, 184, 188, 192, 231, 327, 338, 339, 340], "unchang": [32, 79, 83, 97, 103, 117, 120, 135, 147, 150, 151, 153, 155, 224, 231, 304, 332, 341], "tri": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231], "pin": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231], "4d": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231], "ignore_w": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231], "1913": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231], "3420": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231], "5113": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231], "2325": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231], "torch_doctest_cuda1": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231], "gpu1": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231], "1914": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231], "5112": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231, 339], "2324": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231], "float16": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 183, 187, 231], "cdoubl": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231], "3741": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231], "j": [32, 35, 63, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231, 329], "2382": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231], "5593": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231, 339], "4443": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231], "complex128": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231], "6122": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231], "1150": [32, 79, 83, 97, 103, 117, 135, 147, 150, 151, 153, 155, 231], "to_empti": [32, 79, 83, 97, 103], "dst_type": [32, 79, 83, 97, 103], "xpu": [32, 79, 83, 97, 103], "set_to_non": [32, 79, 83, 97, 103], "unidimension": 33, "keepdim": 33, "user_regist": 33, "priori": 33, "definit": [33, 70, 195], "uniqu": [33, 68, 69, 113, 122, 146, 147, 148, 341], "discretebox": [33, 79, 83, 97, 103, 334, 338, 344], "chosen_data": [34, 58], "rewarddata": [34, 58, 325], "rejected_data": [34, 58], "from_dataset": [34, 36, 58], "dataset_nam": [34, 36, 40, 45, 58, 96], "max_length": [34, 36, 37, 43, 45, 58], "550": [34, 36, 40, 45, 58, 68, 69, 339], "root_dir": [34, 36, 45, 58], "from_disk": [34, 36, 45, 58], "num_work": [34, 36, 45, 58, 94, 97, 103, 332, 333], "carperai": [34, 36, 40, 45], "openai_summarize_comparison": [34, 36, 45], "sequen": [34, 36], "cach": [34, 36, 45, 52, 53, 55, 56, 57, 58, 68, 79, 83, 97, 103, 118, 121, 135, 151, 155, 299, 340], "load_from_disk": [34, 36, 45, 58], "load_dataset": [34, 36, 45, 58], "attention_mask": [34, 36, 37, 39, 40, 43, 45, 58], "memorymappedtensor": [34, 36, 45, 60, 340], "92534": 34, "input_id": [34, 36, 37, 39, 40, 43, 45, 58], "end_scor": [34, 39, 40, 58], "sub_data": [34, 36], "from_dict": [34, 36, 39, 45], "batch_dim": [34, 36, 39, 45, 323], "determin": [34, 35, 36, 39, 41, 52, 63, 79, 83, 97, 103, 135, 155, 195, 227, 333, 338], "input_dict": [34, 36, 39], "exclusinv": [34, 36, 39], "__maximum__": [34, 36, 39], "toler": [34, 36, 39, 177, 210], "sie": [34, 36, 39], "input_td": [34, 36, 39], "from_tensordict": [34, 36, 39], "non_tensordict": [34, 36, 39], "_no_default_": [34, 36, 39], "getattr": [34, 36, 39], "tensorclass": [34, 36, 39, 58, 60, 61, 73], "from_flatten": [34, 36, 39], "attemptedli": [34, 36, 39], "memmap": [34, 36, 39, 60, 97, 103, 157, 304, 341], "copy_exist": [34, 36, 39], "return_earli": [34, 36, 39], "mimic": [34, 36, 39, 79, 83, 97, 103], "renam": [34, 36, 39, 137, 139, 166, 332], "cross": [34, 36, 39, 168], "anymor": [34, 36, 39, 151, 231], "tensordictfutur": [34, 36, 39], "deepli": [34, 36, 39], "insid": [34, 36, 39, 344], "memmap_": [34, 36, 39, 157], "memmap_lik": [34, 36, 39], "contentless": [34, 36, 39], "1_000_000": [34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 68, 332, 335], "alloc": [34, 36, 39, 61, 193, 194, 332], "setattr": [34, 36, 39], "tent": [34, 36, 39, 45], "to_tensordict": [34, 36, 39, 335], "unbind": [34, 36, 39, 184, 188], "alpha": [35, 41, 63, 169, 170, 195, 242, 248, 257, 259, 261, 332, 341, 343], "ep": [35, 41, 63, 157, 227, 243, 262, 305, 332, 333, 335], "1e": [35, 41, 63, 157, 177, 180, 199, 210, 332, 333, 334, 338], "08": [35, 41, 63, 332, 333, 334, 339], "collate_fn": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 341, 343], "prefetch": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 332, 333, 335, 341], "schaul": [35, 63], "quan": [35, 63], "antonogl": [35, 63], "silver": [35, 63], "2015": [35, 63], "arxiv": [35, 57, 63, 113, 135, 153, 171, 172, 173, 174, 175, 176, 179, 180, 181, 186, 192, 198, 200, 201, 203, 204, 206, 207, 213, 223, 227, 241, 242, 245, 246, 247, 249, 250, 251, 252, 253, 254, 257, 258, 261, 262, 271, 276, 284, 340], "ab": [35, 57, 63, 112, 135, 153, 157, 171, 176, 180, 181, 186, 192, 198, 200, 201, 203, 204, 206, 207, 213, 241, 242, 245, 246, 247, 250, 251, 252, 253, 254, 257, 258, 261, 340], "1511": [35, 63, 181], "05952": [35, 63], "expon": [35, 41, 63], "\u03b1": [35, 41, 63], "delta": [35, 41, 63, 182, 186, 210, 228, 232, 325, 328], "null": [35, 41, 63, 111], "max_siz": [35, 38, 41, 42, 60, 61, 62, 70, 73], "1_000": [35, 38, 41, 42, 341], "merg": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 339], "mini": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 338], "decid": [35, 38, 41, 42, 343], "meth": [35, 38, 41, 42, 256, 339], "incompat": [35, 38, 41, 42, 341], "drop_last": [35, 38, 41, 42, 67, 69], "return_info": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 341], "tensordictprioritizedreplaybuff": [35, 325, 343], "simplifi": [35, 339, 341], "manual_se": [35, 38, 41, 42, 56, 57, 68, 69, 110, 120, 131, 139, 142, 146, 148, 193, 194, 202, 216, 223, 224, 225, 227, 235, 241, 242, 244, 254, 261, 338, 339, 343, 344], "_weight": [35, 41, 341, 343], "arrai": [35, 40, 122, 182, 183, 186, 187, 332, 341], "update_prior": [35, 63, 304, 329, 333, 341, 343], "36278465": 35, "tempfil": [35, 38, 41, 42, 45, 52, 53, 54, 55, 56, 57, 319, 332, 333, 341], "tqdm": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 307, 332, 334, 335, 338, 339], "randomsampl": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 325, 332], "td_error": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 244, 245, 247, 248, 249, 254, 256, 259, 261, 263, 269, 332, 341, 343], "update_tensordict_prior": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 332, 341, 343], "temporarydirectori": [35, 38, 41, 42, 45, 52, 53, 54, 55, 56, 57, 332, 333, 341], "tmpdir": [35, 38, 41, 42, 45, 52, 53, 54, 55, 56, 57, 332, 333], "rb_load": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57], "cursor": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57], "insert_transform": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57], "insert": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 59, 65, 71, 72, 74, 152], "prompt_rindex": [36, 37, 40], "label": [36, 37, 40, 45, 332, 341], "os": [36, 45, 58, 333], "cpu_count": [36, 45, 58], "promptdatatldr": 36, "116722": 36, "prompt": [37, 40], "return_tensordict": [37, 43], "recip": [37, 79, 83, 97, 103, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 195, 196, 199, 200, 201, 203, 206, 207, 209, 214, 220, 221, 223, 224, 225, 227, 230, 235, 238], "text": [37, 40, 43, 53, 182, 183, 186, 187, 227, 334], "tensodict": [37, 43], "orign": [37, 43], "valid_sampl": 37, "identifi": 37, "eough": 37, "toknen": 37, "meet": 37, "criterion": 37, "autotoken": [37, 43, 45], "from_pretrain": [37, 40, 43], "gpt2": [37, 40, 43, 45, 171, 176, 203], "pad_token": [37, 43], "eos_token": 37, "enough": [37, 341], "inde": [37, 120, 334, 339], "roundrobinwrit": [38, 42, 52, 53, 54, 55, 56, 57, 325], "Not": 38, "ref_model": 40, "reward_model": [40, 237], "kl_coef": 40, "max_new_token": 40, "score_clip": 40, "kl_schedul": 40, "klcontrollerbas": 40, "num_step": 40, "causal": 40, "sentenc": 40, "frozen": [40, 129], "kl": [40, 129, 251, 255], "penalti": [40, 255], "strai": 40, "far": [40, 185, 211, 212, 339, 344], "calcul": [40, 139, 182, 247], "gpt2rewardmodel": 40, "get_dataload": [40, 325], "promptdata": [40, 325], "gpt2lmheadmodel": 40, "dl": 40, "block_siz": [40, 58], "tensorclass_typ": [40, 58], "openai_summarize_tldr": 40, "config_class": 40, "model_path": 40, "rollout_from_model": 40, "rollout_from_data": 40, "600": [40, 339, 341], "reward_kl": [40, 129], "reward_raw": 40, "sample_log_prob": [40, 217, 218, 219, 228, 232, 234, 258, 316, 334, 338, 343], "create_rollout_td": 40, "log_prob": [40, 177, 193, 194, 202, 212, 232], "log_ratio": 40, "replic": 40, "rindex": 40, "multipli": [40, 182, 186, 242, 243, 248, 255, 257, 258, 259, 261, 305, 332], "term": [40, 129, 186, 187, 197, 198, 240, 241, 248, 309, 333, 334, 338], "subtract": [40, 146], "ve": [40, 332, 335], "eo": 40, "limit": [40, 93, 113, 129, 332, 333, 335, 338, 339], "generation_config": 40, "generationconfig": 40, "ti": [40, 280, 281, 282, 283, 285, 286, 287, 288, 333], "log_probs_gen": 40, "logprobs_of_label": 40, "priority_kei": [41, 42, 245, 248, 249, 254, 256, 259, 261, 263, 269, 341, 343], "reduct": [41, 63], "prioritizedreplaybuff": [41, 325, 343], "min": [41, 63, 210, 211, 212, 221, 227, 242, 243, 248, 257, 259, 261, 333, 334, 338], "median": [41, 63, 228, 232], "include_info": [41, 42, 52, 53, 54, 55, 56, 57], "kw": [42, 65, 72], "int32": [42, 55, 68, 89, 163], "huggingfac": [43, 57, 226], "co": [43, 122, 339], "doc": [43, 333, 338], "pad_trunc": 43, "am": 43, "worri": 43, "me": 43, "reassur": 43, "ok": 43, "tokenizer_fn": 45, "tensordicttoken": [45, 325], "pre_tokenization_hook": 45, "valid_s": 45, "tokenizer_class": 45, "tokenizer_model_nam": 45, "tokein": 45, "condit": [45, 146, 222, 223, 229, 230, 240, 332, 339, 341], "elementwis": 45, "vocabulari": 45, "loader": [45, 334], "185068": 45, "dataset_to_tensordict": 45, "data_dir": 45, "nestedkei": [45, 68, 69, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 125, 127, 128, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 153, 157, 166, 167, 220, 221, 224, 225, 227, 232, 245, 269, 290], "valid_mask_kei": 45, "conver": 45, "undergon": 45, "preprocess": [45, 333], "batch_dimens": 45, "filder": 45, "randint": [45, 149, 341], "data_memmap": 45, "exclus": [48, 49, 55, 68, 69, 125, 182, 184, 186, 188, 193, 194, 222, 223, 229, 230, 262, 263, 271, 272, 273, 274, 275, 323, 327], "recurse_through_entri": 49, "recurse_through_stack": 49, "consolid": 49, "from_env": 52, "use_truncated_as_don": 52, "direct_download": 52, "terminate_on_end": 52, "env_kwarg": [52, 56, 57, 321, 322, 332], "reconstruct": [52, 68, 69, 251, 332, 344], "recov": [52, 53, 55, 56, 57, 68, 69, 220, 225, 227, 233, 254, 337], "regard": [52, 53, 55, 56, 57, 179, 223, 241, 249, 258, 332, 334, 339], "get_dataset": 52, "qlearning_dataset": 52, "fewer": 52, "left": [52, 55, 117, 118, 119, 123, 129, 135, 137, 143, 145, 148, 150, 153, 155, 224, 333, 334], "possess": 52, "unexpectedli": 52, "absent": [52, 79, 83, 97, 103], "traj_split": 52, "dataset_id": [52, 53, 55, 56, 57], "observationnorm": [52, 157, 323, 332, 333, 334, 335, 343], "maze2d": 52, "umaz": 52, "128": [52, 55, 69, 173, 176, 333, 335, 339, 340, 341], "loc": [52, 129, 131, 141, 185, 199, 211, 212, 217, 218, 219, 228, 232, 234, 241, 242, 254, 258, 259, 260, 261, 311, 316, 323, 327, 332, 333, 334, 335, 338, 343], "minari": [53, 55], "available_dataset": [53, 55, 56, 57, 68, 69], "currenrtli": 53, "minari_data": 53, "door": 53, "28": [53, 195, 333, 339, 340], "39": [53, 332, 333, 334, 339, 340], "door_body_po": 53, "qpo": 53, "30": [53, 130, 206, 207, 332, 333, 334, 335, 338, 339], "qvel": 53, "dua": 54, "graff": 54, "2017": 54, "uci": 54, "archiv": 54, "ic": 54, "edu": 54, "ml": 54, "sklearn": 54, "adult_num": [54, 96], "adult_onehot": [54, 96], "mushroom_num": [54, 96], "mushroom_onehot": [54, 96], "covertyp": [54, 96], "shuttl": [54, 96], "magic": [54, 96], "shuffl": [55, 67, 69, 338], "num_slic": [55, 68, 69], "slice_len": [55, 68, 69], "stream": 55, "strict_length": [55, 68, 69], "embodi": [55, 340], "22": [55, 68, 69, 156, 333, 338, 339, 340], "institut": 55, "demonstr": [55, 334, 338, 339, 344], "527": [55, 339], "skill": 55, "160266": 55, "nontensordata": 55, "language_instruct": 55, "get_non_tensor": 55, "refin": [55, 241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 269], "neither": [55, 339], "nor": 55, "shorter": [55, 68, 69], "insuffici": 55, "chosen": [55, 146, 147, 204, 205, 213, 230, 316, 327], "__will": 55, "change__": 55, "untouch": [55, 117, 118, 119, 123, 129, 137, 143, 145, 150], "randomli": [55, 67, 130, 131, 147, 224, 228, 232, 338, 339, 341], "crop": [55, 115, 136, 290], "modal": [55, 332], "Be": [55, 68, 69], "cmu_stretch": 55, "is_init": [55, 57, 112, 128, 184, 188, 227, 335], "language_embed": 55, "512": [55, 181, 333, 339, 341], "lift": 55, "green": 55, "garbag": 55, "lid": 55, "roboset": 56, "h5": [56, 57], "mmap": [56, 57], "googl": [56, 75, 76, 334, 335, 338], "roboh": [56, 100], "excludetransform": [56, 143, 341], "fk1": 56, "v4": [56, 138, 280, 281, 282, 283, 285, 286, 287, 288, 332, 334, 340], "expert": 56, "fk1_microopenrandom_v2d": 56, "concis": 56, "17": [56, 69, 316, 332, 333, 334, 335, 339, 340, 341], "18": [56, 69, 101, 102, 104, 105, 196, 332, 333, 338, 339, 341, 344], "15": [56, 69, 79, 83, 97, 103, 221, 227, 250, 331, 332, 333, 334, 335, 339, 341, 342], "19": [56, 68, 69, 71, 333, 335, 339, 340], "75": [56, 332, 333, 339], "totensor": 57, "image_s": 57, "v": [57, 157, 182, 183, 186, 187, 217, 254, 261, 327, 332, 333], "npz": 57, "2206": 57, "04779": [57, 242, 247], "vd4rl": 57, "detect": 57, "squar": [57, 115, 185, 211, 212, 290], "rectangular": [57, 169, 170], "internet": 57, "connect": 57, "walker_walk": 57, "64px": 57, "height": [57, 115, 138], "veloc": [57, 113, 338, 339, 344], "infinit": [58, 341], "three": [58, 327, 329, 334, 338, 339, 341, 344], "block": [58, 59, 327, 335], "pairwisedataset": [58, 325], "256": [58, 176, 333, 334, 338, 339], "immut": [59, 79, 83, 97, 103, 137, 151], "piec": [59, 65, 72, 74, 332, 333, 334, 338, 339, 341], "scratch_dir": [60, 332, 341], "mistak": [60, 61, 73], "myclass": [60, 61, 73], "foo": [60, 61, 73, 221, 341, 344], "bar": [60, 61, 73, 221, 300, 301, 303, 307, 329, 333], "attach": [60, 61, 62, 70, 73, 333], "entiti": [60, 61, 62, 70, 73], "auto": [61, 73, 156, 227, 242, 248, 257, 259, 261, 263, 328, 338], "zero_": [61, 73, 163], "max_capac": [63, 332, 341], "uniformli": [64, 256, 344], "roundrobin": [65, 72], "consum": [67, 69, 333, 334, 338, 341], "incomplet": [67, 69], "fresh": 67, "caution": [67, 159, 344], "haven": [67, 340], "remain": [67, 112, 119, 120, 129, 146, 198], "draw": [67, 224], "end_kei": [68, 69], "traj_kei": [68, 69], "cache_valu": 68, "truncated_kei": [68, 69, 139, 145], "slicesamplerwithoutreplac": [68, 325], "Will": [68, 290], "320": [68, 69, 333, 339, 344], "700": [68, 69], "robosetexperiencereplai": [68, 69, 325], "dataid": [68, 69], "__len__": 70, "rank_kei": 71, "rank": [71, 168], "samplerwithoutreplac": [71, 325, 334, 338, 341], "get_insert_index": 71, "ant": [75, 76, 86, 340], "get_environ": 76, "87": [76, 332, 333, 339, 340], "acrobot": [76, 344], "fetch": [76, 129, 340, 341], "task_nam": 77, "cheetah": [77, 78, 332], "frame_skip": [77, 78, 82, 83, 88, 90, 91, 126, 300, 303, 310, 329, 332, 333, 334, 343], "dm_control": [78, 332, 337, 344], "continuousbox": [79, 83, 97, 103, 163, 334, 338, 339, 343, 344], "unboundedcontinuoustensorspec": [79, 83, 93, 97, 103, 110, 118, 121, 147, 163, 168, 192, 216, 231, 234, 236, 260, 325, 334, 335, 338, 339, 344], "sort": [79, 83, 97, 103, 227], "depth": [79, 83, 93, 97, 103, 168, 169, 170, 172, 173, 174, 175, 180, 181, 190, 192, 195, 196, 200, 201, 222, 327, 333, 337, 338], "another_act": [79, 83, 97, 103], "mutabl": [79, 83, 97, 103], "batch_lock": [79, 81, 83, 97, 103, 147, 151, 339], "done_keys_group": [79, 83, 97, 103], "outer": [79, 83, 97, 103, 329, 332, 333, 344], "another_don": [79, 83, 97, 103], "empty_cach": [79, 83, 97, 103, 151], "fake_tensordict": [79, 83, 97, 103, 333], "fake": [79, 83, 97, 103, 332, 333], "afterward": [79, 83, 97, 103, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 195, 196, 199, 200, 201, 203, 206, 207, 209, 214, 220, 221, 223, 224, 225, 227, 230, 235, 238, 344], "silent": [79, 83, 97, 103, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 195, 196, 199, 200, 201, 203, 206, 207, 209, 214, 220, 221, 223, 224, 225, 227, 230, 235, 238], "braxenv": [79, 83, 97, 103, 137, 325], "envnam": [79, 83, 97, 103], "renametransform": [79, 83, 97, 103], "pipeline_st": [79, 83, 97, 103], "attibut": [79, 83, 97, 103], "speak": [79, 83, 97, 103, 332], "rand_act": [79, 83, 92, 97, 98, 99, 103], "_step": [79, 83, 97, 103, 110, 118, 121, 125, 137], "reset_kei": [79, 83, 97, 103, 113, 142, 146, 147, 148], "multitask": [79, 83, 97, 103], "multiag": [79, 83, 92, 97, 98, 99, 103, 167, 196, 204, 213, 269], "another_reward": [79, 83, 97, 103], "callback": [79, 83, 97, 103, 338], "auto_reset": [79, 83, 97, 103, 339], "auto_cast_to_devic": [79, 83, 97, 103, 338], "break_when_any_don": [79, 83, 97, 103, 338], "return_contigu": [79, 83, 97, 103, 159, 337], "soon": [79, 83, 97, 98, 99, 103], "ndim": [79, 83, 97, 103], "concomitt": [79, 83, 97, 103], "workspac": [79, 83, 97, 103], "prevail": [79, 83, 97, 103, 142, 167], "cartpol": [79, 83, 97, 103, 113, 142, 146, 333, 335, 341, 344], "creator": [80, 312, 313, 321, 322, 323], "substitut": [80, 146, 157], "vecnorm": [80, 323], "env_creat": [80, 332], "test_env1": 80, "observation_count": [80, 344], "test_env2": 80, "sleep": [80, 344], "ps": 80, "p1": 80, "p2": 80, "9934": 80, "env_str": 81, "info_dict_read": 83, "set_info_dict_read": 83, "put": [83, 105, 157, 323, 327, 333, 334, 335, 339], "read_act": 83, "read_don": 83, "reader": [83, 333], "interrupt": [83, 277], "nonsens": 83, "fallback": 83, "broken": [83, 159], "read_ob": 83, "dictat": [83, 228, 232, 258, 332, 339], "read_reward": 83, "baseinfodictread": 83, "info_dict": 83, "hoc": 83, "dict_read": 83, "default_info_dict_read": 83, "my_info_kei": 83, "some_env": 83, "placehold": [85, 122, 151], "secur": 85, "isaacgym": [86, 87], "isaacgymwrapp": [86, 325], "isaacgymenv": [87, 325], "webpag": 87, "isaac": 87, "essenc": 87, "04": [87, 332, 333, 338, 339, 340], "snake": [88, 89], "6x6": [88, 89], "td1": [89, 241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 269, 332], "12x12": 89, "tsp50": 89, "tsp100": 89, "mo": [90, 91], "minecart": [90, 91], "mo_gym": 91, "qualnam": 92, "marl": [92, 106, 113, 148, 195, 338], "leverag": [92, 98, 99, 332, 338, 344], "neural": [92, 98, 99, 169, 170, 208, 231, 327, 333, 334, 335, 338, 339, 344], "group_map": [92, 98, 99, 105, 106], "constructiuon": [92, 98, 99], "premad": [92, 98, 99, 105, 269], "all_in_one_group": [92, 106], "agent_0": [92, 98, 99, 106], "agent_1": [92, 98, 99, 106], "agent_2": [92, 98, 99, 106], "agent_3": 92, "int8": [92, 98, 99], "one_group_per_ag": [92, 98, 99], "environn": 93, "constraint": [93, 334, 338], "mymbenv": [93, 168, 192], "world_model": [93, 168, 192, 251], "super": [93, 110, 118, 121, 168, 179, 192, 236, 242, 244, 248, 254, 259, 261, 263, 332, 339, 343], "hidden_observ": [93, 168, 192], "mlp": [93, 168, 169, 170, 172, 173, 174, 175, 184, 188, 189, 192, 196, 217, 222, 245, 247, 316, 327, 333, 337, 340, 343], "worldmodelwrapp": [93, 168, 192], "activation_class": [93, 168, 169, 170, 172, 173, 174, 175, 180, 181, 190, 192, 195, 196, 333, 338, 343], "relu": [93, 168, 176, 192, 199, 240], "activate_last_lay": [93, 168, 175, 190, 192], "run_type_check": 93, "less": [94, 214, 321, 322, 328, 334, 335, 341, 343], "readthedoc": 94, "en": 94, "python_interfac": 94, "task_id": 94, "106": [96, 339], "my_env_fun": [97, 103], "custom_attribute_list": [97, 103], "custom_attribut": [97, 103], "custom_method_list": [97, 103], "custom_method": [97, 103], "deploi": [97, 103], "slight": [97, 103, 333], "share_individual_td": [97, 103], "shared_memori": [97, 103], "policy_proof": [97, 103], "ll": [97, 103, 182, 183, 186, 187, 332, 333, 334, 335, 338, 344], "hidden": [97, 103, 112, 180, 182, 183, 184, 186, 187, 188, 189, 200, 201, 206, 207, 217, 218, 219, 221, 231, 234, 243, 255, 258, 327, 335, 337, 343], "introduc": [97, 103, 182, 184, 186, 188, 227, 332], "drastic": [97, 341], "influenc": 97, "rule": [97, 118, 121, 232, 327, 334], "thumb": [97, 334], "suppos": [97, 303, 329, 344], "scenario": [97, 104, 105, 332, 338, 339], "myenv": [97, 118, 121], "update_kwarg": [97, 103], "pettingzoo": [98, 99], "pet": [98, 99], "zoo": [98, 99], "guid": [98, 99, 101, 102, 146, 326, 332, 338], "__": [98, 99], "aecenv": [98, 99], "use_mask": [98, 99], "dead": [98, 99], "compulsori": [98, 99], "adversary_0": [98, 99], "adversari": [98, 99], "marlgroupmaptyp": [98, 99, 105, 106, 325], "vectoris": [98, 99, 182, 183, 186, 187], "multiwalker_v9": 98, "return_st": [98, 99], "categorical_act": [98, 99, 101, 102, 105], "n_piston": [98, 99], "pistonball_v6": [98, 99], "piston": [98, 99], "piston_0": [98, 99], "piston_1": [98, 99], "piston_20": [98, 99], "aec": [98, 99], "tictactoe_v3": [98, 99], "player": [98, 99], "player_1": [98, 99], "player_2": [98, 99], "butterfli": 99, "parallel_env": [99, 332, 343, 344], "vikashplu": 100, "read_info": 100, "pars": [100, 341], "smacv2": [101, 102], "starcraft": [101, 102], "challeng": [101, 102, 339, 340], "v2": [101, 102, 266, 280, 281, 282, 283, 285, 286, 287, 288, 316, 335], "10gen_terran": [101, 102], "10gen_zerg": [101, 102], "10gen_protoss": [101, 102], "3m": [101, 102], "8m": [101, 102, 340], "25m": [101, 102], "5m_vs_6m": [101, 102], "8m_vs_9m": [101, 102], "10m_vs_11m": [101, 102], "27m_vs_30m": [101, 102], "mmm": [101, 102], "mmm2": [101, 102], "2s3z": [101, 102], "3s5z": [101, 102], "3s5z_vs_3s6z": [101, 102], "3s_vs_3z": [101, 102], "3s_vs_4z": [101, 102], "3s_vs_5z": [101, 102], "1c3s5z": [101, 102], "2m_vs_1z": [101, 102], "corridor": [101, 102], "6h_vs_8z": [101, 102], "2s_vs_1sc": [101, 102], "so_many_banel": [101, 102], "bane_vs_ban": [101, 102], "2c_vs_64zg": [101, 102], "old": [101, 102, 255, 344], "smac": [101, 102], "map_nam": [101, 102], "176": [101, 102, 339], "battle_won": [101, 102], "dead_al": [101, 102], "dead_enemi": [101, 102], "episode_limit": [101, 102], "322": [101, 102, 331, 339, 340, 342], "Or": [101, 102, 195], "procedur": [101, 102], "distribution_config": [101, 102], "n_unit": [101, 102], "n_enemi": [101, 102], "team_gen": [101, 102], "dist_typ": [101, 102], "weighted_team": [101, 102], "unit_typ": [101, 102], "marin": [101, 102], "maraud": [101, 102], "medivac": [101, 102], "exception_unit_typ": [101, 102], "start_posit": [101, 102], "surrounded_and_reflect": [101, 102], "map_x": [101, 102], "map_i": [101, 102], "capability_config": [101, 102], "88": [101, 102, 332, 333, 339, 340, 341], "131": [101, 102, 339], "starcraft2env": 102, "flock": [104, 105], "continuous_act": [104, 105, 338], "agent_collision_rew": [104, 105], "agent_distance_rew": [104, 105], "agent_nam": [105, 106], "agent_names_to_indices_map": 105, "unbatched_action_spec": [105, 338], "unbatched_observation_spec": 105, "unbatched_reward_spec": 105, "het_spec": 105, "het_specs_map": 105, "ca": 106, "environment4": 106, "get_group_map": 106, "sumbodul": 107, "model_bas": [108, 168, 192], "adapt": [110, 255, 332, 339], "masker": 110, "binarydiscretetensorspec": [110, 245, 248, 269, 325], "maskedenv": 110, "ones_lik": 110, "scatter": 110, "unsqueez": [110, 113, 114, 149, 152, 189, 332, 335, 338, 339], "_set_se": [110, 118, 121, 339], "transform_reward_spec": [111, 116, 117, 118, 119, 123, 129, 137, 140, 141, 143, 145, 150, 152], "tensordictmodulebas": [112, 214, 222, 229, 335], "burn_in": 112, "burn": 112, "date": [112, 293], "retur": 112, "burnt": 112, "grumodul": 112, "gru_modul": [112, 184], "input_s": [112, 182, 183, 184, 186, 187, 188, 189, 335], "hidden_s": [112, 182, 183, 184, 186, 187, 188, 189, 335], "set_recurrent_mod": [112, 184, 188, 335], "burn_in_transform": 112, "gru": [112, 183, 184], "num_lay": [112, 182, 184, 186, 188, 200, 201], "86": [112, 333, 339], "3008": [112, 333], "37": [112, 333, 335, 338, 339, 340], "0344": 112, "padding_valu": [113, 193, 194], "as_invers": 113, "account": [113, 193, 194, 327, 333, 335, 341, 344], "movement": 113, "propos": [113, 122, 191, 253, 262, 316, 327, 335, 341], "pdf": [113, 171, 172, 173, 174, 175, 179, 203, 223, 227, 249, 259, 262, 271, 276, 284, 316], "1312": [113, 333], "5602": 113, "constant": [113, 131, 146, 329, 332, 334, 335, 344], "unsqueezetransform": [113, 339, 341], "consumpt": 113, "followin": 113, "pictur": 113, "pixels_trsf": [113, 341], "grayscal": [113, 333, 335, 341, 344], "data_exclud": [113, 341], "transform_observation_spec": [113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 127, 128, 129, 131, 133, 137, 138, 142, 143, 145, 146, 147, 148, 149, 150, 152, 153, 156, 339], "del_kei": [114, 153, 337, 339], "unsqueeze_if_oor": 114, "observation_posit": 114, "observation_veloc": 114, "delet": 114, "key1": [114, 298, 306], "key2": [114, 298, 306], "center": [115, 290], "width": [115, 138], "out_keys_inv": [116, 118, 121, 131, 132, 133, 137, 150, 339], "scalar": [116, 140, 173, 175, 197, 198, 220, 224, 225, 227, 238, 241, 242, 243, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 269, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 327, 333, 339], "permit": [116, 125, 152], "rewardsc": [117, 151, 332, 333, 335], "rewardclip": 117, "transformed_env": [117, 150, 151], "transform_env_devic": [117, 119, 150], "transform_input_spec": [117, 118, 119, 120, 131, 133, 137, 142, 145, 146, 147, 150, 152, 154], "transform_output_spec": [117, 118, 119, 123, 129, 137, 143, 145, 150], "transformfull_done_spec": [117, 118, 119, 123, 129, 137, 143, 145, 150], "dtype_in": 118, "dtype_out": 118, "scan": [118, 121, 233, 234], "resp": [118, 121], "not_transform": [118, 121], "constructedw": [118, 121], "orig_devic": 119, "unspecifi": 119, "transform_done_spec": [119, 150], "num_actions_effect": 120, "max_act": 120, "include_forward": 120, "dimension": [120, 184, 188, 271, 276, 284, 338], "num_act": [120, 248], "action_out": 120, "_call": [120, 125, 339], "eol_kei": 122, "life": 122, "lives_kei": 122, "eol_attribut": 122, "unwrap": 122, "al": [122, 133, 168, 344], "breakout": 122, "v5": [122, 133, 344], "210": [122, 133, 339, 344], "160": [122, 133, 333, 339, 344], "eol_transform": 122, "eol": 122, "dqnloss": [122, 241, 242, 244, 247, 248, 249, 250, 253, 254, 256, 258, 259, 260, 261, 262, 263, 264, 269, 314, 325, 328, 333, 335], "action_spac": [122, 179, 205, 222, 223, 229, 230, 241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 269, 335], "register_kei": 122, "loss_or_advantag": 122, "lossmodul": [122, 307, 318, 319, 325], "valueestimatorbas": [122, 256, 325], "excluded_kei": 123, "finit": [124, 341], "first_dim": 125, "last_dim": 125, "allow_positive_dim": [125, 152], "th": [125, 152, 182, 186, 339], "frameskip": 125, "repeatedli": [126, 334, 338], "init_kei": 128, "tracker": 128, "coef": 129, "pi_curr": 129, "pi_0": 129, "overfit": 129, "fine": [129, 340], "probabilist": [129, 228, 325, 334, 343], "get_dist": [129, 232, 233], "mod": [129, 184, 188, 235, 335], "normalparamextractor": [129, 327, 334, 338], "probabilisticactor": [129, 217, 218, 219, 221, 241, 242, 246, 248, 254, 257, 258, 259, 260, 261, 263, 327, 332, 334, 338], "tanhnorm": [129, 217, 218, 219, 228, 234, 241, 242, 254, 258, 259, 260, 261, 263, 325, 334, 338, 343], "n_ob": [129, 241, 242, 244, 245, 247, 248, 254, 258, 259, 260, 261, 263], "n_act": [129, 241, 242, 244, 245, 247, 248, 254, 258, 259, 260, 261, 263], "return_log_prob": [129, 217, 218, 219, 228, 232, 234, 260, 327, 334, 338, 343], "apply_": 129, "copy_": [129, 332], "formulat": 129, "diverg": [129, 184, 188, 228, 232, 251, 255], "noop": [130, 343], "trial": 130, "op": [130, 156, 220, 224, 225, 309], "standard_norm": [131, 141, 332, 333, 335], "affin": [131, 141], "layer": [131, 157, 169, 170, 172, 173, 180, 182, 183, 184, 186, 187, 188, 190, 195, 196, 197, 198, 200, 201, 208, 209, 215, 226, 235, 327, 333, 334, 335, 340], "normal": [131, 157, 169, 170, 185, 190, 193, 194, 199, 211, 212, 220, 228, 232, 243, 255, 258, 303, 305, 323, 327, 329, 335, 338, 344], "set_default_tensor_typ": 131, "doubletensor": 131, "isclos": 131, "next_ob": [131, 271, 272, 273, 274, 343], "rubric": [131, 234], "init_stat": [131, 332, 333, 334, 335], "3752e": 131, "01": [131, 227, 238, 243, 255, 258, 331, 332, 333, 335, 338, 339, 340, 342], "5087e": 131, "03": [131, 331, 332, 333, 339, 340, 342], "9294e": 131, "9636": 131, "5608": 131, "6408": 131, "num_it": [131, 333, 334], "reduce_dim": [131, 332, 333, 334, 335], "cat_dim": [131, 332, 333, 334, 335], "keep_dim": [131, 333, 335], "statist": [131, 157, 260, 323, 332, 333, 334, 344], "approach": [131, 332, 334, 344], "gaussian": [131, 147, 168, 192, 197, 198, 203, 220, 334], "empir": [131, 168, 192, 228, 232, 332, 334, 338], "3d": [131, 169], "third": [131, 223, 338], "reorder": 133, "in_keys_in": 133, "pong": [133, 344], "channel": [133, 149, 195, 200, 201, 333], "r3m": [135, 340], "resnet": [135, 153, 155], "visual": [135, 153, 155, 334, 339], "embed": [135, 153, 154, 155, 204, 216, 217, 218, 219, 231, 236, 340], "ego4d": [135, 153, 155], "univers": [135, 153, 155], "suraj": [135, 153], "nair": [135, 153], "aravind": [135, 153], "rajeswaran": [135, 153], "vikash": [135, 153, 155], "kumar": [135, 153, 155], "chelsea": [135, 153], "finn": [135, 153], "abhinav": [135, 153], "gupta": [135, 153], "2203": [135, 153, 192, 340], "12601": [135, 153, 340], "_init": [135, 153, 332], "snippet": [135, 153, 332], "resnet50": [135, 155, 340], "model_nam": [135, 153, 155, 293], "resnet34": 135, "resnet18": 135, "r3m_vec": [135, 340], "feed": [135, 155, 256, 327, 332, 338, 341], "244": [135, 155, 339], "stack_imag": [135, 155], "tread": [135, 155], "separet": [135, 155], "hub": [135, 155, 340], "resnet50_weight": [135, 155], "imagenet1k_v1": [135, 155], "download_path": [135, 155], "tensor_pixels_kei": [135, 155], "dest": [135, 153, 155, 231], "sub_seq_len": 136, "sample_dim": [136, 332], "primarili": 136, "hesit": 136, "request": 136, "robust": 136, "mix": [136, 204, 213, 269, 332, 338], "improp": 136, "create_copi": 137, "stuff": 137, "newnam": 137, "interpol": [138, 333, 335], "bilinear": [138, 335], "84": [138, 333, 335, 339], "halfcheetah": [138, 316, 332], "r2g": 139, "99": [139, 157, 192, 252, 265, 270, 277, 319, 332, 333, 334, 339, 340, 343], "reward_to_go": 139, "bernoulli_": 139, "9010": 139, "9404": [139, 277], "9701": [139, 277], "9900": [139, 277], "0000": [139, 148, 224, 225, 235, 277, 334, 335, 339, 343], "crash": 139, "clamp_min": 140, "clamp_max": 140, "clip_min": 140, "clip_max": 140, "episode_": 142, "reward1": 142, "reward2": 142, "episode_reward": [142, 338], "keep_reward": 143, "keep_don": 143, "squeeze_dim": 144, "step_count_kei": 145, "update_don": 145, "adaptec": 145, "accordingli": [145, 146, 186, 229, 335], "completet": 145, "recognis": 145, "accompani": 145, "target_return": 146, "primer": [147, 335], "default_valu": [147, 335], "unit": [147, 168, 180, 182, 183, 200, 201, 206, 207, 334], "transfomedenv": 147, "mykei": 147, "__unless": 147, "exists__": 147, "pool": 148, "increas": [148, 227, 338], "10th": 148, "0216": 148, "1149": 148, "1990": 148, "2749": 148, "3281": 148, "9290": 148, "3702": 148, "8978": 148, "from_int": 149, "shape_toler": 149, "255": [149, 339, 341], "permuat": 149, "ri": 149, "principl": 150, "cattransform": 150, "notabl": 150, "rewardsum": [150, 338], "cache_spec": 151, "set_missing_toler": 151, "keyerror": 151, "unsqueeze_dim": [152, 339], "danger": 152, "vc1": 153, "vc1_vec": 153, "small": [153, 332, 334, 338, 344], "untrain": 153, "make_noload_model": 153, "naiv": 153, "vip": [154, 155, 340], "toward": 155, "implicit": [155, 254, 341], "jason": 155, "ma": 155, "shagun": 155, "sodhani": 155, "dinesh": 155, "jayaraman": 155, "osbert": 155, "bastani": 155, "ami": 155, "zhang": 155, "vip_vec": 155, "final_nam": 156, "sb3": 156, "terminal_obs_read": 156, "truli": [156, 343], "till": 156, "did": [156, 277, 333, 334, 341, 344], "nan": 156, "shared_td": 157, "decai": [157, 220, 224, 225, 262, 305, 332, 333, 335, 344], "9999": [157, 339], "0001": [157, 180, 199, 334, 339], "fly": [157, 255, 328, 334, 339, 341, 344], "to_observation_norm": 157, "underflow": [157, 305], "build_td_for_shared_vecnorm": 157, "memmori": 157, "queue": [157, 341], "td_share": 157, "state_dim": [158, 171, 176, 203, 206, 207, 221], "action_dim": [158, 171, 172, 174, 176, 203, 221, 332, 337], "gsde": [158, 259, 323], "func": 158, "gsdemodul": 158, "check_dtyp": 159, "short": [159, 186, 187, 333, 334, 338], "discrep": [159, 241, 243, 244, 245, 255, 258, 260, 269], "imposs": 159, "probabilistictdmodul": [164, 165, 190, 228, 232, 270, 303], "next_tensordict": 166, "keep_oth": [166, 339], "exclude_reward": 166, "exclude_don": 166, "exclude_act": 166, "next_": 166, "funtion": 166, "write_full_fals": 167, "leav": [167, 332], "_terminated_or_trunc": 167, "entropi": [168, 241, 242, 243, 248, 254, 255, 257, 258, 259, 261, 263, 338], "botev": 168, "et": 168, "2013": 168, "cem": 168, "plan": [168, 191, 192], "varianc": [168, 185, 199, 211, 212, 328, 332, 334, 338], "k": [168, 182, 183, 186, 187], "repeat": [168, 334, 338, 339], "maximis": [168, 172, 174, 192, 327, 332, 333, 334, 338], "horizon": [168, 192, 334], "modelbasedenv": [168, 192], "planning_horizon": [168, 192], "optim_step": [168, 192, 333], "mpc": [168, 191, 192], "num_candid": [168, 192], "candid": [168, 192], "top_k": [168, 192], "modelbasedenvbas": [168, 191, 192, 325], "safemodul": [168, 191, 217, 219, 232, 241, 242, 248, 254, 258, 259, 260, 261, 263, 312, 313, 319, 325, 343], "num_cel": [169, 170, 172, 173, 174, 175, 180, 181, 184, 188, 190, 195, 196, 217, 333, 334, 335, 338, 343], "elu": [169, 170, 172, 173, 174, 175, 180, 181, 195, 333, 343], "activation_kwarg": [169, 170, 190], "norm_class": [169, 170, 172, 173, 190], "norm_kwarg": [169, 170, 190], "bias_last_lay": [169, 170, 172, 173, 174, 175, 181, 190], "aggregator_class": [169, 170, 172, 173, 333, 335, 343], "squashdim": [169, 170, 172, 195, 343], "aggregator_kwarg": [169, 170, 172, 173, 333, 335], "squeeze_output": [169, 170, 172, 173, 333, 335], "convolut": [169, 170, 172, 173, 195, 208], "produc": [169, 170, 190, 196, 202, 217, 219, 221, 290, 334, 335, 341, 344], "cell": [169, 170, 182, 183, 184, 186, 187, 188, 190, 195, 196, 334], "kernel": [169, 170, 181, 189, 195], "cnet": [169, 170], "conv3d": 169, "34": [169, 170, 190, 331, 333, 335, 339, 342, 344], "35": [169, 170, 190, 331, 333, 334, 335, 339, 340, 341, 342], "transformer_config": [171, 203, 221], "decisiontransform": [171, 203], "dtconfig": [171, 176, 203], "2202": [171, 176, 203, 257], "05607": [171, 176, 203, 257], "return_to_go": [171, 176, 203, 221], "conv_net_kwarg": [172, 173], "mlp_net_kwarg": [172, 173, 174], "use_avg_pool": [172, 173], "WITH": [172, 173, 174, 175, 227, 262], "1509": [172, 173, 174, 175, 192, 227, 245, 253, 262, 339], "02971": [172, 173, 174, 175, 227, 262], "convnet": [172, 195, 335, 343], "ndims_in": 172, "avgpool": [172, 173], "adaptiveavgpool2d": [173, 333, 335], "400": [174, 175, 338, 339, 341], "mlp_net_kwargs_net1": 175, "mlp_net_kwargs_net2": 175, "decion": 176, "desdescrib": 176, "n_embd": 176, "n_layer": [176, 182, 186], "n_head": 176, "n_inner": 176, "n_posit": 176, "resid_pdrop": 176, "attn_pdrop": 176, "gpt2config": 176, "atol": [177, 210], "06": [177, 210, 332, 333, 339, 340], "rtol": [177, 210], "batch_shap": [177, 210], "event_shap": [177, 210], "absolut": [177, 210, 332], "densiti": [177, 193, 194, 202, 212], "mass": [177, 193, 194, 202, 212, 339], "rsampl": [177, 194, 202, 232], "sample_shap": [177, 193, 194, 202], "dqnet": 178, "atom": 178, "softmax": [178, 194, 202, 222, 223], "var_num": [179, 205, 222, 223, 230], "action_value_kei": [179, 205, 222, 223, 229, 230, 256, 269], "action_mask_kei": [179, 205, 222, 223, 224, 225, 229, 230], "perspect": [179, 223, 249, 334], "1707": [179, 223, 249, 258], "06887": [179, 223, 249], "mult": [179, 196, 205, 222, 223, 229, 230], "tensordict_modul": [179, 182, 183, 186, 187, 205, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 241, 242, 244, 248, 254, 258, 259, 260, 261, 263, 327], "nbin": [179, 222, 327], "customdistributionalqv": 179, "log_softmax": [179, 222], "from_modul": [179, 228, 231, 234, 236], "one_hot": [179, 194, 205], "qvalue_actor": [179, 205, 222, 229, 327], "to_modul": [179, 228, 231, 234, 236], "std_bia": 180, "std_min_val": 180, "belief": [180, 200, 206, 207], "1912": [180, 250, 251, 252], "01603": [180, 250, 251, 252], "softplu": [180, 199, 238, 239, 240], "out_features_valu": 181, "cnn_kwarg": [181, 333], "mlp_kwarg": [181, 189, 333], "duel": 181, "cnn": [181, 195, 333, 343], "06581": 181, "batch_first": [182, 184, 186, 188, 335], "bidirect": [182, 186, 335], "cudnn": [182, 183, 186, 187, 335], "vmap": [182, 183, 186, 187, 214, 231, 234, 343], "rnn": [182, 183, 186, 187, 335], "device_count": [182, 183, 186, 187, 332, 333, 335, 340, 344], "els": [182, 183, 186, 187, 200, 327, 329, 332, 333, 334, 335, 338, 339, 340], "n_in": [182, 183, 186, 187], "n_out": [182, 183, 186, 187], "h0": [182, 183, 186, 187], "h1": [182, 183, 186, 187], "call_gru": [182, 183], "h_out": [182, 183, 186, 187], "batched_cal": [182, 183, 186, 187], "gate": [182, 183, 186], "r_t": 182, "sigma": [182, 183, 185, 186, 187, 203, 211, 212, 220, 227, 334], "w_": [182, 183, 186, 187], "ir": [182, 183], "x_t": [182, 186], "b_": [182, 183, 186, 187], "hr": [182, 183, 186], "h_": [182, 183, 186], "z_t": 182, "iz": [182, 183], "hz": [182, 183], "n_t": 182, "odot": [182, 183, 186, 187], "hn": [182, 183, 186], "h_t": [182, 186], "sigmoid": [182, 183, 186, 187], "hadamard": [182, 183, 186, 187], "multilay": [182, 186], "_t": [182, 186, 338, 339], "ge": [182, 186], "bernoulli": [182, 186], "b_ih": [182, 183, 186, 187, 188], "b_hh": [182, 183, 186, 187, 188], "seq": [182, 184, 186, 188, 335, 337], "h_0": [182, 186, 187], "unbatch": [182, 186], "pack": [182, 186, 334, 344], "pack_padded_sequ": [182, 186], "pack_sequ": [182, 186], "num": [182, 186], "_layer": [182, 186], "_size": [182, 183, 186, 187], "h_n": [182, 186], "packedsequ": [182, 186], "weight_ih_l": [182, 186], "learnabl": [182, 183, 186, 187], "w_ir": 182, "w_iz": 182, "w_in": 182, "num_direct": [182, 186], "weight_hh_l": [182, 186], "w_hr": 182, "w_hz": 182, "w_hn": 182, "bias_ih_l": [182, 186], "b_ir": 182, "b_iz": 182, "b_in": 182, "bias_hh_l": [182, 186], "b_hr": 182, "b_hz": 182, "b_hn": 182, "bias": [182, 183, 186, 187, 238, 328, 332], "mathcal": [182, 183, 186, 187], "sqrt": [182, 183, 186, 187, 227], "frac": [182, 183, 186, 187, 334], "seq_len": [182, 186], "subtli": 182, "matrix": [182, 186, 197, 198], "contrast": [182, 253, 341], "hx": [182, 183, 186, 187], "lstmcell": [183, 188], "gru_cel": 183, "z": 183, "weight_ih": [183, 187], "weight_hh": [183, 187], "bias_ih": [183, 187], "bias_hh": [183, 187], "rocm": [183, 187], "embedd": [184, 188, 189], "grucel": [184, 231], "proj_siz": [184, 186], "python_bas": [184, 188], "recurrent_st": [184, 335], "custom_kei": [184, 188], "recurrent_mod": [184, 188], "rs": [184, 332], "gru_module_train": 184, "policy_train": [184, 188], "traj_td": [184, 188], "policy_infer": [184, 188], "td_inf": [184, 188], "assert_clos": [184, 188], "upscal": [185, 211, 212], "tanh_loc": [185, 211, 212], "event_dim": [185, 210, 211], "ultim": [185, 211, 212], "poor": [185, 211, 212], "explos": [185, 211, 212], "switch": [185, 212], "formula": [185, 211, 212, 241, 243, 255, 258, 328, 334], "c0": [186, 187], "c1": [186, 187], "call_lstm": [186, 187], "c_out": [186, 187], "i_t": 186, "ii": [186, 187], "hi": [186, 187], "f_t": 186, "hf": [186, 187], "g_t": 186, "ig": [186, 187], "hg": [186, 187], "o_t": 186, "ho": [186, 187], "c_t": 186, "c_": 186, "forget": 186, "consequ": 186, "1402": 186, "1128": 186, "c_0": [186, 187], "proj": 186, "c_n": 186, "w_ii": 186, "w_if": 186, "w_ig": 186, "w_io": 186, "w_hi": 186, "w_hf": 186, "w_hg": 186, "w_ho": 186, "b_ii": 186, "b_if": 186, "b_ig": 186, "b_io": 186, "b_hi": 186, "b_hf": 186, "b_hg": 186, "b_ho": 186, "weight_hr_l": 186, "_revers": 186, "analog": 186, "cn": 186, "lstm_cell": 187, "h_1": 187, "c_1": 187, "time_step": [187, 189], "cx": 187, "trust": 188, "correspont": 188, "recurrent_state_h": [188, 335], "recurrent_state_c": [188, 335], "triplet": [188, 229, 230], "lstm_modul": 188, "rs_h": 188, "rs_c": 188, "hidden0": 188, "hidden1": 188, "lstm_kwarg": 189, "next_observ": [189, 241, 242, 244, 245, 247, 248, 254, 258, 259, 260, 261, 263, 337], "2d": [189, 338], "hidden0_in": 189, "hidden1_in": 189, "hidden0_out": 189, "hidden1_out": 189, "single_bias_last_lay": 190, "layer_class": 190, "layer_kwarg": 190, "perceptron": 190, "seamless": 190, "lazylinear": [190, 327, 334, 339, 340, 343], "42": [190, 241, 242, 244, 254, 261, 332, 333, 335, 339], "noisylinear": [190, 197, 325, 333], "noisylazylinear": [190, 325], "At": [191, 224, 333, 334, 335, 337, 339, 340], "mpcplanner": 191, "tensordict_out": [191, 344], "mppi": 192, "covari": 192, "william": [192, 260], "aldrich": 192, "theodor": 192, "01149": 192, "hansen": 192, "wang": 192, "su": 192, "04955": 192, "valueoper": [192, 217, 218, 219, 241, 242, 243, 244, 248, 254, 255, 258, 259, 260, 261, 263, 319, 327, 332, 334], "tdlambdaestim": [192, 325, 332], "value_net": [192, 245, 247, 260, 271, 272, 273, 274, 334], "adv": 192, "lmbda": [192, 265, 271, 274, 276, 282, 283, 284, 287, 288, 328, 332, 334, 338], "95": [192, 265, 333, 334, 335, 339], "value_network": [192, 244, 245, 247, 249, 254, 261, 271, 272, 273, 274, 328, 332, 334], "temperatur": [192, 242, 254], "neg_inf": [193, 194], "inf": [193, 194], "www": [193, 194], "api_doc": [193, 194], "tf_agent": [193, 194], "event": [193, 194, 202, 280, 281, 282, 283, 285, 286, 287, 288, 341], "unnorm": [193, 194, 202], "sparse_mask": [193, 194], "dens": [193, 194], "0831": [193, 194], "1203": [193, 194], "0928": [193, 194], "1972": [193, 194], "grad_method": [194, 202], "reparamgradientstrategi": [194, 202], "passthrough": [194, 202], "proxi": [194, 202, 328], "relaxedonehot": [194, 202], "zeros_lik": [194, 339], "sample_non_valid": 194, "centralis": [195, 196, 338], "share_param": [195, 196, 338], "basi": [195, 341], "homogen": [195, 196, 338], "agent_network": [195, 196], "modulelist": [195, 196, 316, 343], "lazyconv2d": [195, 343], "2592": [195, 333], "decentralis": [195, 338], "n_agent_input": [196, 338], "n_agent_output": [196, 338], "toech": 196, "centalis": 196, "shown": [196, 327, 337, 338, 341], "std_init": [197, 198], "initialize_paramet": 197, "isol": [197, 256], "1706": [198, 213], "10295v3": 198, "induc": 198, "aid": 198, "scale_map": 199, "biased_softplus_1": 199, "scale_lb": [199, 206, 207], "exp": [199, 240], "module_norm": 199, "decod": 200, "1803": [200, 201, 204], "10122": [200, 201], "rnn_hidden": 200, "latent": 201, "excacli": 202, "inres": 203, "mu": [203, 227, 334], "state_shap": [204, 269], "mixing_embed_dim": [204, 269], "qmix": [204, 338], "mixer": [204, 213, 269], "monoton": 204, "hyper": 204, "11485": 204, "qmixerloss": [204, 213], "qmix_vdn": [204, 213], "eventu": [204, 335, 339], "vdn": [204, 213], "greedi": [205, 223, 224, 225, 230, 333, 335], "hidden_dim": [206, 207], "posterior": [206, 251], "rssm": [206, 207, 251], "1811": [206, 207], "04551": [206, 207], "obs_embed": 206, "rnn_hidden_dim": 207, "dream": 207, "tanhtransform": 211, "decomposit": 213, "05296": 213, "hide": [214, 334, 338], "satisfi": [214, 327], "vmap_dim": 214, "lam": 214, "sample_in": 214, "sample_in_td": 214, "vm": 214, "translat": [216, 228], "character": [216, 222, 228, 229, 231, 341], "overflow": [216, 222, 223, 228, 229, 230, 231, 232], "td_modul": [216, 217, 218, 219, 228, 231, 232, 234, 236, 343], "3635": 216, "0340": 216, "1476": 216, "3911": [216, 339], "1664": [216, 333, 339], "5455": 216, "2247": 216, "4583": 216, "2916": 216, "2160": 216, "5337": 216, "5193": 216, "grad_fn": [216, 224, 225, 343], "addmmbackward0": 216, "actorvalueoper": [217, 327], "get_policy_oper": [217, 218, 219, 243, 255, 258, 327], "standalon": [217, 218, 219], "tdmodul": [217, 218, 219, 319], "get_critic_oper": 217, "common_oper": [217, 219], "policy_oper": [217, 218, 219], "value_oper": [217, 218, 219], "normalparamwrapp": [217, 218, 219, 228, 234, 241, 242, 248, 254, 258, 259, 260, 261, 263, 325, 343], "module_hidden": [217, 219], "td_module_hidden": [217, 219], "module_act": [217, 219], "td_module_act": [217, 218, 219], "module_valu": [217, 218, 219], "td_module_valu": [217, 218, 219], "state_action_valu": [217, 236, 242, 261, 270, 316, 319, 327, 332, 343], "td_clone": [217, 218, 219], "tensordictmodulewrapp": [217, 312, 313, 319], "get_policy_head": [217, 218, 219], "safesequenti": [217, 218, 219, 269], "head": [217, 219, 243, 255, 258], "get_value_head": [217, 218, 219], "get_value_oper": [217, 218, 219, 243, 255, 258], "action_modul": 218, "state_valu": [218, 219, 236, 243, 255, 258, 259, 261, 271, 272, 273, 274, 276, 278, 280, 282, 284, 285, 287, 327, 332, 334, 338], "qualiti": [219, 327], "actorcriticoper": [219, 243, 255, 258, 327], "embeddig": 219, "refet": 219, "actorcriticwrapp": [219, 327, 332], "po": [220, 225], "sigma_init": 220, "epsilon": [220, 224, 225, 227, 262, 305, 333, 334, 335], "sigma_end": 220, "annealing_num_step": [220, 224, 225, 227, 332, 333, 335], "captur": [220, 224, 225, 227], "omiss": [220, 224, 225, 227], "ommit": [220, 224, 225, 227, 341], "inferec": 221, "set_tensor_kei": 221, "dt_inference_wrapp": 221, "baz": 221, "inference_context": 221, "obs_dim": 221, "tanhdelta": [221, 325, 332], "dtactor": 221, "actor_modul": [221, 343], "dist_class": 221, "dist_kwarg": 221, "distribution_kwarg": [221, 228, 232, 334, 338], "inference_actor": 221, "sequence_length": 221, "mask_context": 221, "out_act": 221, "qvaluemodul": [222, 229, 269, 335], "distributionaldqnnet": 222, "make_log_softmax": 222, "my_action_valu": [223, 230], "chanc": 223, "thid": 223, "threshold": [224, 242, 243, 334], "eps_init": [224, 225, 227, 333, 335], "eps_end": [224, 225, 227, 333], "explorative_polici": [224, 225, 227], "9055": [224, 225, 339], "9277": [224, 225], "6295": [224, 225], "2532": [224, 225], "addbackward0": [224, 225], "lmheadmodel": 226, "extract": [226, 332, 334], "actor_head": [226, 243, 255, 258], "base_model": 226, "lm_head": 226, "ornstein": 227, "uhlenbeck": 227, "ou": [227, 332], "correl": 227, "noise_t": 227, "noise_": 227, "theta": [227, 334, 339], "sigma_t": 227, "sigma_": 227, "anneal": 227, "ou_prev_nois": 227, "ou_step": 227, "x0": 227, "sigma_min": 227, "n_steps_ann": 227, "is_init_kei": 227, "_ou_prev_nois": 227, "_ou_step": 227, "default_interaction_typ": [228, 232], "interaction_typ": [228, 232], "set_interaction_typ": [228, 232], "cache_dist": [228, 232], "n_empirical_estim": [228, 232], "compound": 228, "compositedistribut": 228, "categ": 228, "distribution_map": 228, "chose": 230, "functionalmodul": 231, "functionalmodulewithbuff": 231, "td_fmodul": 231, "td_function": 231, "td_state": 231, "ensembl": [231, 259], "params_repeat": 231, "td_vmap": [231, 234], "random_sampl": [231, 232], "suppli": 232, "fist": 232, "log_prob_kei": [232, 338], "probabilistictensordictsequenti": [233, 241, 243, 255, 258, 260, 312, 313, 343], "partial_toler": [233, 234, 337], "who": [233, 234], "AND": [233, 234], "tensordictsequenci": 234, "tensordictsequ": 234, "safeprobabilisticmodul": [234, 327], "spec1": 234, "net1": 234, "module1": 234, "td_module1": 234, "spec2": 234, "module2": 234, "td_module2": 234, "clamp": [235, 251, 307, 339], "boundari": [235, 334, 338], "resolut": 235, "simplest": [235, 332, 334, 335, 338, 341, 344], "9944": 235, "9991": 235, "3020": 235, "2299": [235, 339], "5418": 235, "2989": 235, "6849": 235, "3169": 235, "2690": 235, "9649": [235, 339], "5686": 235, "8602": 235, "0315": 235, "8455": [235, 339], "6027": 235, "4746": 235, "7843": 235, "7782": 235, "2111": 235, "5115": 235, "4687": 235, "5760": 235, "custommodul": 236, "cat": [236, 242, 244, 254, 259, 261, 263, 343], "imaginari": 237, "imagin": 237, "transition_model": 237, "get_reward_oper": 237, "get_transition_model_oper": 237, "min_val": [238, 240], "_bia": 238, "invert": [239, 334], "surject": 240, "expln": 240, "biased_softplu": [240, 325], "beggin": 240, "biased_softplus_": 240, "syntax": [240, 332], "met": [240, 339], "1602": 241, "01783v2": 241, "entropy_bonu": [241, 243, 255, 258, 334], "favour": [241, 243, 255, 258], "samples_mc_entropi": [241, 243, 255, 257, 258], "mont": [241, 243, 255, 258, 332], "carlo": [241, 243, 255, 258, 332], "entropy_coef": [241, 243, 255, 258, 334, 338], "critic_coef": [241, 243, 255, 258, 334], "loss_critic_typ": [241, 243, 255, 258, 260, 334], "l1": [241, 243, 244, 245, 248, 255, 258, 259, 260, 263, 266, 269, 327, 332], "l2": [241, 243, 244, 245, 246, 247, 248, 251, 252, 255, 258, 259, 260, 263, 266, 269, 332], "smooth_l1": [241, 242, 243, 244, 245, 248, 254, 255, 258, 259, 260, 261, 263, 266, 269, 334], "separate_loss": [241, 243, 244, 248, 254, 255, 258, 259, 260, 261, 263], "propag": [241, 243, 244, 248, 254, 255, 258, 259, 260, 261, 263, 271, 272, 273, 274, 334, 338], "advantage_kei": [241, 243, 255, 258, 260, 271, 272, 273, 274], "value_target_kei": [241, 243, 255, 258, 260, 271, 272, 273, 274, 334], "value_target": [241, 243, 255, 258, 260, 271, 272, 273, 274, 334, 338], "loss_crit": [241, 258, 334, 338], "loss_entropi": [241, 258, 334, 338], "loss_object": [241, 258, 334, 338], "recur": [241, 242, 244, 245, 247, 248, 254, 258, 259, 260, 261, 263, 271, 272, 273, 274, 275], "next_reward": [241, 242, 244, 245, 247, 248, 254, 258, 259, 260, 261, 263, 271, 272, 273, 274], "next_don": [241, 242, 244, 245, 247, 248, 254, 258, 259, 260, 261, 263, 271, 272, 273, 274], "next_termin": [241, 242, 244, 245, 247, 248, 254, 258, 259, 260, 261, 263, 271, 272, 273, 274], "loss_obj": 241, "sacloss": [241, 253, 262, 325], "select_out_kei": [241, 242, 244, 248, 254, 258, 259, 261, 263], "essenti": [241, 242, 243, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 263, 269, 333, 339, 341], "make_value_estim": [241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 264, 269, 328, 332, 333, 338], "value_typ": [241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 265, 269, 332], "valueestim": [241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 265, 269, 325, 328, 332, 338], "hyperparam": [241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 269, 332], "enum": [241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 265, 269, 332], "default_value_estim": [241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 269, 332], "default_value_kwarg": [241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 269, 325, 332], "dqn_loss": [241, 242, 244, 245, 247, 248, 249, 250, 254, 256, 258, 259, 260, 261, 263, 264, 269], "conserv": [242, 247], "2006": [242, 247, 339], "actor_network": [242, 244, 246, 248, 254, 257, 259, 261, 263, 332], "qvalue_network": [242, 248, 254, 259, 261, 263], "loss_funct": [242, 244, 245, 246, 247, 248, 254, 259, 261, 263, 266, 269, 332], "alpha_init": [242, 248, 257, 259, 261], "min_alpha": [242, 248, 257, 259, 261], "max_alpha": [242, 248, 257, 259, 261], "fixed_alpha": [242, 248, 257, 259, 261], "target_entropi": [242, 248, 257, 259, 261], "prod": [242, 257, 261], "n_action": [242, 245, 247, 257, 261], "delay_actor": [242, 244, 261, 263], "delay_qvalu": [242, 248, 259, 261, 263], "min_q_weight": 242, "max_q_backup": 242, "backup": 242, "deterministic_backup": 242, "num_random": 242, "with_lagrang": 242, "lagrang": 242, "lagrange_thresh": 242, "valueclass": [242, 244, 248, 254, 259, 261, 263], "qvalu": [242, 248, 254, 259, 261, 263, 316], "loss_actor": [242, 244, 248, 254, 259, 260, 261, 263, 302, 332, 343], "loss_alpha": [242, 248, 259, 261], "loss_alpha_prim": 242, "loss_qvalu": [242, 248, 254, 259, 261, 263], "clip_epsilon": [243, 334, 338], "normalize_advantag": [243, 255, 258, 338], "value_kei": [243, 255, 258, 271, 272, 273, 274, 332], "somemodul": [243, 255, 258], "someactor": [243, 255, 258], "value_head": [243, 255, 258], "somevalu": [243, 255, 258], "loss_modul": [243, 253, 255, 256, 258, 262, 307, 318, 319, 328, 329, 332, 333, 334, 338, 341], "ppoloss": [243, 255, 325], "delay_valu": [244, 245, 247, 249, 260, 261, 269, 333, 335], "loss_valu": [244, 254, 260, 261, 332, 334, 338, 343], "pred_valu": [244, 263, 332, 343], "pred_value_max": [244, 332, 343], "target_valu": [244, 259, 263, 270, 328, 332, 343], "target_value_max": [244, 332, 343], "qvalueactor": [245, 247, 269, 327, 333, 335], "double_dqn": 245, "06461": [245, 253], "mult_one_hot": [245, 248, 269], "loss_val": [245, 247, 328, 332, 334, 335, 338, 341], "2106": 246, "01345": 246, "distanc": [247, 255, 266, 270, 271, 338], "loss_cql": 247, "dcql_loss": 247, "ste": 248, "num_qvalue_net": [248, 254, 259, 261, 263], "target_entropy_weight": 248, "onehotcategor": [248, 325], "disctount": 249, "distributionalqvalueactor": [249, 327], "input_tensordict": [249, 332], "actor_model": 250, "value_model": [250, 252], "model_based_env": 250, "dreamerenv": [250, 325], "imagination_horizon": 250, "unrol": [250, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288], "discount_loss": [250, 252], "lambda_kl": 251, "lambda_reco": 251, "lambda_reward": 251, "reco_loss": 251, "reward_loss": 251, "free_nat": 251, "nat": 251, "delayed_clamp": 251, "global_averag": 251, "value_loss": 252, "fake_data": 252, "ddpgloss": [253, 262, 319, 325, 332, 343], "td3loss": [253, 262, 325], "value_network_update_interv": 253, "2110": 254, "06169": 254, "expectil": 254, "tau": [254, 262, 332, 333], "antmaz": 254, "sticht": 254, "loss_value_diff": 254, "diff": 254, "old_polici": 255, "new_polici": 255, "apart": [255, 338], "dtarg": 255, "samples_mc_kl": 255, "analyt": 255, "decrement": 255, "loss_": [256, 302, 328, 332], "equip": [256, 335], "gh": 256, "_acceptedkei": 256, "dataclass": [256, 316], "_forward_value_estimator_kei": 256, "alter": [256, 327], "value_estim": [256, 271, 272, 273, 274, 275, 328, 332, 338], "myloss": 256, "action2": 256, "convert_to_funct": [256, 332], "expand_dim": 256, "create_target_param": [256, 332], "compare_against": [256, 332], "_param": 256, "expans": 256, "resampl": 256, "_target_param": 256, "blend": 256, "upcom": [256, 280, 281, 282, 283, 285, 286, 287, 288, 332], "proxim": [258, 334, 338], "optimis": [258, 303, 334, 338], "flavour": [258, 338, 343], "clipppoloss": [258, 325, 334, 338], "klpenppoloss": [258, 325], "regularis": 258, "06347": 258, "gae": [258, 325, 328, 332, 334, 338], "ppo_loss": 258, "tdlambda": [258, 265, 328, 332], "base_lay": 258, "randn_lik": 258, "samplelogprob": 258, "openreview": [259, 316], "ay8zfzm0tdd": [259, 316], "sub_sample_len": 259, "subsampl": [259, 298, 329], "action_log_prob_actor": 259, "state_action_value_actor": [259, 263], "connectionist": 260, "1992": 260, "doi": 260, "1007": 260, "bf00992696": 260, "actor_net": [260, 332, 334], "1801": 261, "01290": 261, "applic": [261, 269, 339], "1812": 261, "05905": 261, "redqloss": [262, 325], "math": 262, "theta_t": [262, 339], "theta_": [262, 339], "polyak": 262, "policy_nois": 263, "noise_clip": 263, "next_state_valu": [263, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 325], "td0": [264, 332], "strict_shap": 266, "view_a": 266, "qmixer": [269, 325], "local_valu": 269, "visibl": [269, 338], "dafault": 269, "acceptedkei": 269, "global_valu": 269, "penultim": 269, "local_value_network": 269, "mixer_network": 269, "suggest": [269, 338], "value_modul": [269, 334, 343], "qnet": [269, 332], "next_val_kei": 270, "pred_next_v": 270, "usus": 270, "mse": 270, "q_valu": 270, "n_steps_to_next": 270, "value_next_st": 270, "1506": [271, 276, 284], "02438": [271, 276, 284], "exponenti": [271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 305], "average_ga": [271, 334], "skip_exist": [271, 272, 273, 274], "advang": 271, "gradient_mod": 271, "value_error": [271, 272, 273, 274, 275], "sign": 271, "target_param": [271, 272, 273, 274, 275, 332, 338], "98": [271, 272, 273, 274, 333, 339, 340], "94": [271, 274, 332, 333, 339], "unpack": [271, 272, 273, 274], "tensor_kei": [271, 272, 273, 274, 275], "next_valu": [271, 272, 273, 274, 275], "aka": [272, 333], "average_reward": [272, 273, 274], "tdestim": [272, 273, 275], "infti": 273, "valuefunctionbas": 275, "time_dim": [276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288], "old_stat": [276, 278, 280, 282, 284, 285, 287], "new_stat": [276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288], "rolling_gamma": [280, 281, 282, 283, 285, 286, 287, 288], "g1": [280, 281, 282, 283, 285, 286, 287, 288], "g2": [280, 281, 282, 283, 285, 286, 287, 288], "g3": [280, 281, 282, 283, 285, 286, 287, 288], "g4": [280, 281, 282, 283, 285, 286, 287, 288], "v3": [280, 281, 282, 283, 285, 286, 287, 288], "out_file_bas": 289, "skip_reset": 289, "interv": [289, 290, 299, 309, 333, 339], "center_crop": 290, "make_grid": 290, "grid": 290, "exp_nam": [291, 292, 295, 296, 297, 319, 333], "log_dir": [291, 292, 294, 296, 333], "templat": 291, "csv": [292, 294, 333], "minim": [292, 341], "dependeci": 292, "experiment_nam": [293, 294], "uuid": [293, 333, 344], "logger_typ": 294, "logger_nam": 294, "tensorboard": [294, 296, 343], "wandb": [294, 297, 343], "mlflow": [294, 295], "wandb_kwarg": 294, "mlflow_kwarg": 294, "tracking_uri": 295, "uri": 295, "datastor": 295, "tb_log": 296, "tensoarboard": 296, "sub_traj_len": 298, "min_sub_traj_len": 298, "register_op": [298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 329, 333], "process_optim_batch": [298, 304, 305, 329], "td_out": [298, 306], "_process_optim_batch_hook": [298, 329], "batch_subsampl": 298, "clear_cuda": 299, "pre_optim_step": [299, 329], "counter": [300, 329], "log_pbar": [300, 301, 303, 305, 329, 333], "progress": [300, 301, 303, 307, 329, 333, 335, 344], "count_fram": 300, "pre_steps_log": [300, 301, 329], "count_frames_log": 300, "lognam": 301, "r_train": [301, 333], "log_reward": [301, 333], "loss_compon": 302, "appl": 302, "omit": [302, 334, 339, 341], "optimizer_hook": 302, "record_interv": [303, 332, 333], "record_fram": [303, 310, 332, 333], "policy_explor": [303, 319, 332, 333], "log_kei": [303, 333], "suffix": 303, "underestim": 303, "set_exploration_typ": [303, 325, 334, 335, 343], "r_evalu": [303, 332], "flatten_tensordict": [304, 333], "max_dim": 304, "rb_trainer": 304, "batch_process": [304, 305, 306, 329], "post_loss": [304, 329], "999": [305, 333], "jitter": 305, "finfo": 305, "default_dtyp": 305, "get_default_dtyp": 305, "reward_norm": 305, "update_reward_stat": 305, "normalize_reward": 305, "make_train": [306, 325], "_process_batch_hook": [306, 329], "select_kei": [306, 329], "versatil": 307, "optim_steps_per_batch": [307, 329, 333], "epoch": [307, 334, 338], "clip_grad_norm": 307, "clip_norm": 307, "progress_bar": 307, "save_trainer_interv": 307, "log_interv": [307, 333], "save_trainer_fil": [307, 329], "datacollectorbas": [309, 312, 313, 319, 325], "update_weights_interv": [309, 333], "sit": [309, 333], "update_weight": 309, "post_step": [309, 329], "cfg": [310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 323], "dictconfig": [310, 311, 312, 313, 316, 317, 318, 319, 320, 323], "divid": [310, 327, 332, 338, 339], "unknowingli": 310, "annealing_fram": [310, 332], "init_env_step": [310, 311, 332], "proof_environ": [311, 316, 332], "sta": 311, "ot": 311, "actor_model_explor": [312, 313, 332], "make_env_kwarg": [312, 313], "targetnetupdat": [314, 315, 318, 319], "redqloss_deprec": 315, "actor_net_kwarg": 316, "qvalue_net_kwarg": 316, "observation_kei": 316, "dummi": [316, 332, 344], "parser_env_arg": 316, "parser_model_args_continu": 316, "cattensor": [316, 332, 337, 339, 344], "hydra": 316, "config_stor": 316, "configstor": 316, "config_field": 316, "config_cl": 316, "redqmodelconfig": 316, "envconfig": 316, "make_dataclass": 316, "cls_name": 316, "cs": 316, "config_path": 316, "config_nam": 316, "replayargsconfig": 317, "target_net_updat": [319, 332, 333], "constitu": 319, "learnt": [319, 332, 334], "tensorboardlogg": [319, 325], "egreedywrapp": [319, 333, 335], "env_proof": 319, "obs_spec": 319, "net_valu": 319, "dir": [319, 329, 333], "gettempdir": 319, "argpars": [320, 323], "namespac": [320, 323], "parser": [320, 323], "transformed_env_constructor": [320, 325], "num_env_per_collector": [321, 322], "video_tag": 323, "norm_obs_onli": 323, "use_env_cr": 323, "custom_env_mak": 323, "custom_env": 323, "return_transformed_env": 323, "action_dim_gsd": 323, "state_dim_gsd": 323, "obs_norm_state_dict": 323, "wheter": 323, "maker": 323, "asyncdatacollector": 325, "distributedsyncdatacollector": 325, "submitit_delayed_launch": 325, "raycollector": 325, "immutabledatasetwrit": 325, "tensordictmaxvaluewrit": 325, "d4rlexperiencereplai": 325, "minariexperiencereplai": 325, "openmlexperiencereplai": 325, "openxexperiencereplai": 325, "vd4rlexperiencereplai": 325, "unboundeddiscretetensorspec": [325, 344], "lazystackedtensorspec": 325, "lazystackedcompositespec": 325, "prompttensordicttoken": 325, "rolloutfrommodel": 325, "tokenizeddatasetload": 325, "create_infinite_iter": 325, "consolidate_spec": 325, "check_no_exclusive_kei": 325, "contains_lazy_spec": 325, "check_marl_group": 325, "tensordictrecord": 325, "videorecord": [325, 334], "get_available_librari": 325, "set_exploration_mod": 325, "make_composite_from_td": [325, 339], "terminated_or_trunc": 325, "braxwrapp": 325, "dmcontrolenv": [325, 332, 337, 344], "dmcontrolwrapp": [325, 344], "jumanjienv": 325, "jumanjiwrapp": 325, "mogymenv": 325, "mogymwrapp": 325, "multithreadedenvwrapp": 325, "openmlenv": 325, "pettingzooenv": 325, "robohiveenv": 325, "smacv2env": 325, "smacv2wrapp": 325, "vmaswrapp": 325, "qvaluehook": 325, "distributionalqvaluehook": 325, "reset_nois": 325, "cemplann": 325, "mpcplannerbas": 325, "mppiplann": 325, "independentnorm": 325, "truncatednorm": 325, "maskedonehotcategor": 325, "inv_softplu": 325, "vmapmodul": 325, "distributionaldqnloss": [325, 333], "discretesacloss": 325, "iqlloss": 325, "cqlloss": 325, "discretecqlloss": 325, "dtloss": 325, "onlinedtloss": 325, "a2closs": 325, "reinforceloss": 325, "dreameractorloss": 325, "dreamermodelloss": 325, "dreamervalueloss": 325, "td0estim": [325, 332], "td1estim": [325, 332], "td0_return_estim": 325, "td0_advantage_estim": 325, "td1_return_estim": 325, "vec_td1_return_estim": 325, "td1_advantage_estim": 325, "vec_td1_advantage_estim": 325, "td_lambda_return_estim": 325, "vec_td_lambda_return_estim": 325, "td_lambda_advantage_estim": 325, "vec_td_lambda_advantage_estim": 325, "generalized_advantage_estim": 325, "vec_generalized_advantage_estim": 325, "reward2go": 325, "distance_loss": [325, 332], "hold_out_net": 325, "hold_out_param": [325, 332], "softupd": [325, 332, 333, 335], "hardupd": [325, 332], "batchsubsampl": [325, 329], "clearcudacach": 325, "countframeslog": 325, "logreward": [325, 329, 333], "optimizerhook": [325, 333], "replaybuffertrain": [325, 329, 333], "rewardnorm": 325, "selectkei": [325, 329], "trainerhookbas": [325, 329, 333], "updateweight": [325, 329, 333], "make_collector_offpolici": 325, "make_collector_onpolici": 325, "make_dqn_loss": 325, "make_redq_loss": 325, "make_redq_model": 325, "make_replay_buff": [325, 332], "make_target_updat": 325, "parallel_env_constructor": [325, 332], "sync_async_collector": 325, "sync_sync_collector": 325, "correct_for_frame_skip": 325, "get_stats_random_rollout": 325, "csvlogger": [325, 333], "mlflowlogg": 325, "wandblogg": 325, "get_logg": 325, "generate_exp_nam": 325, "journei": 326, "textbook": 326, "highlight": 326, "ever": [326, 338], "bump": 326, "think": [326, 334, 338, 344], "benefit": [326, 338, 341], "pr": 326, "ground": [327, 332, 339], "categori": [327, 329], "recycl": [327, 341], "impos": 327, "violat": 327, "noisier": 327, "Their": [327, 338], "sd": 327, "prob_modul": 327, "pick": [327, 332, 333], "tabl": [327, 333], "customari": 327, "hopefulli": [327, 333], "functional_modul": 327, "make_funct": [327, 343], "mathbb": [327, 333], "rightarrow": [327, 333], "soften": 327, "backbon": [327, 335, 337, 343], "make_actor": 327, "make_valu": 327, "shared_param": 327, "make_common": 327, "reusabl": [328, 332, 341], "swappabl": [328, 332], "characterist": [328, 332, 339], "trainabl": [328, 332, 340], "whatev": [328, 332], "smth": [328, 332], "metric": [328, 332], "nutshel": [328, 332], "barto": [328, 338], "chapter": 328, "significantli": [328, 332, 333, 338], "next_stat": 328, "value_net_loss": 328, "pow": [328, 332], "therebi": 328, "room": 328, "convers": 328, "signifi": [328, 338], "underperform": 328, "thin": 328, "intric": 328, "believ": 329, "scheme": [329, 344], "substenti": 329, "_pre_steps_log_hook": 329, "_pre_optim_hook": 329, "sub_batch": 329, "_post_loss_hook": 329, "_post_optim_hook": 329, "post_optim": [329, 333], "_post_optim_log": 329, "post_optim_log": 329, "_post_steps_hook": 329, "_post_steps_log_hook": 329, "post_steps_log": 329, "comment": [329, 333, 343], "reserv": 329, "logginghook": 329, "logging_hook": 329, "save_dict": 329, "some_valu": 329, "torchsnapshot": 329, "ckpt_backend": 329, "pt": [329, 340], "filepath": 329, "save_train": 329, "load_from_fil": 329, "613": [331, 339, 342], "galleri": [331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344], "mem": [331, 342], "mb": [331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344], "torchrl_demo": [331, 342, 343], "56": [331, 332, 333, 339, 340, 342, 343], "648": [331, 342, 343], "torchrl_env": [331, 342, 344], "267": [331, 339, 342, 344], "dqn_with_rnn": [331, 335, 342], "681": [331, 335, 342], "1895": [331, 342], "multiagent_ppo": [331, 338, 342], "02": [331, 332, 333, 334, 335, 338, 339, 340, 342], "426": [331, 338, 339, 342], "coding_dqn": [331, 333, 342], "51": [331, 333, 339, 341, 342], "004": [331, 333, 339, 342], "734": [331, 333, 342], "rb_tutori": [331, 341, 342], "518": [331, 339, 341, 342], "386": [331, 339, 342], "136": [331, 339, 342], "coding_ddpg": [331, 332, 342], "486": [331, 332, 339, 342], "coding_ppo": [331, 334, 342], "938": [331, 334, 342], "pretrained_model": [331, 340, 342], "00": [331, 332, 333, 334, 335, 338, 339, 340, 342], "52": [331, 333, 339, 340, 342], "3648": [331, 333, 340, 342], "multi_task": [331, 337, 342], "49": [331, 333, 334, 337, 339, 340, 342], "185": [331, 337, 339, 342], "25": [331, 332, 333, 334, 337, 338, 339, 342], "author": [332, 333, 334, 335, 338, 339, 341], "vincent": [332, 333, 334, 335, 339, 341], "moen": [332, 333, 334, 335, 339, 341], "assembl": 332, "focus": 332, "straightforward": [332, 333, 341], "overview": [332, 334, 338, 343], "transpar": [332, 335], "understood": 332, "sota": [332, 333, 343], "illustr": [332, 333, 341], "loss_dict": 332, "oblivi": [332, 334, 341], "elementari": 332, "didact": 332, "dilut": 332, "pessimist": [332, 333, 334], "target_actor_network_param": 332, "actor_in_kei": 332, "actor_crit": 332, "noth": [332, 334], "compromis": 332, "hp": 332, "hasattr": 332, "_value_estim": 332, "elif": [332, 333], "notimplementederror": 332, "unknown": 332, "_loss_actor": 332, "td_copi": 332, "actor_network_param": 332, "value_network_param": 332, "_loss_valu": 332, "pred_val": 332, "target_value_network_param": 332, "smooth": [332, 333], "loss_funt": 332, "glue": 332, "_forward": 332, "ndimens": 332, "remaind": 332, "focu": [332, 333, 334], "pixels_onli": [332, 333, 343, 344], "env_librari": 332, "env_task": 332, "env_arg": 332, "friendli": 332, "torchr": 332, "rescal": 332, "presum": 332, "make_transformed_env": 332, "reward_sc": 332, "double_to_float_list": 332, "double_to_float_inv_list": 332, "marker": 332, "env_per_collector": 332, "transform_state_dict": 332, "make_t_env": 332, "adjust": [332, 338, 339], "seem": [332, 335], "cheat": 332, "10m": 332, "cautiou": 332, "magnitud": 332, "thousand": [332, 335], "get_env_stat": 332, "proof_env": 332, "5000": [332, 333, 334], "maxim": [332, 339], "recal": [332, 334], "ddpgmlpactor": 332, "ddpgmlpqnet": 332, "materi": 332, "ornsteinuhlenbeckprocesswrapp": 332, "make_ddpg_actor": 332, "q_net": 332, "moduless": 332, "sugges": 332, "tight": 332, "10_000": [332, 334, 341], "traj_len": [332, 335], "make_record": 332, "recorder_obj": 332, "flavor": 332, "circular": 332, "buffer_s": [332, 333], "random_crop_len": 332, "prb": 332, "buffer_scratch_dir": 332, "temporari": 332, "dirrectori": 332, "trajecotri": 332, "sampel": 332, "dataflow": 332, "ceil_div": 332, "utd": [332, 335], "update_to_data": 332, "realiz": 332, "_must_": 332, "001": [332, 339], "outdat": 332, "trick": [332, 333], "despit": 332, "adam": [332, 333, 334, 335, 338, 339], "optimizer_actor": 332, "lr": [332, 333, 334, 335, 338, 339], "weight_decai": [332, 333], "optimizer_valu": 332, "total_collection_step": 332, "pretti": [332, 341], "rewards_ev": 332, "collected_fram": 332, "pbar": [332, 334, 335, 338, 339], "r0": 332, "numel": [332, 334, 335, 340, 341], "current_fram": 332, "sampled_tensordict": 332, "gn1": 332, "clip_grad_norm_": [332, 334, 338, 339], "gn2": 332, "gn": [332, 339], "td_record": 332, "rn": 332, "set_descript": [332, 334, 335, 338, 339], "2f": 332, "800": [332, 333], "2491": 332, "82it": [332, 339], "1600": [332, 333], "1041": 332, "35it": [332, 339], "3200": [332, 333], "2172": 332, "81it": [332, 333], "48": [332, 333, 338, 339, 340], "4800": [332, 333, 339], "3034": 332, "66it": [332, 333, 339], "62": [332, 333, 339, 340], "36": [332, 333, 334, 338, 339], "134": [332, 339], "372": [332, 339], "5600": 332, "6400": [332, 343], "1340": 332, "94it": [332, 333, 335, 339], "74": [332, 333, 339, 340], "61": [332, 333, 339, 340], "53": [332, 333, 339, 340, 341], "303": [332, 339], "09": [332, 333, 335, 339], "89": [332, 333, 339, 340], "72": [332, 333, 339, 340, 341], "7200": 332, "881": 332, "52it": [332, 333], "91": [332, 333, 339], "261": [332, 339], "83": [332, 333, 339, 340], "80": [332, 333, 334, 338, 339, 340], "8000": [332, 334], "657": 332, "17it": [332, 333], "293": [332, 339], "93": [332, 333, 339, 340], "8800": 332, "557": [332, 339], "78it": [332, 333, 339], "96": [332, 333, 339, 340], "310": [332, 339], "54": [332, 333, 339, 340], "97": [332, 333, 339, 340], "9600": 332, "414": [332, 339], "98it": [332, 333, 339], "58": [332, 333, 339, 340, 341], "148": [332, 339, 341], "276": [332, 339], "10400it": 332, "408": [332, 339], "20it": 332, "60": [332, 333, 334, 338, 339, 343], "41": [332, 333, 339, 341], "157": [332, 339], "07": [332, 333, 335, 339], "plot": [332, 334, 335, 338, 339], "mention": [332, 335, 341, 344], "matplotlib": [332, 334, 335, 338, 339, 341, 344], "pyplot": [332, 334, 335, 338, 339, 341, 344], "plt": [332, 334, 335, 338, 339, 341, 344], "zip": [332, 336], "legend": 332, "xlabel": [332, 335, 338, 339], "ylabel": [332, 338], "tight_layout": 332, "concret": [332, 334], "takeawai": [332, 333], "minut": [332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "jupyt": [332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344], "ipynb": [332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344], "sphinx": [332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344], "customis": [333, 338], "road": 333, "aspect": 333, "highest": 333, "prerequisit": [333, 335], "familiar": [333, 338, 344], "lookup": 333, "amort": [333, 334], "conjunct": 333, "cart": 333, "pole": 333, "un": 333, "actuat": 333, "frictionless": 333, "upright": 333, "duelingcnndqnet": 333, "is_notebook": 333, "shell": 333, "get_ipython": 333, "__class__": 333, "zmqinteractiveshel": 333, "qtconsol": 333, "terminalinteractiveshel": 333, "ipython": [333, 338, 339], "nameerror": 333, "umbrella": 333, "misplac": 333, "misus": 333, "orchestr": 333, "everyth": [333, 335], "five": [333, 334], "64x64": 333, "motion": [333, 339], "obs_norm_sd": 333, "simpler": 333, "get_norm_stat": 333, "test_env": 333, "make_model": 333, "dummy_env": 333, "output_s": [333, 335], "init_bia": 333, "actor_explor": 333, "eps_greedy_v": 333, "eps_greedy_val_env": 333, "get_replay_buff": 333, "n_optim": 333, "themselv": 333, "simplic": [333, 334, 340, 341], "get_collector": 333, "data_collector": 333, "bunch": 333, "concept": [333, 341], "power": 333, "ubiquit": 333, "get_loss_modul": 333, "target_updat": 333, "995": [333, 339], "sensit": 333, "variat": 333, "2e": [333, 339], "wd": 333, "upd": 333, "harder": [333, 343], "5_000": 333, "500000": 333, "100000": 333, "005": 333, "mandatori": [333, 334, 338, 339], "fairer": 333, "budget": [333, 334], "dqn_exp_": 333, "uuid1": [333, 344], "9895": 333, "0737": 333, "tmp": [333, 341], "tmp85ynndhw": 333, "dqn_exp_375cb38c": 333, "ae3d": 333, "11ee": [333, 344], "810f": [333, 344], "0242ac110002": [333, 344], "registr": 333, "cumbersom": 333, "buffer_hook": 333, "weight_updat": 333, "descript": [333, 334], "aliv": 333, "total_reward": 333, "29it": 333, "4497": 333, "9259": 333, "57it": 333, "05": [333, 334, 335, 339, 340], "79it": [333, 339], "3893": 333, "74it": 333, "4045": 333, "40": [333, 334, 338, 339, 340], "19it": 333, "3380": 333, "192": [333, 339], "34it": 333, "4375": [333, 339], "224": [333, 339], "43": [333, 339, 340], "85it": [333, 339], "61it": [333, 339], "3772": 333, "288": [333, 339], "4012": 333, "96it": [333, 339], "4797": 333, "352": [333, 339], "47it": 333, "4948": 333, "384": [333, 339], "76it": [333, 339], "4074": [333, 339], "416": [333, 339], "66": [333, 339, 340, 341], "45it": 333, "448": [333, 339], "67": [333, 337, 339, 340], "02it": 333, "480": [333, 339, 340], "58it": [333, 339], "88it": [333, 339], "4104": 333, "544": [333, 339], "68": [333, 339, 340, 341], "43it": [333, 339], "4676": 333, "576": [333, 339], "608": [333, 339], "69": [333, 339, 340], "33it": 333, "640": 333, "49it": [333, 339], "672": 333, "72it": [333, 334], "704": 333, "70": [333, 334, 338, 339, 340], "30it": [333, 339], "736": 333, "05it": [333, 339], "768": 333, "59": [333, 339], "65it": [333, 335], "83it": [333, 335, 339], "3923": 333, "832": 333, "71": [333, 339, 340], "00it": [333, 339], "4526": 333, "864": 333, "28it": 333, "896": 333, "57": [333, 339, 340], "84it": [333, 334, 339], "928": 333, "59it": [333, 339], "960": 333, "992": [333, 339], "11it": [333, 339], "1056": 333, "31it": 333, "4586": 333, "1088": 333, "55": [333, 335, 339, 340], "38it": 333, "1120": 333, "36it": [333, 334], "1152": 333, "1184": 333, "10it": 333, "1216": 333, "04it": 333, "1248": 333, "68it": [333, 339], "1280": 333, "21it": 333, "1344": 333, "1376": 333, "1408": 333, "1440": 333, "1472": 333, "1504": 333, "31": [333, 339, 340], "1536": 333, "95it": [333, 339], "1568": 333, "1632": 333, "1696": 333, "4254": [333, 339], "1728": 333, "47": [333, 335, 339, 340], "1760": 333, "1792": 333, "1824": 333, "45": [333, 335, 339, 340], "93it": [333, 339], "1856": 333, "1888": 333, "1920": 333, "86it": [333, 334, 339], "1952": 333, "1984": 333, "06it": [333, 334], "2016": 333, "2048": [333, 340], "2080": 333, "90it": [333, 339], "2112": [333, 339], "03it": 333, "2144": 333, "71it": [333, 339], "2176": 333, "2208": 333, "09it": 333, "2240": 333, "2272": 333, "2304": 333, "2336": 333, "32it": [333, 339], "2368": 333, "2400": 333, "55it": 333, "2432": 333, "2464": [333, 344], "44it": [333, 339], "2496": 333, "2528": [333, 339], "50it": 333, "2560": 333, "18it": 333, "2624": 333, "26it": 333, "2656": [333, 339], "2688": 333, "16it": 333, "2720": [333, 339], "2752": 333, "2784": 333, "08it": [333, 339], "2816": 333, "2848": 333, "2880": 333, "2912": 333, "15it": 333, "2944": [333, 339], "01it": [333, 339], "2976": [333, 339], "3040": 333, "3072": 333, "3104": 333, "63": [333, 339, 340, 341], "3136": 333, "56it": 333, "3168": 333, "97it": [333, 339], "65": [333, 338, 339], "3232": [333, 339], "5556": 333, "3264": 333, "67it": [333, 339], "3296": 333, "80it": [333, 339], "3328": 333, "3360": 333, "54it": 333, "3392": 333, "64it": 333, "3424": 333, "40it": [333, 335], "3456": [333, 339], "3488": 333, "3520": 333, "12it": [333, 334], "3552": 333, "3584": 333, "89it": [333, 334, 339], "3616": 333, "73": [333, 339], "3680": 333, "3712": 333, "3744": 333, "76": [333, 339, 340, 341], "3776": 333, "3808": 333, "77": [333, 339, 340], "3840": 333, "3872": 333, "78": [333, 339, 340, 341], "3904": 333, "79": [333, 339, 340], "3936": 333, "53it": 333, "3968": 333, "48it": 333, "4000": [333, 334], "4032": 333, "51it": [333, 339], "4064": 333, "82": [333, 339, 340], "4096": 333, "4128": [333, 339], "4160": 333, "4192": 333, "4224": 333, "85": [333, 339], "4256": [333, 339], "46it": [333, 339], "4288": [333, 339], "4320": 333, "73it": [333, 339], "4352": 333, "4384": 333, "4416": 333, "4448": 333, "90": [333, 334, 338, 339, 341], "4480": 333, "69it": [333, 339], "4512": 333, "4544": 333, "92": [333, 339, 340], "4576": 333, "13it": [333, 334], "4608": 333, "4640": 333, "4672": [333, 339], "25it": [333, 339], "4704": 333, "4736": 333, "4768": 333, "23it": 333, "4832": 333, "4864": 333, "42it": [333, 334], "4896": 333, "4928": 333, "4960": 333, "4992": 333, "5024it": 333, "print_csv_files_in_fold": 333, "folder_path": 333, "csv_file": 333, "output_str": 333, "dirpath": 333, "walk": [333, 337], "endswith": 333, "strip": 333, "4104118049144745": 333, "4074399769306183": 333, "44965073466300964": 333, "4796708822250366": 333, "4948333501815796": 333, "4676021933555603": 333, "5246604084968567": 333, "3092312812805176": 333, "2670706510543823": 333, "35081034898757935": 333, "2701444625854492": 333, "4980882406234741": 333, "6632158160209656": 333, "45616433024406433": 333, "48585250973701477": 333, "grad_norm_0": 333, "073899507522583": 333, "2801804542541504": 333, "072730541229248": 333, "1727771759033203": 333, "868962526321411": 333, "857294082641602": 333, "976449012756348": 333, "2517852783203125": 333, "213089942932129": 333, "10000000894069672": 333, "55555534362793": 333, "qvaluenetwork": 333, "worst": 333, "accuraci": 333, "fanci": 333, "talk": 334, "repetit": 334, "six": 334, "sophist": [334, 338], "invent": 334, "theta_k": 334, "pi_": 334, "exceed": 334, "discourag": [334, 339], "indispens": 334, "analyz": 334, "lingua": 334, "franca": 334, "defaultdict": [334, 339], "has_cuda": [334, 338, 344], "3e": [334, 335, 338], "max_grad_norm": [334, 338], "ourselv": [334, 344], "benefici": 334, "errat": 334, "hamper": [334, 341], "reactiv": 334, "xy": 334, "sub_batch_s": 334, "num_epoch": [334, 338], "entropy_ep": [334, 338], "generalist": 334, "interchang": [334, 340, 341], "panel": 334, "charact": 334, "inverteddoublependulum": 334, "transmit": 334, "stai": 334, "supplementari": [334, 344], "told": 334, "stringent": [334, 338], "confid": [334, 338], "ran": 334, "f_": 334, "mu_": 334, "difficulti": [334, 344], "brought": [334, 335], "d_ob": 334, "d_action": 334, "policy_modul": [334, 338], "That": 334, "said": 334, "briefli": [334, 338], "refil": [334, 338], "conveni": [334, 338, 339], "easiest": [334, 338], "mathemat": [334, 338], "tradeoff": [334, 338], "advantage_modul": 334, "lr_schedul": [334, 339], "cosineannealinglr": [334, 339], "eval_str": 334, "tensordict_data": [334, 338], "data_view": [334, 338], "subdata": [334, 338], "cum_reward_str": 334, "4f": [334, 335, 339], "stepcount_str": 334, "param_group": 334, "lr_str": 334, "eval_rollout": 334, "nice": 334, "338": [334, 339], "129": [334, 339], "2056": 334, "0839": 334, "0003": [334, 335, 339], "339": [334, 339], "1284": 334, "3000": 334, "340": [334, 339], "1598": 334, "341": [334, 339], "1697": 334, "0002": [334, 339], "342": [334, 339], "2058": 334, "6000": 334, "343": [334, 339], "2179": 334, "7000": 334, "2326": 334, "2380": 334, "9000": 334, "77it": [334, 339], "2383": 334, "344": [334, 339], "2593": [334, 339], "cap": [334, 341], "figsiz": [334, 339], "subplot": [334, 339, 344], "titl": [334, 335, 338, 339], "bit": [334, 335, 338, 341], "lstmmodul": 335, "84x84": 335, "accessori": 335, "stamp": 335, "tensordictprim": 335, "assist": 335, "emb": 335, "n_cell": 335, "customiz": 335, "almost": 335, "wouldn": 335, "make_tensordict_prim": 335, "interpolationmod": 335, "qval": 335, "stoch_polici": 335, "opportun": 335, "coupl": [335, 339, 341], "uniniti": 335, "again": [335, 338, 340, 341, 344], "redund": 335, "strongli": 335, "million": 335, "sake": [335, 340, 341], "20_000": [335, 339], "longest": 335, "npai": 335, "action_spread": 335, "1000000": 335, "118": [335, 339], "115": [335, 339], "0006": [335, 339], "150": [335, 339], "151": [335, 339], "0004": [335, 339], "168": [335, 339], "0005": 335, "1896": 335, "tutorials_python": 336, "tutorials_jupyt": 336, "humanoid": 337, "env1_obs_kei": 337, "observation_stand": 337, "env2_obs_kei": 337, "observation_walk": 337, "tdreset1": 337, "tdreset2": 337, "tdreset": 337, "policy_common": 337, "policy_stand": 337, "policy_walk": 337, "But": 337, "exclusive_field": [337, 343], "stack_dim": [337, 343], "env1_mak": 337, "env2_mak": 337, "_single_task": 337, "td_rollout": 337, "matteo": 338, "bettini": 338, "maddpg": 338, "navig": 338, "lidar": 338, "sensor": 338, "collis": 338, "tie": 338, "mappo": 338, "ippo": 338, "phase": [338, 341], "mathbf": 338, "pi": [338, 339], "fed": [338, 341], "approxim": [338, 344], "literatur": 338, "overcom": 338, "stationari": 338, "concurr": 338, "analys": 338, "gui": 338, "visualis": 338, "multiagentmlp": 338, "divic": 338, "vmas_devic": 338, "6_000": 338, "team": [338, 343], "n_iter": 338, "minibatch_s": 338, "generalis": 338, "furthermor": 338, "simd": 338, "parallelis": 338, "warp": 338, "todai": 338, "circl": 338, "surround": 338, "dot": [338, 339], "collid": 338, "drag": 338, "elast": 338, "acceler": 338, "penalis": 338, "num_vmas_env": 338, "scenario_nam": 338, "four": [338, 339], "environmnet": 338, "final_rew": 338, "agent_collis": 338, "stress": 338, "paramount": 338, "n_rollout_step": 338, "evolut": 338, "yourself": 338, "utilis": 338, "n_actions_per_ag": 338, "n_obs_per_ag": 338, "share_parameters_polici": 338, "policy_net": 338, "denot": 338, "carefulli": [338, 344], "grant": 338, "converg": 338, "cooper": 338, "share_parameters_crit": 338, "critic_net": 338, "fantast": 338, "minibatch": 338, "desc": 338, "episode_reward_mean": 338, "episode_reward_mean_list": 338, "get_item_shap": 338, "critic_param": 338, "target_critic_param": 338, "refresh": 338, "3641679584980011": 338, "4940122067928314": 338, "0600677728652954": 338, "4344534873962402": 338, "1100871562957764": 338, "304917335510254": 338, "6943857669830322": 338, "871443748474121": 338, "8500826358795166": 338, "759843587875366": 338, "xvfb": 338, "pyvirtualdisplai": 338, "1400": [338, 339], "900": 338, "pil": 338, "rendering_callback": 338, "fromarrai": 338, "rgb_arrai": [338, 339], "gif": 338, "save_al": 338, "append_imag": 338, "profici": 338, "master": 338, "freeli": 339, "codebas": 339, "touch": 339, "undertaken": 339, "broader": 339, "wider": 339, "algebra": 339, "acquaint": 339, "avenu": 339, "_apply_to_composit": 339, "default_x": 339, "default_i": 339, "torqu": 339, "upward": 339, "angular": 339, "sin": 339, "rad": 339, "sec": 339, "gravit": 339, "angl": 339, "deleg": 339, "new_th": 339, "new_thdot": 339, "thdot": 339, "g_forc": 339, "max_torqu": 339, "angle_norm": 339, "max_spe": 339, "albeit": 339, "gen_param": 339, "high_th": 339, "high_thdot": 339, "low_th": 339, "low_thdot": 339, "rng": 339, "lazili": 339, "organ": [339, 341], "trivial": 339, "shortcut": [339, 344], "irrelev": 339, "_make_spec": 339, "td_param": 339, "pseudo": 339, "render_mod": 339, "render_fp": 339, "random_": 339, "_make_step": 339, "staticmethod": 339, "complic": [339, 341, 344], "showcas": 339, "skeleton": 339, "_apply_transform": [339, 344], "_inv_apply_transform": [339, 344], "subset": [339, 340], "unitari": 339, "sine": 339, "cosin": 339, "sintransform": 339, "tensordict_reset": 339, "costransform": 339, "t_sin": 339, "t_co": 339, "cat_transform": 339, "mdp": 339, "simple_rollout": 339, "unexplor": 339, "recreat": 339, "init_td": 339, "traj_return": 339, "last_reward": 339, "is_ipython": 339, "inlin": 339, "get_backend": 339, "ion": 339, "gcf": 339, "clear_output": 339, "625": 339, "0488": 339, "0748": 339, "519": 339, "0499": 339, "4472": 339, "073": 339, "0685": 339, "0408": 339, "552": 339, "5154": 339, "9086": 339, "87it": 339, "9385": 339, "155": 339, "2568": 339, "4981": 339, "223": 339, "8929": 339, "4491": 339, "581": 339, "3233": 339, "0664": 339, "596": 339, "92it": 339, "1021": 339, "5263": 339, "9579": 339, "5807": 339, "8075": 339, "212": 339, "2009": 339, "5525": 339, "914": 339, "2894": 339, "0115": 339, "0977": 339, "1845": 339, "1830": 339, "4858": 339, "233": 339, "91it": 339, "2863": 339, "0297": 339, "464": 339, "4617": 339, "5997": 339, "904": 339, "1647": 339, "0777": 339, "901": 339, "4709": 339, "6813": 339, "8317": 339, "3221": 339, "5554": 339, "3353": 339, "701": 339, "8570": 339, "6656": 339, "463": 339, "7779": 339, "6911": 339, "875": 339, "0796": 339, "7082": 339, "308": 339, "0421": 339, "1496": 339, "5037": 339, "1755": 339, "5029": 339, "9454": 339, "665": 339, "9330": 339, "2118": 339, "444": 339, "0995": 339, "6294": 339, "3146": 339, "2909": 339, "461": 339, "9720": 339, "1298": 339, "9923": 339, "0345": 339, "3438": 339, "3688": 339, "424": 339, "6953": 339, "5233": 339, "411": 339, "8011": 339, "5329": 339, "2677": 339, "6969": 339, "7010": 339, "376": 339, "9352": 339, "7707": 339, "6178": 339, "5646": 339, "348": 339, "7304": 339, "9407": 339, "942": 339, "3882": 339, "7604": 339, "3507": 339, "8928": 339, "258": 339, "6978": 339, "4641": 339, "549": 339, "6047": 339, "5005": 339, "4136": 339, "2993": 339, "3222": 339, "4046": 339, "7314": 339, "275": 339, "6331": 339, "9318": 339, "961": 339, "8331": 339, "1604": 339, "4099": 339, "4761": 339, "125": [339, 341], "4262": 339, "6363": 339, "382": 339, "3593": 339, "7377": 339, "2847": 339, "3443": 339, "867": 339, "3592": 339, "4760": 339, "441": 339, "9950": 339, "8021": 339, "3528": 339, "1214": 339, "708": 339, "4023": 339, "3583": 339, "041": 339, "3801": 339, "0310": 339, "120": 339, "4244": 339, "2039": 339, "4850": 339, "8748": 339, "706": 339, "4897": 339, "9210": 339, "8964": 339, "0832": 339, "3934": 339, "456": 339, "8971": 339, "2933": 339, "3377": 339, "6996": 339, "2274": 339, "8916": 339, "098": 339, "2660": 339, "9110": 339, "4503": 339, "6956": 339, "9172": 339, "4026": 339, "946": 339, "9229": 339, "5205": 339, "294": 339, "8872": 339, "6637": 339, "019": 339, "9281": 339, "2082": 339, "724": 339, "8561": 339, "6574": 339, "357": 339, "4138": 339, "5230": 339, "385": 339, "4065": 339, "5642": 339, "921": 339, "9786": 339, "4129": 339, "5831": 339, "266": 339, "7723": 339, "4152": 339, "0898": 339, "389": 339, "5155": 339, "5376": 339, "5616": 339, "4094": 339, "283": 339, "5333": 339, "4803": 339, "895": 339, "6566": 339, "2588": 339, "662": 339, "4732": 339, "7503": 339, "068": 339, "0714": 339, "3370": 339, "059": 339, "8612": 339, "1915": 339, "3855": 339, "0349": 339, "9644": 339, "4538": 339, "445": 339, "0392": 339, "4080": 339, "1648": 339, "9599": 339, "143": 339, "4284": 339, "5946": 339, "2590": 339, "9181": 339, "4621": 339, "9075": 339, "674": 339, "1772": 339, "9444": 339, "351": 339, "9391": 339, "5595": 339, "8673": 339, "6240": 339, "5919": 339, "0018": 339, "1071": 339, "9127": 339, "251": 339, "9799": 339, "3131": 339, "9612": 339, "9705": 339, "8741": 339, "2230": 339, "0972": 339, "0337": 339, "0350": 339, "0654": 339, "102": [339, 341], "2441": 339, "4596": 339, "362": 339, "103": 339, "4362": 339, "171": 339, "104": [339, 341], "4041": 339, "6907": 339, "105": 339, "4664": 339, "2760": 339, "0299": 339, "9712": 339, "349": 339, "107": 339, "3332": 339, "4479": 339, "772": 339, "108": 339, "4357": 339, "9591": 339, "543": 339, "109": 339, "6216": 339, "1353": 339, "692": 339, "110": 339, "6261": 339, "7086": 339, "496": 339, "111": 339, "7758": 339, "9818": 339, "112": 339, "7772": 339, "5055": 339, "113": [339, 341], "5840": 339, "3180": 339, "2083": 339, "5275": 339, "6873": 339, "116": 339, "4107": 339, "1624": 339, "117": 339, "6372": 339, "2571": 339, "4039": 339, "4428": 339, "119": 339, "4728": 339, "5628": 339, "6767": 339, "2466": 339, "522": 339, "121": [339, 344], "5873": 339, "5072": 339, "122": [339, 344], "6548": 339, "3766": 339, "123": 339, "5134": 339, "1955": 339, "124": 339, "2481": 339, "0591": 339, "4500": 339, "3368": 339, "126": [339, 341], "9708": 339, "7059": 339, "127": [339, 341], "3031": 339, "2534": 339, "843": 339, "3327": 339, "6193": 339, "4831": 339, "1172": 339, "4219": 339, "962": 339, "8380": 339, "899": 339, "132": 339, "2721": 339, "9048": 339, "166": 339, "133": 339, "2419": 339, "5248": 339, "2139": 339, "4278": 339, "135": 339, "0690": 339, "5140": 339, "1140": 339, "7402": 339, "137": 339, "5356": 339, "1636": 339, "138": 339, "0671": 339, "8798": 339, "139": [339, 341], "8918": 339, "3298": 339, "307": 339, "140": 339, "1779": 339, "141": [339, 341], "1771": 339, "3624": 339, "936": 339, "142": 339, "1683": [339, 344], "4810": 339, "99it": 339, "9373": 339, "4435": 339, "144": [339, 341], "4396": 339, "8092": 339, "145": [339, 341], "2572": 339, "146": 339, "4212": 339, "0260": 339, "147": [339, 341], "0939": 339, "6478": 339, "605": 339, "6606": 339, "7289": 339, "149": 339, "9300": 339, "7193": 339, "563": 339, "1166": 339, "8514": 339, "9108": 339, "0672": 339, "292": 339, "152": 339, "8591": 339, "3768": 339, "153": 339, "9976": 339, "154": 339, "0576": 339, "0067": 339, "935": 339, "4199": 339, "1722": 339, "156": 339, "8310": 339, "3466": 339, "8631": 339, "2492": 339, "158": 339, "8763": 339, "1277": 339, "159": 339, "5562": 339, "7446": 339, "1082": 339, "9830": 339, "161": [339, 341], "0946": 339, "5229": 339, "162": 339, "4574": 339, "6900": 339, "163": [339, 340], "2229": 339, "0318": 339, "482": 339, "164": 339, "0543": 339, "0817": 339, "761": 339, "165": 339, "2809": 339, "5118": 339, "366": 339, "1142": 339, "5635": 339, "167": 339, "1949": 339, "2327": 339, "982": 339, "0967": 339, "0387": 339, "457": 339, "169": 339, "0782": 339, "2150": 339, "170": 339, "5222": 339, "3725": 339, "27it": 339, "9288": 339, "9837": 339, "172": 339, "1416": 339, "1099": 339, "173": 339, "8620": 339, "8475": 339, "174": 339, "1807": 339, "175": 339, "1148": 339, "0645": 339, "2751": 339, "8313": 339, "177": 339, "9286": 339, "9770": 339, "178": 339, "5735": 339, "2837": 339, "179": 339, "2926": 339, "9489": 339, "180": 339, "1507": 339, "181": 339, "8724": 339, "3567": 339, "182": 339, "3574": 339, "6140": 339, "183": 339, "7895": 339, "2518": 339, "184": 339, "6146": 339, "8776": 339, "7358": 339, "186": 339, "3722": 339, "8428": 339, "187": 339, "7955": 339, "188": 339, "0092": 339, "7106": 339, "829": 339, "189": 339, "2264": 339, "6919": 339, "190": [339, 341], "1438": 339, "1362": 339, "191": 339, "0618": 339, "8217": 339, "9420": 339, "6765": 339, "193": 339, "7745": 339, "0709": 339, "194": 339, "9478": 339, "6867": 339, "195": 339, "6507": 339, "6225": 339, "196": 339, "2244": 339, "2195": 339, "197": 339, "5385": 339, "9263": 339, "198": 339, "1878": 339, "2374": 339, "199": 339, "8054": 339, "3504": 339, "0766": 339, "6825": 339, "201": 339, "2011": 339, "8393": 339, "202": 339, "0803": 339, "7815": 339, "203": 339, "8363": 339, "2460": 339, "204": 339, "8643": 339, "2191": 339, "593": 339, "205": 339, "0773": 339, "1343": 339, "206": 339, "8657": 339, "207": 339, "9304": 339, "7584": 339, "208": 339, "8752": 339, "2307": 339, "209": 339, "5250": 339, "4869": 339, "7837": 339, "5762": 339, "211": 339, "6661": 339, "8600": 339, "2502": 339, "1752": 339, "213": 339, "3075": 339, "8871": 339, "214": 339, "9406": 339, "8090": 339, "215": 339, "6291": 339, "8923": 339, "876": 339, "216": 339, "9504": 339, "21e": 339, "217": 339, "7431": 339, "7880": 339, "218": 339, "4463": 339, "5432": 339, "219": 339, "3793": 339, "3313": 339, "220": 339, "8843": 339, "0369": 339, "065": 339, "221": 339, "4828": 339, "8391": 339, "222": 339, "6265": 339, "2913": 339, "947": 339, "5541": 339, "1252": 339, "7342": 339, "2396": 339, "225": 339, "5936": 339, "1924": 339, "226": 339, "9975": 339, "2045": 339, "227": 339, "8367": 339, "9540": 339, "228": 339, "7259": 339, "6743": 339, "229": 339, "4827": 339, "7528": 339, "230": 339, "7361": 339, "8756": 339, "231": 339, "7646": 339, "1116": 339, "232": 339, "5426": 339, "8385": 339, "5662": 339, "8585": 339, "234": 339, "8234": 339, "7930": 339, "235": 339, "2648": 339, "9309": 339, "236": 339, "6817": 339, "237": 339, "0943": 339, "1533": 339, "238": 339, "3045": 339, "0483": 339, "239": 339, "240": [339, 343, 344], "6415": 339, "0201": 339, "241": 339, "4437": 339, "4365": 339, "242": 339, "0358": 339, "4943": 339, "243": 339, "1272": 339, "5003": 339, "1180": 339, "2637": 339, "245": 339, "7197": 339, "0873": 339, "246": 339, "2917": 339, "247": 339, "0160": 339, "0738": 339, "248": 339, "3689": 339, "0120": 339, "249": 339, "5570": 339, "0475": 339, "250": 339, "4423": 339, "2220": 339, "6803": 339, "252": 339, "1465": 339, "7214": 339, "253": 339, "8801": 339, "7034": 339, "254": 339, "9136": 339, "4076": 339, "7589": 339, "5013": 339, "8150": 339, "2241": 339, "257": 339, "0753": 339, "8081": 339, "1951": 339, "8314": 339, "259": 339, "0038": 339, "260": 339, "0889": 339, "4616": 339, "0655": 339, "262": 339, "8333": 339, "9476": 339, "263": 339, "7554": 339, "3798": 339, "264": 339, "3717": 339, "3947": 339, "529": 339, "265": 339, "3060": 339, "6495": 339, "7467": 339, "8889": 339, "8457": 339, "591": 339, "268": 339, "7137": 339, "0536": 339, "771": 339, "269": 339, "1651": 339, "388": 339, "270": 339, "8246": 339, "5709": 339, "281": 339, "271": 339, "7502": 339, "0521": 339, "032": 339, "272": 339, "5475": 339, "7253": 339, "273": 339, "2856": 339, "7130": 339, "274": 339, "2778": 339, "4122": 339, "8368": 339, "1841": 339, "9622": 339, "1603": 339, "003e": 339, "277": 339, "0247": 339, "346": 339, "278": 339, "2238": 339, "6418": 339, "279": 339, "0626": 339, "2538": 339, "280": 339, "0149": 339, "7380": 339, "2167": 339, "8911": 339, "282": 339, "8725": 339, "1983": 339, "8142": 339, "3709": 339, "284": 339, "4989": 339, "285": 339, "6464": 339, "6210": 339, "286": 339, "9726": 339, "0820": 339, "287": 339, "6975": 339, "9091": 339, "4926": 339, "4791": 339, "289": 339, "0905": 339, "3500": 339, "290": 339, "2287": 339, "291": 339, "9918": 339, "5543": 339, "9245": 339, "6444": 339, "631": 339, "37it": 339, "0448": 339, "4769": 339, "8566": 339, "7208": 339, "295": 339, "0966": 339, "296": 339, "5303": 339, "1537": 339, "023": 339, "297": 339, "2682": 339, "564": 339, "298": 339, "4318": 339, "5063": 339, "299": 339, "70it": 339, "7475": 339, "4190": 339, "8186": 339, "5077": 339, "301": 339, "1883": 339, "5291": 339, "472": 339, "302": 339, "1256": 339, "3998": 339, "3622": 339, "0930": 339, "626": 339, "304": 339, "9500": 339, "0075": 339, "5664": 339, "305": 339, "5697": 339, "3024": 339, "306": 339, "3117": 339, "0052": 339, "006": 339, "0981": 339, "9312": 339, "3873": 339, "309": 339, "0411": 339, "2650": 339, "1656": 339, "0228": 339, "311": 339, "1196": 339, "2478": 339, "312": 339, "7353": 339, "0812": 339, "313": 339, "3022": 339, "758": 339, "314": 339, "1406": 339, "4626": 339, "315": 339, "2156": 339, "851": 339, "316": 339, "1953": 339, "3774": 339, "317": 339, "6385": 339, "9917": 339, "318": 339, "2764": 339, "905": 339, "319": 339, "6391": 339, "9317": 339, "9748": 339, "2679": 339, "321": 339, "8495": 339, "5125": 339, "8177": 339, "6602": 339, "323": 339, "0704": 339, "5776": 339, "324": 339, "9833": [339, 343], "1339": 339, "402": 339, "325": 339, "1238": 339, "326": 339, "9299": 339, "0227": 339, "327": 339, "7727": 339, "1607": 339, "336": 339, "328": 339, "3958": 339, "3223": 339, "763": 339, "329": 339, "4742": 339, "1797": 339, "330": 339, "0144": 339, "0085": 339, "791": 339, "331": 339, "8284": 339, "0428": 339, "332": 339, "0098": 339, "7365": 339, "333": 339, "4566": 339, "0781": 339, "086": 339, "334": 339, "3355": 339, "0230": 339, "335": 339, "9346": 339, "0423": 339, "076": 339, "3711": 339, "1335": 339, "6855": 339, "337": 339, "0304": 339, "0023": 339, "8459": 339, "9998": 339, "4399": 339, "2303": 339, "1346": 339, "2915": 339, "7116": 339, "5560": 339, "0487": 339, "5119": 339, "061": 339, "3305": 339, "3705": 339, "957": 339, "6068": 339, "345": 339, "5731": 339, "3897": 339, "0376": 339, "347": 339, "0434": 339, "012": 339, "1300": 339, "1215": 339, "0968": 339, "0885": 339, "350": 339, "1348": 339, "0073": 339, "5052": 339, "4184": 339, "2817": 339, "8887": 339, "353": 339, "4779": 339, "1009": 339, "354": 339, "0604": 339, "599": 339, "355": 339, "4486": 339, "1176": 339, "656": 339, "356": 339, "2436": 339, "0668": 339, "8849": 339, "0012": 339, "358": 339, "7511": 339, "8804": 339, "359": 339, "8870": 339, "6728": 339, "360": 339, "8841": 339, "5508": 339, "361": 339, "5242": 339, "0268": 339, "0013": 339, "6185": 339, "363": 339, "1378": 339, "0204": 339, "364": 339, "0355": 339, "685": 339, "365": 339, "4884": 339, "0231": 339, "0770": 339, "0014": 339, "6793": 339, "367": 339, "9834": 339, "863": 339, "368": 339, "6709": 339, "462": 339, "369": 339, "5199": 339, "9790": 339, "370": 339, "9401": 339, "7802": 339, "371": 339, "6723": 339, "2678": 339, "6201": 339, "373": 339, "2184": 339, "7385": 339, "374": 339, "6344": 339, "617": 339, "375": 339, "9945": 339, "0772": 339, "567": 339, "7576": 339, "0398": 339, "377": 339, "3396": 339, "0022": 339, "094": 339, "378": 339, "3073": 339, "4018": 339, "379": 339, "1869": 339, "380": 339, "0481": 339, "1117": 339, "381": 339, "6823": 339, "981": 339, "8305": 339, "0210": 339, "383": 339, "4908": 339, "0272": 339, "538": 339, "3267": 339, "0111": 339, "7965": 339, "1796": 339, "0039": 339, "5396": 339, "3757": 339, "0490": 339, "387": [339, 341], "1394": 339, "4187": 339, "2986": 339, "7954": 339, "1274": 339, "0063": 339, "813": 339, "390": 339, "8706": 339, "0114": 339, "391": 339, "6922": 339, "2423": 339, "392": 339, "60it": 339, "9115": 339, "2602": 339, "393": 339, "2449": 339, "0783": 339, "394": 339, "0631": 339, "0057": 339, "7444": 339, "395": 339, "3339": 339, "0167": 339, "396": 339, "4806": 339, "397": 339, "4171": 339, "067": 339, "398": 339, "2618": 339, "5809": 339, "399": 339, "0054": 339, "3364": 339, "8733": 339, "0184": 339, "401": 339, "9137": 339, "0113": 339, "025": 339, "0386": 339, "0625": 339, "403": 339, "1332": 339, "0582": 339, "7816": 339, "404": 339, "8341": 339, "0941": 339, "854": 339, "405": 339, "8615": 339, "588": 339, "406": 339, "3849": 339, "008": 339, "407": 339, "9395": 339, "0765": 339, "055": 339, "2685": 339, "2235": 339, "688": 339, "409": 339, "3052": 339, "4249": 339, "410": 339, "6806": 339, "6383": 339, "3721": 339, "9981": 339, "412": 339, "1862": 339, "822": 339, "413": 339, "9811": 339, "0171": 339, "013": 339, "0252": 339, "0049": 339, "6205": 339, "415": 339, "1108": 339, "4921": 339, "9142": 339, "8130": 339, "417": 339, "1725": 339, "0036": 339, "3196": 339, "418": 339, "7795": 339, "0242": 339, "799": 339, "419": 339, "7737": 339, "0138": 339, "420": 339, "1462": 339, "0053": 339, "421": 339, "9226": 339, "6139": 339, "422": 339, "9889": 339, "0403": 339, "423": 339, "6194": 339, "0032": 339, "3989": 339, "0104": 339, "425": 339, "9960": 339, "0009": 339, "6009": 339, "2697": 339, "0914": 339, "427": 339, "1114": 339, "428": 339, "9862": 339, "1932": 339, "429": 339, "0637": 339, "0623": 339, "082": 339, "430": 339, "9906": 339, "2031": 339, "431": 339, "9948": 339, "0895": 339, "432": 339, "1970": 339, "0256": 339, "433": 339, "4231": 339, "0449": 339, "644": 339, "434": 339, "1039": 339, "1973": 339, "435": 339, "4561": 339, "1225": 339, "436": 339, "0211": 339, "2125": 339, "437": 339, "3866": 339, "0050": 339, "7202": 339, "438": 339, "6388": 339, "0072": 339, "439": 339, "1187": 339, "0015": 339, "5116": 339, "440": 339, "0432": 339, "0025": 339, "7809": 339, "1925": 339, "0103": 339, "442": 339, "9570": 339, "443": 339, "0871": 339, "5601": 339, "0165": 339, "0047": 339, "6061": 339, "2746": 339, "0027": 339, "7887": 339, "446": 339, "1835": 339, "0035": 339, "855": 339, "447": 339, "8420": 339, "548": 339, "2653": 339, "0126": 339, "9736": 339, "449": 339, "0594": 339, "0119": 339, "6196": 339, "450": 339, "4509": 339, "0373": 339, "451": 339, "0620": 339, "452": 339, "6898": 339, "3235": 339, "687": 339, "453": 339, "5879": 339, "454": 339, "8406": 339, "0694": 339, "455": 339, "8259": 339, "0235": 339, "8500": 339, "0024": 339, "4054": 339, "458": 339, "2027": 339, "0894": 339, "459": 339, "5966": 339, "460": 339, "6942": 339, "0016": 339, "6703": 339, "0145": 339, "8124": 339, "0218": 339, "9196": 339, "41it": 339, "0188": 339, "8986": 339, "0884": 339, "0084": 339, "5624": 339, "465": 339, "8862": 339, "5384": 339, "466": 339, "5837": 339, "467": 339, "8954": 339, "0101": 339, "6751": 339, "468": 339, "8063": 339, "0122": 339, "9635": 339, "469": 339, "0692": 339, "4216": 339, "470": 339, "1227": 339, "0586": 339, "162e": 339, "471": 339, "9690": 339, "0074": 339, "4166": 339, "6324": 339, "473": 339, "0778": 339, "474": 339, "8548": 339, "0017": 339, "4408": 339, "475": 339, "8125": 339, "1515": 339, "476": 339, "2733": 339, "0044": 339, "2836": 339, "477": 339, "7497": 339, "7681": 339, "478": 339, "8547": 339, "0105": 339, "7212": 339, "479": 339, "9848": 339, "0019": 339, "6498": 339, "1987": 339, "0011": 339, "5473": 339, "481": 339, "8991": 339, "0033": 339, "6091": 339, "9189": 339, "5771": 339, "483": 339, "6781": 339, "7542": 339, "484": 339, "5959": 339, "0064": 339, "4295": 339, "485": 339, "2547": 339, "0636": 339, "547": 339, "487": 339, "0065": 339, "488": 339, "1694": 339, "0083": 339, "5759": 339, "489": 339, "0493": 339, "0021": 339, "7805": 339, "490": 339, "0950": 339, "497": 339, "491": 339, "9717": 339, "3672": 339, "492": 339, "0207": 339, "493": 339, "8266": 339, "0069": 339, "5365": 339, "494": 339, "2623": 339, "5078": 339, "495": 339, "4545": 339, "09636": 339, "8754": 339, "0010": 339, "498": 339, "0031": 339, "8269": 339, "499": 339, "4082": 339, "6642": 339, "2284": 339, "501": 339, "9130": 339, "0008": 339, "502": 339, "503": 339, "7624": 339, "0056": 339, "3858": 339, "504": 339, "0890": 339, "0042": 339, "505": 339, "7505": 339, "2157": 339, "506": 339, "8394": 339, "3413": 339, "507": 339, "9609": 339, "0041": 339, "6905": 339, "508": 339, "8467": 339, "4409": 339, "509": 339, "510": 339, "8128": 339, "3559": 339, "511": 339, "1479": 339, "0264": 339, "1589": 339, "566": 339, "513": 339, "2756": 339, "0046": 339, "5266": 339, "514": 339, "9873": 339, "0112": 339, "9314": 339, "515": 339, "3791": 339, "0721": 339, "516": 339, "4580": 339, "0758": 339, "6114": 339, "517": 339, "2431": 339, "1958": 339, "5553": 339, "8924": 339, "0097": 339, "520": 339, "3737": 339, "0234": 339, "521": 339, "9125": 339, "4623": 339, "3230": 339, "0589": 339, "3784": 339, "523": 339, "9482": 339, "0051": 339, "524": 339, "1979": 339, "0045": 339, "6401": 339, "525": 339, "1588": 339, "0048": 339, "6255": 339, "526": 339, "6084": 339, "3477": 339, "1475": 339, "0209": 339, "528": 339, "7611": 339, "1040": 339, "0099": 339, "0173": 339, "643": 339, "530": 339, "8189": 339, "4358": 339, "531": 339, "9897": 339, "532": 339, "1548": 339, "9751": 339, "533": 339, "6362": 339, "7495": 339, "534": 339, "1749": 339, "9513": 339, "535": 339, "7708": 339, "0371": 339, "536": 339, "2649": 339, "0437": 339, "537": 339, "5491": 339, "0276": 339, "6426": 339, "7294": 339, "078e": 339, "539": 339, "9928": 339, "540": 339, "7937": 339, "0124": [339, 344], "9664": 339, "541": 339, "3342": 339, "542": 339, "2046": 339, "5496": 339, "0956": 339, "0059": 339, "545": 339, "9028": 339, "5843": 339, "546": 339, "0674": 339, "0178": 339, "797": 339, "2815": 339, "0599": 339, "1587": 339, "9276": 339, "8228": 339, "6164": 339, "551": 339, "6850": 339, "9167": 339, "3092": 339, "0670": 339, "9177": 339, "553": 339, "1599": 339, "0043": 339, "554": 339, "6367": 339, "555": 339, "3657": 339, "556": 339, "6694": 339, "2622": 339, "0372": 339, "4841": 339, "558": 339, "2707": 339, "0058": 339, "757": 339, "559": 339, "2267": 339, "5415": 339, "560": 339, "4556": 339, "0163": 339, "561": 339, "1839": 339, "0809": 339, "6262": 339, "562": 339, "0278": 339, "1112": 339, "6155": 339, "565": 339, "1427": 339, "3582": 339, "624": 339, "7870": 339, "9490": 339, "0439": 339, "8796": 339, "568": 339, "8026": 339, "612": 339, "569": 339, "3147": 339, "8486": 339, "570": 339, "7917": 339, "0129": 339, "571": 339, "9553": 339, "0020": 339, "6871": 339, "572": 339, "3132": 339, "0159": 339, "8646": 339, "573": 339, "5320": 339, "0269": 339, "574": 339, "2955": 339, "0245": 339, "575": 339, "3347": 339, "0179": 339, "9718": 339, "1629": 339, "804": 339, "577": 339, "4164": 339, "0070": 339, "4335": 339, "578": 339, "579": 339, "3049": 339, "9063": 339, "580": 339, "8785": 339, "3295": 339, "5184": 339, "0546": 339, "582": 339, "4589": 339, "583": 339, "4697": 339, "2476": 339, "584": 339, "2397": 339, "585": 339, "4953": 339, "1775": 339, "586": 339, "2258": 339, "0110": 339, "7671": 339, "587": 339, "3981": 339, "8590": 339, "0007": 339, "589": 339, "9820": 339, "4221": 339, "590": 339, "1293": 339, "0116": 339, "868": 339, "1675": 339, "5931": 339, "592": 339, "2910": 339, "5219": 339, "2124": 339, "1730": 339, "737": 339, "594": 339, "2914": 339, "0206": 339, "595": 339, "0172": 339, "3982": 339, "0945": 339, "0121": 339, "4789": 339, "597": 339, "3805": [339, 344], "598": 339, "3310": 339, "5065": 339, "6028": 339, "6316": 339, "6724": 339, "6523": 339, "601": 339, "0136": 339, "4298": 339, "602": 339, "3524": 339, "2629": 339, "603": 339, "2635": 339, "7839": 339, "604": 339, "6041": 339, "8027": 339, "4170": 339, "4675": 339, "606": 339, "3153": 339, "9316": 339, "607": 339, "0649": 339, "9722": 339, "7989": 339, "0329": 339, "609": 339, "1976": 339, "6852": 339, "610": 339, "4793": 339, "1255": 339, "611": 339, "4581": 339, "0394": 339, "2047": 339, "0326": 339, "8967": 339, "8619": 339, "614": 339, "5906": 339, "6491": 339, "615": 339, "6634": 339, "4394": 339, "616": 339, "0624": 339, "0061": 339, "5676": 339, "3259": 339, "0131": 339, "7733": 339, "618": 339, "7515": 339, "0189": 339, "5575": 339, "619": 339, "9313": 339, "6286": 339, "620": 339, "4325": 339, "7832": 339, "621": 339, "1134": 339, "622": 339, "4572": 339, "0500": 339, "5838": 339, "623": 339, "3818": 339, "8623": 339, "1253": 339, "6622": 339, "subject": 339, "saw": [339, 341], "explain": 340, "semat": 340, "r3mtransform": 340, "ai": 340, "env_transform": [340, 344], "s3": 340, "amazonaw": 340, "r3m_50": 340, "374m": 340, "128k": 340, "24mb": 340, "5m": 340, "7mb": 340, "2m": 340, "8mb": 340, "4mb": 340, "0m": 340, "9mb": 340, "6m": 340, "6mb": 340, "106m": 340, "115m": 340, "130m": 340, "0mb": 340, "137m": 340, "148m": 340, "162m": 340, "169m": 340, "180m": 340, "197m": 340, "204m": 340, "213m": 340, "2mb": 340, "229m": 340, "5mb": 340, "235m": 340, "246m": 340, "262m": 340, "277m": 340, "284m": 340, "293m": 340, "299m": 340, "311m": 340, "326m": 340, "1mb": 340, "333m": 340, "342m": 340, "3mb": 340, "348m": 340, "359m": 340, "365m": 340, "wiser": 340, "conclud": 340, "_storag": [340, 341], "supervis": [341, 344], "pull": 341, "temporarili": 341, "ram": [341, 344], "batteri": 341, "dataliststorag": 341, "datalazytensorstorag": 341, "tensordidct": 341, "datalazymemmapstorag": 341, "buffer_list": 341, "lowest": 341, "medium": 341, "buffer_lazytensor": 341, "buffer_lazymemmap": 341, "tempdir": 341, "tmpbmrxp_sj": 341, "fullest": 341, "convini": 341, "mydata": 341, "background": 341, "question": [341, 343], "_i": 341, "artifici": 341, "0892946e": 341, "she": 341, "augment": 341, "proport": 341, "hist": 341, "barcontain": 341, "artist": 341, "revert": 341, "expens": 341, "reappear": 341, "unfold": 341, "problemat": 341, "window": 341, "4th": 341, "demo": 343, "icml": 343, "vmoen": 343, "fb": 343, "invest": 343, "platform": 343, "media": 343, "predominantli": 343, "tensordict1": 343, "tensordict2": 343, "tensordict_sampl": 343, "_sampler": 343, "_sum_tre": 343, "modulenotfounderror": 343, "28791671991348267": 343, "gym_env": 343, "noopresetenv": [343, 344], "backbone_modul": 343, "params_expand": 343, "tensordict_exp": 343, "base_modul": 343, "0137": 343, "1524": 343, "0641": 343, "viewbackward0": 343, "asstridedbackward0": 343, "8728": 343, "1334": 343, "3494": 343, "6887": 343, "6402": 343, "_safetanhbackward": 343, "1132": 343, "1762": 343, "3430": 343, "2668": 343, "2918": 343, "6239": 343, "roughli": 343, "tensordicts_prealloc": 343, "tensordicts_stack": 343, "tensordict_rollout": [343, 344], "disclaim": 343, "concatmodul": 343, "loss_td": 343, "year": 343, "roadmap": 343, "compris": 343, "contributor": 343, "curiou": 343, "nascent": 343, "unsupervis": 344, "rom": 344, "licens": 344, "pygam": 344, "unifi": 344, "_build_env": 344, "adventur": 344, "airraid": 344, "alien": 344, "amidar": 344, "assault": 344, "deserv": 344, "__episode__": 344, "__trajectory__": 344, "void": 344, "reproduct": 344, "tensordict_tprim": 344, "imshow": 344, "axesimag": 344, "0x7ff297c38dc0": 344, "inconsist": 344, "0x7ff3b47fdba0": 344, "swingup": 344, "wrapper1": 344, "wrapper2": 344, "obviou": 344, "truth": 344, "env0": 344, "env_transformed_bi": 344, "stanc": 344, "transformeddistribut": 344, "base_dist": 344, "concat": 344, "mofidi": 344, "transformedenviron": 344, "moderet": 344, "computation": 344, "legitim": 344, "incom": 344, "amongst": 344, "wor": 344, "convention": 344, "scope": 344, "markovian": 344, "3288080526": 344, "constain": 344, "bar_": 344, "get_someth": 344, "bar_513b4044": 344, "ae3c": 344, "aargh": 344, "foo_list": 344, "batched_env": 344, "_dispatch_caller_parallel": 344, "0x7ff3b1ebdeb0": 344, "bar_58a2921a": 344, "bac6": 344, "bar_58a80326": 344, "93d2": 344, "bar_58aa49e2": 344, "9e48": 344, "parallen": 344, "particularili": 344, "evolv": 344, "steadi": 344, "approx": 344, "1789": 344, "1204": 344, "2177": 344, "_extra_st": 344, "observation_ssq": 344, "observation_sum": 344, "1930": 344, "0646": 344, "0187": 344, "1210": 344, "2228": 344, "2035": 344, "dispach": 344, "absor": 344}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"], [11, 1, 1, "", "reset"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "RandomPolicy"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "BinaryDiscreteTensorSpec"], [25, 0, 1, "", "BoundedTensorSpec"], [26, 0, 1, "", "CompositeSpec"], [27, 0, 1, "", "DiscreteTensorSpec"], [28, 0, 1, "", "LazyStackedCompositeSpec"], [29, 0, 1, "", "LazyStackedTensorSpec"], [30, 0, 1, "", "MultiDiscreteTensorSpec"], [31, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [32, 0, 1, "", "MultiStep"], [33, 0, 1, "", "OneHotDiscreteTensorSpec"], [34, 0, 1, "", "PairwiseDataset"], [35, 0, 1, "", "PrioritizedReplayBuffer"], [36, 0, 1, "", "PromptData"], [37, 0, 1, "", "PromptTensorDictTokenizer"], [38, 0, 1, "", "ReplayBuffer"], [39, 0, 1, "", "RewardData"], [40, 0, 1, "", "RolloutFromModel"], [41, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [42, 0, 1, "", "TensorDictReplayBuffer"], [43, 0, 1, "", "TensorDictTokenizer"], [44, 0, 1, "", "TensorSpec"], [45, 0, 1, "", "TokenizedDatasetLoader"], [46, 0, 1, "", "UnboundedContinuousTensorSpec"], [47, 0, 1, "", "UnboundedDiscreteTensorSpec"], [48, 0, 1, "", "check_no_exclusive_keys"], [49, 0, 1, "", "consolidate_spec"], [50, 0, 1, "", "contains_lazy_spec"], [51, 0, 1, "", "create_infinite_iterator"], [58, 0, 1, "", "get_dataloader"]], "torchrl.data.BinaryDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "to_one_hot"], [24, 1, 1, "", "to_one_hot_spec"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "empty"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_empty"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "items"], [26, 1, 1, "", "keys"], [26, 1, 1, "", "lock_"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unlock_"], [26, 1, 1, "", "values"], [26, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "to_one_hot"], [27, 1, 1, "", "to_one_hot_spec"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "empty"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_empty"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "items"], [28, 1, 1, "", "keys"], [28, 1, 1, "", "lock_"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unlock_"], [28, 1, 1, "", "values"], [28, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to_categorical"], [31, 1, 1, "", "to_categorical_spec"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[32, 1, 1, "", "add_module"], [32, 1, 1, "", "apply"], [32, 1, 1, "", "bfloat16"], [32, 1, 1, "", "buffers"], [32, 1, 1, "", "children"], [32, 1, 1, "", "compile"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 1, 1, "", "double"], [32, 1, 1, "", "eval"], [32, 1, 1, "", "extra_repr"], [32, 1, 1, "", "float"], [32, 1, 1, "", "forward"], [32, 1, 1, "", "get_buffer"], [32, 1, 1, "", "get_extra_state"], [32, 1, 1, "", "get_parameter"], [32, 1, 1, "", "get_submodule"], [32, 1, 1, "", "half"], [32, 1, 1, "", "ipu"], [32, 1, 1, "", "load_state_dict"], [32, 1, 1, "", "modules"], [32, 1, 1, "", "named_buffers"], [32, 1, 1, "", "named_children"], [32, 1, 1, "", "named_modules"], [32, 1, 1, "", "named_parameters"], [32, 1, 1, "", "parameters"], [32, 1, 1, "", "register_backward_hook"], [32, 1, 1, "", "register_buffer"], [32, 1, 1, "", "register_forward_hook"], [32, 1, 1, "", "register_forward_pre_hook"], [32, 1, 1, "", "register_full_backward_hook"], [32, 1, 1, "", "register_full_backward_pre_hook"], [32, 1, 1, "", "register_load_state_dict_post_hook"], [32, 1, 1, "", "register_module"], [32, 1, 1, "", "register_parameter"], [32, 1, 1, "", "register_state_dict_pre_hook"], [32, 1, 1, "", "requires_grad_"], [32, 1, 1, "", "set_extra_state"], [32, 1, 1, "", "share_memory"], [32, 1, 1, "", "state_dict"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_empty"], [32, 1, 1, "", "train"], [32, 1, 1, "", "type"], [32, 1, 1, "", "xpu"], [32, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[34, 3, 1, "", "batch_size"], [34, 3, 1, "", "device"], [34, 1, 1, "", "from_dataset"], [34, 1, 1, "", "from_dict"], [34, 1, 1, "", "from_tensordict"], [34, 1, 1, "", "get"], [34, 1, 1, "", "load_state_dict"], [34, 1, 1, "", "memmap"], [34, 1, 1, "", "memmap_"], [34, 1, 1, "", "memmap_like"], [34, 1, 1, "", "set"], [34, 1, 1, "", "state_dict"], [34, 1, 1, "", "to_tensordict"], [34, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[35, 1, 1, "", "add"], [35, 1, 1, "", "append_transform"], [35, 1, 1, "", "dumps"], [35, 1, 1, "", "empty"], [35, 1, 1, "", "extend"], [35, 1, 1, "", "insert_transform"], [35, 1, 1, "", "loads"], [35, 1, 1, "", "sample"]], "torchrl.data.PromptData": [[36, 3, 1, "", "batch_size"], [36, 3, 1, "", "device"], [36, 1, 1, "", "from_dataset"], [36, 1, 1, "", "from_dict"], [36, 1, 1, "", "from_tensordict"], [36, 1, 1, "", "get"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "memmap"], [36, 1, 1, "", "memmap_"], [36, 1, 1, "", "memmap_like"], [36, 1, 1, "", "set"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to_tensordict"], [36, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[38, 1, 1, "", "add"], [38, 1, 1, "", "append_transform"], [38, 1, 1, "", "dumps"], [38, 1, 1, "", "empty"], [38, 1, 1, "", "extend"], [38, 1, 1, "", "insert_transform"], [38, 1, 1, "", "loads"], [38, 1, 1, "", "sample"]], "torchrl.data.RewardData": [[39, 3, 1, "", "batch_size"], [39, 3, 1, "", "device"], [39, 1, 1, "", "from_dict"], [39, 1, 1, "", "from_tensordict"], [39, 1, 1, "", "get"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "memmap"], [39, 1, 1, "", "memmap_"], [39, 1, 1, "", "memmap_like"], [39, 1, 1, "", "set"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to_tensordict"], [39, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[40, 1, 1, "", "create_rollout_td"], [40, 1, 1, "", "generate"], [40, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "dumps"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "loads"], [41, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "append_transform"], [42, 1, 1, "", "dumps"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert_transform"], [42, 1, 1, "", "loads"], [42, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[45, 1, 1, "", "dataset_to_tensordict"], [45, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "zero"]], "torchrl.data.datasets": [[52, 0, 1, "", "D4RLExperienceReplay"], [53, 0, 1, "", "MinariExperienceReplay"], [54, 0, 1, "", "OpenMLExperienceReplay"], [55, 0, 1, "", "OpenXExperienceReplay"], [56, 0, 1, "", "RobosetExperienceReplay"], [57, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.D4RLExperienceReplay": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 1, 1, "", "dumps"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "loads"], [52, 1, 1, "", "sample"]], "torchrl.data.datasets.MinariExperienceReplay": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 1, 1, "", "dumps"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "loads"], [53, 1, 1, "", "sample"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[54, 1, 1, "", "add"], [54, 1, 1, "", "append_transform"], [54, 1, 1, "", "dumps"], [54, 1, 1, "", "empty"], [54, 1, 1, "", "extend"], [54, 1, 1, "", "insert_transform"], [54, 1, 1, "", "loads"], [54, 1, 1, "", "sample"]], "torchrl.data.datasets.OpenXExperienceReplay": [[55, 1, 1, "", "add"], [55, 1, 1, "", "append_transform"], [55, 1, 1, "", "dumps"], [55, 1, 1, "", "empty"], [55, 1, 1, "", "extend"], [55, 1, 1, "", "insert_transform"], [55, 1, 1, "", "loads"], [55, 1, 1, "", "sample"]], "torchrl.data.datasets.RobosetExperienceReplay": [[56, 1, 1, "", "add"], [56, 1, 1, "", "append_transform"], [56, 1, 1, "", "dumps"], [56, 1, 1, "", "empty"], [56, 1, 1, "", "extend"], [56, 1, 1, "", "insert_transform"], [56, 1, 1, "", "loads"], [56, 1, 1, "", "sample"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[57, 1, 1, "", "add"], [57, 1, 1, "", "append_transform"], [57, 1, 1, "", "dumps"], [57, 1, 1, "", "empty"], [57, 1, 1, "", "extend"], [57, 1, 1, "", "insert_transform"], [57, 1, 1, "", "loads"], [57, 1, 1, "", "sample"]], "torchrl.data.replay_buffers": [[59, 0, 1, "", "ImmutableDatasetWriter"], [60, 0, 1, "", "LazyMemmapStorage"], [61, 0, 1, "", "LazyTensorStorage"], [62, 0, 1, "", "ListStorage"], [63, 0, 1, "", "PrioritizedSampler"], [64, 0, 1, "", "RandomSampler"], [65, 0, 1, "", "RoundRobinWriter"], [66, 0, 1, "", "Sampler"], [67, 0, 1, "", "SamplerWithoutReplacement"], [68, 0, 1, "", "SliceSampler"], [69, 0, 1, "", "SliceSamplerWithoutReplacement"], [70, 0, 1, "", "Storage"], [71, 0, 1, "", "TensorDictMaxValueWriter"], [72, 0, 1, "", "TensorDictRoundRobinWriter"], [73, 0, 1, "", "TensorStorage"], [74, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[59, 1, 1, "", "add"], [59, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[60, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[61, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[62, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[63, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[65, 1, 1, "", "add"], [65, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[70, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[71, 1, 1, "", "add"], [71, 1, 1, "", "extend"], [71, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[72, 1, 1, "", "add"], [72, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[73, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[74, 1, 1, "", "add"], [74, 1, 1, "", "extend"]], "torchrl.envs": [[75, 2, 1, "", "BraxEnv"], [76, 2, 1, "", "BraxWrapper"], [77, 2, 1, "", "DMControlEnv"], [78, 2, 1, "", "DMControlWrapper"], [79, 0, 1, "", "EnvBase"], [80, 0, 1, "", "EnvCreator"], [81, 0, 1, "", "EnvMetaData"], [82, 2, 1, "", "GymEnv"], [83, 0, 1, "", "GymLikeEnv"], [84, 2, 1, "", "GymWrapper"], [85, 2, 1, "", "HabitatEnv"], [86, 2, 1, "", "IsaacGymEnv"], [87, 2, 1, "", "IsaacGymWrapper"], [88, 2, 1, "", "JumanjiEnv"], [89, 2, 1, "", "JumanjiWrapper"], [90, 2, 1, "", "MOGymEnv"], [91, 2, 1, "", "MOGymWrapper"], [92, 2, 1, "", "MarlGroupMapType"], [93, 2, 1, "", "ModelBasedEnvBase"], [94, 2, 1, "", "MultiThreadedEnv"], [95, 2, 1, "", "MultiThreadedEnvWrapper"], [96, 2, 1, "", "OpenMLEnv"], [97, 0, 1, "", "ParallelEnv"], [98, 2, 1, "", "PettingZooEnv"], [99, 2, 1, "", "PettingZooWrapper"], [100, 2, 1, "", "RoboHiveEnv"], [101, 2, 1, "", "SMACv2Env"], [102, 2, 1, "", "SMACv2Wrapper"], [103, 0, 1, "", "SerialEnv"], [104, 2, 1, "", "VmasEnv"], [105, 2, 1, "", "VmasWrapper"], [106, 2, 1, "", "check_marl_grouping"], [107, 2, 1, "", "gym_backend"], [93, 1, 1, "", "rand_step"], [93, 1, 1, "", "reset"], [93, 1, 1, "", "rollout"], [109, 2, 1, "", "set_gym_backend"], [93, 1, 1, "", "set_seed"], [93, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[79, 3, 1, "", "action_key"], [79, 3, 1, "", "action_keys"], [79, 3, 1, "", "action_spec"], [79, 1, 1, "", "add_module"], [79, 1, 1, "", "apply"], [79, 3, 1, "", "batch_locked"], [79, 1, 1, "", "bfloat16"], [79, 1, 1, "", "buffers"], [79, 1, 1, "", "children"], [79, 1, 1, "", "compile"], [79, 1, 1, "", "cpu"], [79, 1, 1, "", "cuda"], [79, 3, 1, "", "done_key"], [79, 3, 1, "", "done_keys"], [79, 3, 1, "", "done_keys_groups"], [79, 3, 1, "", "done_spec"], [79, 1, 1, "", "double"], [79, 1, 1, "", "empty_cache"], [79, 1, 1, "", "eval"], [79, 1, 1, "", "extra_repr"], [79, 1, 1, "", "fake_tensordict"], [79, 1, 1, "", "float"], [79, 1, 1, "", "forward"], [79, 3, 1, "", "full_action_spec"], [79, 3, 1, "", "full_done_spec"], [79, 3, 1, "", "full_reward_spec"], [79, 3, 1, "", "full_state_spec"], [79, 1, 1, "", "get_buffer"], [79, 1, 1, "", "get_extra_state"], [79, 1, 1, "", "get_parameter"], [79, 1, 1, "", "get_submodule"], [79, 1, 1, "", "half"], [79, 3, 1, "", "input_spec"], [79, 1, 1, "", "ipu"], [79, 1, 1, "", "load_state_dict"], [79, 1, 1, "", "modules"], [79, 1, 1, "", "named_buffers"], [79, 1, 1, "", "named_children"], [79, 1, 1, "", "named_modules"], [79, 1, 1, "", "named_parameters"], [79, 3, 1, "", "observation_spec"], [79, 3, 1, "", "output_spec"], [79, 1, 1, "", "parameters"], [79, 1, 1, "", "rand_action"], [79, 1, 1, "id0", "rand_step"], [79, 1, 1, "", "register_backward_hook"], [79, 1, 1, "", "register_buffer"], [79, 1, 1, "", "register_forward_hook"], [79, 1, 1, "", "register_forward_pre_hook"], [79, 1, 1, "", "register_full_backward_hook"], [79, 1, 1, "", "register_full_backward_pre_hook"], [79, 1, 1, "", "register_load_state_dict_post_hook"], [79, 1, 1, "", "register_module"], [79, 1, 1, "", "register_parameter"], [79, 1, 1, "", "register_state_dict_pre_hook"], [79, 1, 1, "", "requires_grad_"], [79, 1, 1, "id1", "reset"], [79, 3, 1, "", "reset_keys"], [79, 3, 1, "", "reward_key"], [79, 3, 1, "", "reward_keys"], [79, 3, 1, "", "reward_spec"], [79, 1, 1, "id2", "rollout"], [79, 1, 1, "", "set_extra_state"], [79, 1, 1, "id3", "set_seed"], [79, 1, 1, "", "share_memory"], [79, 3, 1, "", "specs"], [79, 1, 1, "", "state_dict"], [79, 3, 1, "", "state_spec"], [79, 1, 1, "id4", "step"], [79, 1, 1, "", "step_and_maybe_reset"], [79, 1, 1, "", "to"], [79, 1, 1, "", "to_empty"], [79, 1, 1, "", "train"], [79, 1, 1, "", "type"], [79, 1, 1, "", "xpu"], [79, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[83, 3, 1, "", "action_key"], [83, 3, 1, "", "action_keys"], [83, 3, 1, "", "action_spec"], [83, 1, 1, "", "add_module"], [83, 1, 1, "", "apply"], [83, 3, 1, "", "batch_locked"], [83, 1, 1, "", "bfloat16"], [83, 1, 1, "", "buffers"], [83, 1, 1, "", "children"], [83, 1, 1, "", "close"], [83, 1, 1, "", "compile"], [83, 1, 1, "", "cpu"], [83, 1, 1, "", "cuda"], [83, 3, 1, "", "done_key"], [83, 3, 1, "", "done_keys"], [83, 3, 1, "", "done_keys_groups"], [83, 3, 1, "", "done_spec"], [83, 1, 1, "", "double"], [83, 1, 1, "", "empty_cache"], [83, 1, 1, "", "eval"], [83, 1, 1, "", "extra_repr"], [83, 1, 1, "", "fake_tensordict"], [83, 1, 1, "", "float"], [83, 1, 1, "", "forward"], [83, 3, 1, "", "full_action_spec"], [83, 3, 1, "", "full_done_spec"], [83, 3, 1, "", "full_reward_spec"], [83, 3, 1, "", "full_state_spec"], [83, 1, 1, "", "get_buffer"], [83, 1, 1, "", "get_extra_state"], [83, 1, 1, "", "get_parameter"], [83, 1, 1, "", "get_submodule"], [83, 1, 1, "", "half"], [83, 3, 1, "", "input_spec"], [83, 1, 1, "", "ipu"], [83, 1, 1, "", "load_state_dict"], [83, 1, 1, "", "modules"], [83, 1, 1, "", "named_buffers"], [83, 1, 1, "", "named_children"], [83, 1, 1, "", "named_modules"], [83, 1, 1, "", "named_parameters"], [83, 3, 1, "", "observation_spec"], [83, 3, 1, "", "output_spec"], [83, 1, 1, "", "parameters"], [83, 1, 1, "", "rand_action"], [83, 1, 1, "", "rand_step"], [83, 1, 1, "", "read_action"], [83, 1, 1, "", "read_done"], [83, 1, 1, "", "read_obs"], [83, 1, 1, "", "read_reward"], [83, 1, 1, "", "register_backward_hook"], [83, 1, 1, "", "register_buffer"], [83, 1, 1, "", "register_forward_hook"], [83, 1, 1, "", "register_forward_pre_hook"], [83, 1, 1, "", "register_full_backward_hook"], [83, 1, 1, "", "register_full_backward_pre_hook"], [83, 1, 1, "", "register_load_state_dict_post_hook"], [83, 1, 1, "", "register_module"], [83, 1, 1, "", "register_parameter"], [83, 1, 1, "", "register_state_dict_pre_hook"], [83, 1, 1, "", "requires_grad_"], [83, 1, 1, "", "reset"], [83, 3, 1, "", "reset_keys"], [83, 3, 1, "", "reward_key"], [83, 3, 1, "", "reward_keys"], [83, 3, 1, "", "reward_spec"], [83, 1, 1, "", "rollout"], [83, 1, 1, "", "set_extra_state"], [83, 1, 1, "", "set_info_dict_reader"], [83, 1, 1, "", "set_seed"], [83, 1, 1, "", "share_memory"], [83, 3, 1, "", "specs"], [83, 1, 1, "", "state_dict"], [83, 3, 1, "", "state_spec"], [83, 1, 1, "", "step"], [83, 1, 1, "", "step_and_maybe_reset"], [83, 1, 1, "", "to"], [83, 1, 1, "", "to_empty"], [83, 1, 1, "", "train"], [83, 1, 1, "", "type"], [83, 1, 1, "", "xpu"], [83, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[97, 3, 1, "", "action_key"], [97, 3, 1, "", "action_keys"], [97, 3, 1, "", "action_spec"], [97, 1, 1, "", "add_module"], [97, 1, 1, "", "apply"], [97, 3, 1, "", "batch_locked"], [97, 1, 1, "", "bfloat16"], [97, 1, 1, "", "buffers"], [97, 1, 1, "", "children"], [97, 1, 1, "", "compile"], [97, 1, 1, "", "cpu"], [97, 1, 1, "", "cuda"], [97, 3, 1, "", "done_key"], [97, 3, 1, "", "done_keys"], [97, 3, 1, "", "done_keys_groups"], [97, 3, 1, "", "done_spec"], [97, 1, 1, "", "double"], [97, 1, 1, "", "empty_cache"], [97, 1, 1, "", "eval"], [97, 1, 1, "", "extra_repr"], [97, 1, 1, "", "fake_tensordict"], [97, 1, 1, "", "float"], [97, 1, 1, "", "forward"], [97, 3, 1, "", "full_action_spec"], [97, 3, 1, "", "full_done_spec"], [97, 3, 1, "", "full_reward_spec"], [97, 3, 1, "", "full_state_spec"], [97, 1, 1, "", "get_buffer"], [97, 1, 1, "", "get_extra_state"], [97, 1, 1, "", "get_parameter"], [97, 1, 1, "", "get_submodule"], [97, 1, 1, "", "half"], [97, 3, 1, "", "input_spec"], [97, 1, 1, "", "ipu"], [97, 1, 1, "", "load_state_dict"], [97, 1, 1, "", "modules"], [97, 1, 1, "", "named_buffers"], [97, 1, 1, "", "named_children"], [97, 1, 1, "", "named_modules"], [97, 1, 1, "", "named_parameters"], [97, 3, 1, "", "observation_spec"], [97, 3, 1, "", "output_spec"], [97, 1, 1, "", "parameters"], [97, 1, 1, "", "rand_action"], [97, 1, 1, "", "rand_step"], [97, 1, 1, "", "register_backward_hook"], [97, 1, 1, "", "register_buffer"], [97, 1, 1, "", "register_forward_hook"], [97, 1, 1, "", "register_forward_pre_hook"], [97, 1, 1, "", "register_full_backward_hook"], [97, 1, 1, "", "register_full_backward_pre_hook"], [97, 1, 1, "", "register_load_state_dict_post_hook"], [97, 1, 1, "", "register_module"], [97, 1, 1, "", "register_parameter"], [97, 1, 1, "", "register_state_dict_pre_hook"], [97, 1, 1, "", "requires_grad_"], [97, 1, 1, "", "reset"], [97, 3, 1, "", "reset_keys"], [97, 3, 1, "", "reward_key"], [97, 3, 1, "", "reward_keys"], [97, 3, 1, "", "reward_spec"], [97, 1, 1, "", "rollout"], [97, 1, 1, "", "set_extra_state"], [97, 1, 1, "", "set_seed"], [97, 1, 1, "", "share_memory"], [97, 3, 1, "", "specs"], [97, 1, 1, "", "state_dict"], [97, 3, 1, "", "state_spec"], [97, 1, 1, "", "step"], [97, 1, 1, "", "step_and_maybe_reset"], [97, 1, 1, "", "to"], [97, 1, 1, "", "to_empty"], [97, 1, 1, "", "train"], [97, 1, 1, "", "type"], [97, 1, 1, "", "update_kwargs"], [97, 1, 1, "", "xpu"], [97, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[103, 3, 1, "", "action_key"], [103, 3, 1, "", "action_keys"], [103, 3, 1, "", "action_spec"], [103, 1, 1, "", "add_module"], [103, 1, 1, "", "apply"], [103, 3, 1, "", "batch_locked"], [103, 1, 1, "", "bfloat16"], [103, 1, 1, "", "buffers"], [103, 1, 1, "", "children"], [103, 1, 1, "", "compile"], [103, 1, 1, "", "cpu"], [103, 1, 1, "", "cuda"], [103, 3, 1, "", "done_key"], [103, 3, 1, "", "done_keys"], [103, 3, 1, "", "done_keys_groups"], [103, 3, 1, "", "done_spec"], [103, 1, 1, "", "double"], [103, 1, 1, "", "empty_cache"], [103, 1, 1, "", "eval"], [103, 1, 1, "", "extra_repr"], [103, 1, 1, "", "fake_tensordict"], [103, 1, 1, "", "float"], [103, 1, 1, "", "forward"], [103, 3, 1, "", "full_action_spec"], [103, 3, 1, "", "full_done_spec"], [103, 3, 1, "", "full_reward_spec"], [103, 3, 1, "", "full_state_spec"], [103, 1, 1, "", "get_buffer"], [103, 1, 1, "", "get_extra_state"], [103, 1, 1, "", "get_parameter"], [103, 1, 1, "", "get_submodule"], [103, 1, 1, "", "half"], [103, 3, 1, "", "input_spec"], [103, 1, 1, "", "ipu"], [103, 1, 1, "", "load_state_dict"], [103, 1, 1, "", "modules"], [103, 1, 1, "", "named_buffers"], [103, 1, 1, "", "named_children"], [103, 1, 1, "", "named_modules"], [103, 1, 1, "", "named_parameters"], [103, 3, 1, "", "observation_spec"], [103, 3, 1, "", "output_spec"], [103, 1, 1, "", "parameters"], [103, 1, 1, "", "rand_action"], [103, 1, 1, "", "rand_step"], [103, 1, 1, "", "register_backward_hook"], [103, 1, 1, "", "register_buffer"], [103, 1, 1, "", "register_forward_hook"], [103, 1, 1, "", "register_forward_pre_hook"], [103, 1, 1, "", "register_full_backward_hook"], [103, 1, 1, "", "register_full_backward_pre_hook"], [103, 1, 1, "", "register_load_state_dict_post_hook"], [103, 1, 1, "", "register_module"], [103, 1, 1, "", "register_parameter"], [103, 1, 1, "", "register_state_dict_pre_hook"], [103, 1, 1, "", "requires_grad_"], [103, 1, 1, "", "reset"], [103, 3, 1, "", "reset_keys"], [103, 3, 1, "", "reward_key"], [103, 3, 1, "", "reward_keys"], [103, 3, 1, "", "reward_spec"], [103, 1, 1, "", "rollout"], [103, 1, 1, "", "set_extra_state"], [103, 1, 1, "", "set_seed"], [103, 1, 1, "", "share_memory"], [103, 3, 1, "", "specs"], [103, 1, 1, "", "state_dict"], [103, 3, 1, "", "state_spec"], [103, 1, 1, "", "step"], [103, 1, 1, "", "step_and_maybe_reset"], [103, 1, 1, "", "to"], [103, 1, 1, "", "to_empty"], [103, 1, 1, "", "train"], [103, 1, 1, "", "type"], [103, 1, 1, "", "update_kwargs"], [103, 1, 1, "", "xpu"], [103, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[108, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[110, 0, 1, "", "ActionMask"], [111, 0, 1, "", "BinarizeReward"], [112, 0, 1, "", "BurnInTransform"], [113, 0, 1, "", "CatFrames"], [114, 0, 1, "", "CatTensors"], [115, 0, 1, "", "CenterCrop"], [116, 0, 1, "", "ClipTransform"], [117, 0, 1, "", "Compose"], [118, 0, 1, "", "DTypeCastTransform"], [119, 0, 1, "", "DeviceCastTransform"], [120, 0, 1, "", "DiscreteActionProjection"], [121, 0, 1, "", "DoubleToFloat"], [122, 0, 1, "", "EndOfLifeTransform"], [123, 0, 1, "", "ExcludeTransform"], [124, 0, 1, "", "FiniteTensorDictCheck"], [125, 0, 1, "", "FlattenObservation"], [126, 0, 1, "", "FrameSkipTransform"], [127, 0, 1, "", "GrayScale"], [128, 0, 1, "", "InitTracker"], [129, 0, 1, "", "KLRewardTransform"], [130, 0, 1, "", "NoopResetEnv"], [131, 0, 1, "", "ObservationNorm"], [132, 0, 1, "", "ObservationTransform"], [133, 0, 1, "", "PermuteTransform"], [134, 0, 1, "", "PinMemoryTransform"], [135, 0, 1, "", "R3MTransform"], [136, 0, 1, "", "RandomCropTensorDict"], [137, 0, 1, "", "RenameTransform"], [138, 0, 1, "", "Resize"], [139, 0, 1, "", "Reward2GoTransform"], [140, 0, 1, "", "RewardClipping"], [141, 0, 1, "", "RewardScaling"], [142, 0, 1, "", "RewardSum"], [143, 0, 1, "", "SelectTransform"], [144, 0, 1, "", "SqueezeTransform"], [145, 0, 1, "", "StepCounter"], [146, 0, 1, "", "TargetReturn"], [147, 0, 1, "", "TensorDictPrimer"], [148, 0, 1, "", "TimeMaxPool"], [149, 0, 1, "", "ToTensorImage"], [150, 0, 1, "", "Transform"], [151, 0, 1, "", "TransformedEnv"], [152, 0, 1, "", "UnsqueezeTransform"], [153, 0, 1, "", "VC1Transform"], [154, 0, 1, "", "VIPRewardTransform"], [155, 0, 1, "", "VIPTransform"], [156, 0, 1, "", "VecGymEnvTransform"], [157, 0, 1, "", "VecNorm"], [158, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionMask": [[110, 1, 1, "", "forward"]], "torchrl.envs.transforms.BinarizeReward": [[111, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[112, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[113, 1, 1, "", "forward"], [113, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[114, 1, 1, "", "forward"], [114, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[115, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[116, 1, 1, "", "transform_observation_spec"], [116, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[117, 1, 1, "", "forward"], [117, 1, 1, "", "to"], [117, 1, 1, "", "transform_env_device"], [117, 1, 1, "", "transform_input_spec"], [117, 1, 1, "", "transform_observation_spec"], [117, 1, 1, "", "transform_output_spec"], [117, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[118, 1, 1, "", "forward"], [118, 1, 1, "", "transform_input_spec"], [118, 1, 1, "", "transform_observation_spec"], [118, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[119, 1, 1, "", "forward"], [119, 1, 1, "", "transform_done_spec"], [119, 1, 1, "", "transform_env_device"], [119, 1, 1, "", "transform_input_spec"], [119, 1, 1, "", "transform_observation_spec"], [119, 1, 1, "", "transform_output_spec"], [119, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[120, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[122, 1, 1, "", "forward"], [122, 1, 1, "", "register_keys"], [122, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[123, 1, 1, "", "forward"], [123, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[124, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[125, 1, 1, "", "forward"], [125, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[126, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[127, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[128, 1, 1, "", "forward"], [128, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[129, 1, 1, "", "forward"], [129, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[131, 1, 1, "", "init_stats"], [131, 1, 1, "", "transform_input_spec"], [131, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[133, 1, 1, "", "transform_input_spec"], [133, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[134, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[135, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[136, 1, 1, "", "forward"]], "torchrl.envs.transforms.RenameTransform": [[137, 1, 1, "", "forward"], [137, 1, 1, "", "transform_input_spec"], [137, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[138, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[139, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[140, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[141, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[142, 1, 1, "", "forward"], [142, 1, 1, "", "transform_input_spec"], [142, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[143, 1, 1, "", "forward"], [143, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.StepCounter": [[145, 1, 1, "", "forward"], [145, 1, 1, "", "transform_input_spec"], [145, 1, 1, "", "transform_observation_spec"], [145, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[146, 1, 1, "", "forward"], [146, 1, 1, "", "transform_input_spec"], [146, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[147, 1, 1, "", "forward"], [147, 1, 1, "", "to"], [147, 1, 1, "", "transform_input_spec"], [147, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[148, 1, 1, "", "forward"], [148, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[149, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[150, 3, 1, "", "container"], [150, 1, 1, "", "forward"], [150, 3, 1, "", "parent"], [150, 1, 1, "", "to"], [150, 1, 1, "", "transform_done_spec"], [150, 1, 1, "", "transform_env_device"], [150, 1, 1, "", "transform_input_spec"], [150, 1, 1, "", "transform_observation_spec"], [150, 1, 1, "", "transform_output_spec"], [150, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[151, 3, 1, "", "batch_locked"], [151, 1, 1, "", "empty_cache"], [151, 1, 1, "", "eval"], [151, 3, 1, "", "input_spec"], [151, 1, 1, "", "load_state_dict"], [151, 3, 1, "", "output_spec"], [151, 1, 1, "", "set_missing_tolerance"], [151, 1, 1, "", "set_seed"], [151, 1, 1, "", "state_dict"], [151, 1, 1, "", "to"], [151, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[152, 1, 1, "", "transform_input_spec"], [152, 1, 1, "", "transform_observation_spec"], [152, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[153, 1, 1, "", "forward"], [153, 1, 1, "", "make_noload_model"], [153, 1, 1, "", "to"], [153, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[154, 1, 1, "", "forward"], [154, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[155, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[156, 1, 1, "", "forward"], [156, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[157, 1, 1, "", "build_td_for_shared_vecnorm"], [157, 1, 1, "", "forward"], [157, 1, 1, "", "get_extra_state"], [157, 1, 1, "", "set_extra_state"], [157, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[159, 2, 1, "", "check_env_specs"], [160, 2, 1, "", "exploration_mode"], [161, 2, 1, "", "exploration_type"], [162, 2, 1, "", "get_available_libraries"], [163, 2, 1, "", "make_composite_from_td"], [164, 2, 1, "", "set_exploration_mode"], [165, 2, 1, "", "set_exploration_type"], [166, 2, 1, "", "step_mdp"], [167, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[168, 0, 1, "", "CEMPlanner"], [169, 0, 1, "", "Conv3dNet"], [170, 0, 1, "", "ConvNet"], [171, 0, 1, "", "DTActor"], [172, 0, 1, "", "DdpgCnnActor"], [173, 0, 1, "", "DdpgCnnQNet"], [174, 0, 1, "", "DdpgMlpActor"], [175, 0, 1, "", "DdpgMlpQNet"], [176, 0, 1, "", "DecisionTransformer"], [177, 0, 1, "", "Delta"], [178, 0, 1, "", "DistributionalDQNnet"], [179, 0, 1, "", "DistributionalQValueHook"], [180, 0, 1, "", "DreamerActor"], [181, 0, 1, "", "DuelingCnnDQNet"], [182, 0, 1, "", "GRU"], [183, 0, 1, "", "GRUCell"], [184, 0, 1, "", "GRUModule"], [185, 0, 1, "", "IndependentNormal"], [186, 0, 1, "", "LSTM"], [187, 0, 1, "", "LSTMCell"], [188, 0, 1, "", "LSTMModule"], [189, 0, 1, "", "LSTMNet"], [190, 0, 1, "", "MLP"], [191, 0, 1, "", "MPCPlannerBase"], [192, 0, 1, "", "MPPIPlanner"], [193, 0, 1, "", "MaskedCategorical"], [194, 0, 1, "", "MaskedOneHotCategorical"], [195, 0, 1, "", "MultiAgentConvNet"], [196, 0, 1, "", "MultiAgentMLP"], [197, 0, 1, "", "NoisyLazyLinear"], [198, 0, 1, "", "NoisyLinear"], [199, 0, 1, "", "NormalParamWrapper"], [200, 0, 1, "", "ObsDecoder"], [201, 0, 1, "", "ObsEncoder"], [202, 0, 1, "", "OneHotCategorical"], [203, 0, 1, "", "OnlineDTActor"], [204, 0, 1, "", "QMixer"], [205, 0, 1, "", "QValueHook"], [206, 0, 1, "", "RSSMPosterior"], [207, 0, 1, "", "RSSMPrior"], [208, 0, 1, "", "Squeeze2dLayer"], [209, 0, 1, "", "SqueezeLayer"], [210, 0, 1, "", "TanhDelta"], [211, 0, 1, "", "TanhNormal"], [212, 0, 1, "", "TruncatedNormal"], [213, 0, 1, "", "VDNMixer"], [214, 0, 1, "", "VmapModule"], [215, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[168, 1, 1, "", "planning"]], "torchrl.modules.Conv3dNet": [[169, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[170, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[171, 1, 1, "", "default_config"], [171, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[172, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[173, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[174, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[175, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[176, 0, 1, "", "DTConfig"], [176, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[177, 1, 1, "", "log_prob"], [177, 3, 1, "", "mean"], [177, 3, 1, "", "mode"], [177, 1, 1, "", "rsample"], [177, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[178, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[180, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[181, 1, 1, "", "forward"]], "torchrl.modules.GRU": [[182, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[183, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[184, 1, 1, "", "forward"], [184, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[185, 3, 1, "", "mode"]], "torchrl.modules.LSTM": [[186, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[187, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[188, 1, 1, "", "forward"], [188, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.LSTMNet": [[189, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[190, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[191, 1, 1, "", "forward"], [191, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[192, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[193, 1, 1, "", "log_prob"], [193, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[194, 1, 1, "", "log_prob"], [194, 1, 1, "", "rsample"], [194, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentConvNet": [[195, 1, 1, "", "forward"]], "torchrl.modules.MultiAgentMLP": [[196, 1, 1, "", "forward"]], "torchrl.modules.NoisyLazyLinear": [[197, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[199, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[200, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[201, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[202, 1, 1, "", "log_prob"], [202, 3, 1, "", "mode"], [202, 1, 1, "", "rsample"], [202, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[203, 1, 1, "", "default_config"], [203, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[204, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[206, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[207, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[209, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[210, 3, 1, "", "mean"], [210, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[211, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[212, 1, 1, "", "log_prob"], [212, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[213, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[214, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[216, 0, 1, "", "Actor"], [217, 0, 1, "", "ActorCriticOperator"], [218, 0, 1, "", "ActorCriticWrapper"], [219, 0, 1, "", "ActorValueOperator"], [220, 0, 1, "", "AdditiveGaussianWrapper"], [221, 0, 1, "", "DecisionTransformerInferenceWrapper"], [222, 0, 1, "", "DistributionalQValueActor"], [223, 0, 1, "", "DistributionalQValueModule"], [224, 0, 1, "", "EGreedyModule"], [225, 0, 1, "", "EGreedyWrapper"], [226, 0, 1, "", "LMHeadActorValueOperator"], [227, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [228, 0, 1, "", "ProbabilisticActor"], [229, 0, 1, "", "QValueActor"], [230, 0, 1, "", "QValueModule"], [231, 0, 1, "", "SafeModule"], [232, 0, 1, "", "SafeProbabilisticModule"], [233, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [234, 0, 1, "", "SafeSequential"], [235, 0, 1, "", "TanhModule"], [236, 0, 1, "", "ValueOperator"], [237, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[217, 1, 1, "", "get_critic_operator"], [217, 1, 1, "", "get_policy_head"], [217, 1, 1, "", "get_value_head"], [217, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[218, 1, 1, "", "get_policy_head"], [218, 1, 1, "", "get_policy_operator"], [218, 1, 1, "", "get_value_head"], [218, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[219, 1, 1, "", "get_policy_head"], [219, 1, 1, "", "get_policy_operator"], [219, 1, 1, "", "get_value_head"], [219, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[220, 1, 1, "", "forward"], [220, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[221, 1, 1, "", "forward"], [221, 1, 1, "", "mask_context"], [221, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[223, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[224, 1, 1, "", "forward"], [224, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.EGreedyWrapper": [[225, 1, 1, "", "forward"], [225, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[227, 1, 1, "", "forward"], [227, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[230, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[231, 1, 1, "", "random"], [231, 1, 1, "", "random_sample"], [231, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[232, 1, 1, "", "random"], [232, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[235, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[237, 1, 1, "", "get_reward_operator"], [237, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[238, 0, 1, "", "biased_softplus"], [239, 0, 1, "", "inv_softplus"], [240, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[238, 1, 1, "", "forward"]], "torchrl.objectives": [[241, 0, 1, "", "A2CLoss"], [242, 0, 1, "", "CQLLoss"], [243, 0, 1, "", "ClipPPOLoss"], [244, 0, 1, "", "DDPGLoss"], [245, 0, 1, "", "DQNLoss"], [246, 0, 1, "", "DTLoss"], [247, 0, 1, "", "DiscreteCQLLoss"], [248, 0, 1, "", "DiscreteSACLoss"], [249, 0, 1, "", "DistributionalDQNLoss"], [250, 0, 1, "", "DreamerActorLoss"], [251, 0, 1, "", "DreamerModelLoss"], [252, 0, 1, "", "DreamerValueLoss"], [253, 0, 1, "", "HardUpdate"], [254, 0, 1, "", "IQLLoss"], [255, 0, 1, "", "KLPENPPOLoss"], [256, 0, 1, "", "LossModule"], [257, 0, 1, "", "OnlineDTLoss"], [258, 0, 1, "", "PPOLoss"], [259, 0, 1, "", "REDQLoss"], [260, 0, 1, "", "ReinforceLoss"], [261, 0, 1, "", "SACLoss"], [262, 0, 1, "", "SoftUpdate"], [263, 0, 1, "", "TD3Loss"], [264, 0, 1, "", "ValueEstimators"], [265, 0, 1, "", "default_value_kwargs"], [266, 0, 1, "", "distance_loss"], [267, 0, 1, "", "hold_out_net"], [268, 0, 1, "", "hold_out_params"], [270, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[241, 1, 1, "", "forward"], [241, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[242, 1, 1, "", "forward"], [242, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[243, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[244, 1, 1, "", "forward"], [244, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[245, 1, 1, "", "forward"], [245, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[246, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[247, 1, 1, "", "forward"], [247, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteSACLoss": [[248, 1, 1, "", "forward"], [248, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[249, 1, 1, "", "forward"], [249, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[250, 1, 1, "", "forward"], [250, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[251, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[252, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[254, 1, 1, "", "forward"], [254, 1, 1, "", "loss_value_diff"], [254, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[255, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[256, 1, 1, "", "convert_to_functional"], [256, 1, 1, "", "forward"], [256, 1, 1, "", "make_value_estimator"], [256, 1, 1, "", "named_parameters"], [256, 1, 1, "", "parameters"], [256, 1, 1, "", "set_keys"], [256, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[257, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[258, 1, 1, "", "forward"], [258, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[259, 1, 1, "", "forward"], [259, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[260, 1, 1, "", "forward"], [260, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[261, 1, 1, "", "forward"], [261, 1, 1, "", "load_state_dict"], [261, 1, 1, "", "make_value_estimator"], [261, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3Loss": [[263, 1, 1, "", "forward"], [263, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[269, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[269, 1, 1, "", "forward"], [269, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[271, 0, 1, "", "GAE"], [272, 0, 1, "", "TD0Estimator"], [273, 0, 1, "", "TD1Estimator"], [274, 0, 1, "", "TDLambdaEstimator"], [275, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[271, 1, 1, "", "forward"], [271, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[272, 1, 1, "", "forward"], [272, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[273, 1, 1, "", "forward"], [273, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[274, 1, 1, "", "forward"], [274, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[275, 1, 1, "", "forward"], [275, 1, 1, "", "set_keys"], [275, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[276, 0, 1, "", "generalized_advantage_estimate"], [277, 0, 1, "", "reward2go"], [278, 0, 1, "", "td0_advantage_estimate"], [279, 0, 1, "", "td0_return_estimate"], [280, 0, 1, "", "td1_advantage_estimate"], [281, 0, 1, "", "td1_return_estimate"], [282, 0, 1, "", "td_lambda_advantage_estimate"], [283, 0, 1, "", "td_lambda_return_estimate"], [284, 0, 1, "", "vec_generalized_advantage_estimate"], [285, 0, 1, "", "vec_td1_advantage_estimate"], [286, 0, 1, "", "vec_td1_return_estimate"], [287, 0, 1, "", "vec_td_lambda_advantage_estimate"], [288, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[289, 2, 1, "", "TensorDictRecorder"], [290, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[291, 2, 1, "", "Logger"], [293, 2, 1, "", "generate_exp_name"], [294, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[292, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[295, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[296, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[297, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[298, 0, 1, "", "BatchSubSampler"], [299, 0, 1, "", "ClearCudaCache"], [300, 0, 1, "", "CountFramesLog"], [301, 0, 1, "", "LogReward"], [302, 0, 1, "", "OptimizerHook"], [303, 0, 1, "", "Recorder"], [304, 0, 1, "", "ReplayBufferTrainer"], [305, 0, 1, "", "RewardNormalizer"], [306, 0, 1, "", "SelectKeys"], [307, 0, 1, "", "Trainer"], [308, 0, 1, "", "TrainerHookBase"], [309, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[298, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[299, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[300, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[301, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[302, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[303, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[304, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[305, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[306, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[308, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[309, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[310, 2, 1, "", "correct_for_frame_skip"], [311, 2, 1, "", "get_stats_random_rollout"], [312, 2, 1, "", "make_collector_offpolicy"], [313, 2, 1, "", "make_collector_onpolicy"], [314, 2, 1, "", "make_dqn_loss"], [315, 2, 1, "", "make_redq_loss"], [316, 2, 1, "", "make_redq_model"], [317, 2, 1, "", "make_replay_buffer"], [318, 2, 1, "", "make_target_updater"], [319, 2, 1, "", "make_trainer"], [320, 2, 1, "", "parallel_env_constructor"], [321, 2, 1, "", "sync_async_collector"], [322, 2, 1, "", "sync_sync_collector"], [323, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 327, 328, 329, 330, 332, 333, 334, 338, 339, 343, 344], "tutori": [0, 334, 338], "basic": [0, 341], "intermedi": [0, 8], "advanc": 0, "refer": [0, 325], "knowledg": [0, 326], "base": [0, 7, 326], "indic": 0, "tabl": 0, "collector": [1, 332, 333, 334, 335, 338, 343], "packag": [1, 2, 3, 327, 328, 329, 330], "singl": [1, 4], "node": 1, "data": [1, 2, 4, 332, 333, 334, 338, 343], "distribut": [1, 327], "helper": [1, 3], "function": [1, 4, 328, 333, 334, 338, 343], "replai": [2, 332, 333, 334, 335, 338, 341, 343], "buffer": [2, 332, 333, 334, 335, 338, 341, 343], "compos": [2, 117], "share": 2, "across": 2, "process": 2, "store": [2, 333], "trajectori": 2, "checkpoint": [2, 329], "dataset": 2, "tensorspec": [2, 44], "reinforc": [2, 328, 334, 338], "learn": [2, 4, 334, 338], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 327, 328, 329], "env": [3, 339, 343, 344], "vector": [3, 343], "multi": [3, 327, 328, 337, 338], "agent": [3, 4, 327, 328, 338], "environ": [3, 4, 6, 7, 332, 333, 334, 335, 337, 338, 339, 343, 344], "transform": [3, 150, 332, 334, 338, 339, 341, 343, 344], "clone": [3, 7], "mask": 3, "action": [3, 4, 335, 339], "record": [3, 303, 329, 332], "domain": [3, 327], "specif": [3, 327, 337], "librari": [3, 343], "thing": [4, 332, 339], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 343], "gener": [4, 327], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 332, 339], "algorithm": [4, 327], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 332, 333], "return": [4, 328], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "polici": [4, 332, 334, 335, 337, 338, 339], "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 343], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 337], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 332, 333, 334], "standard": 4, "explor": [4, 327, 332, 333], "valu": [4, 327, 328, 332, 334, 335], "loss": [4, 332, 333, 334, 335, 338], "earli": 4, "train": [4, 8, 328, 332, 334, 335, 338, 339], "roughli": 4, "uniformli": 4, "random": [4, 338], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "episod": 4, "remain": 4, "constant": [4, 333], "increas": 4, "an": [4, 334, 335, 339], "dynam": [4, 341], "can": 4, "low": 4, "forward": [4, 332], "model": [4, 327, 332, 333, 335, 340, 343], "also": 4, "us": [4, 6, 9, 335, 340, 341, 343], "offlin": 4, "observ": [4, 332], "space": 4, "effect": [4, 339], "dramat": 4, "dure": [4, 7], "high": 4, "dimension": 4, "work": [5, 6, 7], "gym": [5, 344], "what": 5, "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "instal": [6, 7, 343], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": 7, "render": [7, 338, 344], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 332], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 339], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "randompolici": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "binarydiscretetensorspec": 24, "boundedtensorspec": 25, "compositespec": 26, "discretetensorspec": 27, "lazystackedcompositespec": 28, "lazystackedtensorspec": 29, "multidiscretetensorspec": 30, "multionehotdiscretetensorspec": 31, "multistep": 32, "onehotdiscretetensorspec": 33, "pairwisedataset": 34, "prioritizedreplaybuff": 35, "promptdata": 36, "prompttensordicttoken": 37, "replaybuff": 38, "rewarddata": 39, "rolloutfrommodel": 40, "tensordictprioritizedreplaybuff": 41, "tensordictreplaybuff": 42, "tensordicttoken": 43, "tokenizeddatasetload": 45, "unboundedcontinuoustensorspec": 46, "unboundeddiscretetensorspec": 47, "check_no_exclusive_kei": 48, "consolidate_spec": 49, "contains_lazy_spec": 50, "create_infinite_iter": 51, "d4rlexperiencereplai": 52, "minariexperiencereplai": 53, "openmlexperiencereplai": 54, "openxexperiencereplai": 55, "robosetexperiencereplai": 56, "vd4rlexperiencereplai": 57, "get_dataload": 58, "immutabledatasetwrit": 59, "lazymemmapstorag": 60, "lazytensorstorag": 61, "liststorag": 62, "prioritizedsampl": 63, "randomsampl": 64, "roundrobinwrit": 65, "sampler": 66, "samplerwithoutreplac": 67, "slicesampl": 68, "slicesamplerwithoutreplac": 69, "storag": [70, 332, 341], "tensordictmaxvaluewrit": 71, "tensordictroundrobinwrit": 72, "tensorstorag": 73, "writer": 74, "braxenv": 75, "braxwrapp": 76, "dmcontrolenv": 77, "dmcontrolwrapp": 78, "envbas": [79, 339], "envcreat": 80, "envmetadata": 81, "gymenv": 82, "gymlikeenv": 83, "gymwrapp": 84, "habitatenv": 85, "isaacgymenv": 86, "isaacgymwrapp": 87, "jumanjienv": 88, "jumanjiwrapp": 89, "mogymenv": 90, "mogymwrapp": 91, "marlgroupmaptyp": 92, "modelbasedenvbas": 93, "multithreadedenv": 94, "multithreadedenvwrapp": 95, "openmlenv": 96, "parallelenv": 97, "pettingzooenv": 98, "pettingzoowrapp": 99, "robohiveenv": 100, "smacv2env": 101, "smacv2wrapp": 102, "serialenv": 103, "vmasenv": 104, "vmaswrapp": 105, "check_marl_group": 106, "gym_backend": 107, "dreamerenv": 108, "set_gym_backend": 109, "actionmask": 110, "binarizereward": 111, "burnintransform": 112, "catfram": [113, 341], "cattensor": 114, "centercrop": 115, "cliptransform": 116, "dtypecasttransform": 118, "devicecasttransform": 119, "discreteactionproject": 120, "doubletofloat": 121, "endoflifetransform": 122, "excludetransform": 123, "finitetensordictcheck": 124, "flattenobserv": 125, "frameskiptransform": 126, "grayscal": 127, "inittrack": 128, "klrewardtransform": 129, "noopresetenv": 130, "observationnorm": 131, "observationtransform": 132, "permutetransform": 133, "pinmemorytransform": 134, "r3mtransform": 135, "randomcroptensordict": 136, "renametransform": 137, "resiz": 138, "reward2gotransform": 139, "rewardclip": 140, "rewardsc": 141, "rewardsum": 142, "selecttransform": 143, "squeezetransform": 144, "stepcount": 145, "targetreturn": 146, "tensordictprim": 147, "timemaxpool": 148, "totensorimag": 149, "transformedenv": 151, "unsqueezetransform": 152, "vc1transform": 153, "viprewardtransform": 154, "viptransform": 155, "vecgymenvtransform": 156, "vecnorm": [157, 344], "gsdenois": 158, "check_env_spec": 159, "exploration_mod": 160, "exploration_typ": 161, "get_available_librari": 162, "make_composite_from_td": 163, "set_exploration_mod": 164, "set_exploration_typ": 165, "step_mdp": 166, "terminated_or_trunc": 167, "cemplann": 168, "conv3dnet": 169, "convnet": 170, "dtactor": 171, "ddpgcnnactor": 172, "ddpgcnnqnet": 173, "ddpgmlpactor": 174, "ddpgmlpqnet": 175, "decisiontransform": 176, "delta": 177, "distributionaldqnnet": 178, "distributionalqvaluehook": 179, "dreameractor": 180, "duelingcnndqnet": 181, "gru": 182, "grucel": 183, "grumodul": 184, "independentnorm": 185, "lstm": [186, 335], "lstmcell": 187, "lstmmodul": 188, "lstmnet": 189, "mlp": [190, 335], "mpcplannerbas": 191, "mppiplann": 192, "maskedcategor": 193, "maskedonehotcategor": 194, "multiagentconvnet": 195, "multiagentmlp": 196, "noisylazylinear": 197, "noisylinear": 198, "normalparamwrapp": 199, "obsdecod": 200, "obsencod": 201, "onehotcategor": 202, "onlinedtactor": 203, "qmixer": [204, 328], "qvaluehook": 205, "rssmposterior": 206, "rssmprior": 207, "squeeze2dlay": 208, "squeezelay": 209, "tanhdelta": 210, "tanhnorm": 211, "truncatednorm": 212, "vdnmixer": 213, "vmapmodul": 214, "reset_nois": 215, "actor": [216, 327, 332], "actorcriticoper": 217, "actorcriticwrapp": 218, "actorvalueoper": 219, "additivegaussianwrapp": 220, "decisiontransformerinferencewrapp": 221, "distributionalqvalueactor": 222, "distributionalqvaluemodul": 223, "egreedymodul": 224, "egreedywrapp": 225, "lmheadactorvalueoper": 226, "ornsteinuhlenbeckprocesswrapp": 227, "probabilisticactor": 228, "qvalueactor": 229, "qvaluemodul": 230, "safemodul": [231, 327], "safeprobabilisticmodul": 232, "safeprobabilistictensordictsequenti": 233, "safesequenti": 234, "tanhmodul": 235, "valueoper": 236, "worldmodelwrapp": 237, "biased_softplu": 238, "inv_softplu": 239, "map": 240, "a2closs": 241, "cqlloss": 242, "clipppoloss": 243, "ddpgloss": 244, "dqnloss": 245, "dtloss": 246, "discretecqlloss": 247, "discretesacloss": 248, "distributionaldqnloss": 249, "dreameractorloss": 250, "dreamermodelloss": 251, "dreamervalueloss": 252, "hardupd": 253, "iqlloss": 254, "klpenppoloss": 255, "lossmodul": [256, 332], "onlinedtloss": 257, "ppoloss": 258, "redqloss": 259, "reinforceloss": 260, "sacloss": 261, "softupd": 262, "td3loss": 263, "valueestim": 264, "default_value_kwarg": 265, "distance_loss": 266, "hold_out_net": 267, "hold_out_param": 268, "qmixerloss": 269, "next_state_valu": 270, "gae": 271, "td0estim": 272, "td1estim": 273, "tdlambdaestim": 274, "valueestimatorbas": 275, "generalized_advantage_estim": 276, "reward2go": 277, "td0_advantage_estim": 278, "td0_return_estim": 279, "td1_advantage_estim": 280, "td1_return_estim": 281, "td_lambda_advantage_estim": 282, "td_lambda_return_estim": 283, "vec_generalized_advantage_estim": 284, "vec_td1_advantage_estim": 285, "vec_td1_return_estim": 286, "vec_td_lambda_advantage_estim": 287, "vec_td_lambda_return_estim": 288, "tensordictrecord": 289, "videorecord": 290, "logger": [291, 329], "csvlogger": 292, "generate_exp_nam": 293, "get_logg": 294, "mlflowlogg": 295, "tensorboardlogg": 296, "wandblogg": 297, "batchsubsampl": 298, "clearcudacach": 299, "countframeslog": 300, "logreward": 301, "optimizerhook": 302, "replaybuffertrain": 304, "rewardnorm": 305, "selectkei": 306, "trainer": [307, 329, 333], "trainerhookbas": 308, "updateweight": 309, "correct_for_frame_skip": 310, "get_stats_random_rollout": 311, "make_collector_offpolici": 312, "make_collector_onpolici": 313, "make_dqn_loss": 314, "make_redq_loss": 315, "make_redq_model": 316, "make_replay_buff": 317, "make_target_updat": 318, "make_train": 319, "parallel_env_constructor": 320, "sync_async_collector": 321, "sync_sync_collector": 322, "transformed_env_constructor": 323, "readm": [324, 336], "tuto": [324, 336], "api": 325, "contribut": [326, 343], "content": 326, "modul": [327, 332, 335, 343], "tensordict": [327, 341, 343], "wrapper": 327, "probabilist": 327, "q": [327, 333, 335], "oper": 327, "join": 327, "hook": [327, 329, 333], "regular": 327, "planner": 327, "object": [328, 332, 343], "dqn": [328, 333, 335], "ddpg": [328, 332], "sac": 328, "redq": 328, "iql": 328, "cql": 328, "dt": 328, "td3": 328, "ppo": [328, 334, 338], "a2c": 328, "dreamer": 328, "builder": 329, "_util": 330, "comput": [331, 333, 339, 342], "time": [331, 332, 342], "code": [332, 339], "setup": [332, 335], "The": 332, "__init__": 332, "method": 332, "estim": 332, "put": 332, "togeth": [332, 339], "call": 332, "parallel": [332, 337, 344], "execut": [332, 337, 339], "stat": 332, "build": [332, 333, 341], "evalu": 332, "batch": [332, 339, 341], "size": [332, 341], "construct": 332, "target": [332, 333], "network": [332, 333, 334, 335, 338], "updat": 332, "experi": [332, 339], "result": [332, 334, 338], "conclus": [332, 333, 334, 335, 338, 339, 341], "A": [333, 341], "exampl": [333, 341], "deep": 333, "collect": [333, 334], "paramet": [333, 334], "hyperparamet": [333, 334, 338], "regist": 333, "possibl": 333, "improv": 333, "defin": [334, 338], "loop": [334, 335, 338, 339], "next": [334, 338], "step": [334, 338, 344], "recurr": 335, "overview": 335, "convolut": 335, "select": 335, "further": 335, "read": 335, "divers": 337, "rollout": [337, 338, 339, 344], "critic": 338, "pendulum": 339, "write": 339, "_step": 339, "reset": [339, 344], "simul": 339, "_reset": 339, "metadata": 339, "_spec": 339, "spec": [339, 344], "shape": 339, "seed": [339, 344], "wrap": 339, "class": [339, 343], "test": 339, "our": 339, "custom": [339, 341], "simpl": 339, "pretrain": 340, "vanilla": 341, "integr": 341, "tensorclass": 341, "sampl": 341, "iter": 341, "over": 341, "fix": 341, "priorit": 341, "save": 341, "raw": 341, "imag": 341, "more": 341, "complex": 341, "introduct": 343, "config": 343, "tensordictmodul": 343, "sequenc": 343, "program": 343, "ensembl": 343, "meta": 343, "special": 343, "state": 343, "frame_skip": 344, "deepmind": 344, "control": 344, "devic": 344, "run": 344, "close": 344, "access": 344, "attribut": 344, "kwarg": 344}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})