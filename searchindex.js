Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.SliceSampler", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.BurnInTransform", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenXExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.datasets.VD4RLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.ImmutableDatasetWriter.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.ReplayBufferEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.SliceSampler.rst", "reference/generated/torchrl.data.replay_buffers.SliceSamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.StorageEnsemble.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.data.replay_buffers.WriterEnsemble.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.BurnInTransform.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "D4RLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "OpenXExperienceReplay", "RobosetExperienceReplay", "VD4RLExperienceReplay", "get_dataloader", "ImmutableDatasetWriter", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "RandomSampler", "ReplayBufferEnsemble", "RoundRobinWriter", "Sampler", "SamplerEnsemble", "SamplerWithoutReplacement", "SliceSampler", "SliceSamplerWithoutReplacement", "Storage", "StorageEnsemble", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "WriterEnsemble", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerEnv", "set_gym_backend", "ActionMask", "BinarizeReward", "BurnInTransform", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "CEMPlanner", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "EGreedyWrapper", "LMHeadActorValueOperator", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "README Tutos", "Task-specific policy in multi-task environments", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 46, 47, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 65, 66, 68, 72, 73, 74, 75, 76, 77, 78, 81, 83, 84, 87, 97, 98, 100, 101, 102, 103, 107, 110, 114, 116, 117, 119, 122, 124, 125, 128, 134, 135, 139, 140, 141, 143, 150, 151, 152, 153, 154, 155, 157, 160, 161, 163, 173, 174, 176, 177, 178, 179, 186, 188, 190, 192, 193, 194, 195, 199, 200, 201, 205, 212, 213, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 236, 237, 241, 244, 245, 246, 247, 249, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 273, 275, 276, 277, 278, 279, 294, 297, 306, 307, 311, 312, 315, 324, 325, 326, 327, 330, 331, 332, 336, 337, 341, 342, 344, 345, 347, 348], "open": [0, 5, 7, 11, 55, 337, 342, 347], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348], "reinforc": [0, 3, 9, 117, 176, 177, 178, 179, 183, 227, 231, 245, 246, 250, 251, 253, 257, 258, 264, 265, 266, 329, 335, 337, 340, 343, 346, 347], "learn": [0, 3, 7, 8, 9, 18, 32, 54, 56, 57, 117, 176, 177, 178, 179, 183, 196, 202, 227, 231, 245, 246, 250, 251, 253, 257, 258, 263, 264, 265, 266, 329, 331, 332, 335, 336, 337, 339, 340, 341, 343, 345, 346, 347, 348], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 16, 17, 97, 150, 202, 220, 232, 240, 245, 260, 262, 302, 330, 331, 332, 333, 336, 337, 338, 342, 344, 345, 348], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 18, 19, 20, 37, 43, 91, 98, 166, 329, 330, 331, 334, 336, 337, 338, 342, 343, 348], "pytorch": [0, 1, 2, 3, 53, 153, 186, 190, 201, 202, 311, 330, 333, 336, 338, 339, 342, 343, 344, 347, 348], "It": [0, 2, 3, 4, 7, 32, 37, 40, 41, 43, 45, 52, 53, 55, 56, 57, 65, 68, 78, 83, 87, 89, 97, 98, 101, 102, 103, 107, 116, 126, 133, 135, 140, 150, 155, 160, 163, 176, 178, 184, 199, 200, 208, 210, 211, 217, 218, 227, 228, 231, 234, 236, 245, 246, 247, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 273, 274, 275, 307, 320, 330, 331, 332, 336, 337, 339, 342, 343, 344, 345, 347, 348], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 30, 31, 32, 33, 35, 38, 41, 42, 45, 49, 52, 53, 54, 55, 56, 57, 58, 60, 64, 65, 68, 70, 71, 74, 83, 87, 97, 101, 102, 103, 107, 116, 117, 118, 119, 120, 122, 125, 129, 134, 135, 137, 139, 140, 142, 143, 146, 147, 150, 151, 152, 155, 157, 159, 160, 161, 171, 173, 174, 180, 183, 186, 187, 188, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 218, 220, 224, 227, 228, 229, 231, 232, 233, 234, 239, 245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 298, 302, 308, 315, 320, 323, 330, 331, 332, 333, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "python": [0, 3, 5, 6, 7, 10, 21, 113, 186, 187, 188, 190, 191, 192, 197, 198, 333, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348], "first": [0, 1, 3, 4, 5, 7, 8, 18, 20, 21, 26, 28, 52, 53, 55, 56, 57, 60, 61, 70, 71, 76, 87, 117, 118, 129, 135, 139, 140, 153, 155, 157, 186, 188, 190, 192, 194, 199, 200, 201, 205, 220, 225, 226, 227, 232, 233, 235, 236, 247, 255, 259, 260, 262, 293, 310, 331, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "low": [0, 25, 83, 87, 101, 107, 120, 124, 167, 227, 232, 239, 336, 337, 338, 342, 343, 347, 348], "high": [0, 9, 25, 41, 83, 87, 101, 107, 120, 124, 134, 167, 227, 232, 239, 275, 280, 288, 336, 337, 338, 342, 343, 345, 347, 348], "level": [0, 3, 4, 22, 26, 28, 117, 149, 259, 336, 337, 347], "abstract": [0, 3, 8, 24, 25, 26, 27, 28, 29, 30, 44, 46, 47, 77, 83, 136, 195, 279, 303, 312, 333, 338, 343, 347], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 23, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 48, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 65, 68, 69, 71, 72, 73, 76, 83, 84, 87, 96, 97, 100, 101, 102, 103, 104, 107, 109, 116, 117, 120, 121, 122, 124, 125, 126, 128, 129, 133, 134, 137, 139, 143, 146, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 167, 171, 172, 179, 181, 186, 187, 188, 190, 191, 192, 193, 195, 197, 198, 199, 202, 206, 208, 211, 225, 226, 228, 231, 232, 233, 235, 236, 237, 238, 239, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 270, 273, 274, 275, 276, 277, 278, 279, 308, 323, 327, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "intend": [0, 7, 13, 14, 16, 17, 18, 19, 20, 21, 45, 116, 124, 218, 260, 331, 347], "effici": [0, 1, 2, 4, 8, 186, 202, 331, 336, 337, 338, 339, 341, 342, 344, 345, 347], "modular": [0, 238, 345, 347], "document": [0, 5, 7, 18, 19, 21, 32, 55, 83, 87, 101, 107, 155, 337, 339, 347], "properli": [0, 83, 87, 101, 107, 338, 342, 343, 347], "test": [0, 3, 5, 157, 163, 188, 192, 193, 307, 323, 338, 339, 347], "The": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 65, 68, 70, 71, 72, 74, 83, 87, 91, 101, 102, 103, 107, 116, 117, 121, 122, 125, 126, 127, 135, 137, 139, 143, 145, 146, 147, 149, 150, 151, 154, 155, 157, 159, 160, 170, 171, 172, 176, 177, 178, 179, 180, 183, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 202, 203, 209, 210, 211, 220, 221, 225, 226, 227, 231, 232, 233, 234, 235, 236, 238, 240, 241, 242, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 273, 274, 275, 276, 277, 278, 279, 281, 296, 299, 300, 301, 302, 306, 323, 325, 326, 331, 332, 333, 337, 338, 339, 342, 343, 344, 345, 347, 348], "code": [0, 3, 5, 7, 8, 55, 83, 87, 101, 107, 139, 155, 157, 186, 187, 188, 190, 191, 192, 238, 335, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348], "aim": [0, 3, 7, 28, 29, 139, 157, 159, 194, 314, 330, 331, 332, 336, 337, 347], "support": [0, 1, 3, 18, 20, 26, 54, 57, 58, 60, 61, 72, 73, 76, 78, 98, 100, 102, 117, 126, 135, 151, 152, 154, 166, 183, 218, 226, 227, 232, 235, 238, 253, 275, 276, 277, 278, 299, 331, 333, 338, 339, 342, 343, 345, 347], "research": [0, 7, 9, 347], "most": [0, 3, 7, 8, 32, 70, 71, 124, 160, 336, 338, 343, 347, 348], "written": [0, 3, 34, 36, 39, 45, 52, 55, 60, 65, 70, 71, 83, 87, 101, 107, 117, 126, 133, 146, 149, 152, 160, 170, 171, 220, 231, 232, 235, 236, 240, 245, 247, 259, 262, 264, 274, 293, 294, 331, 332, 333, 336, 339, 341, 343, 347], "highli": [0, 2, 347, 348], "wai": [0, 2, 3, 4, 53, 65, 91, 139, 141, 159, 160, 190, 262, 275, 276, 277, 278, 331, 336, 337, 338, 341, 342, 343, 344, 345, 347, 348], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 57, 63, 65, 69, 70, 71, 83, 84, 87, 91, 96, 101, 102, 103, 105, 106, 107, 109, 113, 114, 116, 117, 120, 121, 122, 124, 125, 126, 134, 135, 139, 140, 143, 146, 149, 150, 151, 154, 155, 157, 159, 161, 171, 172, 186, 188, 189, 190, 192, 195, 196, 199, 200, 202, 203, 216, 218, 220, 224, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 273, 274, 275, 276, 277, 278, 279, 307, 320, 325, 326, 327, 330, 331, 332, 333, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "easili": [0, 3, 7, 83, 87, 101, 107, 320, 332, 336, 337, 338, 342, 347, 348], "swap": [0, 3, 160, 338, 344, 347], "compon": [0, 2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 60, 61, 62, 65, 72, 73, 76, 183, 209, 226, 227, 234, 245, 246, 247, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 273, 306, 311, 336, 337, 338, 339, 341, 342, 343, 344, 347], "transform": [0, 1, 2, 4, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 40, 41, 42, 43, 52, 53, 54, 55, 56, 57, 65, 73, 83, 84, 87, 101, 102, 103, 107, 109, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 175, 176, 180, 183, 184, 207, 208, 209, 217, 225, 230, 239, 242, 244, 250, 261, 294, 308, 320, 327, 329, 335, 337, 339, 340, 344, 346], "them": [0, 2, 3, 7, 9, 21, 32, 35, 37, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65, 78, 83, 84, 87, 91, 96, 101, 102, 103, 107, 109, 122, 125, 155, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 199, 200, 203, 204, 205, 207, 210, 211, 213, 217, 218, 224, 225, 227, 228, 229, 231, 234, 239, 242, 259, 265, 294, 336, 337, 339, 341, 342, 343, 344, 345, 347, 348], "write": [0, 3, 8, 23, 32, 34, 36, 37, 39, 45, 65, 73, 78, 87, 120, 137, 138, 146, 149, 153, 171, 220, 235, 236, 238, 240, 248, 249, 251, 252, 258, 263, 265, 267, 274, 279, 294, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346, 347, 348], "new": [0, 2, 3, 4, 8, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 47, 63, 69, 83, 87, 98, 101, 105, 106, 107, 146, 154, 161, 170, 171, 186, 188, 192, 231, 235, 236, 241, 245, 246, 247, 249, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 273, 336, 338, 339, 342, 343, 347, 348], "ones": [0, 2, 15, 26, 32, 35, 41, 42, 83, 87, 101, 107, 118, 121, 122, 123, 125, 135, 139, 143, 151, 154, 155, 157, 159, 197, 198, 218, 235, 245, 246, 248, 258, 262, 263, 265, 267, 281, 336, 338, 342, 343, 345, 347, 348], "littl": [0, 3, 43, 338, 339, 345, 347, 348], "effort": [0, 3, 343, 345, 347], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 60, 61, 62, 65, 68, 69, 70, 71, 72, 73, 74, 76, 78, 83, 87, 89, 96, 97, 101, 102, 103, 107, 109, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 132, 133, 135, 139, 140, 141, 143, 146, 147, 149, 151, 152, 154, 155, 157, 158, 159, 160, 161, 163, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 213, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 241, 242, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 273, 275, 276, 277, 278, 279, 293, 302, 304, 307, 308, 311, 313, 314, 315, 320, 323, 327, 330, 331, 332, 333, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "repo": [0, 6, 52, 117, 152, 157, 330, 342, 347], "attempt": [0, 70, 71, 224, 229, 231, 249, 258, 273, 347], "align": [0, 186, 190, 347], "exist": [0, 3, 4, 11, 18, 21, 32, 34, 36, 39, 45, 83, 87, 101, 107, 118, 123, 155, 265, 315, 327, 342, 347, 348], "ecosystem": [0, 347], "ha": [0, 2, 3, 4, 5, 7, 8, 10, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 44, 46, 47, 55, 65, 68, 70, 83, 84, 87, 91, 101, 107, 109, 117, 149, 150, 151, 152, 155, 186, 188, 190, 192, 199, 224, 227, 229, 231, 236, 259, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "dataset": [0, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 65, 68, 70, 71, 100, 161, 329, 336, 337, 344, 345, 347, 348], "pillar": [0, 347], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 114, 116, 117, 118, 122, 123, 124, 125, 130, 134, 135, 139, 140, 146, 149, 150, 151, 152, 154, 155, 157, 160, 161, 163, 172, 188, 192, 193, 195, 196, 224, 231, 251, 254, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 302, 304, 307, 314, 315, 316, 317, 320, 323, 324, 325, 326, 327, 329, 330, 331, 335, 340, 344, 345, 346], "model": [0, 1, 3, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 83, 87, 97, 101, 107, 122, 139, 151, 157, 159, 162, 173, 174, 175, 180, 188, 192, 194, 195, 196, 200, 207, 208, 217, 221, 222, 223, 230, 235, 241, 245, 246, 247, 249, 250, 251, 254, 255, 256, 258, 259, 260, 262, 263, 265, 273, 311, 316, 317, 318, 319, 320, 329, 330, 333, 335, 338, 340, 342, 343, 345, 346, 348], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 83, 85, 87, 97, 100, 101, 102, 103, 107, 114, 116, 117, 122, 123, 125, 127, 133, 135, 143, 149, 160, 163, 167, 171, 172, 183, 188, 192, 193, 196, 199, 200, 209, 218, 220, 226, 228, 229, 231, 232, 233, 235, 238, 239, 240, 245, 246, 248, 249, 251, 252, 258, 262, 263, 264, 265, 267, 273, 275, 276, 277, 278, 279, 302, 308, 311, 313, 316, 323, 325, 326, 327, 329, 331, 332, 333, 339, 343, 344, 345, 348], "util": [0, 3, 17, 23, 32, 40, 83, 87, 101, 102, 103, 107, 110, 139, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 180, 186, 190, 242, 243, 244, 260, 323, 329, 334, 336, 338, 342, 343, 347, 348], "e": [0, 1, 3, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 33, 60, 61, 76, 83, 84, 87, 101, 107, 116, 118, 121, 129, 135, 139, 146, 151, 154, 155, 157, 159, 163, 186, 188, 189, 190, 192, 196, 200, 203, 209, 215, 216, 225, 227, 232, 234, 235, 236, 265, 274, 275, 276, 277, 278, 302, 314, 326, 331, 336, 337, 338, 342, 344, 347, 348], "g": [0, 1, 3, 7, 8, 10, 11, 32, 33, 83, 84, 87, 101, 107, 116, 118, 121, 129, 135, 139, 146, 151, 154, 155, 157, 159, 163, 186, 188, 189, 190, 191, 192, 196, 200, 215, 216, 225, 232, 235, 236, 265, 274, 284, 285, 286, 287, 289, 290, 291, 292, 326, 331, 336, 337, 338, 342, 343, 344, 347, 348], "collector": [0, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 55, 70, 71, 117, 143, 149, 231, 308, 311, 313, 316, 317, 323, 325, 326, 329, 333, 345, 348], "contain": [0, 3, 7, 12, 13, 14, 16, 17, 19, 20, 26, 28, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 50, 52, 53, 54, 55, 56, 57, 59, 63, 65, 66, 68, 72, 75, 77, 78, 83, 87, 97, 101, 107, 121, 122, 125, 139, 151, 154, 155, 157, 159, 160, 161, 170, 171, 172, 173, 174, 186, 187, 190, 191, 194, 196, 200, 220, 226, 227, 232, 234, 235, 240, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 273, 274, 275, 276, 277, 278, 279, 281, 298, 302, 314, 320, 323, 324, 325, 326, 327, 331, 332, 333, 336, 337, 338, 339, 342, 343, 344, 345, 347, 348], "etc": [0, 3, 7, 8, 11, 32, 46, 47, 55, 83, 87, 101, 107, 133, 155, 194, 200, 336, 337, 338, 345, 347, 348], "have": [0, 1, 2, 3, 5, 6, 7, 8, 9, 13, 14, 17, 18, 20, 21, 26, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 65, 69, 72, 83, 87, 101, 102, 103, 107, 117, 122, 125, 126, 133, 134, 135, 149, 154, 155, 161, 163, 171, 173, 174, 193, 194, 199, 200, 218, 237, 238, 245, 247, 259, 262, 270, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 302, 311, 331, 332, 333, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "few": [0, 2, 8, 302, 338, 339, 342, 345, 347, 348], "depend": [0, 1, 2, 3, 4, 7, 8, 34, 36, 122, 125, 240, 262, 331, 336, 338, 339, 342, 343, 347, 348], "possibl": [0, 2, 3, 4, 27, 29, 32, 33, 34, 36, 39, 55, 57, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 173, 174, 186, 187, 190, 191, 235, 307, 311, 331, 336, 338, 339, 342, 343, 345, 347, 348], "standard": [0, 3, 135, 145, 161, 172, 184, 196, 201, 202, 224, 225, 267, 275, 276, 277, 278, 336, 337, 342, 345, 347], "numpi": [0, 11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 101, 107, 153, 311, 343, 345, 347, 348], "common": [0, 2, 3, 4, 21, 87, 114, 221, 222, 223, 230, 245, 246, 247, 252, 258, 259, 262, 263, 264, 265, 267, 323, 330, 331, 333, 336, 338, 341, 342, 343, 344, 347, 348], "openai": [0, 7, 86, 88, 104, 338, 343, 347, 348], "gym": [0, 1, 3, 4, 8, 11, 13, 14, 16, 17, 21, 22, 83, 84, 86, 87, 88, 91, 101, 104, 107, 111, 113, 117, 120, 126, 132, 133, 135, 137, 141, 143, 146, 151, 154, 160, 161, 320, 323, 330, 336, 337, 338, 339, 343, 344, 345, 347], "onli": [0, 1, 3, 4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 44, 46, 47, 52, 60, 61, 70, 71, 76, 83, 87, 91, 98, 101, 102, 103, 107, 117, 118, 120, 121, 122, 124, 125, 129, 135, 139, 140, 143, 149, 150, 151, 152, 154, 155, 157, 159, 161, 190, 192, 193, 199, 200, 220, 225, 226, 232, 233, 235, 236, 237, 238, 245, 247, 248, 252, 258, 259, 260, 262, 263, 264, 265, 266, 267, 275, 276, 277, 278, 279, 315, 333, 336, 337, 338, 339, 341, 342, 343, 345, 347, 348], "option": [0, 1, 3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 68, 69, 70, 71, 73, 76, 81, 83, 84, 87, 97, 100, 101, 102, 103, 104, 107, 109, 114, 116, 117, 118, 119, 120, 122, 124, 125, 126, 129, 130, 132, 133, 134, 135, 139, 140, 141, 142, 143, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 163, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 214, 215, 216, 218, 220, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 273, 274, 275, 276, 277, 278, 279, 281, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 296, 299, 302, 304, 305, 306, 307, 308, 309, 311, 315, 316, 317, 318, 319, 320, 322, 323, 325, 326, 327, 331, 339, 342, 343, 345, 347], "On": [0, 3, 7, 18, 19, 20, 21, 187, 191, 331, 337, 342], "end": [0, 3, 13, 14, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65, 69, 70, 71, 83, 87, 101, 107, 126, 137, 149, 150, 155, 173, 174, 186, 187, 190, 191, 195, 265, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "come": [0, 1, 3, 8, 87, 96, 101, 107, 122, 125, 220, 221, 222, 223, 232, 240, 336, 337, 338, 339, 342, 345, 347, 348], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 32, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 60, 61, 65, 69, 72, 76, 83, 85, 87, 97, 101, 102, 103, 107, 113, 114, 117, 118, 121, 122, 125, 132, 133, 139, 143, 149, 150, 151, 152, 154, 155, 157, 159, 161, 163, 168, 169, 171, 186, 188, 190, 192, 195, 199, 200, 224, 225, 235, 252, 260, 262, 265, 279, 302, 307, 308, 317, 327, 330, 331, 332, 334, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "re": [0, 3, 8, 32, 69, 83, 87, 101, 107, 192, 197, 198, 232, 236, 333, 336, 338, 339, 341, 343, 347, 348], "usabl": [0, 333, 339, 347], "function": [0, 3, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 45, 46, 47, 49, 60, 61, 62, 65, 72, 73, 76, 83, 84, 87, 101, 107, 113, 122, 125, 155, 161, 163, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 197, 198, 199, 200, 203, 204, 205, 206, 207, 210, 211, 213, 216, 218, 221, 222, 223, 224, 225, 227, 228, 229, 231, 232, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 320, 323, 329, 331, 336, 339, 341, 343, 345, 348], "cost": [0, 2, 27, 55, 336, 337, 342, 343, 345], "return": [0, 2, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 70, 71, 73, 74, 75, 77, 78, 81, 83, 84, 87, 97, 100, 101, 102, 103, 107, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 131, 132, 133, 135, 137, 139, 140, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 170, 171, 172, 175, 176, 177, 178, 179, 181, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 203, 206, 207, 208, 210, 211, 214, 215, 216, 217, 220, 221, 222, 223, 225, 232, 234, 235, 236, 240, 241, 242, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 270, 273, 274, 275, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 298, 311, 314, 316, 320, 323, 324, 325, 326, 327, 329, 331, 333, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "process": [0, 1, 3, 4, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 39, 43, 45, 56, 57, 83, 84, 87, 91, 96, 98, 101, 102, 103, 107, 116, 122, 125, 153, 161, 199, 200, 227, 231, 234, 329, 333, 336, 337, 339, 342, 343, 344, 345, 347, 348], "good": [0, 1, 4, 9, 336, 338, 339, 342, 347, 348], "runtim": [0, 3, 32, 83, 87, 101, 107, 343], "perform": [0, 3, 4, 8, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 83, 87, 101, 107, 110, 122, 125, 134, 155, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 199, 200, 203, 204, 205, 207, 210, 211, 213, 218, 224, 225, 227, 228, 229, 231, 234, 239, 242, 255, 262, 265, 307, 311, 332, 336, 337, 338, 339, 341, 342, 343, 348], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 32, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 70, 71, 73, 78, 83, 87, 96, 101, 102, 103, 105, 106, 107, 149, 161, 221, 222, 223, 231, 252, 260, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 331, 332, 336, 337, 338, 339, 342, 343, 344, 345, 347, 348], "read": [0, 2, 3, 7, 17, 23, 37, 40, 55, 60, 61, 62, 65, 72, 73, 76, 83, 87, 101, 107, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 137, 138, 140, 141, 143, 146, 147, 149, 150, 151, 152, 154, 157, 158, 160, 161, 171, 206, 220, 221, 222, 223, 226, 232, 235, 236, 238, 240, 241, 245, 246, 247, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 273, 275, 276, 277, 278, 279, 294, 307, 311, 320, 331, 336, 337, 338, 341, 342, 343, 344, 348], "more": [0, 2, 3, 4, 6, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 54, 55, 56, 57, 65, 83, 87, 90, 91, 101, 102, 103, 107, 109, 153, 157, 162, 183, 190, 194, 201, 203, 220, 224, 226, 227, 235, 240, 245, 253, 260, 262, 275, 280, 288, 306, 330, 332, 333, 336, 337, 338, 339, 341, 342, 343, 344, 348], "about": [0, 2, 3, 5, 7, 9, 18, 19, 20, 43, 56, 57, 332, 336, 337, 338, 342, 343, 347, 348], "philosophi": [0, 9], "capabl": [0, 1, 7, 9, 333, 336, 341, 344, 348], "beyond": 0, "api": [0, 2, 3, 5, 102, 103, 104, 139, 159, 332, 333, 342, 343, 347, 348], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 48, 50, 70, 83, 84, 87, 97, 101, 107, 110, 117, 118, 128, 133, 140, 153, 163, 188, 192, 220, 226, 227, 232, 233, 234, 235, 236, 331, 332, 337, 338, 339, 341, 342, 343, 344, 345, 348], "paper": [0, 139, 157, 159, 186, 208, 217, 251, 257, 320, 336, 338, 342], "ppo": [0, 4, 8, 232, 236, 247, 259, 262, 329, 331, 335, 336, 337, 340, 346], "pendulum": [0, 3, 13, 14, 16, 17, 21, 22, 83, 84, 86, 87, 88, 98, 101, 107, 117, 120, 121, 127, 132, 133, 135, 141, 143, 149, 151, 152, 154, 155, 161, 188, 192, 323, 331, 335, 337, 338, 340, 346, 347, 348], "your": [0, 2, 3, 7, 8, 10, 18, 32, 83, 87, 91, 96, 101, 102, 103, 107, 161, 327, 330, 331, 332, 335, 337, 338, 339, 340, 342, 345, 346, 347], "introduct": [0, 332, 335, 340, 342, 346, 348], "multi": [0, 7, 9, 28, 29, 32, 83, 87, 101, 105, 106, 107, 186, 188, 190, 192, 193, 194, 199, 200, 273, 275, 276, 277, 278, 329, 335, 336, 337, 338, 339, 340, 343, 346, 347], "agent": [0, 9, 28, 29, 96, 102, 103, 105, 106, 108, 109, 110, 149, 150, 197, 198, 199, 200, 202, 208, 217, 273, 329, 335, 340, 343, 346], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 40, 52, 53, 55, 56, 57, 65, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 188, 192, 195, 196, 235, 260, 293, 315, 316, 317, 320, 323, 325, 326, 327, 329, 331, 335, 336, 337, 338, 339, 340, 341, 342, 344, 345, 346], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 63, 64, 65, 70, 71, 76, 81, 83, 84, 87, 97, 100, 101, 102, 103, 104, 105, 106, 107, 113, 114, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 132, 133, 135, 139, 140, 141, 143, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 159, 161, 163, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 199, 200, 202, 203, 206, 207, 208, 209, 215, 216, 217, 218, 220, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 288, 297, 298, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 321, 323, 327, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 346, 348], "pretrain": [0, 335, 340, 346], "recurr": [0, 116, 186, 187, 188, 190, 192, 211, 335, 337, 340, 345, 346], "dqn": [0, 126, 183, 226, 227, 245, 246, 248, 249, 251, 252, 253, 254, 257, 258, 260, 262, 263, 264, 265, 266, 267, 273, 318, 329, 331, 335, 340, 346], "train": [0, 1, 3, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 34, 36, 39, 40, 45, 58, 83, 87, 101, 102, 103, 107, 122, 130, 139, 150, 155, 157, 159, 163, 176, 178, 188, 192, 224, 228, 229, 231, 245, 246, 247, 248, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 273, 275, 311, 313, 323, 329, 333, 335, 337, 340, 344, 345, 346, 348], "polici": [0, 1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 83, 87, 97, 101, 107, 124, 133, 150, 168, 169, 183, 188, 192, 199, 200, 202, 209, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 239, 245, 246, 247, 248, 252, 258, 259, 261, 262, 263, 264, 265, 267, 307, 313, 316, 317, 323, 325, 326, 331, 332, 333, 335, 337, 340, 344, 345, 346, 347, 348], "replai": [0, 8, 13, 14, 16, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 63, 64, 65, 66, 67, 69, 71, 72, 73, 74, 75, 78, 116, 117, 124, 140, 143, 151, 248, 249, 251, 252, 258, 263, 265, 267, 308, 311, 321, 323, 329, 333, 335, 340, 343, 344, 346], "buffer": [0, 1, 3, 4, 8, 13, 14, 16, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 78, 83, 87, 97, 101, 107, 116, 117, 121, 124, 139, 140, 143, 151, 154, 155, 157, 159, 235, 238, 248, 249, 251, 252, 258, 263, 265, 267, 308, 311, 321, 323, 329, 333, 335, 340, 343, 344, 346, 348], "task": [0, 2, 3, 9, 28, 29, 40, 45, 55, 81, 87, 90, 101, 102, 103, 104, 107, 139, 149, 157, 159, 258, 335, 336, 337, 338, 339, 340, 342, 343, 346, 347, 348], "specif": [0, 2, 5, 8, 41, 42, 87, 180, 225, 311, 329, 332, 333, 335, 338, 339, 340, 342, 345, 346], "object": [0, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 60, 61, 62, 65, 68, 72, 73, 76, 78, 83, 87, 101, 107, 122, 125, 126, 135, 139, 154, 155, 157, 161, 196, 208, 217, 220, 221, 232, 235, 236, 237, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 315, 316, 317, 322, 323, 327, 329, 331, 333, 335, 337, 338, 339, 340, 342, 343, 345, 346, 348], "ddpg": [0, 176, 177, 178, 179, 248, 257, 266, 329, 331, 335, 337, 340, 346], "loss": [0, 3, 8, 36, 126, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 273, 274, 275, 306, 311, 318, 319, 320, 323, 332, 333, 335, 340, 343, 345, 346, 347], "trainer": [0, 245, 246, 247, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 273, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 335, 336, 340, 346], "A": [0, 1, 2, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 69, 72, 74, 75, 76, 77, 83, 85, 87, 89, 90, 101, 104, 107, 116, 120, 124, 130, 133, 139, 140, 141, 151, 154, 155, 157, 158, 160, 161, 162, 163, 170, 172, 173, 174, 183, 186, 187, 188, 190, 191, 192, 194, 196, 197, 198, 200, 202, 203, 218, 224, 225, 226, 227, 228, 229, 232, 233, 236, 238, 239, 242, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 270, 273, 275, 276, 277, 278, 279, 281, 295, 296, 299, 304, 311, 313, 320, 323, 332, 335, 336, 338, 340, 342, 343, 346, 348], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 70, 71, 74, 76, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 93, 94, 95, 97, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 132, 133, 135, 137, 139, 141, 142, 143, 146, 149, 150, 151, 152, 153, 154, 155, 157, 159, 161, 167, 170, 171, 172, 173, 174, 175, 180, 183, 186, 187, 188, 190, 191, 192, 193, 194, 196, 199, 200, 203, 206, 207, 208, 209, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 238, 239, 240, 245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 268, 269, 273, 275, 276, 277, 278, 281, 302, 303, 304, 305, 306, 308, 309, 310, 313, 320, 323, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 346, 347, 348], "packag": [0, 6, 7, 10, 113, 329, 330, 348], "singl": [0, 3, 13, 14, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 54, 55, 56, 57, 65, 74, 83, 87, 101, 107, 117, 118, 139, 143, 159, 173, 174, 186, 187, 188, 190, 191, 192, 193, 194, 200, 234, 238, 247, 249, 251, 252, 253, 259, 262, 263, 267, 275, 276, 277, 278, 284, 285, 286, 287, 289, 290, 291, 292, 320, 327, 329, 336, 337, 338, 339, 341, 342, 343, 344, 345], "node": [0, 2, 18, 19, 20, 21, 22, 57, 320, 329], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 102, 103, 133, 135, 172, 181, 182, 183, 184, 189, 196, 197, 198, 203, 206, 207, 210, 211, 214, 215, 216, 224, 225, 226, 227, 232, 236, 237, 245, 246, 247, 252, 253, 258, 259, 262, 263, 264, 265, 267, 329, 333, 337, 338, 342, 343, 347, 348], "helper": [0, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 336, 337, 339, 343], "compos": [0, 3, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 74, 75, 83, 87, 101, 107, 117, 142, 154, 155, 161, 230, 255, 265, 320, 329, 336, 337, 338, 339, 341, 342, 345, 347, 348], "tensorspec": [0, 3, 15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 46, 47, 48, 49, 50, 83, 87, 97, 101, 107, 109, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 129, 131, 132, 133, 135, 137, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 171, 211, 220, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 239, 246, 249, 252, 263, 265, 267, 273, 329, 343], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 65, 68, 69, 70, 71, 72, 73, 74, 76, 83, 84, 87, 96, 97, 101, 102, 103, 105, 106, 107, 109, 110, 113, 114, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 132, 133, 135, 137, 139, 140, 141, 142, 143, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 167, 170, 171, 172, 176, 177, 178, 179, 180, 183, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 203, 206, 207, 208, 209, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 245, 246, 247, 248, 249, 251, 252, 253, 254, 258, 259, 260, 262, 263, 264, 265, 267, 269, 273, 274, 275, 276, 277, 278, 281, 293, 294, 302, 308, 311, 314, 315, 320, 321, 323, 324, 327, 329, 330, 331, 332, 333, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348], "human": [0, 53, 329, 343], "feedback": [0, 329, 347], "rlhf": [0, 40, 45, 58, 133, 329, 331], "envbas": [0, 3, 13, 14, 16, 17, 18, 19, 20, 21, 84, 87, 101, 107, 114, 122, 125, 134, 141, 154, 155, 161, 163, 172, 195, 196, 307, 315, 316, 317, 320, 323, 325, 326, 327, 329], "gymlikeenv": [0, 329], "envmetadata": [0, 329], "vector": [0, 1, 8, 24, 27, 33, 96, 102, 103, 109, 124, 160, 176, 178, 186, 187, 190, 191, 194, 275, 278, 288, 289, 290, 291, 292, 329, 336, 337, 339, 341, 342, 343, 344, 348], "mask": [0, 1, 4, 23, 27, 30, 31, 33, 102, 103, 114, 140, 183, 197, 198, 209, 225, 226, 227, 228, 229, 233, 234, 308, 329, 337, 339, 348], "action": [0, 2, 8, 9, 13, 14, 15, 16, 17, 21, 27, 33, 40, 44, 53, 55, 56, 57, 80, 83, 87, 93, 96, 97, 101, 102, 103, 105, 106, 107, 108, 109, 114, 120, 122, 124, 125, 126, 127, 130, 133, 134, 137, 141, 143, 147, 149, 155, 160, 167, 170, 172, 175, 176, 177, 178, 179, 180, 182, 183, 184, 188, 192, 194, 195, 196, 197, 198, 199, 207, 208, 209, 211, 214, 215, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 239, 240, 245, 246, 248, 249, 251, 252, 258, 260, 262, 263, 264, 265, 267, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 320, 323, 327, 329, 331, 332, 333, 336, 337, 338, 341, 342, 344, 345, 347, 348], "record": [0, 32, 83, 87, 101, 107, 133, 262, 293, 294, 295, 296, 297, 298, 299, 300, 301, 323, 329, 337, 338], "domain": [0, 2, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 83, 87, 101, 107, 124, 151, 167, 220, 226, 227, 232, 233, 234, 235, 236, 237, 238, 329, 338, 339, 342, 343, 347, 348], "modul": [0, 2, 3, 4, 8, 11, 32, 40, 74, 83, 87, 96, 97, 101, 107, 113, 116, 121, 124, 126, 133, 139, 140, 150, 151, 154, 155, 157, 159, 161, 162, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 271, 273, 275, 276, 277, 278, 279, 311, 318, 319, 323, 329, 332, 333, 337, 338, 341, 342, 343, 344, 345], "tensordict": [0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 60, 61, 63, 65, 68, 70, 71, 74, 75, 76, 80, 83, 84, 85, 87, 93, 96, 97, 100, 101, 102, 103, 105, 106, 107, 108, 109, 114, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 137, 138, 139, 140, 141, 143, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 167, 170, 171, 172, 182, 183, 188, 192, 193, 195, 196, 208, 209, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 273, 274, 275, 276, 277, 278, 279, 293, 302, 306, 307, 308, 310, 311, 320, 329, 332, 333, 336, 337, 338, 339, 341, 342, 343, 344, 348], "actor": [0, 3, 4, 15, 21, 133, 172, 175, 176, 178, 183, 184, 196, 207, 209, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 273, 320, 329, 332, 337, 338, 339, 342, 344, 347], "explor": [0, 1, 162, 202, 220, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 245, 307, 316, 317, 323, 329, 338, 339, 342, 343], "valu": [0, 1, 3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 55, 58, 70, 71, 83, 87, 96, 101, 107, 113, 115, 117, 118, 120, 122, 124, 125, 126, 134, 135, 139, 140, 142, 143, 144, 146, 151, 152, 154, 155, 159, 161, 167, 171, 176, 177, 178, 179, 181, 183, 184, 185, 188, 189, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 206, 208, 209, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 302, 304, 305, 306, 307, 308, 311, 320, 323, 329, 333, 337, 341, 342, 343, 345, 347, 348], "gener": [0, 1, 2, 3, 7, 8, 9, 16, 35, 38, 40, 67, 69, 83, 84, 87, 97, 101, 102, 103, 105, 106, 107, 121, 122, 123, 127, 133, 135, 141, 146, 147, 149, 154, 160, 171, 181, 197, 198, 206, 220, 232, 236, 240, 241, 263, 269, 275, 280, 288, 297, 311, 329, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348], "hook": [0, 32, 83, 87, 101, 107, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 199, 200, 203, 204, 205, 207, 209, 210, 211, 213, 218, 224, 225, 227, 228, 229, 231, 234, 239, 242, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 329], "planner": [0, 172, 196, 329], "sac": [0, 252, 263, 265, 329], "redq": [0, 263, 319, 320, 329], "iql": [0, 258, 329, 342], "cql": [0, 246, 251, 329], "dt": [0, 231, 329, 343], "td3": [0, 267, 329], "a2c": [0, 245, 329], "dreamer": [0, 112, 184, 254, 255, 256, 329, 331], "checkpoint": [0, 329, 344], "builder": [0, 329, 337, 348], "logger": [0, 294, 296, 297, 298, 299, 300, 301, 305, 311, 323, 327, 329, 337], "_util": [0, 3, 11, 329], "implement_for": [0, 3, 329], "contribut": 0, "thing": [0, 3, 7, 8, 330, 338, 339, 342, 345, 348], "consid": [0, 1, 3, 8, 20, 32, 34, 36, 39, 60, 61, 76, 83, 87, 101, 107, 124, 161, 181, 199, 214, 330, 336, 343, 345], "when": [0, 1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 60, 61, 62, 64, 65, 69, 72, 73, 76, 83, 84, 87, 96, 98, 100, 101, 102, 103, 107, 114, 116, 117, 121, 122, 124, 125, 133, 134, 135, 139, 140, 146, 151, 154, 155, 157, 159, 160, 161, 168, 169, 172, 183, 186, 187, 190, 191, 194, 195, 196, 197, 198, 201, 209, 215, 232, 235, 236, 238, 242, 247, 249, 253, 259, 262, 265, 268, 273, 274, 275, 276, 277, 278, 293, 294, 308, 327, 330, 331, 333, 336, 337, 338, 339, 342, 343, 344, 345, 348], "debug": [0, 6, 8, 40, 330, 348], "work": [0, 2, 3, 4, 8, 11, 32, 34, 36, 38, 39, 68, 70, 71, 73, 78, 83, 87, 91, 101, 107, 118, 133, 139, 157, 160, 161, 173, 174, 194, 227, 234, 239, 247, 259, 262, 311, 330, 331, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "habitat": [0, 3, 89, 330, 344], "lab": [0, 3, 81, 82, 330], "mujoco": [0, 6, 8, 104, 330, 338, 339], "error": [0, 1, 3, 7, 10, 11, 29, 32, 83, 87, 101, 107, 110, 140, 163, 330, 336, 338, 342, 348], "solut": [0, 3, 6, 7, 9, 21, 330, 331, 333, 347], "resourc": [0, 1, 21, 330, 336, 338, 342], "version": [0, 1, 3, 6, 11, 32, 34, 36, 40, 57, 70, 83, 87, 101, 102, 107, 109, 160, 223, 260, 265, 275, 278, 330, 331, 336, 338, 339, 342, 343, 344, 348], "issu": [0, 4, 5, 8, 53, 60, 61, 76, 91, 117, 140, 152, 220, 226, 227, 232, 233, 234, 235, 236, 330, 347], "index": [0, 3, 7, 8, 10, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 65, 66, 68, 73, 74, 75, 76, 77, 78, 83, 87, 101, 107, 109, 117, 124, 170, 197, 198, 341, 342, 345, 347], "search": [0, 171, 337], "page": [0, 7], "somewhat": [1, 332, 348], "equival": [1, 3, 17, 24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 52, 53, 55, 56, 57, 58, 83, 87, 101, 107, 123, 126, 155, 183, 190, 209, 226, 227, 233, 234, 262, 308, 347, 348], "dataload": [1, 58, 69, 71, 337, 338, 345], "except": [1, 2, 3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 55, 83, 87, 101, 107, 117, 128, 143, 150, 151, 152, 186, 188, 190, 192, 206, 224, 228, 229, 231, 331, 337, 345, 347, 348], "1": [1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 65, 70, 71, 74, 80, 83, 84, 87, 93, 96, 97, 100, 101, 102, 103, 105, 106, 107, 108, 109, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 130, 133, 135, 137, 139, 140, 141, 143, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 159, 161, 167, 170, 172, 173, 174, 175, 176, 177, 179, 180, 183, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 210, 211, 213, 214, 215, 216, 217, 220, 221, 222, 223, 224, 225, 227, 228, 229, 231, 232, 233, 234, 235, 238, 239, 240, 242, 245, 246, 247, 248, 249, 251, 252, 255, 258, 259, 261, 262, 263, 264, 265, 266, 267, 273, 274, 275, 276, 277, 278, 281, 283, 284, 285, 289, 290, 292, 302, 307, 308, 309, 320, 323, 327, 330, 331, 332, 333, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348], "thei": [1, 2, 3, 4, 8, 9, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 55, 83, 87, 96, 101, 102, 103, 107, 109, 116, 128, 133, 139, 147, 154, 155, 159, 192, 193, 245, 246, 247, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 273, 308, 311, 331, 332, 333, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "collect": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65, 69, 101, 104, 107, 117, 135, 139, 159, 163, 231, 246, 248, 251, 252, 263, 265, 267, 302, 308, 311, 313, 314, 315, 323, 333, 336, 339, 342, 343, 344, 345, 347, 348], "over": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 42, 43, 45, 51, 55, 69, 74, 83, 87, 101, 107, 124, 135, 146, 152, 170, 218, 238, 253, 255, 260, 281, 314, 333, 336, 337, 338, 342, 343, 348], "non": [1, 3, 8, 21, 32, 34, 35, 36, 38, 39, 41, 42, 55, 83, 87, 101, 102, 103, 107, 115, 121, 129, 139, 151, 154, 155, 156, 157, 159, 170, 186, 188, 190, 192, 199, 235, 236, 245, 246, 248, 249, 251, 252, 253, 254, 255, 258, 260, 262, 263, 264, 265, 267, 273, 275, 276, 277, 278, 331, 336, 339, 342, 343, 345, 348], "static": [1, 11, 40, 45, 70, 71, 161, 258, 343, 345], "2": [1, 2, 3, 8, 9, 10, 11, 13, 14, 16, 21, 22, 26, 28, 30, 31, 32, 35, 36, 37, 38, 41, 42, 43, 45, 55, 56, 58, 65, 70, 71, 83, 84, 87, 96, 100, 101, 102, 103, 105, 106, 107, 108, 109, 116, 118, 121, 122, 123, 124, 125, 133, 135, 137, 139, 143, 146, 149, 150, 151, 154, 155, 157, 159, 161, 167, 171, 173, 174, 175, 176, 177, 178, 180, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 197, 198, 199, 200, 203, 207, 218, 225, 226, 227, 228, 229, 231, 235, 239, 240, 245, 246, 247, 248, 252, 258, 259, 262, 263, 264, 265, 267, 274, 275, 276, 277, 278, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 302, 331, 332, 336, 337, 338, 339, 341, 342, 343, 345, 347, 348], "like": [1, 2, 3, 4, 7, 21, 26, 28, 32, 35, 38, 41, 42, 45, 65, 71, 83, 87, 89, 96, 101, 102, 103, 107, 126, 153, 163, 186, 190, 200, 230, 263, 332, 336, 338, 339, 342, 343, 344, 345, 348], "being": [1, 2, 3, 7, 8, 17, 18, 20, 21, 32, 58, 83, 87, 101, 107, 116, 122, 124, 125, 134, 141, 155, 168, 169, 188, 192, 228, 231, 247, 259, 262, 265, 294, 308, 313, 325, 326, 327, 331, 336, 337, 338, 339, 342, 343, 345], "s": [1, 2, 3, 6, 7, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 65, 70, 71, 83, 87, 91, 98, 101, 102, 103, 107, 117, 121, 139, 149, 151, 153, 154, 155, 157, 159, 161, 163, 173, 174, 188, 192, 198, 199, 200, 202, 208, 217, 221, 223, 224, 227, 228, 232, 235, 236, 239, 246, 258, 260, 265, 275, 276, 277, 278, 279, 320, 331, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "accept": [1, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 53, 56, 57, 58, 83, 87, 97, 101, 107, 117, 121, 129, 139, 146, 151, 154, 155, 156, 157, 159, 218, 235, 236, 237, 265, 333, 338, 348], "two": [1, 2, 3, 4, 8, 10, 32, 40, 55, 65, 69, 71, 83, 87, 101, 107, 135, 139, 159, 179, 186, 188, 190, 192, 212, 236, 259, 270, 307, 311, 320, 332, 336, 337, 338, 339, 341, 342, 343, 345, 347, 348], "main": [1, 2, 3, 5, 20, 22, 57, 84, 236, 311, 331, 332, 336, 337, 341, 348], "argument": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 53, 55, 56, 57, 58, 65, 68, 69, 70, 71, 73, 83, 87, 98, 101, 102, 107, 120, 121, 139, 147, 149, 151, 153, 154, 155, 157, 159, 170, 173, 174, 186, 188, 190, 192, 194, 197, 198, 199, 200, 201, 218, 220, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 239, 240, 245, 246, 247, 248, 249, 250, 251, 252, 257, 258, 259, 261, 262, 263, 264, 265, 267, 269, 273, 275, 276, 277, 278, 279, 283, 293, 304, 314, 320, 323, 324, 327, 336, 337, 338, 339, 342, 343, 345, 348], "list": [1, 6, 7, 8, 9, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 49, 52, 53, 54, 55, 56, 57, 62, 65, 68, 69, 70, 71, 72, 73, 83, 87, 97, 101, 102, 103, 107, 109, 110, 116, 120, 122, 125, 133, 135, 137, 139, 146, 153, 155, 157, 159, 161, 170, 182, 188, 192, 194, 197, 198, 204, 209, 227, 233, 234, 236, 238, 239, 240, 260, 265, 272, 275, 278, 293, 307, 308, 325, 326, 331, 336, 338, 341, 343, 344, 345, 347, 348], "constructor": [1, 16, 18, 19, 20, 21, 38, 45, 55, 154, 245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 273, 275, 276, 277, 278, 279, 320, 324, 327, 331, 336, 337, 338, 342, 345], "iter": [1, 11, 13, 14, 16, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 51, 52, 53, 54, 55, 56, 57, 58, 65, 69, 83, 87, 101, 107, 127, 135, 147, 173, 174, 194, 199, 200, 213, 220, 226, 232, 233, 235, 237, 238, 240, 260, 272, 307, 310, 311, 320, 332, 333, 336, 338, 339, 342, 343], "execut": [1, 3, 6, 7, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65, 83, 84, 87, 91, 97, 98, 101, 107, 114, 155, 186, 188, 190, 192, 228, 237, 238, 315, 327, 331, 333, 335, 337, 338, 339, 342, 345, 346, 348], "step": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 80, 83, 84, 87, 93, 97, 101, 102, 103, 107, 114, 116, 129, 132, 135, 149, 150, 151, 152, 155, 160, 170, 171, 172, 184, 186, 188, 190, 192, 193, 195, 196, 224, 228, 229, 231, 232, 236, 245, 254, 262, 274, 275, 276, 277, 278, 281, 282, 283, 293, 302, 307, 311, 333, 336, 337, 339, 341, 343, 344, 345, 347], "queri": [1, 3, 13, 14, 16, 17, 32, 34, 36, 39, 83, 87, 101, 107, 139, 154, 157, 161, 238, 336, 343, 347], "defin": [1, 2, 11, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 55, 83, 87, 101, 107, 140, 150, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 199, 200, 203, 204, 205, 207, 210, 211, 213, 218, 224, 225, 227, 228, 229, 231, 234, 239, 242, 249, 251, 260, 275, 276, 277, 278, 279, 293, 324, 336, 337, 339, 343, 345, 348], "number": [1, 2, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 70, 71, 76, 83, 87, 97, 98, 100, 101, 102, 103, 107, 116, 117, 124, 130, 134, 135, 145, 149, 152, 161, 172, 173, 174, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 199, 200, 203, 204, 205, 208, 210, 211, 214, 215, 216, 217, 220, 224, 225, 228, 229, 231, 232, 235, 236, 240, 244, 246, 252, 254, 258, 259, 261, 263, 265, 267, 302, 304, 307, 311, 313, 314, 315, 325, 326, 327, 331, 336, 337, 338, 339, 342, 343, 344, 348], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 54, 69, 83, 87, 101, 107, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 131, 132, 133, 134, 135, 137, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 186, 188, 192, 194, 201, 202, 245, 246, 247, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 273, 276, 277, 278, 308, 336, 338, 339, 342, 343, 345, 348], "deliv": [1, 16, 18, 19, 20, 55, 336, 337, 347], "stack": [1, 2, 3, 7, 8, 18, 20, 21, 28, 29, 50, 65, 83, 87, 96, 101, 102, 103, 107, 161, 186, 188, 190, 191, 192, 237, 238, 293, 302, 331, 337, 341, 343, 347], "user": [1, 2, 3, 5, 8, 21, 32, 52, 53, 55, 56, 57, 71, 83, 87, 101, 107, 150, 155, 180, 193, 262, 265, 324, 332, 333, 336, 337, 343, 347, 348], "reset": [1, 3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65, 71, 80, 83, 84, 87, 93, 96, 97, 98, 100, 101, 102, 103, 107, 117, 126, 129, 132, 134, 139, 146, 149, 150, 151, 152, 154, 157, 160, 161, 163, 171, 186, 188, 192, 219, 231, 293, 320, 336, 337, 338, 339, 341, 342, 347], "whenev": [1, 2, 3, 32, 35, 38, 41, 42, 55, 113, 132, 155, 160, 260, 275, 276, 277, 278, 313, 331], "reach": [1, 13, 14, 16, 17, 18, 19, 20, 21, 22, 40, 69, 83, 87, 101, 107, 149, 224, 228, 229, 231, 336, 338, 342, 347, 348], "done": [1, 2, 3, 4, 7, 8, 13, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 52, 53, 55, 56, 57, 65, 70, 71, 80, 83, 84, 87, 93, 96, 97, 100, 101, 102, 103, 105, 106, 107, 108, 109, 114, 117, 122, 123, 125, 126, 127, 134, 135, 137, 141, 143, 145, 147, 149, 151, 152, 154, 155, 161, 170, 171, 172, 186, 188, 192, 196, 245, 246, 248, 249, 251, 252, 258, 262, 263, 264, 265, 267, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 320, 332, 336, 338, 339, 341, 342, 343, 344, 345, 347, 348], "state": [1, 2, 3, 4, 13, 14, 16, 17, 32, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 65, 80, 83, 87, 93, 97, 101, 102, 103, 105, 106, 107, 116, 117, 118, 120, 126, 135, 141, 149, 150, 154, 155, 161, 170, 171, 172, 175, 180, 184, 186, 187, 188, 190, 191, 192, 193, 194, 196, 204, 207, 208, 210, 211, 217, 221, 235, 241, 245, 247, 251, 259, 260, 262, 263, 264, 265, 273, 274, 275, 276, 277, 278, 279, 327, 331, 332, 336, 337, 338, 339, 342, 343, 348], "after": [1, 2, 3, 8, 13, 14, 18, 20, 21, 26, 32, 40, 65, 83, 87, 91, 101, 107, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 129, 131, 132, 133, 134, 135, 137, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 170, 186, 188, 192, 201, 224, 226, 228, 229, 233, 255, 265, 337, 338, 339, 342, 343, 344, 345, 348], "predefin": [1, 337, 338, 339, 345], "becaus": [1, 3, 4, 7, 34, 36, 39, 40, 83, 87, 101, 107, 126, 133, 149, 154, 160, 179, 193, 200, 220, 226, 227, 232, 233, 234, 235, 236, 336, 337, 339, 341, 342, 343, 345, 348], "potenti": [1, 2, 343, 345], "comput": [1, 3, 4, 8, 13, 16, 21, 27, 32, 40, 83, 87, 101, 107, 135, 155, 158, 171, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 203, 204, 205, 206, 207, 210, 211, 213, 215, 216, 218, 221, 224, 225, 227, 228, 229, 231, 232, 234, 236, 239, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 281, 315, 332, 336, 338, 339, 341, 342, 344, 345], "heavi": [1, 8, 345], "crucial": [1, 224, 228, 229, 231, 258, 260, 336, 337, 338, 339, 342, 343, 348], "configur": [1, 8, 13, 14, 16, 17, 21, 22, 40, 133, 175, 180, 207, 260, 262, 320, 331, 336, 337, 338, 342, 343], "hyperparamet": [1, 68, 245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 273, 336, 343, 345], "appropri": [1, 3, 4, 7, 13, 14, 16, 17, 59, 66, 74, 75, 77, 78, 101, 107, 126, 324, 327, 336, 345], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 68, 69, 72, 73, 76, 78, 81, 82, 83, 84, 87, 97, 98, 100, 101, 102, 103, 104, 107, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 320, 323, 324, 325, 326, 327, 331, 332, 336, 339, 342, 343, 344, 347], "take": [1, 3, 8, 23, 40, 83, 87, 101, 107, 120, 149, 152, 154, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 199, 200, 203, 204, 205, 207, 210, 211, 213, 218, 224, 225, 227, 228, 229, 230, 231, 232, 234, 239, 242, 244, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 302, 313, 331, 333, 336, 337, 338, 342, 343, 345, 348], "consider": [1, 3, 8, 337, 342, 345], "whether": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 46, 47, 52, 53, 54, 55, 56, 57, 65, 83, 87, 97, 101, 102, 103, 104, 107, 109, 122, 125, 150, 155, 171, 173, 174, 188, 192, 194, 240, 246, 247, 248, 249, 251, 252, 253, 259, 260, 262, 263, 265, 267, 273, 275, 278, 336, 337, 338, 342, 343, 348], "should": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 65, 70, 71, 72, 74, 83, 87, 96, 97, 101, 102, 103, 104, 107, 117, 120, 121, 122, 123, 126, 127, 129, 133, 135, 140, 141, 143, 146, 147, 149, 150, 152, 154, 155, 160, 161, 163, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 199, 200, 203, 204, 205, 207, 210, 211, 213, 218, 224, 225, 227, 228, 229, 231, 232, 234, 235, 236, 239, 242, 252, 257, 259, 260, 262, 263, 266, 274, 275, 276, 277, 278, 279, 294, 306, 307, 308, 311, 323, 325, 326, 327, 331, 333, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "occur": [1, 8, 14, 28, 29, 118, 135, 140, 160, 171, 220, 226, 227, 232, 233, 234, 235, 236, 255, 345, 348], "serial": [1, 2, 3, 32, 83, 87, 101, 107, 161], "optim": [1, 2, 8, 32, 40, 83, 87, 101, 107, 155, 172, 196, 201, 202, 246, 260, 261, 262, 265, 306, 311, 323, 332, 333, 338, 339, 342, 343], "parallel": [1, 3, 8, 17, 102, 103, 160, 163, 245, 324, 325, 326, 327, 337, 338, 342], "syncdatacollector": [1, 13, 14, 17, 18, 19, 20, 21, 117, 143, 323, 326, 329, 338, 339, 342, 345], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 85, 87, 89, 96, 97, 101, 102, 103, 107, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 325, 326, 327, 331, 332, 333, 336, 337, 338, 339, 342, 345, 348], "worker": [1, 2, 13, 14, 16, 17, 18, 19, 20, 21, 22, 36, 45, 58, 84, 98, 101, 107, 161, 325, 326, 327, 336, 338, 347, 348], "multisyncdatacollector": [1, 18, 19, 20, 21, 326, 329, 338, 347], "split": [1, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 45, 52, 53, 55, 56, 57, 58, 70, 71, 96, 102, 103, 186, 190, 245, 246, 247, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 273, 331, 333, 338, 345, 347], "workload": 1, "across": [1, 3, 8, 18, 19, 20, 21, 35, 38, 41, 42, 70, 71, 91, 161, 199, 231, 313, 329, 331, 336, 342, 343], "aggreg": [1, 3, 171, 173, 174, 176, 177, 238], "result": [1, 3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 65, 69, 70, 71, 83, 84, 87, 101, 107, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 129, 131, 132, 133, 134, 135, 137, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 170, 171, 186, 188, 190, 192, 194, 199, 209, 225, 227, 228, 234, 245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 273, 275, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 313, 331, 337, 339, 343, 344, 347, 348], "final": [1, 3, 4, 21, 34, 36, 39, 40, 160, 186, 188, 190, 192, 199, 224, 228, 229, 230, 231, 237, 275, 307, 331, 336, 337, 338, 342, 343, 348], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 325, 329, 336, 337, 338, 347], "sever": [1, 8, 30, 32, 45, 83, 87, 101, 107, 118, 120, 155, 262, 336, 338, 345, 348], "batch": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 69, 70, 71, 74, 76, 83, 87, 97, 98, 100, 101, 107, 117, 129, 135, 137, 140, 143, 151, 155, 156, 160, 161, 171, 181, 182, 186, 187, 188, 190, 191, 192, 193, 197, 198, 199, 200, 201, 206, 208, 214, 218, 231, 235, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 302, 305, 308, 309, 310, 311, 313, 325, 326, 327, 333, 337, 338, 339, 341, 342, 344, 347, 348], "gather": [1, 3, 18, 20, 21, 45, 58, 60, 61, 76, 140, 198, 206, 274, 315, 330, 336, 337, 338, 339, 342, 343, 345, 348], "continu": [1, 9, 25, 46, 71, 83, 87, 101, 102, 103, 107, 167, 176, 177, 178, 179, 231, 238, 245, 246, 252, 258, 262, 263, 264, 265, 266, 267, 275, 280, 288, 331, 336, 338, 339, 342, 343, 345, 347, 348], "concomitantli": 1, "network": [1, 4, 8, 32, 83, 87, 96, 101, 102, 103, 107, 173, 174, 176, 177, 178, 179, 182, 184, 185, 190, 194, 199, 200, 202, 204, 205, 208, 210, 211, 212, 217, 221, 222, 223, 225, 235, 239, 246, 247, 248, 249, 251, 252, 253, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 271, 273, 275, 276, 277, 278, 279, 322, 323, 331, 332, 333, 341, 343, 348], "impli": [1, 348], "weight": [1, 4, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 40, 65, 68, 83, 87, 101, 105, 106, 107, 121, 139, 151, 154, 155, 157, 159, 186, 187, 188, 190, 191, 192, 199, 202, 235, 245, 246, 247, 252, 255, 265, 313, 322, 331, 333, 336, 337, 338, 339, 341, 343, 345, 347], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 20, 21, 28, 29, 32, 52, 53, 55, 56, 57, 83, 87, 101, 107, 133, 135, 147, 155, 156, 161, 163, 194, 199, 332, 333, 336, 337, 338, 339, 342, 343, 344, 345, 347, 348], "slightli": [1, 331, 332, 339, 343, 344, 345, 348], "lag": [1, 13, 14, 16, 17, 336, 337, 338], "therefor": [1, 3, 7, 56, 57, 83, 87, 101, 107, 143, 262, 273, 348], "although": [1, 8, 83, 87, 101, 107, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 199, 200, 203, 204, 205, 207, 210, 211, 213, 218, 224, 225, 227, 228, 229, 231, 234, 239, 242, 333, 336, 337, 345], "fastest": 1, "price": 1, "suitabl": [1, 2], "where": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 70, 71, 74, 76, 83, 87, 96, 97, 100, 101, 102, 103, 107, 114, 117, 126, 133, 139, 143, 146, 149, 150, 152, 154, 156, 159, 160, 170, 171, 186, 187, 190, 191, 197, 198, 199, 224, 228, 229, 231, 232, 235, 236, 244, 245, 246, 247, 252, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 332, 333, 336, 337, 338, 341, 342, 343, 345, 348], "asynchron": [1, 9, 14, 21, 32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235, 245, 325, 337, 338], "off": [1, 2, 4, 189, 216, 226, 265, 307, 316, 331, 333, 336, 337, 338, 342, 344, 348], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 16, 17, 18, 20, 21, 32, 52, 53, 55, 56, 57, 70, 83, 87, 101, 102, 103, 107, 122, 125, 129, 135, 150, 155, 160, 183, 186, 188, 190, 192, 200, 201, 221, 223, 225, 227, 233, 245, 253, 258, 262, 307, 331, 333, 336, 337, 338, 339, 342, 343, 344, 345, 348], "remot": [1, 2, 18, 19, 20, 21, 101, 107, 348], "rollout": [1, 2, 3, 13, 14, 16, 21, 23, 40, 83, 87, 90, 97, 98, 101, 102, 103, 105, 106, 107, 108, 109, 114, 117, 120, 122, 125, 126, 127, 133, 137, 141, 146, 147, 149, 150, 152, 163, 172, 188, 192, 196, 231, 245, 315, 331, 336, 338, 339, 344, 345, 347], "necessari": [1, 4, 6, 8, 13, 14, 16, 17, 53, 55, 56, 57, 147, 263, 275, 276, 277, 278, 279, 332, 336, 338], "synchronis": [1, 84, 342], "either": [1, 5, 22, 32, 40, 58, 65, 83, 87, 101, 107, 149, 150, 241, 267, 298, 333, 336, 337, 339, 344, 345, 347, 348], "update_policy_weights_": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 336, 342, 347], "update_at_each_batch": [1, 13, 14, 17, 336], "true": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 65, 68, 69, 70, 71, 81, 82, 83, 84, 85, 87, 97, 101, 102, 103, 104, 105, 106, 107, 108, 109, 114, 116, 117, 118, 121, 124, 129, 132, 133, 134, 135, 139, 140, 141, 142, 145, 147, 149, 151, 153, 154, 155, 156, 157, 159, 161, 163, 167, 170, 171, 172, 173, 174, 176, 177, 178, 179, 185, 186, 187, 188, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 215, 216, 220, 221, 222, 223, 224, 226, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 245, 246, 247, 248, 251, 252, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 270, 275, 276, 277, 278, 281, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 304, 305, 307, 308, 311, 327, 331, 332, 333, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "second": [1, 3, 8, 186, 188, 190, 192, 227, 247, 259, 262, 265, 310, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 55, 56, 57, 58, 60, 61, 76, 80, 83, 85, 87, 90, 91, 93, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 121, 122, 123, 125, 126, 127, 133, 137, 138, 139, 141, 143, 147, 149, 151, 153, 154, 155, 157, 159, 167, 170, 172, 173, 174, 175, 176, 177, 178, 179, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 199, 200, 201, 202, 207, 208, 209, 217, 220, 221, 222, 223, 225, 226, 227, 231, 232, 233, 234, 235, 238, 240, 245, 246, 248, 249, 251, 252, 258, 262, 263, 264, 265, 267, 273, 275, 276, 277, 278, 308, 313, 320, 321, 331, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347], "oper": [1, 3, 4, 7, 8, 13, 14, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 44, 45, 46, 47, 83, 87, 101, 107, 129, 133, 154, 182, 183, 187, 191, 203, 221, 222, 223, 226, 227, 230, 235, 241, 245, 247, 248, 249, 253, 259, 262, 264, 273, 274, 275, 276, 277, 278, 311, 320, 329, 333, 336, 337, 338, 339, 341, 342, 343, 348], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 43, 44, 45, 52, 55, 65, 70, 71, 82, 83, 84, 87, 97, 101, 107, 117, 135, 151, 154, 161, 167, 171, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 199, 200, 203, 204, 205, 207, 210, 211, 213, 218, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 242, 249, 252, 260, 273, 275, 276, 277, 278, 294, 298, 307, 315, 316, 317, 320, 323, 325, 326, 331, 332, 333, 336, 338, 339, 343, 345, 348], "cpu": [1, 3, 8, 10, 13, 14, 16, 18, 19, 20, 21, 24, 26, 28, 32, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 53, 55, 56, 57, 58, 60, 61, 76, 80, 83, 87, 93, 96, 97, 100, 101, 102, 103, 105, 106, 107, 108, 109, 121, 122, 123, 125, 126, 127, 137, 139, 141, 143, 147, 149, 151, 154, 155, 157, 159, 167, 170, 172, 186, 187, 188, 190, 191, 192, 196, 201, 202, 208, 209, 217, 220, 221, 222, 223, 225, 226, 227, 232, 233, 234, 235, 238, 240, 245, 246, 248, 249, 251, 252, 258, 262, 263, 264, 265, 267, 273, 308, 320, 331, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "slower": 1, "than": [1, 2, 3, 4, 8, 13, 14, 16, 17, 52, 55, 68, 70, 71, 73, 83, 87, 91, 101, 107, 141, 179, 188, 190, 192, 194, 203, 218, 220, 224, 226, 235, 240, 260, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 330, 332, 336, 337, 338, 342, 343, 345, 347, 348], "one": [1, 2, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 52, 53, 54, 55, 56, 57, 59, 63, 65, 66, 70, 71, 72, 73, 75, 77, 78, 83, 84, 87, 91, 96, 100, 101, 102, 103, 107, 109, 114, 117, 120, 122, 123, 124, 125, 134, 135, 139, 143, 146, 148, 150, 151, 152, 154, 155, 156, 159, 161, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 199, 200, 203, 204, 205, 206, 207, 209, 210, 211, 213, 218, 220, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 239, 240, 242, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 258, 259, 260, 262, 263, 264, 265, 266, 267, 273, 275, 276, 277, 278, 282, 283, 304, 306, 307, 311, 315, 320, 327, 330, 331, 332, 333, 336, 337, 338, 339, 341, 342, 343, 344, 345, 348], "cuda": [1, 3, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 83, 87, 90, 91, 101, 107, 121, 133, 138, 139, 151, 154, 155, 157, 159, 186, 187, 190, 191, 235, 251, 303, 336, 337, 338, 339, 342, 344, 348], "multipl": [1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 27, 43, 65, 101, 107, 118, 120, 124, 134, 143, 146, 149, 154, 161, 186, 190, 192, 193, 199, 201, 202, 220, 226, 232, 233, 235, 236, 239, 247, 252, 259, 262, 263, 267, 281, 320, 327, 331, 333, 336, 337, 338, 342, 343, 345, 347], "infer": [1, 101, 107, 117, 161, 188, 192, 201, 225, 251, 336, 338, 345], "run": [1, 3, 4, 5, 6, 7, 8, 10, 13, 14, 17, 21, 32, 81, 82, 83, 87, 97, 101, 107, 134, 135, 155, 161, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 199, 200, 203, 204, 205, 207, 210, 211, 213, 218, 224, 225, 227, 228, 229, 231, 234, 237, 238, 239, 242, 265, 307, 325, 326, 327, 330, 333, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347], "dispatch": [1, 18, 19, 20, 21, 218], "avail": [1, 3, 4, 6, 21, 57, 69, 91, 101, 102, 103, 116, 133, 183, 209, 232, 236, 260, 325, 326, 331, 336, 337, 338, 339, 342, 343, 345, 348], "speed": [1, 2, 4, 8, 27, 101, 107, 332, 336, 337, 338, 339, 342, 343, 345], "up": [1, 2, 3, 8, 9, 13, 14, 16, 27, 40, 52, 53, 55, 56, 57, 101, 107, 116, 152, 154, 262, 330, 331, 332, 336, 337, 338, 339, 342, 343, 345, 348], "avoid": [1, 32, 60, 61, 76, 83, 87, 101, 107, 113, 155, 161, 220, 235, 240, 247, 259, 262, 265, 314, 338, 342], "oom": [1, 60, 61, 76], "choic": [1, 2, 52, 53, 55, 56, 57, 101, 203, 331, 332, 336, 337, 342], "size": [1, 2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 69, 70, 71, 72, 74, 76, 80, 83, 85, 87, 93, 96, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 109, 116, 118, 122, 125, 126, 127, 129, 137, 139, 141, 143, 147, 148, 149, 151, 153, 154, 155, 156, 159, 161, 167, 170, 172, 173, 174, 175, 180, 181, 183, 186, 187, 188, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 203, 206, 207, 208, 209, 210, 211, 214, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 238, 240, 245, 246, 248, 249, 251, 252, 258, 260, 262, 263, 264, 265, 267, 273, 274, 275, 276, 277, 278, 279, 294, 302, 308, 320, 331, 337, 338, 339, 341, 342, 343, 344, 347, 348], "pass": [1, 3, 4, 13, 14, 16, 18, 19, 20, 21, 22, 26, 32, 35, 38, 40, 41, 42, 45, 53, 55, 56, 57, 60, 61, 65, 74, 76, 83, 84, 85, 87, 96, 98, 101, 102, 103, 107, 122, 125, 141, 154, 156, 161, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 199, 200, 201, 203, 204, 205, 207, 208, 210, 211, 213, 217, 218, 220, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 247, 259, 260, 262, 275, 276, 277, 278, 279, 308, 325, 326, 327, 331, 336, 337, 338, 339, 341, 342, 343, 345, 348], "ie": [1, 3, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 45, 46, 47, 55, 63, 71, 83, 87, 91, 100, 101, 107, 117, 129, 156, 161, 171, 188, 192, 225, 245, 247, 248, 252, 258, 259, 262, 263, 264, 265, 267, 275, 276, 277, 278, 331, 332, 337, 338, 342, 345], "store": [1, 3, 8, 13, 14, 16, 17, 20, 26, 32, 34, 36, 37, 39, 41, 42, 43, 45, 55, 56, 58, 60, 61, 62, 63, 76, 83, 87, 101, 107, 160, 161, 172, 193, 196, 245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 273, 320, 329, 333, 336, 338, 339, 342, 344, 345, 348], "while": [1, 3, 7, 8, 32, 83, 87, 101, 107, 143, 155, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 199, 200, 203, 204, 205, 207, 210, 211, 213, 218, 224, 225, 227, 228, 229, 231, 234, 239, 242, 258, 259, 262, 265, 331, 336, 338, 339, 342, 343, 344, 345, 347], "wait": [1, 20, 21, 22, 339, 343], "also": [1, 2, 3, 8, 9, 11, 32, 34, 36, 39, 41, 53, 55, 56, 57, 58, 60, 61, 65, 76, 83, 87, 101, 102, 103, 107, 113, 116, 117, 124, 135, 141, 143, 146, 147, 149, 151, 155, 186, 190, 211, 232, 237, 238, 239, 245, 246, 248, 249, 251, 252, 258, 262, 265, 275, 282, 283, 331, 333, 336, 337, 338, 339, 341, 342, 343, 345, 348], "impact": [1, 55, 122, 125, 337, 339, 342], "memori": [1, 2, 3, 8, 21, 27, 32, 34, 36, 39, 45, 52, 53, 55, 56, 57, 60, 83, 84, 87, 91, 101, 107, 117, 121, 139, 151, 154, 155, 157, 159, 161, 190, 191, 235, 327, 333, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "manag": [1, 8, 271, 272, 275, 276, 277, 278, 307], "kei": [1, 2, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 65, 68, 70, 71, 74, 83, 87, 101, 107, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 138, 139, 140, 141, 143, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 170, 171, 172, 182, 183, 188, 192, 195, 196, 209, 220, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 273, 274, 275, 276, 277, 278, 279, 294, 305, 306, 307, 309, 310, 311, 315, 320, 332, 333, 336, 338, 339, 341, 342, 343, 345, 347, 348], "control": [1, 3, 5, 8, 16, 81, 82, 96, 102, 103, 124, 170, 176, 177, 178, 179, 188, 192, 195, 196, 211, 218, 231, 235, 236, 237, 245, 247, 259, 262, 266, 275, 280, 288, 331, 333, 336, 337, 338, 342, 343, 345], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 57, 58, 68, 69, 83, 87, 91, 98, 101, 104, 107, 117, 118, 122, 125, 130, 133, 134, 135, 139, 140, 149, 151, 152, 154, 155, 157, 163, 186, 187, 189, 190, 191, 192, 197, 198, 199, 216, 221, 222, 223, 225, 232, 235, 236, 238, 245, 246, 247, 249, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 270, 273, 275, 276, 277, 278, 302, 306, 320, 331, 332, 333, 336, 337, 338, 339, 341, 342, 343, 344, 345, 348], "storing_devic": [1, 13, 14, 16, 17, 18, 19, 20, 21, 336, 337, 342, 347], "dure": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 36, 40, 45, 52, 53, 54, 55, 56, 57, 58, 65, 68, 83, 87, 101, 102, 103, 107, 117, 120, 122, 125, 130, 137, 155, 188, 192, 307, 311, 332, 336, 337, 338, 339, 342, 343, 345, 348], "heurist": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 231, 336, 348], "usual": [1, 2, 3, 4, 6, 7, 8, 52, 68, 83, 87, 101, 107, 202, 262, 275, 276, 277, 278, 279, 293, 320, 330, 331, 333, 336, 337, 338, 339, 342, 345, 348], "same": [1, 2, 3, 4, 11, 13, 14, 16, 18, 19, 20, 21, 28, 29, 32, 34, 36, 39, 43, 45, 52, 55, 69, 73, 83, 84, 87, 96, 101, 102, 103, 107, 117, 122, 124, 125, 130, 134, 135, 154, 155, 161, 173, 174, 187, 188, 191, 192, 194, 197, 198, 199, 200, 225, 231, 239, 265, 336, 337, 338, 341, 342, 344, 345, 348], "storag": [1, 2, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 60, 61, 62, 65, 69, 70, 71, 73, 74, 76, 83, 85, 87, 101, 107, 116, 117, 122, 125, 143, 329, 333, 337, 338, 339, 342, 344], "default": [1, 2, 3, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 65, 68, 69, 70, 71, 76, 81, 83, 87, 100, 101, 102, 103, 104, 107, 109, 114, 116, 117, 118, 122, 124, 125, 126, 129, 133, 134, 135, 137, 139, 140, 143, 145, 147, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 163, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 211, 213, 214, 215, 216, 220, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 239, 240, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 270, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 320, 323, 327, 333, 336, 337, 338, 339, 344, 345, 347, 348], "behaviour": [1, 3, 21, 55, 87, 118, 122, 125, 135, 140, 150, 170, 188, 189, 192, 216, 307, 331, 337, 345], "besid": 1, "those": [1, 2, 3, 5, 7, 26, 28, 101, 107, 117, 122, 125, 135, 151, 152, 192, 232, 236, 237, 238, 313, 325, 326, 331, 336, 337, 342, 343, 348], "choos": [1, 96, 188, 192, 262, 331, 332, 336, 337, 338, 342, 345], "follow": [1, 2, 3, 6, 7, 8, 32, 34, 36, 37, 39, 40, 52, 54, 83, 87, 97, 100, 101, 102, 103, 105, 106, 107, 109, 133, 139, 157, 173, 174, 186, 188, 190, 192, 194, 227, 233, 234, 244, 245, 246, 247, 248, 252, 258, 259, 262, 263, 264, 265, 267, 311, 320, 331, 332, 333, 336, 337, 338, 339, 341, 342, 343, 345, 347, 348], "max_frames_per_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 314, 336, 338, 347], "frame": [1, 2, 13, 14, 16, 17, 18, 19, 20, 21, 32, 117, 130, 224, 228, 229, 231, 293, 294, 304, 307, 311, 314, 315, 336, 337, 338, 339, 342, 345, 347, 348], "call": [1, 2, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 65, 69, 72, 73, 76, 83, 87, 100, 101, 107, 117, 120, 121, 124, 129, 132, 133, 135, 137, 138, 139, 146, 151, 154, 155, 157, 159, 160, 161, 163, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 199, 200, 201, 203, 204, 205, 207, 210, 211, 213, 218, 224, 225, 227, 228, 229, 231, 234, 235, 236, 238, 239, 242, 247, 259, 262, 265, 274, 275, 276, 277, 278, 293, 307, 333, 337, 338, 339, 342, 343, 345, 348], "frames_per_batch": [1, 13, 14, 16, 17, 18, 19, 20, 21, 117, 143, 314, 336, 337, 338, 339, 342, 345, 347], "each": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 30, 31, 32, 40, 41, 52, 55, 65, 68, 70, 71, 83, 84, 87, 101, 102, 103, 107, 109, 139, 143, 146, 149, 150, 151, 152, 159, 161, 183, 186, 187, 188, 190, 192, 199, 200, 204, 208, 209, 217, 224, 226, 227, 228, 234, 238, 281, 284, 285, 286, 287, 289, 290, 291, 292, 307, 308, 325, 326, 331, 336, 337, 338, 339, 342, 343, 344, 345, 347, 348], "init_random_fram": [1, 13, 14, 16, 17, 18, 19, 20, 21, 314, 336, 337], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 44, 46, 47, 55, 57, 64, 83, 87, 97, 101, 107, 124, 134, 135, 151, 163, 186, 188, 190, 192, 228, 232, 235, 236, 246, 263, 307, 315, 331, 336, 337, 338, 339, 343, 344, 345, 347, 348], "rand_step": [1, 3, 79, 81, 82, 83, 84, 86, 87, 88, 92, 94, 95, 97, 98, 101, 107, 132, 151, 161, 343, 347, 348], "reset_at_each_it": [1, 13, 14, 16, 17, 18, 19, 20, 21, 336], "split_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 52, 53, 55, 56, 57, 336, 337, 338], "trajectori": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 32, 41, 52, 53, 55, 56, 57, 63, 70, 71, 74, 83, 87, 101, 107, 140, 149, 154, 172, 192, 196, 231, 262, 275, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 302, 329, 332, 336, 337, 338, 339, 343, 345, 347, 348], "pad": [1, 2, 3, 23, 37, 43, 52, 53, 55, 56, 57, 117, 173, 174, 176, 177, 192, 193, 197, 198, 199, 308], "along": [1, 2, 3, 23, 28, 29, 34, 36, 39, 40, 45, 52, 53, 55, 56, 57, 61, 65, 70, 71, 76, 116, 117, 118, 135, 137, 140, 146, 153, 192, 194, 197, 198, 202, 226, 232, 235, 236, 260, 331, 336, 337, 339, 342, 343, 345], "point": [1, 2, 3, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 54, 59, 63, 66, 74, 75, 77, 78, 83, 87, 101, 107, 116, 117, 121, 139, 150, 151, 153, 154, 155, 157, 159, 195, 235, 244, 253, 311, 330, 337, 338, 341, 342, 343, 345, 348], "boolean": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 87, 140, 149, 171, 197, 198, 224, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 333, 339], "repres": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 41, 53, 83, 87, 101, 107, 109, 130, 140, 161, 183, 197, 198, 209, 226, 227, 233, 234, 236, 270, 275, 308, 336, 338, 339, 342], "valid": [1, 3, 23, 34, 36, 37, 45, 58, 110, 140, 155, 173, 174, 194, 197, 198, 224, 231, 259, 275, 276, 277, 278, 308, 333, 348], "exploration_typ": [1, 13, 14, 16, 18, 19, 20, 21, 307, 329, 336, 337], "strategi": [1, 2, 16, 55, 68, 96, 198, 206, 228, 331, 333, 336, 337, 342, 345], "reset_when_don": [1, 13, 14, 16, 18, 19, 20, 21], "These": [1, 2, 7, 32, 40, 57, 83, 87, 101, 107, 139, 159, 331, 332, 336, 338, 342, 343, 345, 348], "tool": [1, 2, 3, 5, 339, 343, 345, 348], "backend": [1, 3, 7, 11, 18, 19, 21, 22, 101, 111, 113, 333, 336, 338, 339, 343], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 329], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 329], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "torch": [1, 2, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 65, 69, 70, 71, 74, 76, 80, 83, 84, 87, 93, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 114, 116, 118, 121, 122, 123, 124, 125, 126, 127, 133, 135, 137, 139, 141, 143, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 159, 161, 167, 170, 171, 172, 173, 174, 175, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 243, 245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 302, 309, 310, 320, 323, 331, 332, 333, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "multiprocess": [1, 2, 3, 18, 19, 20, 84, 85, 161, 337, 338, 343, 348], "synchron": [1, 13, 19, 21, 98, 325, 326, 337, 338], "mode": [1, 6, 13, 14, 16, 18, 19, 20, 21, 32, 83, 87, 98, 101, 107, 122, 125, 150, 155, 161, 164, 168, 169, 181, 188, 189, 192, 206, 214, 215, 216, 232, 236, 260, 307, 336, 337, 339, 342, 347, 348], "find": [1, 4, 6, 7, 18, 19, 20, 35, 37, 43, 70, 71, 190, 224, 231, 305, 309, 336, 337, 342], "dedic": [1, 2, 3, 18, 19, 20, 21, 221, 222, 223, 331, 336, 341, 342], "folder": [1, 2, 337], "sub": [1, 2, 3, 13, 14, 18, 19, 20, 21, 55, 70, 83, 87, 101, 107, 140, 237, 238, 302, 311, 331, 336, 337, 338, 341, 347, 348], "all": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 44, 46, 47, 49, 57, 83, 84, 87, 97, 101, 102, 103, 107, 109, 110, 116, 117, 120, 121, 122, 123, 125, 128, 133, 134, 135, 139, 146, 151, 152, 154, 155, 157, 159, 161, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 199, 200, 203, 204, 205, 207, 210, 211, 213, 218, 224, 225, 227, 228, 229, 231, 234, 235, 236, 238, 239, 242, 255, 260, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 306, 311, 314, 325, 326, 327, 330, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 347, 348], "variou": [1, 3, 13, 14, 16, 17, 188, 192, 245, 246, 247, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 268, 273, 325, 326, 336, 337, 338, 342, 348], "machin": [1, 7, 18, 19, 20, 32, 54, 91, 342], "One": [1, 2, 4, 8, 31, 33, 45, 117, 143, 157, 206, 224, 235, 239, 266, 270, 298, 336, 337, 345, 348], "wonder": 1, "why": [1, 3, 343, 348], "parallelenv": [1, 2, 3, 13, 14, 16, 17, 20, 83, 87, 98, 102, 103, 107, 324, 329, 336, 337, 338, 341, 347, 348], "instead": [1, 4, 7, 8, 11, 27, 32, 55, 83, 87, 101, 107, 129, 151, 155, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 199, 200, 203, 204, 205, 207, 210, 211, 213, 218, 224, 225, 227, 228, 229, 231, 234, 239, 242, 245, 247, 249, 252, 253, 258, 259, 262, 263, 264, 265, 273, 275, 279, 283, 327, 331, 343, 345, 348], "In": [1, 2, 3, 4, 5, 7, 8, 10, 11, 17, 21, 22, 32, 52, 53, 55, 56, 57, 83, 87, 101, 102, 103, 107, 121, 122, 123, 125, 139, 143, 147, 150, 151, 153, 154, 155, 157, 159, 160, 186, 189, 190, 194, 199, 211, 215, 216, 235, 238, 244, 245, 246, 248, 249, 251, 252, 258, 260, 262, 263, 264, 265, 267, 313, 325, 326, 327, 331, 332, 336, 337, 338, 339, 341, 342, 343, 344, 345, 348], "lower": [1, 2, 3, 17, 21, 25, 120, 161, 210, 211, 239, 338, 343], "io": [1, 98, 190, 191], "footprint": [1, 2, 345], "need": [1, 2, 3, 4, 7, 8, 10, 11, 18, 19, 20, 21, 32, 34, 36, 72, 83, 87, 91, 96, 101, 102, 103, 107, 117, 120, 129, 139, 141, 152, 155, 159, 161, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 199, 200, 201, 203, 204, 205, 207, 210, 211, 213, 218, 224, 225, 227, 228, 229, 231, 233, 234, 235, 239, 242, 244, 252, 263, 264, 265, 267, 274, 279, 294, 311, 327, 331, 332, 336, 337, 338, 339, 342, 343, 345, 347, 348], "commun": [1, 2, 3, 330, 338, 348], "yet": [1, 344], "spec": [1, 2, 3, 15, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 48, 49, 50, 52, 83, 85, 87, 97, 101, 107, 109, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 131, 132, 133, 135, 137, 139, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 163, 167, 171, 183, 209, 211, 220, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 238, 239, 245, 246, 248, 249, 251, 252, 258, 262, 263, 264, 265, 267, 273, 320, 331, 336, 337, 338, 339, 341, 342, 347], "plai": [1, 3, 102, 103, 117, 337, 338, 345, 348], "role": [1, 3, 337, 348], "opposit": 1, "direct": [1, 32, 83, 87, 101, 107, 186, 190, 260, 337], "sinc": [1, 2, 3, 4, 5, 7, 32, 35, 38, 41, 42, 57, 71, 83, 87, 101, 102, 103, 107, 170, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 199, 200, 203, 204, 205, 207, 210, 211, 213, 218, 224, 225, 226, 227, 228, 229, 231, 233, 234, 239, 242, 336, 337, 338, 339, 343, 344, 345, 347, 348], "faster": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 56, 57, 98, 275, 276, 277, 278, 339, 342], "share": [1, 3, 6, 8, 34, 36, 39, 60, 61, 62, 72, 73, 76, 84, 101, 107, 161, 188, 192, 199, 200, 221, 222, 223, 245, 247, 248, 252, 258, 259, 262, 263, 264, 265, 267, 327, 329, 331, 338, 339, 341, 342, 347, 348], "among": [1, 3, 102, 103, 342], "achiev": [1, 3, 4, 32, 83, 87, 91, 101, 107, 150, 171, 308, 333, 336, 337, 338, 339, 342, 343, 348], "via": [1, 4, 7, 8, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 101, 139, 154, 159, 250, 260, 332, 333, 336, 337, 338, 339, 345, 348], "prohibit": [1, 3], "slow": [1, 3, 4, 34, 36, 39], "compar": [1, 3, 55, 307, 332, 336, 338, 342, 345, 348], "gpu": [1, 7, 8, 32, 60, 61, 76, 83, 87, 91, 101, 107, 336, 338, 339, 342, 348], "nativ": [1, 7, 9, 53, 83, 87, 101, 107, 117, 339, 345], "driver": [1, 7], "practic": [1, 3, 4, 5, 8, 189, 215, 216, 244, 330, 336, 337, 338, 339, 342, 344, 348], "mean": [1, 2, 3, 4, 7, 13, 14, 16, 18, 19, 20, 21, 34, 36, 39, 41, 63, 87, 135, 161, 172, 181, 184, 186, 188, 190, 192, 193, 196, 214, 224, 232, 236, 275, 276, 277, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 331, 332, 336, 337, 338, 342, 343, 345, 347, 348], "keyword": [1, 3, 13, 14, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 53, 55, 56, 57, 58, 68, 70, 71, 73, 83, 87, 101, 107, 120, 121, 139, 147, 151, 153, 154, 155, 157, 159, 188, 192, 197, 198, 220, 224, 225, 226, 228, 229, 231, 232, 233, 235, 236, 239, 245, 246, 247, 248, 249, 250, 251, 252, 257, 258, 259, 261, 262, 263, 264, 265, 267, 269, 273, 275, 276, 277, 278, 279, 283, 324, 336, 337, 338, 342, 345, 348], "build": [1, 3, 7, 23, 26, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65, 83, 87, 101, 104, 107, 143, 161, 172, 188, 192, 196, 230, 232, 236, 311, 318, 319, 321, 322, 331, 333, 338, 339, 342, 343, 344, 347, 348], "given": [1, 2, 3, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 40, 41, 42, 44, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 65, 70, 71, 83, 87, 97, 101, 107, 121, 124, 135, 139, 151, 154, 155, 157, 159, 170, 172, 183, 184, 186, 190, 196, 209, 213, 220, 226, 227, 228, 231, 234, 235, 236, 237, 238, 240, 244, 248, 249, 251, 274, 275, 276, 277, 278, 279, 281, 303, 307, 323, 331, 333, 336, 337, 338, 342, 343, 348], "mani": [1, 3, 4, 38, 83, 245, 247, 252, 259, 262, 263, 267, 331, 336, 337, 338, 342, 343, 345, 348], "eg": [1, 2, 3, 11, 34, 36, 39, 60, 61, 62, 72, 73, 76, 83, 87, 91, 101, 107, 124, 149, 155, 199, 225], "gymnasium": [1, 3, 5, 11, 83, 87, 94, 95, 101, 107, 111, 113, 127, 147, 149, 160, 337, 338, 343, 347], "other": [1, 2, 3, 4, 7, 8, 21, 22, 32, 35, 38, 41, 42, 45, 52, 53, 55, 56, 57, 60, 61, 62, 65, 68, 69, 70, 71, 72, 73, 76, 83, 87, 97, 101, 107, 120, 123, 124, 147, 153, 157, 161, 186, 188, 192, 202, 203, 225, 227, 228, 234, 236, 245, 246, 247, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 273, 275, 308, 320, 325, 326, 331, 333, 336, 337, 338, 339, 342, 343, 344, 345, 347, 348], "warn": [1, 3, 224, 228, 229, 231, 337], "quickli": [1, 3, 337, 342, 348], "becom": [1, 3, 4, 21, 186, 190, 342, 348], "quit": [1, 3, 331, 336, 337, 338, 342, 348], "annoi": [1, 3], "By": [1, 2, 3, 33, 83, 87, 101, 102, 103, 107, 109, 218, 236, 260, 307, 327, 336, 344, 345, 348], "filter": [1, 3, 4, 45, 245, 246, 248, 252, 258, 262, 263, 265], "out": [1, 3, 4, 5, 9, 21, 32, 34, 36, 39, 45, 52, 55, 83, 87, 101, 102, 103, 107, 151, 163, 186, 187, 190, 197, 198, 201, 202, 220, 225, 226, 227, 231, 232, 233, 234, 235, 236, 271, 272, 333, 336, 337, 338, 339, 342, 343, 345, 347, 348], "If": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 68, 69, 70, 71, 74, 76, 83, 84, 87, 91, 97, 101, 102, 103, 107, 109, 111, 117, 118, 119, 120, 122, 123, 124, 125, 127, 129, 133, 134, 135, 139, 140, 142, 143, 146, 147, 150, 151, 152, 153, 154, 155, 157, 159, 161, 170, 171, 173, 174, 186, 187, 188, 190, 191, 192, 193, 194, 197, 198, 199, 200, 218, 220, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 258, 259, 260, 262, 263, 264, 265, 267, 273, 274, 275, 276, 277, 278, 279, 289, 290, 291, 292, 298, 306, 308, 311, 313, 315, 320, 323, 327, 330, 336, 337, 338, 339, 341, 342, 343, 345, 347, 348], "still": [1, 2, 3, 9, 55, 224, 259, 260, 336, 337, 339, 341, 343, 345, 348], "wish": [1, 3, 55, 113, 345], "see": [1, 3, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 54, 55, 56, 57, 58, 65, 70, 83, 87, 90, 98, 101, 102, 103, 107, 109, 121, 139, 151, 153, 154, 155, 157, 159, 162, 173, 174, 186, 189, 190, 194, 200, 201, 208, 216, 217, 221, 223, 235, 236, 308, 336, 337, 338, 339, 342, 343, 345, 348], "displai": [1, 3, 7, 311, 333, 336, 337, 342, 343], "filter_warnings_subprocess": [1, 3], "fals": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 60, 61, 65, 68, 69, 70, 71, 76, 80, 81, 83, 84, 87, 93, 96, 97, 100, 101, 102, 103, 105, 106, 107, 108, 109, 114, 117, 118, 121, 122, 125, 126, 127, 129, 132, 133, 134, 135, 137, 139, 140, 141, 143, 145, 147, 149, 151, 153, 154, 155, 156, 157, 159, 161, 163, 170, 171, 172, 173, 174, 176, 183, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 208, 209, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 238, 239, 240, 245, 246, 247, 248, 249, 251, 252, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 270, 273, 275, 276, 277, 278, 284, 285, 286, 287, 289, 290, 291, 292, 304, 305, 307, 308, 309, 311, 320, 327, 331, 333, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "central": [2, 199, 336, 337, 342, 345], "part": [2, 4, 8, 32, 40, 53, 55, 56, 57, 83, 87, 101, 107, 116, 135, 143, 146, 188, 192, 240, 302, 327, 336, 338, 339, 343, 348], "algorithm": [2, 3, 8, 9, 13, 14, 97, 130, 245, 262, 263, 264, 265, 302, 316, 329, 332, 333, 336, 337, 338, 339, 342, 344, 345, 347], "implement": [2, 3, 9, 11, 16, 32, 72, 83, 87, 98, 101, 107, 121, 122, 123, 127, 133, 141, 147, 149, 154, 161, 173, 186, 187, 188, 189, 190, 191, 192, 214, 215, 216, 245, 246, 250, 251, 258, 260, 261, 262, 265, 320, 331, 333, 336, 337, 338, 339, 343, 347], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 26, 32, 34, 36, 39, 40, 42, 52, 55, 57, 69, 71, 83, 84, 87, 91, 101, 107, 117, 133, 139, 141, 157, 160, 161, 172, 192, 193, 199, 200, 245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 273, 330, 331, 332, 333, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "give": [2, 3, 7, 41, 83, 87, 97, 101, 107, 117, 330, 332, 336, 337, 342, 343, 344, 347], "abil": [2, 260, 343, 345], "veri": [2, 3, 337, 343, 345, 347, 348], "influenti": 2, "sampl": [2, 4, 8, 9, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 68, 69, 70, 71, 73, 74, 76, 83, 87, 97, 100, 101, 107, 116, 117, 140, 143, 164, 165, 168, 169, 172, 181, 189, 196, 197, 198, 206, 207, 210, 215, 216, 220, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 245, 246, 247, 248, 249, 251, 259, 261, 262, 267, 302, 308, 311, 314, 331, 336, 337, 338, 339, 342, 344, 347, 348], "latenc": 2, "especi": [2, 3, 7, 8, 118], "larger": [2, 4, 258], "volum": 2, "lazymemmapstorag": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65, 70, 71, 116, 117, 329, 336, 337, 339, 344, 345], "advis": [2, 348], "due": [2, 3, 5, 344, 345, 348], "serialis": [2, 34, 36, 39], "memmaptensor": 2, "well": [2, 3, 8, 17, 21, 32, 35, 37, 38, 41, 42, 68, 72, 83, 87, 101, 107, 190, 210, 211, 260, 279, 336, 337, 339, 344, 345, 347, 348], "specifi": [2, 11, 13, 14, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 65, 83, 87, 101, 102, 103, 107, 109, 122, 123, 125, 146, 148, 150, 156, 172, 190, 235, 236, 260, 266, 331, 336, 338, 339], "file": [2, 6, 7, 8, 34, 36, 39, 52, 53, 55, 56, 57, 293, 333, 335, 337, 345, 346], "locat": [2, 7, 34, 36, 39, 45, 57, 83, 87, 101, 107, 126, 135, 145, 189, 203, 215, 216, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 336, 337, 338, 342, 345], "improv": [2, 4, 130, 245, 332, 342, 345], "failur": [2, 4], "recoveri": 2, "liststorag": [2, 35, 38, 41, 42, 329, 345], "were": [2, 7, 101, 107, 338, 345], "found": [2, 3, 6, 7, 10, 21, 26, 32, 34, 36, 39, 45, 52, 53, 55, 56, 57, 70, 71, 83, 87, 91, 101, 107, 114, 117, 143, 146, 152, 161, 171, 228, 229, 232, 236, 259, 260, 262, 336, 337, 339], "rough": 2, "benchmark": [2, 3, 9], "http": [2, 5, 6, 7, 10, 18, 19, 20, 35, 43, 54, 56, 57, 63, 91, 98, 102, 103, 104, 117, 139, 157, 175, 176, 177, 178, 179, 180, 183, 184, 185, 190, 196, 197, 198, 202, 204, 205, 207, 208, 210, 211, 217, 227, 231, 245, 246, 249, 250, 251, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 275, 280, 288, 320, 344, 347], "github": [2, 5, 6, 7, 10, 18, 19, 20, 53, 102, 103, 104, 157, 347], "com": [2, 5, 6, 7, 10, 18, 19, 20, 56, 91, 102, 103, 104, 344, 347], "tree": [2, 34, 36, 39, 83, 87, 101, 107], "type": [2, 3, 14, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 57, 58, 65, 83, 87, 96, 97, 101, 102, 103, 107, 121, 122, 123, 126, 127, 133, 139, 141, 147, 149, 151, 154, 155, 157, 159, 161, 165, 169, 173, 174, 194, 199, 200, 202, 208, 217, 224, 226, 232, 235, 236, 245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 269, 273, 281, 320, 325, 331, 336, 337, 338, 342, 343, 345, 348], "1x": 2, "lazytensorstorag": [2, 41, 42, 74, 143, 329, 338, 342, 345], "83x": 2, "3": [2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 17, 21, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 65, 70, 71, 83, 87, 90, 96, 98, 100, 101, 102, 103, 105, 106, 107, 114, 117, 121, 124, 126, 127, 133, 135, 137, 139, 141, 143, 146, 147, 149, 150, 151, 153, 154, 155, 157, 159, 167, 172, 173, 174, 176, 177, 180, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 199, 200, 203, 206, 208, 218, 220, 221, 222, 223, 226, 227, 232, 234, 235, 238, 239, 240, 245, 246, 248, 249, 251, 252, 253, 254, 255, 258, 260, 262, 263, 264, 265, 267, 273, 275, 276, 277, 278, 281, 284, 285, 286, 287, 289, 290, 291, 292, 294, 310, 331, 333, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348], "44x": 2, "between": [2, 3, 4, 5, 13, 14, 16, 17, 21, 32, 40, 55, 69, 71, 83, 87, 101, 107, 124, 134, 144, 155, 163, 173, 174, 186, 188, 192, 194, 199, 200, 227, 232, 236, 245, 247, 248, 251, 252, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 270, 275, 307, 311, 332, 336, 337, 339, 342, 343, 348], "long": [2, 3, 13, 14, 16, 17, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 44, 46, 47, 124, 190, 191, 339, 345], "sharabl": 2, "featur": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 33, 45, 53, 70, 71, 83, 87, 96, 101, 102, 103, 105, 106, 107, 117, 129, 133, 137, 151, 152, 156, 161, 173, 174, 184, 185, 186, 187, 188, 190, 191, 192, 194, 201, 202, 236, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 327, 331, 336, 337, 338, 339, 343, 345, 348], "allow": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 29, 32, 33, 55, 65, 68, 70, 71, 83, 87, 101, 107, 141, 170, 194, 245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 268, 270, 273, 331, 333, 336, 338, 339, 342, 343, 345, 348], "popul": [2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65, 132, 151, 336, 338, 339, 343, 345], "collabor": [2, 55], "rather": [2, 4, 73, 141, 336, 337, 338, 342], "incur": 2, "some": [2, 3, 4, 7, 8, 9, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 44, 45, 46, 47, 52, 53, 55, 56, 57, 60, 61, 65, 74, 76, 83, 87, 101, 102, 103, 107, 109, 139, 155, 157, 163, 176, 188, 192, 213, 236, 237, 238, 302, 314, 331, 333, 336, 337, 338, 339, 342, 343, 345, 347, 348], "transmiss": 2, "overhead": [2, 101, 107], "includ": [2, 3, 4, 7, 9, 21, 32, 57, 60, 61, 62, 72, 73, 76, 83, 87, 97, 101, 107, 150, 155, 161, 260, 265, 314, 331, 333, 336, 337, 338, 339, 342, 343, 345, 348], "ani": [2, 3, 5, 8, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 65, 66, 69, 71, 72, 73, 74, 75, 76, 77, 78, 83, 84, 87, 101, 102, 103, 107, 109, 114, 129, 139, 140, 143, 155, 157, 161, 163, 171, 173, 174, 180, 194, 202, 225, 235, 236, 237, 238, 245, 246, 248, 249, 251, 252, 258, 260, 262, 263, 264, 265, 267, 275, 299, 311, 330, 336, 337, 338, 342, 343, 345, 347, 348], "subclass": [2, 3, 65, 83, 87, 101, 107, 154, 160, 163, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 199, 200, 203, 204, 205, 207, 210, 211, 213, 218, 224, 225, 227, 228, 229, 231, 234, 235, 236, 237, 239, 242, 260, 262, 337, 339, 343, 345], "tensorstorag": [2, 329], "instanti": [2, 3, 21, 34, 36, 39, 91, 154, 200, 336, 337, 342, 343, 345, 348], "content": [2, 8, 13, 14, 16, 26, 28, 34, 35, 36, 38, 39, 41, 42, 69, 98, 173, 174, 194, 199, 200, 232, 260, 338, 343, 347], "map": [2, 3, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 60, 83, 87, 96, 101, 102, 103, 105, 106, 107, 109, 110, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 131, 132, 133, 135, 137, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 161, 167, 183, 203, 220, 221, 222, 223, 226, 232, 233, 235, 236, 238, 239, 240, 241, 265, 273, 307, 329, 331, 332, 336, 337, 338, 339, 344], "tensor": [2, 3, 8, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 68, 70, 71, 74, 75, 76, 77, 78, 80, 83, 84, 87, 93, 96, 97, 100, 101, 102, 103, 105, 106, 107, 108, 109, 114, 116, 117, 118, 121, 122, 124, 125, 126, 127, 129, 132, 135, 137, 139, 140, 141, 143, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 245, 246, 248, 249, 251, 252, 255, 256, 258, 260, 262, 263, 264, 265, 267, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 320, 331, 333, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "writer": [2, 38, 42, 52, 53, 54, 55, 56, 57, 59, 65, 66, 74, 75, 78, 329, 338], "tensordictroundrobinwrit": [2, 65, 329], "current": [2, 3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 71, 83, 87, 89, 98, 101, 107, 117, 140, 150, 151, 152, 154, 155, 164, 165, 170, 184, 193, 211, 231, 253, 265, 297, 333, 336, 337, 338, 339, 342, 343, 347, 348], "goe": [2, 4, 102, 103, 336, 338, 342, 348], "sampler": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 76, 140, 249, 253, 273, 329, 336, 338, 342, 345], "prioritizedsampl": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65, 249, 253, 273, 329, 336, 345], "extend": [2, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 59, 65, 66, 70, 71, 73, 74, 75, 77, 78, 116, 143, 308, 333, 336, 337, 338, 339, 342, 344, 345, 347], "access": [2, 3, 7, 8, 32, 35, 54, 83, 87, 101, 107, 139, 157, 327, 330, 336, 342, 343, 345], "show": [2, 32, 83, 87, 101, 107, 200, 331, 336, 338, 339, 342, 343, 345, 347], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 17, 21, 22, 35, 37, 38, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 65, 70, 71, 74, 76, 83, 84, 87, 95, 97, 101, 102, 103, 105, 106, 107, 110, 111, 113, 114, 116, 117, 120, 126, 127, 132, 133, 135, 137, 139, 141, 142, 143, 146, 147, 149, 150, 151, 152, 154, 159, 161, 167, 170, 171, 172, 183, 186, 187, 188, 190, 191, 192, 194, 196, 199, 200, 203, 208, 209, 217, 220, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 238, 239, 240, 245, 246, 247, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 273, 275, 276, 277, 278, 304, 307, 320, 323, 331, 332, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "tensordictreplaybuff": [2, 35, 38, 41, 52, 53, 54, 55, 56, 57, 65, 70, 71, 74, 116, 117, 308, 323, 329, 336, 337, 339, 345], "mp": [2, 18, 19, 20, 84, 161], "def": [2, 3, 11, 22, 32, 83, 84, 87, 97, 101, 107, 113, 114, 122, 125, 172, 183, 186, 187, 190, 191, 196, 232, 240, 246, 248, 252, 258, 260, 263, 265, 267, 333, 336, 337, 341, 342, 343, 347, 348], "rb": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65, 70, 71, 74, 117, 143, 337, 339, 342, 344, 345, 347], "updat": [2, 3, 4, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 39, 40, 41, 63, 83, 87, 97, 101, 102, 103, 107, 114, 122, 124, 125, 149, 150, 155, 158, 161, 171, 172, 186, 188, 192, 196, 224, 228, 229, 231, 232, 233, 234, 235, 236, 245, 246, 248, 249, 251, 252, 253, 254, 257, 258, 260, 262, 263, 264, 265, 266, 267, 273, 275, 276, 277, 278, 279, 307, 311, 313, 316, 317, 322, 323, 333, 337, 338, 339, 342, 343, 345, 347, 348], "td": [2, 3, 15, 26, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 65, 74, 79, 80, 81, 82, 86, 88, 92, 93, 94, 95, 114, 116, 118, 122, 123, 124, 125, 132, 133, 135, 143, 146, 151, 153, 155, 161, 170, 172, 183, 188, 192, 195, 196, 208, 209, 217, 220, 221, 222, 223, 225, 226, 228, 229, 231, 232, 233, 235, 238, 240, 273, 276, 277, 278, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 302, 310, 320, 331, 332, 336, 339, 342, 343, 347, 348], "10": [2, 7, 22, 26, 35, 38, 40, 41, 42, 43, 45, 60, 61, 65, 70, 71, 74, 76, 84, 97, 102, 103, 105, 106, 108, 109, 114, 116, 117, 150, 152, 153, 172, 175, 180, 186, 187, 190, 191, 193, 196, 207, 218, 228, 229, 231, 232, 239, 246, 249, 251, 252, 262, 263, 264, 267, 273, 275, 276, 277, 278, 281, 302, 333, 336, 337, 338, 339, 342, 343, 345, 347, 348], "__name__": [2, 22, 84, 337], "__main__": [2, 22, 84], "21": [2, 55, 56, 71, 102, 103, 335, 336, 337, 339, 341, 343, 346], "zero": [2, 3, 4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 42, 44, 45, 46, 47, 52, 61, 70, 71, 76, 83, 87, 101, 107, 116, 118, 122, 124, 125, 135, 143, 167, 170, 172, 186, 187, 188, 190, 191, 192, 193, 197, 198, 200, 208, 217, 228, 229, 231, 234, 242, 245, 246, 248, 249, 251, 252, 258, 262, 263, 264, 265, 267, 273, 275, 276, 277, 278, 281, 339, 347], "proc": 2, "target": [2, 4, 8, 21, 32, 83, 84, 87, 101, 107, 150, 154, 235, 236, 245, 246, 247, 248, 249, 251, 252, 253, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 273, 274, 275, 276, 277, 278, 279, 314, 322, 323, 332, 333, 339, 343], "arg": [2, 12, 14, 26, 28, 32, 60, 61, 76, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 114, 121, 139, 148, 151, 154, 155, 156, 158, 159, 172, 173, 174, 182, 188, 192, 194, 195, 196, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 273, 275, 276, 277, 278, 279, 301, 304, 308, 311, 327, 337], "start": [2, 3, 4, 5, 13, 21, 45, 57, 70, 71, 84, 96, 170, 306, 336, 337, 342, 343, 345, 348], "join": [2, 84, 329, 337, 338], "now": [2, 3, 7, 35, 117, 200, 336, 337, 338, 339, 341, 342, 344, 345, 348], "length": [2, 17, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 40, 43, 44, 45, 46, 47, 55, 58, 70, 71, 73, 83, 87, 101, 107, 140, 161, 172, 173, 174, 176, 178, 180, 182, 186, 190, 194, 196, 199, 200, 220, 235, 240, 302, 308, 336, 338, 339, 343, 345, 348], "20": [2, 45, 56, 70, 71, 74, 83, 87, 91, 101, 107, 150, 186, 187, 190, 191, 225, 302, 336, 337, 338, 339, 342, 343, 347, 348], "assert": [2, 3, 6, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 65, 87, 90, 113, 117, 120, 122, 125, 133, 141, 161, 163, 167, 200, 203, 218, 275, 276, 277, 278, 302, 310, 341, 345, 348], "len": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 60, 61, 65, 76, 137, 173, 174, 194, 200, 336, 343, 344, 345, 347], "_data": [2, 343], "0": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 21, 22, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 49, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 65, 70, 71, 76, 80, 83, 87, 90, 93, 97, 101, 104, 105, 106, 107, 114, 115, 117, 118, 120, 121, 123, 124, 133, 134, 135, 139, 143, 146, 150, 151, 152, 153, 154, 155, 157, 159, 160, 161, 163, 172, 173, 174, 176, 177, 179, 180, 184, 186, 188, 189, 190, 191, 192, 194, 196, 198, 199, 200, 201, 202, 203, 206, 210, 211, 214, 215, 216, 218, 220, 224, 225, 227, 228, 229, 231, 234, 235, 238, 239, 242, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 273, 274, 275, 276, 277, 278, 281, 282, 283, 302, 309, 323, 327, 332, 333, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "too": [2, 7, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 44, 46, 47, 101, 107, 134, 151, 189, 215, 216, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 273, 275, 276, 277, 278, 337, 338, 343, 345, 348], "difficult": [2, 4], "element": [2, 13, 14, 16, 18, 19, 20, 21, 30, 31, 33, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 65, 71, 74, 76, 100, 117, 140, 150, 173, 174, 186, 187, 190, 220, 224, 226, 235, 236, 240, 302, 336, 338, 345, 348], "pai": [2, 8, 336, 339], "attent": [2, 8, 336, 339, 348], "alwai": [2, 3, 20, 26, 28, 32, 58, 83, 87, 101, 107, 133, 134, 253, 260, 331, 332, 337, 338, 339, 342, 343, 345], "lead": [2, 3, 4, 8, 10, 11, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 69, 151, 189, 208, 215, 216, 336, 339, 342, 343, 345, 347], "dimens": [2, 3, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 53, 55, 56, 57, 60, 61, 70, 71, 74, 76, 83, 87, 101, 107, 109, 116, 117, 118, 129, 135, 137, 140, 146, 148, 153, 156, 161, 173, 174, 175, 180, 188, 190, 192, 194, 197, 198, 199, 201, 202, 207, 208, 212, 213, 214, 215, 218, 226, 245, 246, 247, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 327, 331, 336, 337, 338, 339, 342, 343, 345], "word": [2, 3, 40, 52, 53, 55, 56, 57, 260, 336, 343, 348], "creat": [2, 3, 4, 5, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 45, 55, 57, 58, 83, 84, 87, 91, 98, 101, 102, 107, 117, 139, 154, 155, 157, 160, 161, 167, 170, 173, 174, 176, 177, 178, 179, 180, 185, 188, 192, 194, 195, 199, 200, 225, 236, 249, 253, 263, 265, 273, 294, 308, 315, 316, 317, 323, 325, 326, 331, 336, 337, 338, 339, 342, 343, 344, 345, 347, 348], "1m": [2, 55, 314, 336, 338, 339], "multidimension": [2, 41, 63, 345], "doe": [2, 3, 18, 34, 35, 36, 39, 41, 45, 52, 55, 63, 72, 73, 78, 180, 186, 187, 188, 190, 191, 192, 201, 218, 225, 237, 238, 245, 247, 253, 259, 262, 274, 311, 331, 333, 336, 337, 338, 339, 343, 345, 348], "howev": [2, 3, 5, 7, 32, 83, 87, 101, 107, 117, 146, 150, 155, 265, 331, 336, 337, 338, 339, 343, 345, 348], "episod": [2, 52, 55, 56, 57, 70, 71, 87, 143, 146, 150, 172, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 337, 342], "flatten": [2, 34, 36, 39, 129, 308, 339, 342], "capac": [2, 338], "desir": [2, 3, 32, 83, 87, 101, 107, 121, 135, 137, 139, 140, 151, 154, 155, 157, 159, 168, 169, 173, 174, 194, 200, 220, 226, 227, 232, 233, 234, 235, 236, 331, 336, 342, 343], "diversifi": 2, "make": [2, 3, 4, 7, 32, 34, 36, 39, 40, 52, 53, 54, 55, 56, 57, 68, 72, 73, 78, 83, 87, 88, 91, 93, 95, 98, 101, 107, 127, 135, 139, 140, 143, 149, 157, 163, 186, 187, 190, 191, 199, 200, 201, 226, 236, 262, 275, 276, 277, 278, 308, 317, 327, 331, 332, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "offer": [2, 3, 7, 331, 337, 343, 348], "distinct": [2, 3, 65, 341], "accomplish": 2, "slicesampl": [2, 329], "slice": [2, 3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 52, 55, 70, 71, 116], "anoth": [2, 3, 8, 34, 36, 39, 55, 83, 87, 91, 101, 107, 122, 123, 125, 151, 154, 194, 245, 246, 247, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 273, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 331, 332, 336, 338, 339, 341, 342, 343, 348], "recommend": [2, 4, 7, 34, 36, 39, 91, 342], "__especially__": 2, "offlin": [2, 8, 13, 14, 16, 17, 18, 19, 20, 21, 117, 163, 246, 251, 258, 333, 344, 345, 347], "convent": [2, 3, 109, 332, 336, 339, 342, 343], "requir": [2, 3, 4, 7, 8, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 83, 87, 91, 98, 101, 104, 107, 121, 139, 151, 154, 155, 157, 159, 194, 218, 235, 237, 238, 245, 246, 247, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 273, 331, 333, 336, 337, 338, 339, 342, 343, 345, 348], "reshap": [2, 32, 55, 70, 188, 192, 194, 338, 342], "extens": [2, 71, 333, 345], "detail": [2, 3, 5, 6, 7, 32, 83, 87, 101, 102, 103, 107, 153, 155, 183, 186, 190, 227, 245, 253, 262, 330, 337, 341, 345], "independ": [2, 13, 14, 16, 17, 18, 19, 20, 21, 154, 156, 200, 332, 333, 336, 337, 342, 345, 347], "differ": [2, 3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 55, 68, 83, 87, 96, 101, 102, 103, 107, 117, 124, 135, 141, 155, 156, 183, 186, 187, 188, 190, 191, 192, 194, 196, 199, 200, 209, 258, 262, 270, 275, 276, 277, 281, 282, 283, 307, 311, 313, 325, 326, 331, 332, 333, 336, 337, 338, 341, 342, 343, 344, 345, 348], "congruent": 2, "shape": [2, 3, 13, 14, 16, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 53, 55, 56, 57, 58, 60, 61, 65, 76, 83, 87, 96, 100, 101, 102, 103, 105, 106, 107, 108, 109, 116, 118, 122, 125, 126, 127, 133, 135, 137, 141, 143, 147, 149, 151, 153, 161, 162, 163, 167, 170, 172, 175, 180, 181, 182, 186, 187, 188, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 203, 206, 207, 208, 209, 214, 217, 220, 221, 222, 223, 225, 226, 227, 232, 233, 234, 235, 238, 239, 240, 245, 246, 248, 249, 251, 252, 258, 262, 263, 264, 265, 267, 270, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 302, 308, 311, 323, 331, 336, 337, 338, 339, 341, 342, 344, 345, 347, 348], "custom": [2, 3, 5, 32, 83, 87, 101, 107, 157, 199, 200, 239, 253, 262, 268, 327, 331, 336, 337, 338, 339, 342], "name": [2, 3, 6, 7, 11, 16, 32, 34, 36, 39, 45, 52, 54, 57, 58, 81, 83, 87, 96, 98, 101, 102, 103, 104, 107, 109, 110, 124, 127, 141, 146, 147, 149, 155, 157, 160, 171, 188, 192, 226, 233, 245, 246, 247, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 273, 279, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 320, 333, 336, 337, 338, 339, 342, 343, 348], "randomcroptensordict": [2, 336], "note": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 38, 39, 41, 42, 83, 87, 101, 107, 122, 125, 161, 171, 186, 188, 190, 192, 231, 232, 236, 253, 336, 337, 341, 342, 348], "unlik": [2, 69, 253, 262, 337, 347], "base": [2, 3, 4, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 35, 38, 41, 42, 45, 55, 67, 74, 75, 77, 91, 97, 98, 99, 101, 107, 143, 151, 157, 158, 199, 221, 230, 245, 246, 248, 249, 251, 252, 254, 258, 262, 263, 264, 265, 267, 311, 320, 331, 332, 333, 336, 337, 339, 342, 343, 345, 348], "here": [2, 3, 4, 7, 8, 9, 10, 56, 57, 83, 87, 91, 101, 102, 103, 107, 117, 331, 332, 336, 337, 338, 339, 342, 343, 345, 347, 348], "stop": [2, 3, 16, 21, 40, 57, 70, 71, 83, 87, 101, 107, 338, 342, 347, 348], "signal": [2, 3, 17, 52, 53, 55, 56, 57, 70, 71, 87, 117, 126, 149, 152, 171, 332, 336, 338, 342, 345, 348], "isn": [2, 3, 8, 34, 36, 39, 55, 126, 226, 235, 342], "t": [2, 3, 4, 6, 7, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 44, 46, 47, 55, 63, 69, 74, 83, 84, 87, 98, 101, 107, 117, 122, 125, 126, 139, 142, 143, 150, 152, 159, 161, 170, 186, 190, 226, 231, 235, 266, 275, 276, 277, 278, 279, 281, 311, 313, 327, 330, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "how": [2, 3, 18, 19, 20, 32, 35, 41, 55, 63, 83, 87, 101, 102, 103, 107, 109, 245, 247, 257, 259, 262, 311, 330, 331, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "our": [2, 3, 7, 8, 18, 117, 331, 336, 337, 338, 339, 341, 342, 344, 345, 347], "enjoi": [2, 3, 55], "separ": [2, 4, 8, 13, 14, 17, 18, 20, 21, 23, 139, 159, 246, 248, 251, 252, 263, 265, 267, 336, 337, 342, 345, 348], "save": [2, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 65, 83, 87, 101, 107, 160, 293, 311, 333, 342], "disk": [2, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 65, 311, 333, 336, 337, 339, 345], "dump": [2, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65, 293], "load": [2, 6, 7, 13, 14, 16, 17, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 65, 82, 83, 87, 101, 107, 113, 161, 327, 333, 336, 345], "json": 2, "metadata": [2, 52, 338, 342, 348], "cannot": [2, 3, 4, 7, 22, 26, 27, 28, 31, 33, 70, 71, 83, 87, 91, 101, 107, 122, 125, 140, 146, 233, 337, 338, 339, 342, 343], "anticip": [2, 122, 125], "compli": [2, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 55], "structur": [2, 3, 7, 34, 35, 36, 38, 39, 40, 41, 42, 45, 74, 83, 87, 101, 107, 122, 125, 171, 199, 231, 275, 276, 277, 278, 279, 332, 336, 338, 339, 342, 343, 344, 345], "guarante": [2, 32, 34, 36, 39, 60, 61, 62, 72, 73, 76, 83, 87, 101, 107, 161, 347], "back": [2, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 44, 46, 47, 52, 160, 220, 226, 227, 232, 233, 234, 235, 236, 338, 342, 343, 345], "exact": [2, 3, 101, 190], "look": [2, 3, 5, 7, 8, 32, 83, 87, 96, 101, 102, 103, 107, 139, 140, 157, 232, 236, 237, 238, 332, 338, 339, 342, 343, 344, 345, 347, 348], "statu": [2, 3], "its": [2, 3, 4, 5, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 44, 46, 47, 49, 65, 83, 87, 97, 101, 102, 103, 107, 110, 116, 117, 126, 133, 149, 150, 154, 155, 160, 161, 173, 174, 197, 198, 199, 200, 224, 226, 232, 233, 236, 239, 245, 246, 247, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 273, 311, 323, 333, 336, 337, 338, 339, 342, 343, 344, 345, 348], "prioriti": [2, 4, 35, 41, 42, 60, 61, 62, 63, 72, 73, 76, 248, 249, 251, 252, 253, 258, 263, 265, 267, 273, 333, 336, 337, 345], "max": [2, 23, 33, 36, 41, 45, 58, 63, 124, 152, 214, 215, 216, 225, 231, 246, 247, 252, 261, 263, 265, 336, 338, 339, 342], "heap": 2, "under": [2, 3, 4, 21, 32, 40, 52, 53, 55, 56, 57, 83, 87, 101, 107, 220, 226, 227, 232, 233, 234, 235, 236, 260, 275, 276, 277, 278, 279, 332, 336, 337, 343, 348], "hood": [2, 21, 343], "just": [2, 3, 4, 11, 73, 83, 87, 96, 101, 102, 103, 107, 120, 171, 200, 302, 331, 333, 336, 337, 338, 339, 342, 343, 345, 347, 348], "public": [2, 54, 139, 159], "method": [2, 3, 4, 11, 13, 14, 15, 16, 17, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 70, 71, 72, 73, 76, 83, 87, 101, 107, 117, 121, 122, 123, 126, 127, 129, 133, 135, 139, 141, 142, 143, 147, 149, 151, 154, 155, 157, 159, 172, 193, 220, 221, 222, 223, 225, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 273, 279, 293, 324, 332, 333, 334, 337, 338, 339, 343, 345, 348], "don": [2, 3, 4, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 117, 337, 338, 345, 347, 348], "assum": [2, 3, 6, 26, 33, 40, 41, 42, 52, 53, 55, 56, 57, 87, 101, 107, 116, 119, 129, 139, 140, 146, 151, 157, 159, 167, 188, 192, 193, 218, 239, 249, 253, 265, 273, 284, 285, 286, 287, 289, 290, 291, 292, 294, 336, 338, 339, 341, 343], "serializ": 2, "altern": [2, 4, 27, 98, 180, 197, 198, 199, 244, 336, 338, 342], "state_dict": [2, 13, 14, 16, 17, 21, 32, 34, 36, 39, 83, 87, 101, 107, 155, 161, 265, 327, 333, 336, 337, 348], "load_state_dict": [2, 13, 14, 16, 17, 21, 32, 34, 36, 39, 83, 87, 101, 107, 155, 161, 265, 333, 336], "drawback": 2, "struggl": 2, "big": [2, 338, 345, 348], "wrapper": [2, 3, 11, 15, 17, 34, 36, 39, 40, 41, 42, 79, 80, 81, 82, 86, 88, 89, 91, 92, 93, 94, 95, 97, 99, 102, 103, 104, 105, 106, 108, 109, 111, 160, 203, 218, 224, 225, 229, 231, 236, 241, 275, 299, 300, 301, 327, 329, 338, 339, 342, 344, 348], "around": [2, 5, 7, 15, 17, 41, 42, 97, 236, 275, 336, 337, 342, 348], "present": [2, 3, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 63, 65, 69, 83, 87, 101, 107, 127, 143, 147, 170, 171, 175, 176, 177, 178, 179, 185, 190, 202, 207, 231, 235, 236, 237, 238, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 273, 275, 276, 277, 278, 279, 327, 333, 336, 341, 342, 345, 347], "replaybuff": [2, 41, 42, 65, 77, 117, 140, 143, 249, 253, 273, 321, 323, 329, 338, 342, 344, 345, 347], "promptli": 2, "virtual": [2, 3], "instal": [2, 3, 5, 10, 18, 19, 20, 52, 54, 102, 103, 105, 106, 311, 330, 338, 339, 342, 348], "respons": [2, 3, 8, 311, 348], "d4rl": [2, 52, 53, 55, 56, 57], "clone": [2, 4, 8, 26, 28, 133, 221, 222, 223, 235, 258, 320, 329, 336, 343, 347], "repositori": [2, 7, 53, 54, 57], "latest": [2, 3, 10, 98, 102, 103, 308, 338, 342, 343, 347], "wheel": [2, 338], "publish": 2, "pypi": [2, 347], "openml": [2, 54, 100], "scikit": [2, 54], "panda": [2, 54], "customari": [2, 331], "time": [2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 20, 21, 32, 35, 38, 40, 41, 42, 55, 56, 74, 83, 84, 87, 96, 100, 101, 102, 103, 107, 113, 116, 118, 140, 146, 151, 152, 161, 170, 184, 186, 190, 192, 193, 231, 247, 252, 255, 259, 260, 262, 263, 267, 275, 276, 277, 278, 279, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 311, 331, 332, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "moreov": [2, 3], "fine": [2, 133, 344], "grain": 2, "nomenclatur": 2, "compact": 2, "togeth": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 40, 83, 87, 96, 101, 102, 103, 107, 117, 140, 186, 188, 190, 192, 217, 221, 222, 223, 241, 331, 337, 338, 339], "propos": [2, 117, 126, 195, 257, 266, 320, 331, 339, 345], "replaybufferensembl": [2, 68, 73, 78], "primit": [2, 3, 4, 55, 245, 246, 248, 249, 251, 252, 258, 262, 263, 264, 265, 267], "onc": [2, 3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 55, 65, 83, 87, 101, 107, 143, 155, 224, 229, 231, 309, 333, 337, 338, 339, 343, 345, 348], "individu": [2, 4, 18, 19, 20, 21, 32, 45, 65, 83, 87, 101, 107, 336, 342], "format": [2, 17, 31, 32, 33, 55, 56, 57, 68, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235, 336, 337, 348], "dummi": [2, 320, 336, 348], "semant": [2, 28, 29, 331], "ident": [2, 3, 13, 14, 16, 32, 34, 36, 39, 101, 107, 126, 199, 200, 275, 276, 277, 278, 325, 326, 337, 342], "entri": [2, 3, 13, 14, 18, 19, 20, 21, 23, 26, 28, 32, 34, 36, 37, 39, 45, 49, 52, 53, 54, 56, 57, 70, 71, 83, 87, 101, 107, 117, 119, 120, 122, 125, 126, 129, 132, 135, 137, 139, 141, 143, 146, 149, 150, 151, 159, 161, 170, 171, 188, 197, 198, 225, 226, 233, 234, 246, 265, 275, 276, 277, 278, 331, 336, 338, 339, 342, 343, 344, 345, 348], "another_kei": [2, 65], "renam": [2, 34, 36, 39, 65, 141, 143, 170, 336], "match": [2, 3, 6, 8, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 65, 73, 83, 84, 87, 101, 107, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 129, 131, 132, 133, 135, 137, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 173, 174, 181, 188, 192, 194, 199, 200, 214, 220, 225, 226, 232, 233, 235, 236, 239, 240, 246, 252, 259, 261, 263, 265, 308, 313, 331, 336, 338, 341, 342, 343, 345, 347, 348], "resiz": [2, 3, 57, 65, 117, 337, 339, 345, 348], "imag": [2, 4, 7, 55, 81, 119, 139, 153, 159, 194, 336, 337, 342, 344, 348], "comops": 2, "totensorimag": [2, 3, 57, 65, 117, 142, 337, 339, 345, 347, 348], "renametransform": [2, 65, 83, 87, 101, 107], "rb0": [2, 65], "in_kei": [2, 3, 13, 14, 16, 17, 21, 52, 65, 97, 115, 116, 117, 118, 119, 120, 122, 124, 125, 129, 131, 133, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 150, 152, 153, 154, 155, 157, 159, 161, 172, 182, 188, 192, 196, 208, 217, 218, 220, 221, 222, 223, 225, 226, 232, 233, 235, 236, 238, 239, 240, 245, 246, 247, 248, 249, 251, 252, 258, 259, 262, 263, 264, 265, 267, 273, 275, 276, 277, 278, 293, 294, 320, 323, 331, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "pixel": [2, 3, 7, 26, 57, 65, 117, 119, 126, 129, 131, 135, 137, 139, 142, 153, 157, 159, 176, 204, 205, 294, 320, 331, 336, 337, 339, 344, 345, 347, 348], "next": [2, 3, 4, 8, 13, 14, 16, 26, 28, 32, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 58, 65, 70, 71, 74, 80, 83, 84, 87, 93, 97, 101, 105, 106, 107, 108, 109, 116, 117, 122, 125, 126, 127, 132, 133, 137, 141, 143, 146, 147, 149, 151, 160, 161, 167, 170, 172, 187, 188, 191, 192, 196, 211, 241, 245, 246, 248, 249, 251, 252, 253, 258, 262, 263, 264, 265, 267, 273, 274, 275, 276, 277, 278, 279, 305, 307, 309, 336, 337, 339, 341, 343, 344, 345, 347, 348], "32": [2, 22, 26, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65, 71, 105, 106, 108, 109, 173, 174, 175, 176, 177, 180, 185, 194, 199, 200, 204, 205, 207, 208, 217, 273, 335, 336, 337, 339, 343, 344, 345, 346, 347, 348], "rb1": [2, 65], "p": [2, 4, 65, 68, 84, 105, 106], "5": [2, 3, 24, 26, 28, 35, 38, 41, 42, 65, 70, 71, 84, 93, 98, 105, 106, 108, 109, 116, 143, 149, 150, 172, 173, 174, 183, 184, 186, 189, 190, 193, 194, 196, 199, 200, 204, 209, 215, 216, 225, 226, 233, 239, 259, 262, 264, 267, 331, 335, 336, 337, 339, 342, 343, 345, 346, 347, 348], "33": [2, 26, 32, 65, 83, 87, 101, 107, 173, 174, 194, 336, 337, 343], "out_kei": [2, 3, 13, 14, 16, 17, 21, 65, 97, 115, 116, 117, 118, 119, 120, 122, 125, 129, 131, 133, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 150, 152, 153, 154, 157, 159, 161, 172, 182, 183, 188, 192, 196, 208, 209, 217, 218, 220, 221, 222, 223, 225, 227, 232, 233, 234, 235, 236, 238, 239, 240, 245, 246, 247, 252, 258, 259, 262, 263, 264, 265, 273, 275, 276, 277, 278, 294, 307, 323, 331, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "pixels33": [2, 65], "data0": [2, 65], "randint": [2, 45, 65, 153, 345], "255": [2, 65, 153, 343, 345], "244": [2, 65, 139, 159, 343], "randn": [2, 26, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 60, 61, 65, 70, 71, 76, 116, 135, 167, 175, 180, 183, 186, 187, 190, 191, 193, 197, 198, 199, 203, 206, 207, 209, 220, 221, 222, 223, 225, 226, 232, 233, 235, 238, 239, 240, 245, 246, 248, 249, 251, 252, 258, 262, 263, 264, 265, 267, 275, 276, 277, 278, 310, 331, 347, 348], "batch_siz": [2, 3, 8, 13, 14, 15, 16, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 70, 71, 74, 76, 80, 83, 85, 87, 90, 93, 96, 97, 100, 101, 102, 103, 105, 106, 107, 108, 109, 116, 117, 122, 125, 126, 127, 137, 141, 143, 147, 149, 151, 154, 170, 171, 172, 180, 183, 188, 192, 196, 208, 209, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 238, 239, 240, 245, 246, 248, 249, 251, 252, 258, 262, 263, 264, 265, 267, 273, 302, 308, 320, 331, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "data1": [2, 65], "64": [2, 3, 34, 36, 39, 55, 65, 117, 142, 176, 177, 185, 188, 192, 200, 208, 273, 336, 337, 338, 339, 341, 343, 345, 347, 348], "_": [2, 8, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65, 84, 91, 109, 118, 122, 124, 125, 133, 135, 141, 153, 161, 220, 235, 240, 244, 245, 246, 248, 252, 258, 262, 263, 265, 267, 275, 276, 277, 278, 336, 337, 338, 339, 342, 343, 345, 347], "rang": [2, 3, 4, 8, 11, 27, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 57, 60, 61, 65, 74, 83, 84, 87, 101, 107, 143, 153, 161, 187, 191, 259, 267, 332, 333, 336, 338, 339, 342, 343, 345, 347], "parent": [2, 3, 21, 26, 28, 44, 65, 73, 78, 83, 117, 118, 121, 123, 126, 129, 130, 135, 139, 146, 149, 150, 151, 152, 154, 156, 157, 221, 260, 262, 279, 336, 343, 347, 348], "basic": [2, 97, 331, 338, 348], "properti": [2, 3, 32, 34, 36, 39, 83, 87, 97, 101, 107, 154, 155, 181, 189, 201, 206, 214, 215, 216, 260, 265, 343, 345], "observ": [2, 3, 8, 13, 14, 16, 17, 21, 32, 44, 52, 53, 55, 56, 57, 80, 81, 82, 83, 84, 87, 93, 96, 97, 100, 101, 102, 103, 105, 106, 107, 108, 109, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 129, 131, 132, 133, 135, 136, 137, 141, 142, 143, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 170, 175, 176, 177, 178, 179, 180, 183, 188, 192, 193, 199, 204, 205, 207, 209, 210, 220, 221, 222, 223, 225, 226, 228, 229, 231, 232, 233, 240, 241, 245, 246, 247, 248, 249, 251, 252, 255, 258, 259, 262, 263, 264, 265, 267, 273, 275, 276, 277, 278, 279, 294, 320, 323, 331, 333, 337, 338, 339, 341, 342, 343, 345, 347, 348], "dtype": [2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 55, 56, 57, 58, 60, 61, 63, 70, 71, 76, 80, 83, 87, 93, 96, 97, 100, 101, 102, 103, 105, 106, 107, 108, 109, 114, 121, 122, 123, 124, 125, 126, 127, 133, 135, 137, 139, 141, 143, 147, 149, 151, 153, 154, 155, 157, 159, 163, 167, 170, 171, 172, 183, 186, 187, 188, 190, 191, 192, 196, 201, 202, 208, 209, 217, 220, 221, 222, 223, 225, 226, 227, 231, 232, 233, 234, 235, 238, 240, 245, 246, 248, 249, 251, 252, 258, 262, 263, 264, 265, 267, 273, 275, 276, 277, 278, 281, 320, 331, 338, 339, 341, 342, 343, 344, 345, 347, 348], "input": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 46, 47, 83, 87, 97, 100, 101, 102, 103, 104, 107, 109, 114, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 137, 138, 139, 140, 141, 143, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 170, 171, 173, 174, 176, 177, 178, 179, 182, 183, 186, 187, 188, 190, 191, 192, 193, 194, 199, 200, 201, 202, 209, 210, 211, 212, 213, 218, 220, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 247, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 273, 274, 275, 276, 277, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 305, 309, 314, 323, 331, 332, 333, 336, 337, 338, 339, 342, 343, 347, 348], "output": [2, 3, 4, 13, 14, 16, 17, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 70, 71, 83, 87, 97, 100, 101, 102, 103, 104, 107, 109, 117, 120, 121, 122, 123, 125, 127, 133, 135, 139, 141, 146, 147, 149, 152, 154, 157, 159, 160, 163, 171, 173, 174, 175, 176, 177, 180, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 199, 200, 203, 209, 218, 220, 221, 224, 225, 226, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 245, 246, 247, 248, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 273, 275, 276, 277, 278, 279, 294, 302, 331, 332, 336, 337, 338, 339, 341, 342, 343, 344, 347, 348], "send": [2, 3, 8, 347], "receiv": [2, 3, 32, 40, 83, 87, 101, 107, 154, 194, 281, 332, 336, 338, 341, 343], "spawn": [2, 3, 4, 18, 22, 91, 98, 342], "check_env_spec": [2, 3, 329, 338, 342, 343], "saniti": [2, 3, 7, 163, 338], "utmost": 2, "techniqu": [2, 8, 337, 345], "commonli": [2, 70, 71, 348], "emploi": [2, 202], "realm": 2, "languag": [2, 40], "scarc": 2, "address": [2, 345], "subdomain": 2, "within": [2, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 46, 47, 55, 83, 87, 101, 107, 117, 122, 125, 126, 149, 160, 161, 171, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 199, 200, 203, 204, 205, 207, 210, 211, 213, 218, 224, 225, 227, 228, 229, 231, 234, 239, 242, 249, 253, 273, 331, 343, 347], "facilit": [2, 3, 7, 138, 139, 157, 159, 221, 222, 223, 331, 336, 339, 343], "interact": [2, 4, 5, 7, 8, 13, 14, 16, 18, 19, 20, 21, 55, 232, 236, 336, 338, 342, 343, 348], "extern": [2, 3, 122, 125, 348], "consist": [2, 3, 32, 35, 38, 41, 42, 55, 83, 87, 101, 107, 133, 160, 174, 194, 336, 337, 338, 343, 344, 348], "token": [2, 36, 37, 40, 43, 45, 58], "manner": [2, 87, 139, 157, 331, 336, 337, 338, 341, 343, 345], "handl": [3, 21, 32, 83, 87, 101, 107, 160, 161, 192, 194, 311, 325, 326, 336, 337, 338, 342, 345], "dm": [3, 336, 348], "goal": [3, 4, 150, 336, 337, 338, 339, 342, 343], "abl": [3, 96, 102, 103, 336, 338, 339, 341, 342, 343, 345, 347], "experi": [3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 63, 163, 296, 297, 298, 299, 300, 301, 330, 337, 338, 342, 345], "even": [3, 4, 8, 14, 18, 20, 21, 60, 61, 62, 72, 73, 76, 83, 84, 87, 91, 101, 107, 171, 336, 338, 342, 343, 348], "simul": [3, 5, 7, 8, 104, 109, 112, 172, 196, 331, 336, 338, 342], "box": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 16, 17, 21, 22, 83, 84, 87, 101, 102, 103, 105, 106, 107, 117, 120, 126, 132, 133, 135, 137, 141, 143, 146, 151, 154, 160, 161, 320, 323, 336, 337, 338, 339, 341, 342, 344, 345, 347, 348], "hope": 3, "imit": 3, "nn": [3, 13, 14, 16, 17, 21, 32, 40, 83, 87, 97, 101, 107, 121, 124, 126, 133, 139, 151, 154, 155, 157, 159, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 196, 198, 199, 200, 203, 208, 209, 217, 220, 221, 222, 223, 225, 226, 228, 229, 231, 232, 233, 235, 236, 237, 238, 240, 245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 273, 275, 276, 277, 278, 320, 323, 331, 332, 336, 337, 338, 339, 341, 342, 343, 344, 347], "typic": [3, 4, 8, 32, 83, 87, 101, 107, 126, 150, 232, 246, 260, 262, 265, 331, 332, 333, 338, 342, 343], "organis": [3, 56, 337], "arbitrari": [3, 33, 101, 107, 331, 336, 337, 343], "nest": [3, 26, 28, 32, 34, 36, 39, 48, 60, 61, 65, 76, 83, 87, 101, 107, 117, 149, 152, 171, 275, 276, 277, 278, 279, 333, 337, 338, 342, 343, 345, 347], "attribut": [3, 4, 32, 34, 36, 39, 45, 55, 83, 87, 101, 107, 126, 139, 157, 188, 192, 236, 245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 273, 336, 339, 343], "expect": [3, 4, 7, 26, 32, 38, 44, 45, 69, 83, 87, 97, 100, 101, 104, 107, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 129, 131, 132, 133, 135, 137, 139, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 156, 157, 158, 160, 163, 186, 187, 188, 190, 191, 192, 199, 200, 227, 231, 235, 238, 245, 246, 247, 248, 249, 251, 252, 258, 259, 260, 262, 263, 264, 265, 267, 273, 315, 330, 331, 332, 333, 336, 338, 339, 342, 343, 345, 348], "live": [3, 12, 13, 14, 16, 17, 19, 20, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65, 83, 87, 97, 101, 107, 126], "actual": [3, 4, 7, 17, 52, 53, 55, 56, 57, 83, 87, 101, 107, 160, 314, 332, 336, 338, 342, 343], "do": [3, 4, 7, 57, 87, 109, 140, 160, 161, 170, 200, 201, 222, 275, 333, 336, 337, 338, 339, 341, 342, 343, 345, 347, 348], "retriev": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 65, 68, 83, 87, 101, 107, 118, 123, 126, 135, 170, 172, 173, 196, 232, 236, 239, 245, 246, 247, 249, 259, 262, 263, 265, 267, 273, 275, 276, 277, 278, 320, 327, 333, 337, 338, 343, 348], "care": [3, 8, 83, 87, 101, 107, 154, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 199, 200, 203, 204, 205, 207, 210, 211, 213, 218, 224, 225, 227, 228, 229, 231, 234, 239, 242, 336, 338, 342, 343, 345], "below": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 58, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 173, 174, 186, 189, 190, 194, 200, 216, 235, 308, 336, 337, 338, 339, 343], "parametr": [3, 202, 236, 246, 258, 265, 336, 338], "hardwar": 3, "observation_spec": [3, 83, 87, 97, 101, 107, 114, 117, 118, 119, 120, 121, 122, 123, 125, 126, 129, 131, 132, 133, 135, 137, 139, 142, 146, 149, 150, 151, 152, 153, 154, 156, 157, 160, 172, 188, 192, 196, 315, 323, 336, 338, 341, 342, 343, 348], "compositespec": [3, 28, 49, 83, 85, 87, 97, 101, 107, 114, 122, 123, 124, 125, 127, 133, 141, 147, 149, 151, 154, 167, 171, 172, 196, 220, 224, 232, 238, 239, 329, 336, 338, 339, 342, 343, 348], "pair": [3, 32, 34, 36, 39, 52, 83, 87, 101, 107, 143, 151, 188, 221, 232, 236, 260, 275, 276, 277, 278, 279, 331, 332, 336, 337, 338, 341, 343, 348], "state_spec": [3, 83, 87, 97, 101, 107, 114, 172, 196, 338, 343, 348], "empti": [3, 26, 28, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65, 83, 87, 100, 101, 107, 139, 152, 155, 157, 159, 298, 336, 343], "action_spec": [3, 13, 14, 15, 16, 18, 19, 20, 80, 83, 87, 93, 97, 101, 102, 103, 107, 114, 117, 122, 125, 133, 143, 172, 183, 196, 209, 211, 220, 226, 232, 233, 246, 249, 251, 263, 265, 267, 323, 331, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "reward_spec": [3, 83, 87, 97, 101, 107, 114, 115, 120, 121, 122, 123, 125, 144, 145, 146, 154, 156, 172, 196, 338, 342, 343, 348], "reward": [3, 13, 14, 16, 32, 34, 39, 40, 44, 45, 53, 55, 56, 57, 58, 74, 80, 83, 87, 93, 97, 100, 101, 105, 106, 107, 108, 109, 114, 115, 120, 121, 122, 123, 125, 126, 127, 133, 137, 141, 143, 144, 145, 146, 147, 149, 150, 154, 155, 156, 158, 159, 161, 167, 170, 172, 188, 196, 225, 241, 245, 246, 248, 249, 251, 252, 255, 258, 260, 262, 263, 264, 265, 267, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 304, 305, 307, 309, 327, 332, 333, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "done_spec": [3, 83, 87, 101, 107, 122, 123, 125, 126, 154, 171, 338, 342, 343, 348], "flag": [3, 8, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65, 109, 231, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 331, 342, 343, 344], "section": [3, 4, 186, 190, 337, 342], "termin": [3, 7, 32, 40, 52, 53, 55, 56, 57, 83, 87, 101, 102, 103, 105, 106, 107, 108, 109, 126, 171, 172, 188, 192, 196, 237, 245, 246, 248, 249, 251, 252, 258, 262, 263, 264, 265, 267, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "input_spec": [3, 83, 87, 97, 101, 107, 121, 122, 123, 124, 135, 137, 141, 146, 147, 149, 150, 151, 154, 155, 156, 158, 343], "full_action_spec": [3, 83, 87, 101, 107, 172, 196, 342], "full_state_spec": [3, 83, 87, 101, 107, 172, 196], "lock": [3, 26, 28, 34, 36, 39, 83, 87, 101, 107, 151, 161, 343], "modifi": [3, 7, 8, 26, 28, 32, 45, 83, 87, 101, 107, 121, 129, 133, 139, 151, 154, 155, 157, 159, 225, 231, 235, 314, 320, 336, 337, 338, 342, 343], "directli": [3, 4, 8, 65, 83, 87, 97, 101, 107, 143, 160, 260, 327, 331, 338, 342, 343, 345], "output_spec": [3, 83, 87, 101, 107, 121, 122, 123, 127, 133, 141, 147, 149, 154, 155, 343], "full_observation_spec": [3, 83, 87, 101, 107, 172, 196], "full_reward_spec": [3, 83, 87, 101, 107, 342], "full_done_spec": [3, 83, 87, 101, 107, 171, 342], "importantli": [3, 232, 236], "4": [3, 7, 24, 26, 27, 28, 33, 34, 35, 36, 38, 39, 40, 41, 42, 52, 53, 54, 55, 56, 57, 65, 70, 71, 81, 82, 83, 86, 87, 92, 94, 95, 96, 97, 101, 105, 106, 107, 114, 117, 126, 143, 149, 150, 161, 172, 173, 174, 175, 176, 177, 180, 183, 184, 185, 186, 187, 190, 191, 193, 194, 196, 199, 200, 203, 204, 205, 206, 207, 208, 209, 217, 220, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 238, 240, 245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 273, 293, 331, 335, 336, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348], "action_s": 3, "help": [3, 4, 32, 83, 87, 101, 107, 126, 330, 332, 336, 337, 338, 339, 342], "prealloc": [3, 343], "With": [3, 96, 150, 333, 336, 337, 342, 345, 348], "necessarili": [3, 348], "0s": [3, 55, 151, 339], "stateless": [3, 154, 260, 336, 343, 348], "step_and_maybe_reset": [3, 83, 87, 101, 107], "partial": [3, 83, 87, 101, 107, 116, 117, 150, 151, 152, 311, 339], "step_mdp": [3, 188, 192, 329, 339, 343, 347, 348], "done_kei": [3, 83, 87, 101, 107, 126, 143, 149, 170, 342], "assign": [3, 4, 13, 14, 32, 34, 36, 39, 83, 87, 101, 107, 155, 248, 249, 251, 265, 338, 342, 345], "_reset": [3, 83, 87, 97, 101, 107, 114, 117, 122, 125, 171, 172, 196], "data_": [3, 83, 87, 101, 107], "i": [3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 35, 38, 42, 43, 60, 61, 63, 71, 76, 83, 87, 101, 107, 139, 143, 146, 155, 159, 187, 191, 203, 209, 227, 232, 234, 235, 236, 275, 276, 277, 278, 302, 314, 336, 337, 338, 339, 342, 343, 345, 347, 348], "n": [3, 6, 7, 24, 27, 32, 33, 40, 83, 87, 101, 107, 117, 124, 129, 156, 186, 187, 190, 196, 231, 236, 245, 252, 260, 274, 308, 331, 333, 337, 338, 339, 342, 345, 348], "append": [3, 8, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65, 83, 84, 87, 101, 107, 120, 143, 151, 160, 187, 188, 191, 192, 226, 233, 336, 337, 338, 339, 342, 343, 344, 345, 347], "set_se": [3, 13, 14, 16, 17, 21, 80, 83, 87, 93, 97, 101, 107, 135, 141, 146, 150, 152, 155, 343, 347, 348], "seed": [3, 13, 14, 16, 17, 21, 56, 81, 83, 87, 97, 101, 102, 103, 107, 108, 109, 114, 122, 125, 155, 163, 311], "determinist": [3, 32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 175, 184, 204, 211, 220, 229, 235, 236, 239, 246, 331, 336, 337, 339, 343, 348], "preced": [3, 193, 339], "without": [3, 7, 9, 32, 40, 52, 55, 70, 71, 83, 87, 101, 107, 109, 114, 122, 125, 153, 186, 187, 190, 191, 222, 223, 245, 246, 248, 249, 251, 252, 258, 262, 263, 264, 265, 267, 274, 275, 276, 277, 278, 279, 323, 330, 331, 336, 337, 338, 342, 343, 345, 348], "risk": [3, 140], "overlap": [3, 41], "consecut": [3, 69, 91, 192, 231, 339, 342, 348], "reproduc": [3, 117, 163, 336, 338, 342], "maximum": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 40, 43, 45, 58, 60, 61, 62, 76, 83, 87, 101, 107, 124, 144, 149, 150, 152, 214, 215, 216, 239, 246, 252, 258, 260, 261, 265, 308, 336, 337, 338, 339, 342, 345], "max_step": [3, 13, 83, 87, 97, 101, 107, 108, 109, 149, 342, 347, 348], "tensordictmodul": [3, 13, 14, 16, 17, 20, 21, 40, 97, 116, 133, 183, 188, 192, 196, 208, 209, 217, 218, 221, 222, 223, 224, 225, 226, 229, 231, 232, 233, 234, 235, 237, 238, 239, 241, 246, 248, 252, 254, 255, 256, 258, 260, 263, 265, 267, 273, 274, 275, 276, 277, 278, 307, 323, 331, 336, 338, 339, 341, 342, 343, 344], "compat": [3, 7, 11, 18, 19, 32, 34, 36, 39, 52, 65, 68, 70, 71, 72, 83, 87, 89, 100, 101, 107, 117, 149, 157, 161, 186, 187, 188, 190, 191, 192, 233, 245, 246, 248, 249, 251, 252, 258, 260, 262, 263, 264, 265, 267, 270, 336, 339, 345, 347], "mark": [3, 16, 57, 83, 87, 101, 107, 188, 192], "trail": [3, 161], "treat": 3, "figur": [3, 336, 338, 339, 342, 343, 348], "summar": [3, 343], "brief": [3, 338], "deliveri": 3, "design": [3, 13, 14, 32, 33, 68, 73, 78, 83, 87, 101, 107, 117, 140, 155, 225, 245, 246, 247, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 273, 336, 337, 338, 339, 341, 342, 343, 345, 348], "metaclass": 3, "ensur": [3, 32, 35, 41, 63, 69, 83, 87, 101, 107, 117, 139, 149, 157, 161, 226, 331, 337, 338, 343, 345], "everi": [3, 8, 17, 26, 28, 32, 33, 72, 83, 87, 101, 107, 149, 150, 161, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 199, 200, 203, 204, 205, 207, 210, 211, 213, 218, 224, 225, 227, 228, 229, 231, 234, 239, 242, 311, 333, 336, 337, 338, 339, 342, 343], "flank": [3, 339], "dual": 3, "strictli": [3, 8, 32, 83, 87, 101, 107, 155, 265, 336, 338], "refer": [3, 7, 8, 9, 21, 32, 40, 83, 87, 101, 107, 155, 161, 172, 183, 184, 196, 197, 198, 199, 204, 205, 210, 211, 227, 245, 253, 254, 255, 256, 262, 265, 275, 280, 288, 335, 336, 338, 342], "union": [3, 11, 13, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 63, 83, 87, 101, 107, 114, 124, 126, 132, 135, 139, 140, 143, 145, 157, 159, 161, 170, 173, 174, 176, 177, 178, 179, 181, 183, 185, 193, 194, 197, 198, 199, 200, 201, 202, 206, 208, 209, 214, 215, 216, 217, 235, 251, 252, 257, 263, 266, 288, 294, 305, 307, 308, 316, 317, 320, 321, 323, 324, 325, 326, 327], "interpret": [3, 337], "last": [3, 4, 11, 13, 14, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 46, 47, 52, 69, 71, 83, 87, 101, 107, 116, 129, 135, 140, 150, 152, 153, 173, 174, 186, 188, 190, 192, 193, 194, 197, 198, 204, 212, 218, 224, 225, 228, 229, 236, 337, 338, 339, 342, 343, 344, 345, 347, 348], "indic": [3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 65, 66, 68, 69, 70, 71, 74, 75, 77, 78, 83, 87, 101, 107, 117, 118, 149, 150, 151, 152, 155, 171, 173, 174, 194, 197, 198, 200, 231, 233, 234, 242, 245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 273, 315, 327, 330, 333, 338, 339, 343, 345, 348], "truncat": [3, 13, 14, 16, 18, 19, 20, 21, 37, 43, 45, 52, 53, 55, 56, 57, 70, 71, 83, 87, 101, 102, 103, 107, 126, 127, 134, 143, 149, 171, 188, 192, 216, 281, 336, 338, 339, 341, 344, 345, 347, 348], "carri": [3, 21, 45, 83, 87, 101, 107, 151, 260, 337, 339, 342, 343, 345], "assess": [3, 110, 336], "split_trajectori": [3, 13, 14, 16, 17, 18, 19, 20, 21, 55, 70, 71, 329], "adjac": [3, 23, 129], "reli": [3, 186, 187, 190, 191, 245, 332, 336, 338, 343, 348], "traj_id": [3, 13, 14, 16, 23, 143, 339, 345, 347], "junction": 3, "miss": [3, 4, 6, 7, 11, 26, 32, 83, 87, 101, 107, 155, 170, 237, 238, 265, 330, 336, 339], "context": [3, 5, 8, 32, 83, 84, 87, 100, 101, 107, 151, 156, 200, 201, 225, 271, 272, 275, 276, 277, 278, 280, 288, 307, 331, 332, 336, 337, 338, 342, 343, 344, 345], "through": [3, 4, 5, 8, 11, 16, 18, 20, 21, 26, 28, 55, 91, 96, 101, 102, 103, 107, 122, 125, 140, 194, 208, 232, 236, 237, 238, 242, 275, 276, 277, 278, 331, 336, 337, 338, 341, 342, 343, 344, 345, 348], "inittrack": [3, 188, 192, 336, 339], "tutori": [3, 335, 336, 337, 339, 340, 341, 343, 344, 345, 346, 348], "inform": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 43, 55, 83, 84, 87, 90, 101, 107, 173, 174, 194, 200, 332, 333, 336, 337, 338, 339, 342, 343, 345], "scratch": [3, 8, 337, 343], "better": [3, 8, 9, 188, 192, 332, 338, 343], "intens": [3, 8], "gym3": 3, "envpool": [3, 98, 99], "interfac": [3, 90, 100, 194, 201, 331, 336, 338, 343, 345], "simultan": [3, 20, 101, 107, 343], "often": [3, 8, 257, 311, 336, 337, 343, 345, 348], "competit": [3, 342], "advantag": [3, 8, 185, 245, 247, 259, 262, 264, 275, 276, 277, 278, 279, 280, 282, 284, 286, 288, 289, 291, 332, 333, 336, 337, 338, 339, 342, 343, 348], "scale": [3, 4, 52, 117, 133, 135, 145, 150, 153, 184, 189, 203, 210, 211, 215, 216, 221, 222, 223, 232, 236, 238, 245, 246, 258, 262, 263, 264, 265, 309, 315, 320, 327, 331, 336, 337, 338, 339, 342, 347], "varieti": 3, "own": [3, 13, 14, 17, 22, 32, 83, 87, 101, 102, 103, 107, 337, 338, 342, 343], "As": [3, 4, 83, 87, 96, 101, 102, 103, 107, 143, 236, 275, 331, 336, 337, 338, 339, 342, 343, 344, 345, 347, 348], "inherit": [3, 195, 260, 333, 338, 342], "serialenv": [3, 83, 87, 101, 151, 329, 348], "Of": [3, 7, 330, 343, 348], "cours": [3, 4, 330, 338, 343, 348], "correspond": [3, 4, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 47, 55, 57, 63, 83, 87, 97, 98, 101, 107, 139, 151, 155, 159, 161, 188, 190, 192, 197, 198, 228, 229, 231, 232, 236, 249, 252, 265, 273, 275, 276, 277, 278, 279, 336, 337, 338, 342, 343, 344], "count": [3, 84, 149, 231, 307, 311, 314, 336, 337, 338, 339, 345, 348], "make_env": [3, 109, 161, 316, 317, 336, 337, 348], "gymenv": [3, 5, 13, 14, 16, 17, 21, 22, 83, 84, 87, 89, 101, 107, 117, 120, 121, 126, 132, 133, 135, 137, 141, 142, 143, 146, 150, 151, 152, 154, 155, 161, 188, 192, 320, 323, 329, 331, 336, 337, 338, 339, 344, 345, 347, 348], "v1": [3, 13, 14, 16, 17, 21, 22, 52, 53, 83, 84, 87, 98, 101, 107, 117, 120, 127, 132, 133, 135, 141, 143, 146, 149, 150, 151, 152, 154, 188, 192, 270, 284, 285, 286, 287, 289, 290, 291, 292, 331, 337, 339, 343, 345, 347, 348], "from_pixel": [3, 81, 82, 117, 142, 320, 336, 337, 339, 344, 345, 347, 348], "9": [3, 7, 32, 35, 38, 41, 56, 57, 71, 74, 96, 102, 103, 150, 161, 245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 268, 273, 332, 335, 336, 337, 338, 342, 343, 345, 346], "81": [3, 337, 343], "must": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 53, 55, 56, 57, 58, 60, 61, 62, 70, 71, 72, 73, 76, 83, 84, 87, 101, 102, 103, 107, 117, 120, 126, 130, 133, 135, 137, 147, 150, 151, 152, 155, 156, 161, 173, 174, 183, 188, 192, 194, 197, 198, 199, 200, 209, 220, 226, 227, 232, 233, 234, 235, 236, 239, 240, 245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 266, 267, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 320, 336, 337, 338, 339, 341, 343, 345, 347], "print": [3, 6, 7, 13, 14, 16, 21, 22, 24, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 53, 55, 56, 57, 58, 65, 70, 71, 74, 79, 80, 81, 82, 83, 84, 86, 87, 88, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 105, 106, 107, 108, 109, 111, 113, 117, 118, 122, 123, 124, 125, 132, 135, 141, 143, 146, 149, 151, 152, 153, 161, 167, 170, 171, 173, 174, 180, 183, 188, 194, 197, 198, 199, 200, 203, 206, 209, 220, 221, 222, 223, 225, 226, 228, 229, 231, 233, 235, 238, 240, 260, 320, 323, 331, 333, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "simpli": [3, 6, 34, 36, 39, 45, 73, 78, 127, 147, 160, 260, 331, 332, 336, 338, 342, 348], "b": [3, 7, 8, 23, 26, 28, 34, 36, 39, 40, 41, 42, 74, 186, 187, 190, 191, 199, 200, 201, 202, 208, 217, 239, 275, 276, 277, 278, 279, 281, 294, 331, 337, 344, 345], "c": [3, 6, 7, 26, 34, 36, 39, 41, 42, 54, 135, 153, 190, 191, 337, 345], "d": [3, 35, 54, 56, 57, 58, 63, 186, 190, 232, 236, 347], "get": [3, 4, 6, 7, 8, 9, 34, 35, 36, 38, 39, 52, 55, 60, 61, 70, 71, 72, 73, 74, 76, 84, 101, 107, 114, 116, 118, 122, 124, 125, 133, 135, 140, 150, 151, 153, 161, 220, 228, 229, 232, 233, 236, 275, 276, 277, 278, 279, 298, 331, 336, 337, 338, 339, 342, 343, 345, 347, 348], "forc": [3, 6, 7, 13, 14, 18, 20, 21, 53, 55, 56, 57, 337, 342, 343], "privat": [3, 83, 87, 101, 107, 160, 343, 348], "absenc": 3, "total": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 30, 31, 33, 71, 247, 259, 262, 302, 304, 307, 311, 314, 315, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348], "unless": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 55, 69, 83, 87, 101, 107, 338], "wa": [3, 5, 7, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65, 69, 83, 87, 101, 107, 155, 171, 190, 257, 266, 281, 332, 337, 338, 341, 345, 347], "abov": [3, 7, 32, 83, 87, 101, 107, 189, 215, 216, 244, 332, 333, 336, 338, 342, 343, 348], "deal": [3, 336, 338, 342, 345], "proper": [3, 4, 6, 7, 275, 276, 277, 278, 337, 338, 342, 345], "behav": [3, 89, 97, 186, 190, 206, 258, 344], "accord": [3, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 39, 40, 65, 68, 135, 145, 189, 201, 210, 215, 216, 273, 331, 343, 345], "develop": [3, 4, 7, 91, 336, 347], "inner": [3, 83, 87, 101, 107, 124, 333, 337, 338, 342, 348], "logic": 3, "nevertheless": [3, 338, 345], "kept": [3, 13, 14, 16, 17, 69, 71, 124, 147, 154, 163, 170, 189, 215, 216], "mind": [3, 55, 70, 71, 342], "desig": 3, "previou": [3, 4, 10, 32, 40, 41, 151, 171, 186, 190, 211, 225, 338, 339, 343, 348], "wherev": 3, "expos": [3, 104, 122, 125, 237, 337], "modif": [3, 5, 26, 28, 32, 83, 87, 101, 107, 129, 171, 260, 338, 343], "lost": [3, 8, 160], "eras": [3, 83, 87, 101, 107, 155], "intern": [3, 334], "face": [3, 5, 8, 9, 348], "NOT": [3, 140], "outsid": [3, 16, 342, 343], "keep": [3, 4, 7, 8, 14, 42, 69, 74, 101, 107, 135, 139, 159, 161, 170, 231, 304, 311, 336, 337, 338, 339, 342, 343, 345, 347, 348], "right": [3, 6, 7, 40, 193, 337, 338, 342, 343, 348], "preliminari": 3, "warranti": 3, "affect": [3, 8, 32, 83, 87, 101, 107, 154, 155, 163, 275, 276, 277, 278], "assumpt": [3, 343, 345], "made": [3, 32, 60, 61, 62, 72, 73, 76, 83, 87, 101, 107, 231, 249, 273, 336, 337, 339, 342, 344], "preclud": 3, "presenc": 3, "annihil": 3, "effect": [3, 26, 32, 55, 65, 68, 70, 71, 83, 87, 101, 107, 117, 155, 311, 336, 345, 348], "reason": [3, 4, 8, 32, 55, 83, 87, 101, 102, 103, 107, 139, 157, 192, 332, 336, 337, 338, 343, 345], "root": [3, 26, 28, 52, 53, 55, 56, 57, 117, 152, 170, 189, 215, 216, 339, 342, 343, 344, 345, 348], "known": [3, 5, 7, 8, 282, 283, 336, 337], "advanc": [3, 21, 35, 38, 41, 42, 345], "explicitli": [3, 4, 337, 339, 342, 345], "place": [3, 13, 14, 16, 17, 26, 28, 32, 34, 36, 39, 60, 61, 65, 68, 76, 83, 84, 87, 101, 107, 121, 126, 139, 151, 154, 155, 157, 159, 160, 161, 171, 225, 235, 308, 313, 314, 337, 338, 342, 343, 345], "superse": 3, "pettingzoowrapp": [3, 329], "group": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 83, 87, 96, 101, 102, 103, 107, 109, 110, 331, 337, 338, 342], "associ": [3, 32, 34, 36, 39, 83, 87, 101, 107, 210, 327, 336, 345], "environemtn": 3, "__not__": 3, "constrain": [3, 133, 188, 192, 262], "li": 3, "fact": [3, 7, 8, 336, 338, 342, 343, 344, 345, 348], "predict": [3, 32, 40, 184, 195, 196, 225, 241, 251, 253, 255, 256, 274, 331, 336, 337], "know": [3, 4, 9, 35, 38, 41, 42, 224, 263, 307, 336, 337, 338, 339, 342, 345], "meaning": 3, "could": [3, 4, 6, 337, 338, 342, 344, 348], "perfectli": [3, 333, 336, 343], "case": [3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 32, 35, 41, 53, 55, 56, 57, 63, 83, 87, 101, 107, 122, 123, 125, 153, 155, 163, 192, 194, 200, 232, 235, 236, 238, 239, 244, 245, 246, 248, 249, 251, 252, 258, 262, 263, 264, 265, 267, 275, 276, 277, 278, 302, 313, 325, 326, 327, 331, 333, 336, 337, 338, 339, 342, 343, 345, 348], "meaningless": 3, "discard": [3, 45, 52, 53, 87, 157, 170, 293, 345, 348], "val": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 347], "agent0": 3, "agent1": 3, "overridden": [3, 53, 55, 56, 57, 83, 87, 101, 107, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 199, 200, 203, 204, 205, 207, 210, 211, 213, 218, 224, 225, 227, 228, 229, 231, 234, 239, 242, 339], "overrid": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 38, 44, 46, 47, 83, 87, 101, 107, 327, 331], "elimin": 3, "field": [3, 13, 14, 16, 17, 26, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 53, 55, 56, 57, 60, 61, 76, 80, 83, 87, 93, 96, 97, 100, 101, 102, 103, 105, 106, 107, 108, 109, 122, 125, 126, 127, 137, 141, 143, 147, 149, 151, 155, 170, 172, 183, 188, 192, 196, 208, 209, 217, 220, 221, 222, 223, 225, 226, 227, 231, 232, 233, 234, 235, 238, 240, 245, 246, 248, 249, 251, 252, 258, 262, 263, 264, 265, 267, 273, 315, 320, 330, 331, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "bool": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 65, 68, 69, 70, 71, 80, 81, 82, 83, 84, 85, 87, 93, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 114, 117, 118, 122, 124, 125, 126, 127, 129, 133, 134, 135, 137, 139, 141, 143, 145, 147, 149, 151, 153, 155, 156, 157, 159, 161, 163, 170, 171, 172, 173, 174, 176, 177, 186, 187, 188, 189, 190, 191, 192, 194, 196, 199, 200, 201, 202, 215, 216, 220, 226, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 270, 273, 275, 276, 277, 278, 281, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 304, 305, 307, 308, 309, 311, 320, 327, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "500": [3, 336, 337, 343, 347, 348], "uint8": [3, 34, 36, 39, 47, 55, 126, 137, 153, 337, 344, 345, 347, 348], "none": [3, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 68, 70, 71, 72, 73, 74, 76, 83, 84, 87, 96, 97, 101, 102, 103, 107, 108, 109, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 129, 131, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 157, 159, 161, 162, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186, 187, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 238, 239, 240, 245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 261, 262, 263, 264, 265, 266, 267, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 305, 306, 307, 308, 309, 310, 311, 315, 316, 317, 320, 323, 325, 326, 327, 331, 333, 336, 337, 338, 339, 342, 343, 345, 347, 348], "is_shar": [3, 13, 14, 16, 26, 34, 36, 37, 39, 40, 41, 42, 43, 45, 53, 55, 56, 57, 58, 60, 61, 76, 80, 83, 87, 93, 96, 97, 100, 101, 102, 103, 105, 106, 107, 108, 109, 122, 125, 126, 127, 137, 141, 143, 147, 149, 151, 161, 170, 172, 183, 188, 192, 196, 208, 209, 217, 220, 221, 222, 223, 225, 226, 227, 231, 232, 233, 234, 235, 238, 240, 245, 246, 248, 249, 251, 252, 258, 262, 263, 264, 265, 267, 273, 320, 331, 338, 339, 341, 342, 343, 344, 345, 347, 348], "launch": [3, 13, 14, 18, 19, 20, 22, 101, 107], "bottleneck": [3, 8], "so": [3, 4, 6, 7, 10, 32, 34, 36, 39, 40, 83, 87, 101, 107, 151, 161, 237, 238, 338, 339, 342, 343, 348], "great": [3, 7, 8, 347], "speedup": [3, 8, 348], "precis": [3, 122, 125, 170, 187, 191, 336, 338], "misspecifi": 3, "caus": [3, 7, 8, 60, 61, 76, 83, 87, 91, 101, 107, 140, 348], "breakag": 3, "rais": [3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 55, 83, 87, 101, 107, 110, 117, 128, 134, 143, 150, 151, 152, 155, 163, 224, 228, 229, 231, 265, 336, 338, 342, 345], "mismatch": [3, 337], "mostli": [3, 17, 332, 345, 348], "purpos": [3, 7, 117, 186, 323, 336, 338, 339, 342, 344, 348], "want": [3, 6, 7, 8, 71, 135, 245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 273, 331, 336, 337, 338, 339, 342, 343, 344, 345, 347, 348], "subprocess": [3, 13, 14, 84, 101, 107], "addit": [3, 4, 32, 52, 83, 87, 98, 101, 107, 121, 139, 151, 154, 155, 157, 159, 186, 224, 225, 235, 244, 260, 275, 332, 336, 337, 342, 345], "multithread": [3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 98, 99, 345], "multithreadedenv": [3, 329], "underneath": 3, "higher": [3, 4, 120, 239, 336, 337, 338, 345, 348], "restrict": [3, 337, 344, 345, 348], "flexibl": [3, 9, 98, 268, 332, 333, 345, 348], "cover": [3, 330, 338, 343, 347], "popular": [3, 331, 339, 342], "atari": [3, 4, 117, 348], "classic": [3, 97, 103, 337], "benchmark_batched_env": 3, "py": [3, 113, 208, 217, 333, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348], "pipelin": [3, 7, 331, 338], "seamlessli": [3, 343], "infrastructur": [3, 342], "view": [3, 8, 27, 32, 33, 55, 56, 83, 87, 101, 107, 114, 183, 186, 190, 194, 343, 345, 347, 348], "core": [3, 8, 320, 333, 339, 347], "decis": [3, 175, 207, 225, 250, 261, 339, 342, 345, 348], "act": [3, 4, 70, 71, 102, 103, 200, 246, 248, 258, 263, 265, 267, 339, 342], "world": [3, 5, 97, 241, 255, 342, 343, 348], "paradigm": [3, 17, 342], "decpodp": 3, "markov": [3, 348], "game": [3, 4, 5], "per": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 91, 101, 102, 103, 120, 146, 184, 199, 200, 228, 311, 325, 326, 336, 337, 338, 339, 342, 345, 347], "accommod": [3, 13, 14, 16, 17], "thank": [3, 336], "carrier": [3, 338, 339, 345], "particular": [3, 32, 45, 52, 83, 87, 101, 107, 155, 332, 333, 337, 339, 341, 342, 345], "thu": [3, 259, 342], "hand": [3, 7, 21, 342, 343], "let": [3, 6, 7, 32, 43, 83, 87, 101, 102, 103, 107, 117, 188, 192, 199, 200, 226, 307, 332, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "understand": [3, 8, 336, 337, 342], "go": [3, 7, 96, 140, 143, 225, 281, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "vma": [3, 108, 109, 342], "robot": [3, 5, 7, 55, 139, 157, 159, 342], "what": [3, 8, 35, 44, 83, 87, 101, 107, 126, 151, 170, 233, 330, 331, 332, 337, 338, 339, 342, 343, 344, 345, 347, 348], "vmasenv": [3, 329, 342], "balanc": [3, 336, 337], "num_env": [3, 21, 90, 108, 109, 342], "n_agent": [3, 108, 109, 199, 200, 208, 217, 273, 342], "info": [3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65, 68, 70, 71, 83, 87, 101, 102, 103, 104, 105, 106, 107, 108, 109, 157, 160, 162, 342, 345], "ground_rew": 3, "pos_rew": [3, 342], "16": [3, 32, 56, 71, 83, 87, 101, 107, 117, 336, 337, 339, 343, 345, 347], "style": [3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57], "relat": [3, 4, 10, 35, 129, 245, 246, 248, 249, 251, 252, 258, 262, 263, 264, 265, 267, 337, 343], "vari": [3, 102, 103, 140, 342], "creation": [3, 101, 107, 336, 348], "info_spec": 3, "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 33, 83, 87, 101, 107, 114, 171, 249, 252, 273, 329, 338, 342, 348], "you": [3, 5, 6, 7, 8, 9, 10, 32, 43, 83, 87, 91, 96, 101, 102, 103, 105, 106, 107, 113, 161, 190, 330, 331, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "simpl": [3, 9, 32, 33, 83, 87, 101, 107, 176, 236, 249, 251, 260, 264, 275, 331, 332, 336, 337, 338, 342, 348], "composit": [3, 26, 28, 68, 73, 78, 83, 87, 101, 107, 338, 343], "prefix": [3, 23, 32, 34, 36, 39, 45, 83, 87, 101, 107, 155, 260, 265, 293, 339, 348], "exactli": [3, 32, 83, 87, 89, 101, 107, 155, 186, 190, 265, 336, 339, 342], "action_kei": [3, 15, 83, 87, 101, 107, 114, 124, 170, 172, 195, 196, 224, 228, 229, 231, 342], "reward_kei": [3, 83, 87, 101, 107, 170, 172, 196, 305, 309, 342], "automat": [3, 5, 57, 60, 61, 65, 76, 83, 87, 101, 102, 103, 107, 122, 125, 135, 160, 173, 220, 232, 331, 336, 338, 342, 343, 345, 347], "sure": [3, 4, 7, 54, 72, 91, 143, 226, 327, 331, 336, 338, 339, 342, 343, 345, 347, 348], "set_kei": [3, 126, 245, 247, 249, 252, 253, 258, 259, 260, 262, 263, 264, 265, 273, 279, 342], "awai": [3, 338, 342], "eas": [3, 342], "leaf": [3, 26, 28, 83, 87, 101, 107, 149, 236], "would": [3, 32, 40, 83, 87, 101, 107, 186, 188, 190, 192, 194, 199, 333, 337, 338, 339, 343, 345, 348], "full": [3, 83, 87, 101, 107, 188, 192, 227, 302, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "raw": [3, 4, 40, 189, 215, 216, 337, 343], "torchvis": [3, 139, 159, 347, 348], "transformedenv": [3, 13, 83, 84, 87, 101, 107, 114, 117, 120, 121, 122, 125, 126, 127, 129, 132, 133, 134, 135, 137, 141, 142, 143, 146, 147, 149, 150, 151, 152, 154, 161, 188, 192, 320, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "built": [3, 5, 7, 65, 245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 268, 273, 321, 323, 324, 327, 336, 337, 338, 339, 345, 348], "base_env": [3, 83, 87, 101, 107, 114, 120, 122, 124, 125, 133, 137, 142, 149, 151, 152, 336, 337, 338, 344, 347, 348], "appar": [3, 304], "bring": [3, 338, 348], "signific": [3, 5, 8, 338, 348], "kind": [3, 38, 44, 170, 345], "consult": 3, "interest": [3, 232, 236, 331, 337, 338, 342, 343, 348], "resize_par": 3, "easi": [3, 5, 54, 224, 228, 229, 231, 331, 332, 336, 337, 338, 342, 344, 345, 348], "graph": [3, 4, 8, 271, 272, 336, 343], "inv": [3, 120, 124, 137, 143, 343], "appli": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 43, 44, 46, 47, 52, 53, 54, 55, 56, 57, 65, 83, 87, 101, 107, 114, 116, 117, 118, 121, 122, 123, 124, 126, 127, 128, 129, 130, 132, 133, 134, 138, 140, 141, 143, 146, 147, 149, 150, 151, 152, 154, 155, 157, 158, 160, 161, 186, 190, 215, 226, 275, 306, 333, 336, 337, 338, 343, 347, 348], "revers": [3, 190], "order": [3, 16, 32, 33, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65, 69, 71, 83, 87, 101, 107, 122, 125, 137, 155, 220, 226, 235, 237, 238, 240, 245, 246, 248, 252, 258, 262, 263, 264, 265, 267, 337, 342], "chain": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 121, 124, 173, 174, 238, 348], "taken": [3, 83, 87, 101, 107, 142, 197, 198, 229, 332, 336, 338, 339, 342, 343], "invers": [3, 4, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65, 117, 122, 125, 135, 143, 243, 258, 343], "in_keys_inv": [3, 120, 122, 125, 135, 136, 137, 141, 143, 154, 336, 341, 343, 348], "append_transform": [3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65, 116, 139, 151, 157, 336, 339, 343, 347, 348], "doubletofloat": [3, 320, 336, 338, 341], "float32": [3, 13, 14, 16, 26, 34, 35, 36, 39, 40, 41, 42, 44, 45, 53, 55, 57, 60, 61, 63, 76, 80, 83, 87, 93, 97, 100, 101, 105, 106, 107, 108, 109, 122, 125, 126, 127, 135, 137, 141, 143, 147, 149, 151, 153, 167, 170, 172, 183, 188, 192, 196, 208, 209, 217, 220, 221, 222, 223, 225, 226, 231, 232, 233, 234, 235, 238, 240, 245, 246, 248, 249, 251, 252, 258, 262, 263, 264, 265, 267, 273, 320, 331, 338, 339, 341, 342, 343, 344, 345, 347, 348], "float64": [3, 32, 53, 55, 56, 83, 87, 101, 107, 121, 122, 125, 139, 151, 154, 155, 157, 159, 235, 341, 348], "regist": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 83, 87, 101, 107, 122, 125, 126, 155, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 199, 200, 203, 204, 205, 207, 210, 211, 213, 218, 224, 225, 227, 228, 229, 231, 234, 239, 242, 245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 273, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 333, 336, 338, 345], "manipul": [3, 4, 8, 139, 157], "third_transform": 3, "replac": [3, 6, 7, 26, 28, 32, 55, 70, 71, 124, 126, 170, 228, 331, 345], "unexpect": [3, 32, 83, 87, 101, 107, 155, 265, 348], "behviour": 3, "fortun": [3, 339], "alreadi": [3, 8, 11, 32, 34, 36, 39, 45, 83, 87, 101, 107, 151, 171, 236, 275, 276, 277, 278, 336, 338, 342], "chang": [3, 5, 7, 32, 35, 38, 41, 42, 60, 61, 62, 69, 72, 73, 76, 83, 87, 101, 107, 121, 122, 123, 125, 127, 133, 141, 147, 149, 154, 155, 161, 190, 245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 273, 332, 336, 338, 339, 342, 343, 344, 345, 348], "happen": [3, 83, 87, 101, 107, 224, 337, 344, 348], "catfram": [3, 337], "hold": [3, 271, 272, 343, 345], "notic": [3, 117, 338, 343], "parenthood": 3, "henc": [3, 35, 140, 171, 199, 331, 336, 338, 342, 343], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 343], "discret": [3, 24, 27, 30, 31, 33, 47, 83, 87, 101, 102, 103, 107, 109, 124, 206, 209, 251, 252, 253, 331, 337, 338, 342, 348], "might": [3, 34, 36, 37, 39, 298, 330, 336, 348], "throughout": [3, 245, 246, 247, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 273, 338, 348], "action_mask": [3, 102, 103, 105, 106, 114], "unavail": [3, 102, 103], "probabl": [3, 4, 8, 40, 65, 68, 181, 183, 186, 188, 190, 192, 194, 197, 198, 206, 216, 228, 232, 236, 331, 337, 347], "categor": [3, 27, 31, 33, 102, 103, 109, 114, 126, 183, 206, 209, 226, 227, 232, 233, 234, 249, 252, 273, 339], "probabilistictensordictmodul": [3, 133, 236, 237, 347], "tensordictsequenti": [3, 188, 192, 226, 228, 237, 331, 336, 339, 341, 344, 347], "maskedcategor": [3, 198, 329], "linear": [3, 13, 14, 16, 17, 21, 32, 83, 87, 97, 101, 107, 121, 133, 139, 151, 154, 155, 157, 159, 172, 173, 174, 183, 194, 196, 199, 200, 201, 202, 203, 209, 210, 211, 220, 221, 222, 223, 228, 229, 230, 231, 232, 233, 235, 238, 240, 245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 273, 275, 276, 277, 278, 323, 331, 337, 341, 344, 347], "in_feat": 3, "out_feat": 3, "logit": [3, 36, 40, 197, 198, 206, 227, 232, 252, 331], "dist": [3, 10, 197, 198, 206], "distribution_class": [3, 133, 221, 222, 223, 225, 232, 236, 238, 245, 246, 252, 258, 262, 263, 264, 265, 331, 336, 338, 342, 347], "wrap": [3, 5, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 53, 83, 87, 101, 102, 103, 107, 109, 163, 188, 192, 218, 221, 222, 223, 224, 229, 231, 233, 241, 273, 331, 336, 337, 338, 339, 342, 348], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 114, 140], "add": [3, 4, 6, 21, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 59, 65, 66, 74, 75, 77, 78, 83, 87, 101, 107, 117, 133, 188, 192, 201, 230, 245, 306, 338, 339, 342, 343, 345, 347], "enviorn": [3, 102, 103, 109, 342], "itself": [3, 32, 83, 87, 101, 107, 111, 260, 338], "log": [3, 4, 8, 40, 181, 182, 183, 197, 198, 206, 216, 226, 227, 232, 236, 245, 246, 247, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 273, 304, 305, 307, 311, 323, 331, 332, 333, 336, 337, 338, 342, 343, 347], "mission": 3, "irrespect": [3, 235, 236], "dmcontrol": [3, 336], "jumanji": [3, 92, 93], "natur": [3, 336, 339], "special": [3, 331, 336, 339, 348], "framework": [3, 4, 9, 22, 97, 186, 347, 348], "Its": [3, 32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 161, 235, 279], "success": [3, 53, 117, 154, 228, 337, 343, 345, 347], "been": [3, 5, 7, 8, 17, 18, 20, 21, 40, 65, 69, 83, 87, 91, 101, 107, 133, 149, 150, 154, 186, 190, 224, 229, 231, 336, 337, 338, 339, 341, 342, 343, 345, 348], "foundat": [3, 5, 102, 103, 338, 342], "inspir": [3, 343], "gone": [3, 4, 5], "sometim": [3, 339, 348], "hard": [3, 7, 257, 337, 348], "adopt": [3, 5, 336, 348], "prefer": [3, 17, 20, 35, 38, 41, 42, 140, 147, 262, 308, 331, 338, 342, 345], "maintain": [3, 5, 9, 343], "both": [3, 7, 32, 55, 83, 84, 87, 101, 102, 103, 107, 117, 141, 155, 171, 173, 174, 188, 191, 192, 194, 199, 200, 221, 222, 223, 227, 234, 245, 247, 248, 252, 258, 259, 260, 262, 263, 264, 265, 267, 307, 331, 336, 338, 342, 343, 344, 345, 348], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 337, 338, 339, 342, 343, 345, 348], "decor": [3, 8, 11, 113, 260, 275, 276, 277, 278], "set_gym_backend": [3, 111, 329], "relev": [3, 40, 275, 276, 277, 278, 279, 343], "gym_backend": [3, 113, 329], "env1": [3, 341], "path": [3, 6, 7, 32, 34, 35, 36, 38, 39, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 60, 65, 83, 87, 101, 107, 113, 139, 159, 196, 311, 333, 337], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 56, 113], "__init__": [3, 7, 97, 113, 114, 122, 125, 172, 183, 186, 190, 196, 240, 246, 248, 252, 258, 263, 265, 267, 333, 343, 348], "env2": [3, 341], "_env": [3, 6, 348], "classic_control": 3, "pendulumenv": [3, 343], "0x15147e190": 3, "0x1629916a0": 3, "further": [3, 5, 338], "tell": [3, 4, 7, 102, 103, 336, 339, 342], "mo_gymnasium": [3, 95, 111], "handi": 3, "side": [3, 4, 348], "v0": [3, 86, 87, 88, 92, 93, 94, 95, 121, 155, 161, 323], "26": [3, 336, 337, 338, 341, 342, 343, 344, 345], "fun": [3, 11, 113, 338, 342], "reveal": 4, "bug": [4, 347], "curv": 4, "won": [4, 32, 55, 83, 84, 87, 101, 107, 139, 159, 311, 327, 337, 338], "exploit": 4, "video": [4, 9, 294, 307, 327, 342], "cv": 4, "flip": 4, "correspondingli": 4, "prescript": 4, "tune": [4, 133, 342, 344], "coeffici": [4, 40, 133, 342], "bonu": [4, 245, 247, 259, 262], "beta": [4, 35, 41, 63, 258, 259, 336, 337, 345, 347], "reduc": [4, 6, 27, 150, 337, 338], "downstream": [4, 336], "formul": [4, 342], "ob": [4, 8, 26, 28, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65, 70, 71, 74, 114, 122, 123, 125, 135, 153, 167, 170, 199, 200, 233, 240, 246, 248, 252, 258, 263, 265, 267, 275, 276, 277, 278, 337, 341, 343, 347, 348], "rate": [4, 161, 274, 337, 338, 342], "gradient": [4, 32, 83, 87, 101, 107, 155, 189, 198, 202, 206, 215, 216, 245, 247, 248, 252, 258, 259, 260, 262, 263, 264, 265, 267, 274, 275, 276, 277, 278, 311, 336, 338, 342, 343], "norm": [4, 8, 311, 336, 337, 338, 342, 343], "easier": [4, 331, 336], "behavior": [4, 32, 83, 87, 101, 107, 155, 258, 338, 339, 342, 343], "local": [4, 7, 10, 16, 21, 32, 83, 87, 101, 107, 155, 199, 200, 208, 217, 273, 299, 342], "optima": 4, "sens": [4, 343], "product": [4, 9, 186, 187, 190, 191, 325, 326], "sum": [4, 21, 31, 33, 74, 116, 146, 197, 198, 217, 255, 274, 281, 332, 336, 337, 338, 339, 342, 343, 348], "track": [4, 13, 14, 16, 17, 18, 19, 20, 21, 42, 69, 146, 161, 231, 299, 304, 337, 339, 342, 343, 345], "stat": [4, 135, 315, 327, 337, 338], "w": [4, 65, 117, 119, 142, 153, 186, 231, 294, 337, 339, 345], "r": [4, 32, 114, 120, 135, 187, 236, 244, 274, 331, 337, 343, 348], "yield": [4, 16, 21, 32, 83, 87, 101, 107, 260, 336], "insight": 4, "auxiliari": 4, "credit": 4, "futur": [4, 32, 34, 36, 39, 83, 87, 101, 107, 139, 155, 159, 194, 245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 273, 330, 347], "past": [4, 337, 345], "spars": [4, 339], "ineffici": 4, "ad": [4, 13, 14, 16, 32, 35, 38, 41, 42, 49, 52, 53, 54, 55, 56, 57, 63, 65, 83, 87, 101, 107, 146, 155, 201, 202, 231, 245, 247, 249, 253, 259, 262, 265, 273, 337, 339, 345, 348], "intermedi": [4, 116, 188, 192, 227, 336, 344], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 336], "discov": 4, "score": [4, 40], "undesir": 4, "though": [4, 83, 87, 101, 107, 194, 338, 342], "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 347], "select": [4, 15, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65, 102, 103, 109, 114, 116, 117, 118, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 138, 140, 141, 143, 146, 147, 149, 150, 151, 152, 154, 157, 158, 160, 161, 172, 188, 192, 226, 233, 310, 336, 345], "fall": [4, 52], "explicit": [4, 11, 45, 65, 193, 345], "mechan": [4, 32, 83, 87, 101, 107, 155, 337, 343], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 34, 36, 39, 83, 87, 101, 107, 190, 258, 338, 342], "addition": 4, "timestep": [4, 40, 52, 143, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 342], "realli": 4, "larg": [4, 27, 34, 36, 39, 122, 125, 157, 337, 338, 342, 345], "huge": [4, 200, 339], "std": [4, 135, 161, 203, 207, 224, 336, 348], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 335, 339, 340, 341, 344, 345, 346], "initi": [4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 40, 83, 87, 101, 107, 116, 135, 139, 151, 154, 155, 157, 162, 172, 186, 187, 190, 191, 196, 201, 202, 224, 228, 229, 231, 245, 246, 248, 249, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 264, 265, 267, 273, 320, 327, 337, 339, 343, 348], "estim": [4, 70, 71, 126, 133, 221, 222, 223, 245, 246, 247, 248, 249, 251, 252, 253, 254, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 332, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "encount": [4, 55, 330, 337, 343], "unseen": 4, "extrins": 4, "wrong": 4, "bonus": 4, "denser": 4, "prior": [4, 211, 255, 342], "freshli": 4, "doesn": [4, 11, 98, 122, 125], "drop": [4, 69, 71, 170], "meant": [4, 97], "encourag": [4, 336, 337, 345], "measur": [4, 338], "novelti": 4, "revisit": 4, "previous": [4, 338, 348], "diminish": 4, "decreas": 4, "ideal": [4, 135, 343], "down": [4, 13, 14, 16, 17, 339], "anyth": 4, "try": [4, 7, 8, 9, 26, 28, 34, 36, 39, 337, 338, 339, 342, 343, 347, 348], "distil": 4, "nois": [4, 162, 202, 219, 231, 263, 267, 307, 327, 336], "exploratori": [4, 245, 247, 259, 262], "misalign": 4, "trade": 4, "unavoid": 4, "schedul": [4, 7, 40, 307, 338, 343], "divers": [4, 101, 107], "bootstrap": [4, 253, 276, 282, 283, 336, 339], "noisi": [4, 201, 202, 219, 331], "unstabl": [4, 189, 215, 216], "inher": 4, "stochast": [4, 133, 184, 202, 204, 211, 246, 250, 252, 258, 261, 263, 265, 331, 338, 342], "enemi": 4, "variabl": [4, 7, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 53, 56, 57, 109, 186, 187, 188, 190, 191, 192, 196, 221, 222, 223, 260, 263, 333, 337], "pomdp": [4, 345], "loos": [4, 331, 337, 338], "nonexist": 4, "architectur": [4, 180, 342], "sequenc": [4, 13, 14, 16, 17, 26, 28, 30, 31, 35, 37, 38, 40, 43, 45, 55, 58, 59, 65, 66, 68, 73, 74, 75, 77, 78, 115, 116, 117, 118, 119, 122, 124, 125, 129, 131, 135, 136, 140, 141, 142, 143, 144, 145, 146, 150, 152, 153, 154, 161, 173, 174, 181, 183, 186, 190, 194, 197, 198, 199, 200, 206, 209, 213, 225, 237, 238, 250, 293, 294, 306, 307, 308, 310, 311, 320, 331, 336, 338, 339, 341, 342, 348], "lstm": [4, 191, 192, 193, 203], "rel": [4, 65, 151, 181, 214, 336, 337, 342, 345], "tend": 4, "stabl": [4, 9, 10], "compens": 4, "descent": [4, 202], "1000": [4, 38, 70, 71, 83, 87, 101, 107, 117, 161, 228, 231, 232, 236, 257, 336, 337, 338, 339, 344, 345], "minimum": [4, 101, 107, 144, 184, 203, 214, 215, 216, 239, 242, 244, 246, 252, 260, 261, 265, 302, 336, 338, 342], "manual": [4, 18, 20, 21, 336, 339, 345], "deviat": [4, 135, 161, 172, 184, 196, 201, 202, 224, 262, 267, 336, 342], "radic": 4, "begin": [4, 13, 14, 16, 18, 19, 20, 21, 186, 187, 190, 191], "stabil": [4, 130], "stage": [4, 336, 343], "never": 4, "prevent": [4, 26, 28, 189, 215, 216, 259, 262, 309, 345], "solv": [4, 9, 10, 330, 336, 337, 338, 342, 343, 345], "entir": [4, 55, 199, 338, 343, 345], "submit": [4, 330, 347], "suffici": [4, 336], "system": [4, 5, 338, 342, 343], "adequ": [4, 163, 338, 342], "infeas": 4, "allevi": [4, 331], "prune": 4, "fire": [4, 32, 83, 87, 101, 107], "certain": [4, 18, 20, 21, 32, 45, 83, 87, 101, 107, 113, 130, 149, 155, 187, 191, 228, 259, 331, 336, 337, 338, 342, 348], "illeg": 4, "move": [4, 21, 32, 57, 83, 87, 101, 107, 121, 123, 139, 151, 154, 155, 157, 159, 161, 170, 194, 235, 309, 336, 337, 339, 347, 348], "chess": 4, "combin": [4, 154, 337, 345], "grasp": 4, "releas": [4, 7, 10, 32, 83, 87, 101, 107, 155, 265, 347], "top": [4, 74, 172, 196], "wherein": 4, "cumul": [4, 146, 150, 172, 281, 338], "q": [4, 9, 83, 87, 101, 107, 176, 177, 178, 179, 182, 183, 185, 208, 209, 217, 223, 227, 233, 234, 246, 248, 249, 251, 252, 253, 257, 258, 263, 265, 267, 273, 320, 329, 336], "flow": [4, 336, 338, 342, 343, 345], "reparameter": [4, 181, 198, 206], "soft": [4, 257, 265, 266], "critic": [4, 8, 221, 230, 245, 247, 248, 252, 258, 259, 262, 263, 264, 265, 267, 336, 338], "clip": [4, 40, 120, 144, 247, 267, 311, 338, 342, 343], "oppos": [4, 45], "incorrect": 4, "thought": [4, 83, 87, 101, 107], "bound": [4, 17, 21, 25, 26, 32, 83, 87, 101, 107, 120, 134, 161, 210, 211, 220, 226, 227, 231, 232, 233, 234, 235, 236, 239, 267, 331, 336, 337, 338, 348], "region": 4, "squash": [4, 339, 347], "tanh": [4, 173, 174, 186, 187, 189, 190, 191, 194, 200, 214, 215, 216, 239, 338, 342, 343, 344, 347], "correct": [4, 34, 36, 39, 133, 314, 338, 339], "prob": [4, 197, 198, 206, 338, 342], "rememb": 4, "remap": 4, "origin": [4, 8, 13, 14, 16, 17, 34, 36, 39, 40, 91, 123, 124, 133, 139, 155, 159, 186, 232, 235, 236, 257, 260, 262, 320, 336, 341, 343, 348], "real": [5, 55, 236, 332, 339, 343], "histor": 5, "ceas": 5, "fork": 5, "farama": [5, 94, 95, 102, 103, 338, 343], "usag": [5, 7, 52, 53, 55, 56, 57, 117, 126, 188, 192, 258, 265, 268, 331, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "bc": [5, 347], "break": [5, 13, 14, 16, 21, 32, 38, 42, 53, 55, 56, 57, 58, 70, 71, 83, 87, 101, 107, 117, 143, 161, 337, 345, 347], "against": [5, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 83, 87, 101, 107, 163, 220, 226, 227, 232, 233, 234, 235, 236, 338, 342], "13": [5, 10, 11, 70, 71, 104, 160, 335, 336, 337, 338, 342, 343, 345, 346], "construct": [5, 32, 35, 38, 41, 42, 65, 83, 87, 101, 102, 107, 122, 125, 163, 188, 192, 211, 236, 311, 331, 337, 338, 339, 343, 345, 348], "best": [5, 9, 91, 188, 192, 342, 345, 347], "gymwrapp": [5, 83, 87, 101, 107, 127, 147, 149, 160, 329, 338, 347], "feel": [5, 330, 347], "free": [5, 7, 122, 125, 245, 255, 262, 333, 338, 342, 347], "gladli": 5, "instruct": [6, 7, 10, 22, 52, 124, 126, 336, 337, 338, 339, 342, 345], "prepar": [6, 338], "conda": [6, 7, 330], "7": [6, 10, 27, 33, 35, 38, 41, 71, 150, 172, 173, 174, 193, 194, 196, 199, 281, 335, 336, 337, 342, 343, 345, 346, 347], "cmake": 6, "14": [6, 11, 57, 70, 71, 135, 336, 337, 338, 339, 342, 343, 344, 345], "activ": [6, 7, 9, 173, 174, 180, 184, 194, 199, 200, 247, 259, 262, 331, 343, 347], "sim": 6, "bullet": 6, "physic": [6, 7, 101, 104, 333, 336, 342, 343], "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 330], "withbullet": 6, "forg": [6, 7], "aihabitat": 6, "nightli": 6, "y": [6, 7, 100, 193, 199, 218, 336, 338, 342], "git": [6, 7, 10], "facebookresearch": 6, "subdirectori": 6, "verbos": 6, "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 49, 83, 87, 101, 107, 148, 260, 342, 348], "command": [6, 7, 10, 338, 342, 343, 348], "readm": [6, 7], "md": [6, 7], "habitatenv": [6, 329], "_has_habitat": 6, "available_env": [6, 79, 80, 81, 82, 83, 86, 87, 88, 92, 93, 94, 95, 101, 105, 106, 107, 348], "startswith": [6, 332, 336], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 84, 260, 336], "env_nam": [6, 79, 81, 86, 92, 94, 98, 104, 336, 338, 348], "llvmlite": 6, "config": [6, 7, 139, 159, 175, 180, 207, 315, 316, 317, 320, 321, 324], "var": [6, 7, 32, 83, 87, 101, 107, 155, 260, 265], "ld_preload": [6, 7], "8": [6, 7, 38, 55, 56, 63, 70, 71, 80, 83, 87, 101, 107, 150, 173, 174, 176, 177, 185, 194, 221, 222, 223, 232, 235, 238, 258, 335, 336, 337, 339, 342, 343, 344, 345, 346, 347], "bind": 6, "deactiv": [6, 7, 226], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 32, 83, 87, 101, 107, 155, 260, 265, 345], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 337], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 52], "stand": [7, 341, 343], "joint": [7, 337], "dynam": [7, 55, 57, 258, 338, 343], "contact": [7, 37], "engin": [7, 104, 343], "biomechan": 7, "graphic": 7, "anim": [7, 342], "area": 7, "demand": [7, 348], "fast": [7, 9, 80, 141, 263, 336, 337, 338], "accur": [7, 52, 53, 55, 56, 57, 337, 343, 345], "articul": 7, "recent": [7, 11, 160, 348], "acquir": [7, 338], "deepmind": [7, 8, 9, 81, 82, 126, 338], "whomev": 7, "licenc": 7, "incorpor": [7, 224, 228, 229, 231, 339, 343], "relianc": 7, "obsolet": 7, "seri": [7, 8, 33, 59, 66, 74, 75, 77, 78, 107, 134, 154, 294, 331, 332, 336, 337, 338, 342, 345, 348], "legaci": 7, "pro": [7, 330], "tip": [7, 330], "glfw": 7, "osmesa": 7, "egl": 7, "advic": [7, 55, 348], "sudo": [7, 330], "enabl": [7, 8, 52, 60, 61, 69, 76, 188, 192, 231, 307, 338, 342, 343, 345], "apt": [7, 342], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 60, 61, 62, 72, 73, 76, 337, 339], "workflow": [7, 221, 222, 223], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "pre": [7, 22, 32, 45, 55, 61, 83, 87, 101, 107, 139, 157, 159, 348], "binari": [7, 24, 27, 33, 115, 183, 209, 226, 227, 233, 234, 249, 252, 273], "setup": [7, 91], "mkdir": 7, "cd": 7, "tag": [7, 294, 299, 327], "earlier": [7, 336, 338, 339, 342, 345], "roboti": 7, "download": [7, 10, 52, 53, 55, 56, 57, 91, 139, 159, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348], "html": [7, 98], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": [7, 13, 14, 101, 107], "obtain": [7, 40, 83, 87, 101, 107, 116, 139, 150, 159, 172, 208, 308, 336, 338, 342], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 34, 36, 45, 58], "bin": [7, 183, 227, 331], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 179, 232, 236, 336, 338, 345], "nvidia": [7, 91], "older": [7, 11], "hack": [7, 336], "line": [7, 32, 83, 87, 101, 107, 337, 342], "adatp": 7, "script": [7, 163, 320, 323, 327, 331, 332, 333, 336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "unnot": [7, 140], "until": [7, 21, 152, 154, 338, 339, 342], "complet": [7, 9, 69, 87, 117, 149, 330, 332, 336, 338, 341], "mujoco_pi": 7, "trigger": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 337, 345], "troubleshoot": 7, "gl": 7, "h": [7, 65, 117, 119, 142, 153, 186, 187, 188, 190, 191, 192, 196, 294, 337, 339, 345], "eglshim": 7, "fatal": 7, "No": 7, "directori": [7, 34, 36, 39, 45, 52, 53, 55, 56, 57, 60, 299, 333], "devel": 7, "ubuntu": [7, 91], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "38": [7, 335, 336, 337, 343, 345, 346, 348], "disappear": [7, 337, 339, 341], "libstdc": 7, "6": [7, 13, 14, 16, 17, 38, 56, 57, 71, 93, 105, 106, 135, 137, 150, 173, 174, 181, 187, 193, 194, 199, 200, 204, 214, 232, 240, 320, 335, 336, 337, 342, 343, 345, 346, 347, 348], "glibcxx_3": 7, "29": [7, 337, 338, 343, 344], "compil": [7, 32, 83, 87, 101, 107, 186, 187, 190, 191], "libosmesa": 7, "libgcc": 7, "Then": [7, 160, 338, 341], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 26, 28, 32, 83, 87, 101, 107, 134, 155, 265, 348], "job": [7, 18, 19, 20, 22], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 336, 337, 338, 343, 344], "114": [7, 343, 345], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 336, 343], "offscreenopenglcontext": 7, "fail": [7, 22, 26, 28, 114, 163], "opengl": [7, 342], "global": [7, 32, 83, 87, 101, 102, 103, 107, 208, 217, 232, 236, 273, 333, 336, 342], "cuda_visible_devic": 7, "id": [7, 23, 40, 65, 231, 263, 297, 320], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "onscreen": 7, "101": [7, 343], "correctli": [7, 32, 83, 87, 101, 107], "lgl": 7, "libegl": 7, "x11": [7, 342], "xlib": 7, "libx11": 7, "xorg": 7, "loop": [8, 13, 14, 16, 17, 34, 36, 39, 87, 170, 224, 228, 229, 231, 262, 311, 333, 336, 337, 341, 345], "sketch": [8, 333], "n_training_step": 8, "datapoint": [8, 45, 345], "onlin": [8, 13, 17, 117, 180, 207, 245, 250, 261, 262, 302, 327, 338, 339, 342, 345], "n_data_per_train": 8, "no_grad": [8, 32, 83, 87, 101, 107, 133, 186, 187, 190, 191, 275, 276, 277, 278, 338, 339, 342], "replay_buff": [8, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 308, 323, 336, 337, 338, 342, 345], "loss_fn": [8, 339, 347], "backward": [8, 32, 83, 87, 101, 107, 161, 186, 187, 190, 191, 245, 246, 248, 252, 258, 262, 263, 264, 265, 267, 336, 338, 339, 342, 343], "zero_grad": [8, 32, 83, 87, 101, 107, 333, 336, 338, 339, 342, 343], "backpropag": [8, 245, 246, 247, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 273, 342, 343], "differenti": [8, 45, 133, 275, 276, 277, 278, 339, 342, 343], "denomin": 8, "artifact": 8, "numer": [8, 38, 161, 189, 215, 216, 220, 226, 227, 232, 233, 234, 235, 236, 309, 338, 345, 348], "misconcept": 8, "freed": 8, "appear": [8, 33, 55, 70, 71, 343, 345], "compuat": 8, "twice": 8, "fix": [8, 151, 246, 261, 265, 337, 343, 348], "retain_graph": 8, "discuss": [8, 9, 342], "inplac": [8, 32, 34, 36, 39, 83, 87, 101, 107, 155, 265, 336], "accumul": 8, "onto": [8, 33, 34, 36, 39, 167, 220, 224, 226, 227, 231, 232, 233, 234, 235, 236, 339, 343], "exclud": [8, 52, 56, 117, 127, 170, 208, 342, 345], "forward": [8, 32, 83, 87, 101, 107, 114, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 135, 138, 139, 140, 141, 143, 146, 147, 149, 150, 151, 152, 154, 157, 158, 160, 161, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 199, 200, 201, 203, 204, 205, 207, 208, 210, 211, 213, 217, 218, 224, 225, 227, 228, 229, 231, 232, 234, 235, 236, 239, 240, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 273, 275, 276, 277, 278, 279, 332, 343, 347], "submodul": [8, 32, 83, 87, 101, 107, 111, 260], "param": [8, 32, 40, 83, 87, 97, 101, 107, 121, 122, 123, 127, 133, 141, 147, 149, 154, 181, 183, 214, 225, 232, 235, 238, 240, 260, 269, 272, 275, 276, 277, 278, 279, 336, 342, 343, 344, 347], "grad": [8, 32, 83, 87, 101, 107, 336, 338], "whose": [8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 83, 87, 101, 102, 103, 107, 121, 139, 151, 154, 155, 157, 159, 203, 208, 235], "neg": [8, 13, 14, 16, 17, 18, 19, 20, 21, 35, 41, 63, 117, 129, 140, 156, 254, 332, 338, 342, 343], "ask": [8, 55, 70, 71, 336, 338, 339, 342, 344, 348], "much": [8, 13, 14, 35, 41, 55, 63, 101, 107, 259, 262, 338, 342, 343, 345, 348], "render": [8, 307, 336, 337, 338], "upon": [8, 343], "factor": [8, 32, 143, 189, 202, 215, 216, 224, 228, 229, 231, 246, 251, 253, 254, 256, 266, 281, 336, 337, 342, 345, 348], "fit": [8, 11, 135, 332, 333, 336], "bottlneck": 8, "brax": [8, 79, 80, 141, 348], "jax": [8, 11], "improperli": 8, "item": [8, 13, 26, 28, 32, 38, 45, 58, 69, 74, 83, 87, 101, 107, 128, 155, 197, 198, 248, 249, 251, 265, 302, 332, 333, 336, 338, 339, 342, 343, 345], "underli": [8, 83, 87, 101, 107, 260, 343], "tedeiou": 8, "priorit": [8, 35, 41, 63, 248, 249, 251, 252, 258, 263, 265, 267, 336, 337], "amount": [8, 231, 337, 345], "contigu": [8, 55, 56, 83, 87, 101, 107, 167, 338, 342, 343, 345, 347, 348], "costli": [8, 343], "concaten": [8, 21, 30, 31, 55, 117, 118, 135, 154, 190, 194, 238, 336, 337, 342, 343, 345, 348], "constitut": [8, 337, 342, 343], "plain": 8, "profil": 8, "fulli": [8, 32, 83, 87, 101, 107, 187, 191, 337, 343, 345], "frequent": [8, 345], "program": [8, 258, 348], "functorch": [8, 10], "incl": 8, "suit": [8, 82, 338, 348], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "expand": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 70, 71, 235, 238, 260, 342, 343, 347], "new_shap": 8, "permut": [8, 69, 137, 347, 348], "idea": [9, 263, 333, 339, 342], "introductori": 9, "intro": [9, 338, 339], "dai": [9, 347], "2022": [9, 10, 343, 347], "spin": 9, "deep": [9, 117, 176, 177, 178, 179, 182, 231, 245, 257, 265, 266, 336], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": 9, "summari": [9, 135, 161, 336, 337, 338, 339], "reddit": 9, "reagent": 9, "orient": [9, 57, 348], "baselines3": 9, "tf": 9, "bandit": [9, 100], "tensorflow": [9, 197, 198], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": 9, "salina": 9, "sequenti": [9, 32, 83, 87, 101, 107, 116, 133, 237, 238, 262, 331, 338, 339, 342, 343, 344, 348], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 347], "grade": 9, "factori": [9, 43], "throughput": [9, 336], "cherri": 9, "jaxrl": 9, "space": [9, 33, 44, 83, 87, 101, 107, 120, 124, 167, 180, 183, 199, 205, 209, 220, 224, 226, 227, 229, 231, 232, 233, 234, 235, 236, 238, 239, 240, 249, 251, 252, 267, 273, 331, 337, 338, 339, 342, 343, 347, 348], "mbrl": [9, 97, 331], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 343], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 338, 339, 342], "notebook": [10, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348], "24": [10, 56, 71, 336, 337, 338, 342, 343, 345], "11": [10, 27, 33, 45, 60, 61, 71, 76, 84, 153, 172, 196, 335, 336, 337, 338, 339, 342, 343, 345, 346], "12": [10, 56, 60, 61, 71, 76, 105, 106, 336, 337, 342, 343, 344, 345], "pip": [10, 54, 342, 347, 348], "pip3": [10, 338, 339, 342], "extra": [10, 32, 83, 87, 101, 107, 117, 161, 170, 331, 338, 339, 345], "url": 10, "org": [10, 35, 57, 63, 117, 139, 157, 175, 176, 177, 178, 179, 180, 183, 184, 185, 190, 196, 197, 198, 202, 204, 205, 207, 208, 210, 211, 217, 227, 231, 245, 246, 249, 250, 251, 253, 254, 255, 256, 257, 258, 261, 262, 264, 265, 266, 275, 280, 288, 344], "whl": 10, "u": [10, 54, 186, 187, 190, 191, 343], "There": [10, 65, 188, 192, 331, 333, 338, 339, 342, 343, 345, 348], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 260], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 60, 63, 65, 81, 83, 85, 87, 100, 101, 102, 103, 104, 107, 109, 110, 111, 114, 117, 124, 126, 132, 133, 135, 139, 140, 142, 149, 150, 155, 157, 159, 160, 161, 164, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 185, 188, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 208, 209, 217, 220, 226, 227, 232, 233, 234, 235, 236, 239, 240, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 270, 273, 274, 275, 276, 277, 278, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 315, 320, 321, 327, 337, 338], "callabl": [11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 65, 83, 84, 87, 97, 101, 107, 113, 126, 244, 316, 317, 325, 326, 327, 337], "from_vers": 11, "to_vers": 11, "intersect": [11, 149], "vs": [11, 188, 192, 193, 347], "longer": [11, 337, 342, 345], "self": [11, 26, 28, 32, 34, 36, 39, 83, 87, 97, 101, 107, 114, 121, 122, 125, 139, 151, 154, 155, 157, 159, 172, 183, 196, 208, 217, 224, 228, 229, 232, 235, 240, 245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 273, 275, 276, 277, 278, 279, 333, 336, 337, 343, 347], "x": [11, 23, 26, 32, 38, 40, 55, 71, 133, 153, 174, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 199, 200, 218, 226, 232, 233, 242, 244, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 311, 336, 338, 343, 345, 347], "23": [11, 56, 71, 336, 337, 338, 343], "lambda": [11, 13, 14, 16, 17, 21, 22, 38, 83, 84, 87, 101, 107, 113, 133, 151, 218, 226, 233, 254, 256, 275, 278, 286, 287, 291, 292, 323, 332, 336, 337, 342, 345, 347, 348], "import_modul": 11, "27": [11, 335, 337, 338, 343, 346], "get_class_that_defined_method": 11, "f": [11, 87, 191, 244, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 336, 337, 338, 339, 342, 343, 345, 348], "otherwis": [11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 43, 44, 45, 46, 47, 52, 58, 70, 71, 83, 87, 96, 101, 102, 103, 107, 109, 117, 124, 135, 150, 151, 152, 155, 161, 186, 189, 190, 199, 200, 215, 216, 226, 233, 239, 246, 255, 260, 261, 265, 307, 308, 333, 336, 337, 338, 339, 343, 348], "classmethod": [11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 157, 175, 207], "module_set": 11, "setters_dict": 11, "dict": [11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 34, 36, 39, 56, 83, 84, 87, 101, 102, 103, 107, 109, 110, 133, 151, 155, 160, 161, 173, 174, 175, 176, 177, 178, 179, 180, 185, 193, 194, 207, 232, 236, 265, 298, 299, 307, 316, 317, 320, 325, 326, 327, 336, 337, 338, 348], "setter": 11, "setter_dict": 11, "copi": [11, 18, 19, 20, 21, 32, 34, 36, 39, 40, 45, 55, 83, 87, 101, 107, 141, 150, 155, 170, 188, 192, 225, 260, 265, 332, 336, 337, 339, 345], "kwd": 12, "policy_weight": [12, 13, 14, 16, 17, 19, 20], "tensordictbas": [12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 32, 41, 42, 52, 53, 54, 55, 56, 57, 83, 85, 87, 101, 107, 114, 116, 117, 118, 121, 122, 123, 126, 127, 128, 129, 132, 133, 138, 140, 141, 143, 146, 147, 149, 150, 151, 152, 154, 160, 161, 170, 171, 172, 188, 192, 195, 196, 224, 225, 227, 228, 229, 231, 234, 235, 236, 245, 246, 247, 248, 249, 250, 251, 252, 253, 258, 259, 260, 261, 262, 263, 264, 265, 267, 273, 274, 275, 276, 277, 278, 279, 311, 336, 343], "udpdat": [12, 13, 14, 16, 17, 19, 20], "create_env_fn": [13, 14, 16, 17, 18, 19, 20, 21, 84, 101, 107, 336, 347], "int": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 72, 74, 75, 76, 77, 81, 83, 87, 97, 101, 102, 103, 107, 109, 116, 117, 118, 119, 124, 129, 130, 134, 135, 137, 139, 140, 142, 148, 149, 152, 155, 156, 157, 159, 163, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 204, 205, 207, 208, 209, 210, 211, 213, 214, 215, 217, 218, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 236, 245, 246, 247, 252, 254, 255, 259, 260, 261, 262, 263, 267, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 302, 303, 304, 307, 308, 311, 313, 320, 321, 325, 326, 327, 343], "200": [13, 14, 16, 17, 21, 32, 83, 87, 101, 107, 108, 109, 143, 176, 177, 184, 210, 211, 336, 339, 343], "total_fram": [13, 14, 16, 17, 18, 19, 20, 21, 117, 143, 311, 314, 323, 333, 336, 337, 338, 339, 342, 345, 347], "device_typ": [13, 16, 27, 30, 33, 173, 174, 175, 176, 177, 178, 179, 185, 194, 201, 202, 207], "create_env_kwarg": [13, 14, 16, 17, 84, 98, 101, 107, 336], "postproc": [13, 14, 16, 17, 18, 19, 20, 21, 143, 337, 345], "explorationtyp": [13, 14, 16, 20, 21, 260, 307, 336, 337, 338, 339, 347], "interactiontyp": [13, 16, 18, 19, 20, 21, 165, 169, 232, 236, 307], "exploration_mod": [13, 16, 18, 19, 20, 329, 331], "preemptive_threshold": [13, 14], "float": [13, 14, 25, 27, 32, 33, 35, 40, 41, 46, 55, 63, 65, 83, 87, 101, 107, 117, 121, 122, 125, 133, 135, 139, 143, 144, 145, 150, 151, 153, 154, 155, 157, 159, 161, 181, 184, 186, 189, 190, 194, 197, 198, 201, 202, 210, 211, 214, 216, 224, 235, 239, 242, 243, 244, 245, 246, 251, 252, 255, 256, 257, 258, 261, 263, 265, 266, 267, 274, 280, 281, 282, 283, 284, 285, 286, 287, 288, 309, 336, 337, 345, 348], "num_thread": [13, 14, 34, 36, 39, 101, 107], "num_sub_thread": [13, 14, 101, 107], "datacollector": [13, 14, 16, 17, 232, 236, 262, 338], "recept": 13, "safe": [13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 220, 224, 226, 227, 231, 232, 233, 234, 235, 236, 238, 331, 347], "stepcount": [13, 83, 87, 101, 107, 154, 336, 337, 338, 339, 342, 347], "env_mak": [13, 14, 16, 21, 323, 348], "50": [13, 14, 16, 21, 37, 40, 57, 70, 71, 335, 336, 337, 338, 339, 341, 342, 343, 345, 346], "2000": [13, 14, 16, 45, 90, 338, 345], "enumer": [13, 14, 16, 21, 32, 38, 42, 71, 83, 87, 101, 107, 268, 332, 336, 337, 338, 339, 345, 347], "int64": [13, 14, 16, 24, 27, 30, 34, 36, 37, 39, 40, 41, 43, 45, 53, 55, 56, 57, 58, 83, 87, 96, 100, 101, 102, 103, 105, 106, 107, 126, 137, 143, 149, 183, 209, 226, 227, 231, 232, 233, 234, 331, 338, 339, 343, 345, 347, 348], "step_count": [13, 14, 16, 83, 87, 101, 107, 149, 338, 339, 347], "shutdown": [13, 14, 16, 17, 21, 336, 347], "del": [13, 14, 16, 336, 338, 341, 347, 348], "randompolici": [13, 14, 16, 18, 19, 20, 22, 117, 143, 329, 345], "lifespan": [13, 14, 16, 18, 19, 20, 337], "divis": [13, 14, 16, 18, 19, 20, 55, 70, 71, 342], "endless": [13, 14, 16, 18, 19, 20], "dictionari": [13, 14, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 68, 70, 71, 83, 87, 101, 107, 109, 151, 155, 232, 236, 265, 307, 325, 326, 327, 333, 337, 338, 343, 348], "span": [13, 14, 16, 17, 18, 19, 20, 21, 55], "n_step": [13, 14, 16, 17, 18, 19, 20, 21, 32, 337, 338, 342], "ignor": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 43, 44, 46, 47, 83, 87, 101, 107, 124, 127, 147, 153, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 197, 198, 199, 200, 203, 204, 205, 207, 210, 211, 213, 218, 224, 225, 227, 228, 229, 231, 234, 239, 242, 275, 345], "mainli": [13, 14, 16, 17, 18, 19, 20, 21, 40, 331, 342, 343], "round": [13, 14, 16], "closest": [13, 14, 16], "post": [13, 14, 16, 18, 19, 20, 21, 32, 53, 83, 87, 101, 107], "multistep": [13, 14, 16, 18, 19, 20, 21, 329, 337], "return_same_td": [13, 14, 16], "cautious": [13, 14, 16, 262], "whole": [13, 14, 16, 26, 28, 32, 45, 83, 87, 101, 107, 155, 232, 265, 302, 336, 338], "boolm": [13, 14], "update_policy_weight_": [13, 14], "sync": [13, 14, 18, 19, 20, 21, 313, 323, 333, 336, 347], "async": [13, 14, 18, 19, 20, 21, 160, 336, 347], "ratio": [13, 14, 40, 336, 338], "finish": [13, 14, 21, 87, 143, 348], "rest": [13, 14, 331, 338, 339, 343, 347], "earli": [13, 14, 87, 149, 347], "thread": [13, 14, 34, 36, 39, 98, 101, 107], "equal": [13, 14, 70, 71, 98, 101, 107, 134, 135, 173, 174, 182, 186, 188, 190, 192, 194, 200, 266, 270, 302, 325, 326, 336, 338, 344], "plu": [13, 14, 40, 101, 107, 343], "safeti": [13, 14, 97, 101, 107], "harm": [13, 14, 101, 107], "ordereddict": [13, 14, 16, 17, 21, 32, 83, 87, 101, 107, 155, 161, 265, 337], "form": [13, 14, 17, 32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 83, 87, 101, 107, 161, 186, 188, 190, 192, 244, 245, 247, 259, 262, 311, 331, 342], "worker0": [13, 14, 17], "state_dict0": [13, 14, 17], "worker1": [13, 14, 17], "state_dict1": [13, 14, 17], "reset_idx": [13, 14, 17], "static_se": [13, 14, 16, 17, 21, 83, 87, 101, 107, 155], "integ": [13, 14, 16, 17, 23, 30, 31, 32, 33, 40, 47, 72, 83, 87, 101, 107, 126, 130, 135, 149, 173, 174, 194, 199, 200, 258, 265, 345], "increment": [13, 14, 16, 17, 83, 87, 101, 107, 259], "env_fn": [13, 14, 16, 17, 84, 325, 326], "env_fn_parallel": [13, 14, 16, 17], "100": [13, 14, 16, 17, 32, 35, 38, 41, 42, 43, 52, 53, 54, 55, 56, 57, 60, 61, 65, 83, 87, 101, 107, 120, 126, 135, 143, 149, 199, 227, 303, 323, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "300": [13, 14, 16, 17, 70, 71, 178, 179, 343], "out_se": [13, 14, 16, 17, 348], "shut": [13, 14, 16, 17], "irrevers": [13, 14, 17], "kwarg": [14, 16, 17, 21, 25, 26, 32, 52, 60, 61, 65, 74, 76, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 114, 121, 139, 148, 151, 154, 155, 156, 158, 159, 162, 172, 173, 174, 176, 177, 178, 179, 182, 185, 188, 189, 192, 194, 195, 196, 199, 200, 206, 214, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 273, 274, 275, 276, 277, 278, 279, 294, 298, 299, 301, 304, 311, 316, 317, 320, 324, 325, 326, 332, 338, 342], "tupl": [15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 65, 73, 83, 87, 101, 107, 114, 124, 126, 132, 133, 135, 140, 170, 176, 182, 183, 188, 191, 192, 193, 194, 200, 203, 207, 208, 209, 226, 227, 233, 234, 239, 245, 246, 248, 252, 254, 258, 260, 262, 263, 264, 265, 267, 275, 276, 277, 278, 294, 305, 307, 309, 318, 319, 336], "rand": [15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 65, 80, 93, 97, 114, 122, 125, 172, 196, 232, 245, 246, 248, 249, 251, 252, 258, 262, 263, 265, 267, 343, 347, 348], "describ": [15, 44, 118, 154, 214, 215, 249, 297, 332, 336, 338, 342, 343, 348], "tensor_spec": [15, 114, 171, 252, 262, 264], "boundedtensorspec": [15, 22, 26, 83, 87, 101, 107, 228, 229, 231, 232, 239, 245, 246, 248, 258, 262, 263, 265, 267, 329, 338, 342, 343, 347, 348], "cube": 15, "envcreat": [16, 22, 323, 324, 327, 329, 336, 337, 347, 348], "interruptor": 16, "_interruptor": 16, "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "chunk": 16, "policy_state_dict": 16, "env_state_dict": 16, "close": [16, 17, 87, 98, 133, 245, 247, 259, 262, 336, 341, 343, 347], "pin_memori": [17, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 138, 336, 347], "regular": [17, 34, 36, 39, 68, 83, 87, 101, 107, 155, 209, 227, 233, 234, 235, 236, 253, 313, 329, 333, 336, 337, 345, 348], "mere": 17, "greater": [17, 70, 71, 188, 192, 336, 337, 347], "sent": [17, 60, 61, 76, 161], "server": 17, "postprocessor": 17, "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 311], "string": [18, 19, 20, 32, 37, 45, 58, 83, 87, 101, 107, 113, 139, 149, 159, 188, 192, 226, 232, 233, 244, 293, 310, 320, 332, 336, 338, 339], "respect": [18, 19, 20, 32, 83, 87, 101, 107, 115, 121, 122, 125, 139, 140, 151, 154, 155, 157, 159, 186, 190, 199, 211, 235, 240, 306, 338, 339, 342], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 330, 337, 338, 341, 345], "serv": [18, 20, 21, 89, 345, 348], "fashion": [18, 20, 21, 34, 36, 39, 71], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 20, 21, 53, 55, 56, 57, 83, 87, 101, 107, 129], "seen": [18, 20, 21, 332, 336, 337, 339, 342, 345], "turn": [18, 20, 21, 34, 36, 39, 131, 156, 160, 226, 307, 332, 336, 337, 339, 343, 344], "submitit_delai": [18, 22], "former": [18, 19, 20, 35, 38, 41, 42, 52, 83, 87, 101, 107, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 199, 200, 203, 204, 205, 207, 210, 211, 213, 218, 224, 225, 227, 228, 229, 231, 234, 239, 242, 336], "whilst": [18, 19, 20], "latter": [18, 19, 20, 32, 52, 83, 87, 101, 107, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 199, 200, 203, 204, 205, 207, 210, 211, 213, 218, 224, 225, 227, 228, 229, 231, 234, 239, 242, 262, 325, 326], "homonym": [18, 19, 20, 343], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 336], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 33, 232, 236], "tensorpiperpcbackendopt": 20, "_td": [21, 84], "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 325, 326, 336, 337], "coordin": 21, "init": [21, 32, 83, 87, 101, 107, 336, 337, 338], "autodetect": 21, "similarli": [21, 32, 69, 73, 83, 87, 101, 107, 199, 237, 238, 258, 348], "num_cpu": 21, "num_gpu": 21, "1024": [21, 180, 337, 345], "equat": [21, 55, 87, 231, 244, 247, 266, 338, 343], "exce": [21, 338, 345], "indefinit": [21, 51], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 311, 336, 338, 339], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": 22, "jump": 22, "host": [22, 32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235], "wherea": [22, 55, 124, 260, 333], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 175, 180, 207, 225], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "rollout_tensordict": 23, "durat": [23, 342], "meta": [23, 44, 52, 85, 333, 338, 342, 345], "aren": [23, 150, 339], "assert_is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "belong": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 55, 160, 161, 331, 336, 342], "encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 124, 205, 206, 210, 244, 331, 337, 338, 339, 343, 345], "ndarrai": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 87, 231, 239], "ignore_devic": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "np": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 87, 239, 343], "cast": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 58, 83, 87, 101, 107, 121, 122, 125, 133, 139, 151, 154, 155, 157, 159, 161, 235, 320, 348], "least": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 120, 348], "complient": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "singleton": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 173, 174, 194, 212, 213], "implements_for_spec": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "torch_funct": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "tensor_to_index": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 348], "project": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 124, 188, 190, 220, 224, 226, 227, 231, 232, 233, 234, 235, 236, 331, 347, 348], "uniform": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 41, 44, 46, 47, 63], "unbound": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 151, 167, 343, 345], "squeez": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 117, 148, 150, 173, 174, 212, 213, 336, 343, 345], "dim": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 70, 117, 118, 137, 151, 156, 161, 191, 193, 213, 218, 327, 337, 338, 343, 345], "to_numpi": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "transformed_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 154, 155, 203, 214, 327], "check_spec_encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "to_one_hot": [24, 27, 30], "hot": [24, 27, 30, 31, 33, 102, 103, 109, 114, 124, 183, 206, 209, 226, 227, 233, 234, 245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 273, 339], "to_one_hot_spec": [24, 27, 30], "onehotdiscretetensorspec": [24, 27, 183, 209, 226, 233, 249, 251, 252, 273, 329, 331], "convert": [24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 83, 87, 101, 107, 121, 122, 125, 139, 151, 154, 155, 157, 159, 161, 235, 244, 260, 336, 337, 338, 343, 345], "type_check": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "fill": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 151, 160, 192, 339, 343, 344], "upper": [25, 68, 134], "unnam": 26, "pixels_spec": 26, "observation_vector_spec": 26, "composite_spec": 26, "observation_vector": [26, 118, 320, 336], "td_project": 26, "is_empti": [26, 28, 343], "include_nest": [26, 28], "leaves_onli": [26, 28], "itemsview": 26, "immedi": [26, 28, 32, 83, 87, 101, 107, 274, 342], "children": [26, 28, 32, 83, 87, 101, 107], "keysview": [26, 28], "reflect": [26, 28, 102, 103, 160, 170, 260, 314, 337, 338, 339, 342], "lock_": [26, 28], "recurs": [26, 28, 32, 48, 49, 83, 87, 101, 107, 260], "succeed": [26, 28, 338, 342, 343], "selected_kei": [26, 28, 147, 336], "unlock_": [26, 28], "unlock": [26, 28, 34, 36, 39], "valuesview": 26, "onehottensorspec": 27, "action_valu": [27, 33, 182, 183, 209, 226, 227, 233, 234, 252, 260, 273, 331, 339], "arang": [27, 33, 183, 198, 226, 302, 331, 345], "argmax": [27, 183, 209, 227, 234], "chosen_action_valu": [27, 33, 208, 209, 217, 233, 234, 273, 331, 339], "outcom": [27, 33, 181, 214], "lazi": [28, 29, 49, 50, 83, 87, 101, 107, 109, 139, 157, 173, 201, 237, 238, 336, 337, 341, 345, 348], "represent": [28, 29, 32, 83, 87, 101, 107, 139, 157, 159, 336, 343, 344, 348], "drawn": [28, 29, 151, 228, 232, 236, 338, 342], "lazystackedtensordict": [28, 83, 87, 97, 101, 107, 341, 347], "heterogen": [28, 29, 96, 102, 103, 163, 199, 200, 336, 337], "thrown": [29, 32, 83, 87, 101, 107, 345], "nvec": [30, 31], "cardin": [30, 31, 183, 209, 226, 227, 234, 338], "ax": [30, 201, 202], "m": [30, 32, 83, 87, 101, 107, 124, 236, 331, 337, 343], "ts": [30, 31], "multionehotdiscretetensorspec": [30, 249, 252, 273, 329], "use_regist": [31, 33], "to_categor": [31, 33], "to_categorical_spec": [31, 33], "multidiscretetensorspec": [31, 329], "gamma": [32, 143, 196, 245, 246, 248, 249, 251, 252, 253, 254, 256, 258, 260, 262, 263, 264, 265, 267, 268, 269, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 323, 332, 336, 337, 338, 342, 347], "sutton": [32, 332, 342], "1988": 32, "tempor": [32, 188, 192, 196, 276, 277, 282, 283], "44": [32, 336, 337, 339, 343], "discount": [32, 55, 84, 143, 246, 251, 253, 254, 256, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 332, 337, 338, 342], "ahead": [32, 348], "add_modul": [32, 83, 87, 101, 107], "child": [32, 83, 87, 101, 107], "fn": [32, 37, 83, 87, 101, 107, 203, 325, 326], "init_weight": [32, 83, 87, 101, 107], "fill_": [32, 83, 87, 101, 107, 337, 339, 348], "net": [32, 83, 87, 101, 107, 193, 200, 245, 246, 252, 258, 262, 263, 264, 265, 320, 323, 337, 343, 344, 347], "in_featur": [32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 173, 174, 176, 177, 178, 179, 193, 194, 200, 201, 202, 221, 235, 249, 251, 347], "out_featur": [32, 83, 87, 97, 101, 107, 121, 139, 151, 154, 155, 157, 159, 172, 173, 174, 176, 177, 178, 179, 184, 185, 188, 192, 193, 194, 196, 199, 200, 201, 202, 221, 226, 235, 249, 251, 331, 336, 339, 347], "bia": [32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 173, 174, 184, 186, 187, 188, 190, 191, 192, 194, 200, 201, 202, 203, 228, 229, 231, 235, 242, 243, 244, 260, 265, 332, 336, 337, 338, 339, 342, 347], "requires_grad": [32, 83, 87, 101, 107, 133], "bfloat16": [32, 83, 87, 101, 107], "datatyp": [32, 83, 87, 101, 107, 345], "member": [32, 83, 87, 101, 107, 260], "xdoctest": [32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235, 260, 265], "skip": [32, 83, 87, 101, 107, 130, 155, 163, 232, 236, 260, 265, 275, 276, 277, 278, 293, 294, 304, 307, 336, 337, 338, 343], "buf": [32, 83, 87, 101, 107], "20l": [32, 83, 87, 101, 107, 260], "1l": [32, 83, 87, 101, 107, 260], "5l": [32, 83, 87, 101, 107, 260], "__call__": [32, 37, 83, 87, 101, 107, 236, 333], "doubl": [32, 46, 83, 87, 101, 107, 121, 122, 123, 125, 139, 151, 154, 155, 157, 159, 235, 249, 253, 257, 263, 266, 273, 336, 337, 338, 339, 348], "eval": [32, 83, 87, 101, 107, 155, 161, 336, 337, 338], "evalu": [32, 83, 87, 101, 107, 155, 181, 197, 198, 206, 216, 263, 316, 317, 337, 338], "dropout": [32, 83, 87, 101, 107, 155, 186, 188, 190, 192, 194, 339], "batchnorm": [32, 83, 87, 101, 107, 155], "disabl": [32, 83, 87, 101, 107, 155, 189, 216, 336], "comparison": [32, 83, 87, 101, 107, 155, 260, 336, 337], "similar": [32, 55, 83, 87, 101, 102, 103, 107, 121, 139, 151, 154, 155, 157, 158, 159, 161, 221, 223, 232, 235, 236, 332, 336, 337, 338, 339, 343, 348], "confus": [32, 83, 87, 101, 107, 155], "extra_repr": [32, 83, 87, 101, 107], "shift": [32, 242, 275, 276, 277, 278, 338], "nontermin": 32, "original_reward": 32, "newli": [32, 83, 87, 101, 107], "OR": 32, "get_buff": [32, 83, 87, 101, 107], "throw": [32, 34, 36, 39, 83, 87, 101, 107, 348], "docstr": [32, 83, 87, 101, 107], "get_submodul": [32, 83, 87, 101, 107], "explan": [32, 83, 87, 101, 107], "qualifi": [32, 83, 87, 101, 107], "referenc": [32, 83, 87, 101, 107], "attributeerror": [32, 83, 87, 101, 107], "invalid": [32, 83, 87, 101, 107, 110, 197, 198], "resolv": [32, 83, 87, 101, 107], "someth": [32, 83, 87, 96, 101, 107, 330, 337, 338, 343, 348], "get_extra_st": [32, 83, 87, 101, 107, 161], "set_extra_st": [32, 83, 87, 101, 107, 161], "picklabl": [32, 83, 87, 101, 107, 161], "pickl": [32, 83, 87, 101, 107, 161], "get_paramet": [32, 83, 87, 101, 107], "sai": [32, 83, 87, 101, 107, 199, 344, 348], "net_b": [32, 83, 87, 101, 107], "net_c": [32, 83, 87, 101, 107], "conv": [32, 83, 87, 101, 107, 173, 174, 337], "conv2d": [32, 83, 87, 101, 107, 174, 199, 347], "kernel_s": [32, 83, 87, 101, 107, 173, 174, 176, 177, 199, 204, 337, 347], "stride": [32, 83, 87, 101, 107, 173, 174, 176, 177, 185, 199, 337, 347], "diagram": [32, 83, 87, 101, 107], "degre": [32, 83, 87, 101, 107], "named_modul": [32, 83, 87, 101, 107], "o": [32, 83, 87, 101, 107, 191], "transit": [32, 52, 55, 71, 83, 87, 101, 107, 241, 336, 339, 343, 345], "half": [32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235, 336], "ipu": [32, 83, 87, 101, 107], "strict": [32, 34, 36, 39, 83, 87, 101, 107, 155, 265], "descend": [32, 83, 87, 101, 107, 155, 265], "persist": [32, 83, 87, 101, 107, 155, 170, 265], "enforc": [32, 69, 83, 87, 101, 107, 155, 237, 265, 343], "preserv": [32, 83, 87, 101, 107, 155, 265], "missing_kei": [32, 83, 87, 101, 107, 155, 265], "unexpected_kei": [32, 83, 87, 101, 107, 155, 265], "namedtupl": [32, 83, 87, 101, 107, 155, 265], "duplic": [32, 69, 83, 87, 101, 107, 249, 253, 260, 273], "l": [32, 83, 87, 101, 107, 186, 190, 274, 338, 343], "idx": [32, 83, 87, 101, 107], "named_buff": [32, 83, 87, 101, 107], "remove_dupl": [32, 83, 87, 101, 107, 260], "prepend": [32, 83, 87, 101, 107, 260], "running_var": [32, 83, 87, 101, 107], "named_children": [32, 83, 87, 101, 107], "conv4": [32, 83, 87, 101, 107], "conv5": [32, 83, 87, 101, 107], "memo": [32, 83, 87, 101, 107], "named_paramet": [32, 83, 87, 101, 107, 133, 260], "register_backward_hook": [32, 83, 87, 101, 107], "removablehandl": [32, 83, 87, 101, 107], "deprec": [32, 83, 87, 101, 107, 155, 164, 168, 182, 229, 245, 247, 249, 252, 253, 258, 259, 262, 263, 264, 265, 273, 275, 276, 277, 278, 283, 348], "favor": [32, 83, 87, 101, 107, 338], "register_full_backward_hook": [32, 83, 87, 101, 107], "register_buff": [32, 83, 87, 101, 107], "running_mean": [32, 83, 87, 101, 107], "alongsid": [32, 83, 87, 101, 107, 342], "num_featur": [32, 83, 87, 101, 107], "register_forward_hook": [32, 83, 87, 101, 107, 183, 209], "with_kwarg": [32, 83, 87, 101, 107], "always_cal": [32, 83, 87, 101, 107], "posit": [32, 35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65, 83, 87, 101, 107, 129, 130, 148, 149, 152, 155, 156, 203, 265, 332, 338, 342, 343, 345], "signatur": [32, 73, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235, 332, 336, 343], "register_module_forward_hook": [32, 83, 87, 101, 107], "regardless": [32, 83, 87, 101, 107, 247, 259, 262], "register_forward_pre_hook": [32, 83, 87, 101, 107], "invok": [32, 83, 87, 101, 107], "And": [32, 83, 87, 101, 107], "forward_pr": [32, 83, 87, 101, 107], "register_module_forward_pre_hook": [32, 83, 87, 101, 107], "grad_input": [32, 83, 87, 101, 107], "grad_output": [32, 83, 87, 101, 107], "subsequ": [32, 83, 87, 101, 107, 339], "technic": [32, 83, 87, 101, 107, 337, 339], "caller": [32, 83, 87, 101, 107], "register_module_full_backward_hook": [32, 83, 87, 101, 107], "register_full_backward_pre_hook": [32, 83, 87, 101, 107], "backward_pr": [32, 83, 87, 101, 107], "register_module_full_backward_pre_hook": [32, 83, 87, 101, 107], "register_load_state_dict_post_hook": [32, 83, 87, 101, 107], "incompatible_kei": [32, 83, 87, 101, 107], "clear": [32, 83, 87, 91, 101, 107, 303], "register_modul": [32, 83, 87, 101, 107, 333], "alia": [32, 83, 87, 101, 107], "register_paramet": [32, 83, 87, 101, 107], "register_state_dict_pre_hook": [32, 83, 87, 101, 107], "keep_var": [32, 34, 36, 39, 83, 87, 101, 107, 155, 265], "requires_grad_": [32, 83, 87, 101, 107], "autograd": [32, 83, 87, 101, 107, 155, 265], "freez": [32, 83, 87, 101, 107], "finetun": [32, 83, 87, 101, 107], "gan": [32, 83, 87, 101, 107], "share_memori": [32, 83, 84, 87, 101, 107, 336], "share_memory_": [32, 83, 87, 101, 107, 347], "destin": [32, 34, 36, 39, 83, 87, 101, 107, 116, 122, 123, 125, 155, 157, 161, 170, 265, 294], "averag": [32, 83, 87, 101, 107, 155, 161, 231, 254, 255, 265, 309, 336, 338], "shallow": [32, 83, 87, 101, 107, 155, 265, 339], "pleas": [32, 53, 83, 87, 101, 102, 103, 107, 117, 152, 155, 265, 330], "detach": [32, 83, 87, 101, 107, 155, 260, 265, 275, 276, 277, 278, 336], "non_block": [32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235, 339], "memory_format": [32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235], "channels_last": [32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235], "complex": [32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235, 336, 337], "integr": [32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 179, 188, 192, 196, 235, 331, 342, 343, 344], "unchang": [32, 83, 87, 101, 107, 121, 124, 139, 151, 154, 155, 157, 159, 228, 235, 308, 336, 345], "tri": [32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235], "pin": [32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235], "4d": [32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235], "ignore_w": [32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235], "1913": [32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235], "3420": [32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235], "5113": [32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235], "2325": [32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235], "torch_doctest_cuda1": [32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235], "gpu1": [32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235], "1914": [32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235], "5112": [32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235, 343], "2324": [32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235], "float16": [32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 187, 191, 235], "cdoubl": [32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235], "3741": [32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235], "j": [32, 35, 63, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235, 333], "2382": [32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235], "5593": [32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235, 343], "4443": [32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235], "complex128": [32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235], "6122": [32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235], "1150": [32, 83, 87, 101, 107, 121, 139, 151, 154, 155, 157, 159, 235], "to_empti": [32, 83, 87, 101, 107], "dst_type": [32, 83, 87, 101, 107], "xpu": [32, 83, 87, 101, 107], "set_to_non": [32, 83, 87, 101, 107], "unidimension": 33, "keepdim": 33, "user_regist": 33, "priori": 33, "definit": [33, 72, 199], "uniqu": [33, 70, 71, 117, 126, 150, 151, 152, 345], "discretebox": [33, 83, 87, 101, 107, 338, 342, 348], "chosen_data": [34, 58], "rewarddata": [34, 58, 329], "rejected_data": [34, 58], "from_dataset": [34, 36, 58], "dataset_nam": [34, 36, 40, 45, 58, 100], "max_length": [34, 36, 37, 43, 45, 58], "550": [34, 36, 40, 45, 58, 70, 71, 343], "root_dir": [34, 36, 45, 58], "from_disk": [34, 36, 45, 58], "num_work": [34, 36, 45, 58, 98, 101, 107, 336, 337], "carperai": [34, 36, 40, 45], "openai_summarize_comparison": [34, 36, 45], "sequen": [34, 36], "cach": [34, 36, 45, 52, 53, 55, 56, 57, 58, 70, 83, 87, 101, 107, 122, 125, 139, 155, 159, 303, 344], "load_from_disk": [34, 36, 45, 58], "load_dataset": [34, 36, 45, 58], "attention_mask": [34, 36, 37, 39, 40, 43, 45, 58], "memorymappedtensor": [34, 36, 45, 60, 344], "92534": 34, "input_id": [34, 36, 37, 39, 40, 43, 45, 58], "end_scor": [34, 39, 40, 58], "sub_data": [34, 36], "from_dict": [34, 36, 39, 45], "batch_dim": [34, 36, 39, 45, 327], "determin": [34, 35, 36, 39, 41, 52, 63, 83, 87, 101, 107, 139, 159, 199, 231, 337, 342], "input_dict": [34, 36, 39], "exclusinv": [34, 36, 39], "__maximum__": [34, 36, 39], "toler": [34, 36, 39, 181, 214], "sie": [34, 36, 39], "input_td": [34, 36, 39], "from_tensordict": [34, 36, 39], "non_tensordict": [34, 36, 39], "_no_default_": [34, 36, 39], "getattr": [34, 36, 39], "tensorclass": [34, 36, 39, 58, 60, 61, 76], "from_flatten": [34, 36, 39], "attemptedli": [34, 36, 39], "memmap": [34, 36, 39, 60, 101, 107, 161, 308, 345], "copy_exist": [34, 36, 39], "return_earli": [34, 36, 39], "mimic": [34, 36, 39, 83, 87, 101, 107], "cross": [34, 36, 39, 172], "anymor": [34, 36, 39, 155, 235], "tensordictfutur": [34, 36, 39], "deepli": [34, 36, 39], "insid": [34, 36, 39, 348], "memmap_": [34, 36, 39, 161], "memmap_lik": [34, 36, 39], "contentless": [34, 36, 39], "1_000_000": [34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 56, 57, 65, 70, 336, 339], "alloc": [34, 36, 39, 61, 197, 198, 336], "setattr": [34, 36, 39], "tent": [34, 36, 39, 45], "to_tensordict": [34, 36, 39, 339], "unbind": [34, 36, 39, 188, 192], "alpha": [35, 41, 63, 173, 174, 199, 246, 252, 261, 263, 265, 336, 345, 347], "ep": [35, 41, 63, 161, 231, 247, 266, 309, 336, 337, 339], "1e": [35, 41, 63, 161, 181, 184, 203, 214, 336, 337, 338, 342], "08": [35, 41, 63, 336, 337, 338, 339, 343], "collate_fn": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65, 345, 347], "prefetch": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 58, 336, 337, 339, 345], "schaul": [35, 63], "quan": [35, 63], "antonogl": [35, 63], "silver": [35, 63], "2015": [35, 63], "arxiv": [35, 57, 63, 117, 139, 157, 175, 176, 177, 178, 179, 180, 183, 184, 185, 190, 196, 202, 204, 205, 207, 208, 210, 211, 217, 227, 231, 245, 246, 249, 250, 251, 253, 254, 255, 256, 257, 258, 261, 262, 265, 266, 275, 280, 288, 344], "ab": [35, 57, 63, 116, 139, 157, 161, 175, 180, 184, 185, 190, 196, 202, 204, 205, 207, 208, 210, 211, 217, 245, 246, 249, 250, 251, 254, 255, 256, 257, 258, 261, 262, 265, 344], "1511": [35, 63, 185], "05952": [35, 63], "expon": [35, 41, 63], "\u03b1": [35, 41, 63], "delta": [35, 41, 63, 186, 190, 214, 232, 236, 329, 332], "null": [35, 41, 63, 115], "max_siz": [35, 38, 41, 42, 60, 61, 62, 72, 76], "1_000": [35, 38, 41, 42, 345], "merg": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 343], "mini": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 342], "decid": [35, 38, 41, 42, 347], "meth": [35, 38, 41, 42, 260, 343], "incompat": [35, 38, 41, 42, 345], "drop_last": [35, 38, 41, 42, 69, 71], "return_info": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65, 345], "tensordictprioritizedreplaybuff": [35, 329, 347], "simplifi": [35, 343, 345], "manual_se": [35, 38, 41, 42, 56, 57, 70, 71, 114, 124, 135, 143, 146, 150, 152, 197, 198, 206, 220, 227, 228, 229, 231, 239, 245, 246, 248, 258, 265, 342, 343, 347, 348], "_weight": [35, 41, 345, 347], "arrai": [35, 40, 126, 186, 187, 190, 191, 336, 345], "update_prior": [35, 63, 308, 333, 337, 345, 347], "36278465": 35, "tempfil": [35, 38, 41, 42, 45, 52, 53, 54, 55, 56, 57, 65, 323, 336, 337, 345], "tqdm": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65, 311, 336, 338, 339, 342, 343], "randomsampl": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65, 329, 336], "td_error": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65, 248, 249, 251, 252, 253, 258, 260, 263, 265, 267, 273, 336, 345, 347], "update_tensordict_prior": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65, 336, 345, 347], "temporarydirectori": [35, 38, 41, 42, 45, 52, 53, 54, 55, 56, 57, 65, 336, 337, 345], "tmpdir": [35, 38, 41, 42, 45, 52, 53, 54, 55, 56, 57, 65, 336, 337], "rb_load": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65], "cursor": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65], "insert_transform": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 65], "insert": [35, 38, 41, 42, 52, 53, 54, 55, 56, 57, 59, 65, 66, 74, 75, 77, 78, 156], "prompt_rindex": [36, 37, 40], "label": [36, 37, 40, 45, 336, 345], "os": [36, 45, 58, 337], "cpu_count": [36, 45, 58], "promptdatatldr": 36, "116722": 36, "prompt": [37, 40], "return_tensordict": [37, 43], "recip": [37, 83, 87, 101, 107, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 199, 200, 203, 204, 205, 207, 210, 211, 213, 218, 224, 225, 227, 228, 229, 231, 234, 239, 242], "text": [37, 40, 43, 53, 186, 187, 190, 191, 231, 338], "tensodict": [37, 43], "orign": [37, 43], "valid_sampl": 37, "identifi": 37, "eough": 37, "toknen": 37, "meet": 37, "criterion": 37, "autotoken": [37, 43, 45], "from_pretrain": [37, 40, 43], "gpt2": [37, 40, 43, 45, 175, 180, 207], "pad_token": [37, 43], "eos_token": 37, "enough": [37, 345], "inde": [37, 124, 338, 343], "roundrobinwrit": [38, 42, 52, 53, 54, 55, 56, 57, 329], "Not": 38, "ref_model": 40, "reward_model": [40, 241], "kl_coef": 40, "max_new_token": 40, "score_clip": 40, "kl_schedul": 40, "klcontrollerbas": 40, "num_step": 40, "causal": 40, "sentenc": 40, "frozen": [40, 133], "kl": [40, 133, 255, 259], "penalti": [40, 259], "strai": 40, "far": [40, 189, 215, 216, 343, 348], "calcul": [40, 143, 186, 251], "gpt2rewardmodel": 40, "get_dataload": [40, 329], "promptdata": [40, 329], "gpt2lmheadmodel": 40, "dl": 40, "block_siz": [40, 58], "tensorclass_typ": [40, 58], "openai_summarize_tldr": 40, "config_class": 40, "model_path": 40, "rollout_from_model": 40, "rollout_from_data": 40, "600": [40, 343, 345], "reward_kl": [40, 133], "reward_raw": 40, "sample_log_prob": [40, 221, 222, 223, 232, 236, 238, 262, 320, 338, 342, 347], "create_rollout_td": 40, "log_prob": [40, 181, 197, 198, 206, 216, 236], "log_ratio": 40, "replic": 40, "rindex": 40, "multipli": [40, 186, 190, 246, 247, 252, 259, 261, 262, 263, 265, 309, 336], "term": [40, 133, 190, 191, 201, 202, 244, 245, 252, 313, 337, 338, 342], "subtract": [40, 150], "ve": [40, 336, 339], "eo": 40, "limit": [40, 97, 117, 133, 336, 337, 339, 342, 343], "generation_config": 40, "generationconfig": 40, "ti": [40, 284, 285, 286, 287, 289, 290, 291, 292, 337], "log_probs_gen": 40, "logprobs_of_label": 40, "priority_kei": [41, 42, 249, 252, 253, 258, 260, 263, 265, 267, 273, 345, 347], "reduct": [41, 63], "prioritizedreplaybuff": [41, 329, 347], "min": [41, 63, 214, 215, 216, 225, 231, 246, 247, 252, 261, 263, 265, 337, 338, 342], "median": [41, 63, 232, 236], "include_info": [41, 42, 52, 53, 54, 55, 56, 57], "kw": [42, 66, 75], "int32": [42, 55, 70, 93, 167], "huggingfac": [43, 57, 230], "co": [43, 126, 343], "doc": [43, 337, 342], "pad_trunc": 43, "am": 43, "worri": 43, "me": 43, "reassur": 43, "ok": 43, "tokenizer_fn": 45, "tensordicttoken": [45, 329], "pre_tokenization_hook": 45, "valid_s": 45, "tokenizer_class": 45, "tokenizer_model_nam": 45, "tokein": 45, "condit": [45, 150, 226, 227, 233, 234, 244, 336, 343, 345], "elementwis": 45, "vocabulari": 45, "loader": [45, 338], "185068": 45, "dataset_to_tensordict": 45, "data_dir": 45, "nestedkei": [45, 70, 71, 114, 115, 116, 117, 118, 119, 120, 122, 124, 125, 126, 127, 129, 131, 132, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 157, 161, 170, 171, 224, 225, 228, 229, 231, 236, 249, 273, 294], "valid_mask_kei": 45, "conver": 45, "undergon": 45, "preprocess": [45, 337], "batch_dimens": 45, "filder": 45, "data_memmap": 45, "exclus": [48, 49, 55, 70, 71, 129, 186, 188, 190, 192, 197, 198, 226, 227, 233, 234, 266, 267, 275, 276, 277, 278, 279, 327, 331], "recurse_through_entri": 49, "recurse_through_stack": 49, "consolid": 49, "from_env": 52, "use_truncated_as_don": 52, "direct_download": 52, "terminate_on_end": 52, "env_kwarg": [52, 56, 57, 325, 326, 336], "reconstruct": [52, 70, 71, 255, 336, 348], "recov": [52, 53, 55, 56, 57, 70, 71, 224, 229, 231, 237, 258, 341], "regard": [52, 53, 55, 56, 57, 183, 227, 245, 253, 262, 336, 338, 343], "get_dataset": 52, "qlearning_dataset": 52, "fewer": 52, "left": [52, 55, 121, 122, 123, 127, 133, 139, 141, 147, 149, 152, 154, 157, 159, 228, 337, 338], "possess": 52, "unexpectedli": 52, "absent": [52, 83, 87, 101, 107], "traj_split": 52, "dataset_id": [52, 53, 55, 56, 57], "observationnorm": [52, 161, 327, 336, 337, 338, 339, 347], "maze2d": 52, "umaz": 52, "128": [52, 55, 71, 177, 180, 337, 339, 343, 344, 345], "loc": [52, 133, 135, 145, 189, 203, 215, 216, 221, 222, 223, 232, 236, 238, 245, 246, 258, 262, 263, 264, 265, 315, 320, 327, 331, 336, 337, 338, 339, 342, 347], "minari": [53, 55], "available_dataset": [53, 55, 56, 57, 70, 71], "currenrtli": 53, "minari_data": 53, "door": 53, "28": [53, 199, 337, 338, 343, 345], "39": [53, 335, 337, 338, 342, 343, 344, 346], "door_body_po": 53, "qpo": 53, "30": [53, 134, 210, 211, 336, 337, 338, 342, 343], "qvel": 53, "dua": 54, "graff": 54, "2017": 54, "uci": 54, "archiv": 54, "ic": 54, "edu": 54, "ml": 54, "sklearn": 54, "adult_num": [54, 100], "adult_onehot": [54, 100], "mushroom_num": [54, 100], "mushroom_onehot": [54, 100], "covertyp": [54, 100], "shuttl": [54, 100], "magic": [54, 100], "shuffl": [55, 69, 71, 342], "num_slic": [55, 70, 71], "slice_len": [55, 70, 71], "stream": 55, "strict_length": [55, 70, 71], "embodi": [55, 344], "22": [55, 70, 71, 160, 336, 337, 338, 343, 344], "institut": 55, "demonstr": [55, 338, 342, 343, 348], "527": [55, 343], "skill": 55, "160266": 55, "nontensordata": 55, "language_instruct": 55, "get_non_tensor": 55, "refin": [55, 245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 273], "neither": [55, 343], "nor": 55, "shorter": [55, 70, 71], "insuffici": 55, "chosen": [55, 150, 151, 208, 209, 217, 234, 320, 331], "__will": 55, "change__": 55, "untouch": [55, 121, 122, 123, 127, 133, 141, 147, 149, 154], "randomli": [55, 69, 134, 135, 151, 228, 232, 236, 342, 343, 345], "crop": [55, 119, 140, 294], "modal": [55, 336], "Be": [55, 70, 71], "cmu_stretch": 55, "is_init": [55, 57, 116, 132, 188, 192, 231, 339], "language_embed": 55, "512": [55, 185, 337, 343, 345], "lift": 55, "green": 55, "garbag": 55, "lid": 55, "roboset": 56, "h5": [56, 57], "mmap": [56, 57], "googl": [56, 79, 80, 338, 339, 342], "roboh": [56, 104], "excludetransform": [56, 147, 345], "fk1": 56, "v4": [56, 142, 284, 285, 286, 287, 289, 290, 291, 292, 336, 338, 344], "expert": 56, "fk1_microopenrandom_v2d": 56, "concis": 56, "17": [56, 71, 320, 336, 337, 338, 339, 343], "18": [56, 71, 105, 106, 108, 109, 200, 336, 337, 339, 342, 343, 344, 348], "15": [56, 71, 83, 87, 101, 107, 225, 231, 254, 335, 336, 337, 343, 345, 346], "19": [56, 70, 71, 74, 337, 338, 339, 343], "75": [56, 337, 343, 345], "totensor": 57, "image_s": 57, "v": [57, 161, 186, 187, 190, 191, 221, 258, 265, 331, 336, 337], "npz": 57, "2206": 57, "04779": [57, 246, 251], "vd4rl": 57, "detect": 57, "squar": [57, 119, 189, 215, 216, 294], "rectangular": [57, 173, 174], "internet": 57, "connect": 57, "walker_walk": 57, "64px": 57, "height": [57, 119, 142], "veloc": [57, 117, 342, 343, 348], "infinit": [58, 345], "three": [58, 331, 333, 338, 342, 343, 345, 348], "block": [58, 59, 78, 331, 339], "pairwisedataset": [58, 329], "256": [58, 180, 337, 338, 342, 343], "immut": [59, 83, 87, 101, 107, 141, 155], "piec": [59, 66, 75, 77, 78, 336, 337, 338, 342, 343, 345], "scratch_dir": [60, 336, 345], "mistak": [60, 61, 76], "myclass": [60, 61, 76], "foo": [60, 61, 76, 225, 345, 348], "bar": [60, 61, 76, 225, 304, 305, 307, 311, 333, 337], "attach": [60, 61, 62, 72, 73, 76, 337], "entiti": [60, 61, 62, 72, 73, 76], "auto": [61, 76, 160, 231, 246, 252, 261, 263, 265, 267, 332, 342], "zero_": [61, 76, 167], "max_capac": [63, 336, 345], "uniformli": [64, 260, 348], "storageensembl": [65, 68], "samplerensembl": 65, "writerensembl": [65, 73], "sample_from_al": [65, 68], "num_buffer_sampl": [65, 68], "ensembl": [65, 68, 73, 78, 235, 263], "forbidden": 65, "collat": 65, "0x13a2ef430": 65, "0x13a2f9310": 65, "interpol": [65, 142, 337, 339], "interpolationmod": [65, 339], "bilinear": [65, 142, 339], "0x13a2f9220": 65, "0x13a2f9f70": 65, "0x13a2d9b50": 65, "0x13a2f95b0": 65, "0x128648260": 65, "roundrobin": [66, 75], "buffer_id": [68, 73], "consum": [69, 71, 337, 338, 342, 345], "incomplet": [69, 71], "fresh": 69, "caution": [69, 163, 348], "haven": [69, 344], "remain": [69, 116, 123, 124, 133, 150, 202], "draw": [69, 228], "end_kei": [70, 71], "traj_kei": [70, 71], "cache_valu": 70, "truncated_kei": [70, 71, 143, 149], "slicesamplerwithoutreplac": [70, 329], "Will": [70, 294], "320": [70, 71, 337, 343, 348], "700": [70, 71], "robosetexperiencereplai": [70, 71, 329], "dataid": [70, 71], "__len__": 72, "rank_kei": 74, "rank": [74, 172], "samplerwithoutreplac": [74, 329, 338, 342, 345], "get_insert_index": 74, "ant": [79, 80, 90, 344], "get_environ": 80, "87": [80, 336, 337, 343], "acrobot": [80, 348], "fetch": [80, 133, 344, 345], "task_nam": 81, "cheetah": [81, 82, 336], "frame_skip": [81, 82, 86, 87, 92, 94, 95, 130, 304, 307, 314, 333, 336, 337, 338, 347], "dm_control": [82, 336, 341, 348], "continuousbox": [83, 87, 101, 107, 167, 338, 342, 343, 347, 348], "unboundedcontinuoustensorspec": [83, 87, 97, 101, 107, 114, 122, 125, 151, 167, 172, 196, 220, 235, 238, 240, 264, 329, 338, 339, 342, 343, 348], "sort": [83, 87, 101, 107, 231], "depth": [83, 87, 97, 101, 107, 172, 173, 174, 176, 177, 178, 179, 184, 185, 194, 196, 199, 200, 204, 205, 226, 331, 337, 341, 342], "another_act": [83, 87, 101, 107], "mutabl": [83, 87, 101, 107], "batch_lock": [83, 85, 87, 101, 107, 151, 155, 343], "done_keys_group": [83, 87, 101, 107], "outer": [83, 87, 101, 107, 333, 336, 337, 348], "another_don": [83, 87, 101, 107], "empty_cach": [83, 87, 101, 107, 155], "fake_tensordict": [83, 87, 101, 107, 337], "fake": [83, 87, 101, 107, 336, 337], "afterward": [83, 87, 101, 107, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 199, 200, 203, 204, 205, 207, 210, 211, 213, 218, 224, 225, 227, 228, 229, 231, 234, 239, 242, 348], "silent": [83, 87, 101, 107, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 199, 200, 203, 204, 205, 207, 210, 211, 213, 218, 224, 225, 227, 228, 229, 231, 234, 239, 242], "braxenv": [83, 87, 101, 107, 141, 329], "envnam": [83, 87, 101, 107], "pipeline_st": [83, 87, 101, 107], "attibut": [83, 87, 101, 107], "speak": [83, 87, 101, 107, 336], "rand_act": [83, 87, 96, 101, 102, 103, 107], "_step": [83, 87, 101, 107, 114, 122, 125, 129, 141], "reset_kei": [83, 87, 101, 107, 117, 146, 150, 151, 152], "multitask": [83, 87, 101, 107], "multiag": [83, 87, 96, 101, 102, 103, 107, 171, 200, 208, 217, 273], "another_reward": [83, 87, 101, 107], "callback": [83, 87, 101, 107, 342], "auto_reset": [83, 87, 101, 107, 343], "auto_cast_to_devic": [83, 87, 101, 107, 342], "break_when_any_don": [83, 87, 101, 107, 342], "return_contigu": [83, 87, 101, 107, 163, 341], "soon": [83, 87, 101, 102, 103, 107], "ndim": [83, 87, 101, 107], "concomitt": [83, 87, 101, 107], "workspac": [83, 87, 101, 107], "prevail": [83, 87, 101, 107, 146, 171], "cartpol": [83, 87, 101, 107, 117, 146, 150, 337, 339, 345, 348], "creator": [84, 316, 317, 325, 326, 327], "substitut": [84, 150, 161], "vecnorm": [84, 327], "env_creat": [84, 336], "test_env1": 84, "observation_count": [84, 348], "test_env2": 84, "sleep": [84, 348], "ps": 84, "p1": 84, "p2": 84, "9934": 84, "env_str": 85, "info_dict_read": 87, "set_info_dict_read": 87, "put": [87, 109, 161, 327, 331, 337, 338, 339, 343], "read_act": 87, "read_don": 87, "reader": [87, 337], "interrupt": [87, 281], "nonsens": 87, "fallback": 87, "broken": [87, 163], "read_ob": 87, "dictat": [87, 232, 236, 262, 336, 343], "read_reward": 87, "baseinfodictread": 87, "info_dict": 87, "hoc": 87, "dict_read": 87, "default_info_dict_read": 87, "my_info_kei": 87, "some_env": 87, "placehold": [89, 126, 155], "secur": 89, "isaacgym": [90, 91], "isaacgymwrapp": [90, 329], "isaacgymenv": [91, 329], "webpag": 91, "isaac": 91, "essenc": 91, "04": [91, 335, 336, 337, 343, 344, 346], "snake": [92, 93], "6x6": [92, 93], "td1": [93, 245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 273, 336], "12x12": 93, "tsp50": 93, "tsp100": 93, "mo": [94, 95], "minecart": [94, 95], "mo_gym": 95, "qualnam": 96, "marl": [96, 110, 117, 152, 199, 342], "leverag": [96, 102, 103, 336, 342, 348], "neural": [96, 102, 103, 173, 174, 212, 235, 331, 337, 338, 339, 342, 343, 348], "group_map": [96, 102, 103, 109, 110], "constructiuon": [96, 102, 103], "premad": [96, 102, 103, 109, 273], "all_in_one_group": [96, 110], "agent_0": [96, 102, 103, 110], "agent_1": [96, 102, 103, 110], "agent_2": [96, 102, 103, 110], "agent_3": 96, "int8": [96, 102, 103], "one_group_per_ag": [96, 102, 103], "environn": 97, "constraint": [97, 338, 342], "mymbenv": [97, 172, 196], "world_model": [97, 172, 196, 255], "super": [97, 114, 122, 125, 172, 183, 196, 240, 246, 248, 252, 258, 263, 265, 267, 336, 343, 347], "hidden_observ": [97, 172, 196], "mlp": [97, 172, 173, 174, 176, 177, 178, 179, 188, 192, 193, 196, 200, 221, 226, 249, 251, 320, 331, 337, 341, 344, 347], "worldmodelwrapp": [97, 172, 196], "activation_class": [97, 172, 173, 174, 176, 177, 178, 179, 184, 185, 194, 196, 199, 200, 337, 342, 347], "relu": [97, 172, 180, 196, 203, 244], "activate_last_lay": [97, 172, 179, 194, 196], "run_type_check": 97, "less": [98, 218, 325, 326, 332, 338, 339, 345, 347], "readthedoc": 98, "en": 98, "python_interfac": 98, "task_id": 98, "106": [100, 343], "my_env_fun": [101, 107], "custom_attribute_list": [101, 107], "custom_attribut": [101, 107], "custom_method_list": [101, 107], "custom_method": [101, 107], "deploi": [101, 107], "slight": [101, 107, 337], "share_individual_td": [101, 107], "shared_memori": [101, 107], "policy_proof": [101, 107], "ll": [101, 107, 186, 187, 190, 191, 336, 337, 338, 339, 342, 348], "hidden": [101, 107, 116, 184, 186, 187, 188, 190, 191, 192, 193, 204, 205, 210, 211, 221, 222, 223, 225, 235, 238, 247, 259, 262, 331, 339, 341, 347], "introduc": [101, 107, 186, 188, 190, 192, 231, 336], "drastic": [101, 345], "influenc": 101, "rule": [101, 122, 125, 236, 331, 338], "thumb": [101, 338], "suppos": [101, 307, 333, 348], "scenario": [101, 108, 109, 336, 342, 343], "myenv": [101, 122, 125], "update_kwarg": [101, 107], "pettingzoo": [102, 103], "pet": [102, 103], "zoo": [102, 103], "guid": [102, 103, 105, 106, 150, 330, 336, 342], "__": [102, 103], "aecenv": [102, 103], "use_mask": [102, 103], "dead": [102, 103], "compulsori": [102, 103], "adversary_0": [102, 103], "adversari": [102, 103], "marlgroupmaptyp": [102, 103, 109, 110, 329], "vectoris": [102, 103, 186, 187, 190, 191], "multiwalker_v9": 102, "return_st": [102, 103], "categorical_act": [102, 103, 105, 106, 109], "n_piston": [102, 103], "pistonball_v6": [102, 103], "piston": [102, 103], "piston_0": [102, 103], "piston_1": [102, 103], "piston_20": [102, 103], "aec": [102, 103], "tictactoe_v3": [102, 103], "player": [102, 103], "player_1": [102, 103], "player_2": [102, 103], "butterfli": 103, "parallel_env": [103, 336, 347, 348], "vikashplu": 104, "read_info": 104, "pars": [104, 345], "smacv2": [105, 106], "starcraft": [105, 106], "challeng": [105, 106, 343, 344], "v2": [105, 106, 270, 284, 285, 286, 287, 289, 290, 291, 292, 320, 339], "10gen_terran": [105, 106], "10gen_zerg": [105, 106], "10gen_protoss": [105, 106], "3m": [105, 106], "8m": [105, 106, 344], "25m": [105, 106], "5m_vs_6m": [105, 106], "8m_vs_9m": [105, 106], "10m_vs_11m": [105, 106], "27m_vs_30m": [105, 106], "mmm": [105, 106], "mmm2": [105, 106], "2s3z": [105, 106], "3s5z": [105, 106], "3s5z_vs_3s6z": [105, 106], "3s_vs_3z": [105, 106], "3s_vs_4z": [105, 106], "3s_vs_5z": [105, 106], "1c3s5z": [105, 106], "2m_vs_1z": [105, 106], "corridor": [105, 106], "6h_vs_8z": [105, 106], "2s_vs_1sc": [105, 106], "so_many_banel": [105, 106], "bane_vs_ban": [105, 106], "2c_vs_64zg": [105, 106], "old": [105, 106, 259, 348], "smac": [105, 106], "map_nam": [105, 106], "176": [105, 106, 343], "battle_won": [105, 106], "dead_al": [105, 106], "dead_enemi": [105, 106], "episode_limit": [105, 106], "322": [105, 106, 343], "Or": [105, 106, 199], "procedur": [105, 106], "distribution_config": [105, 106], "n_unit": [105, 106], "n_enemi": [105, 106], "team_gen": [105, 106], "dist_typ": [105, 106], "weighted_team": [105, 106], "unit_typ": [105, 106], "marin": [105, 106], "maraud": [105, 106], "medivac": [105, 106], "exception_unit_typ": [105, 106], "start_posit": [105, 106], "surrounded_and_reflect": [105, 106], "map_x": [105, 106], "map_i": [105, 106], "capability_config": [105, 106], "88": [105, 106, 336, 337, 343, 345], "131": [105, 106, 343, 345], "starcraft2env": 106, "flock": [108, 109], "continuous_act": [108, 109, 342], "agent_collision_rew": [108, 109], "agent_distance_rew": [108, 109], "agent_nam": [109, 110], "agent_names_to_indices_map": 109, "unbatched_action_spec": [109, 342], "unbatched_observation_spec": 109, "unbatched_reward_spec": 109, "het_spec": 109, "het_specs_map": 109, "ca": 110, "environment4": 110, "get_group_map": 110, "sumbodul": 111, "model_bas": [112, 172, 196], "adapt": [114, 259, 336, 343], "masker": 114, "binarydiscretetensorspec": [114, 249, 252, 273, 329], "maskedenv": 114, "ones_lik": 114, "scatter": 114, "unsqueez": [114, 117, 118, 153, 156, 193, 336, 339, 342, 343], "_set_se": [114, 122, 125, 343], "transform_reward_spec": [115, 120, 121, 122, 123, 127, 133, 141, 144, 145, 147, 149, 154, 156], "tensordictmodulebas": [116, 218, 226, 233, 339], "burn_in": 116, "burn": 116, "date": [116, 297], "retur": 116, "burnt": 116, "grumodul": 116, "gru_modul": [116, 188], "input_s": [116, 186, 187, 188, 190, 191, 192, 193, 339], "hidden_s": [116, 186, 187, 188, 190, 191, 192, 193, 339], "set_recurrent_mod": [116, 188, 192, 339], "burn_in_transform": 116, "gru": [116, 187, 188], "num_lay": [116, 186, 188, 190, 192, 204, 205], "86": [116, 336, 337, 343, 344], "3008": [116, 337], "37": [116, 335, 337, 338, 342, 343, 346], "0344": 116, "padding_valu": [117, 197, 198], "as_invers": 117, "account": [117, 197, 198, 331, 337, 339, 345, 348], "movement": 117, "pdf": [117, 175, 176, 177, 178, 179, 183, 207, 227, 231, 253, 263, 266, 275, 280, 288, 320], "1312": [117, 337], "5602": 117, "constant": [117, 135, 150, 333, 336, 338, 339, 348], "unsqueezetransform": [117, 343, 345], "consumpt": 117, "followin": 117, "pictur": 117, "pixels_trsf": [117, 345], "grayscal": [117, 337, 339, 345, 348], "data_exclud": [117, 345], "transform_observation_spec": [117, 118, 119, 120, 121, 122, 123, 126, 127, 129, 131, 132, 133, 135, 137, 141, 142, 146, 147, 149, 150, 151, 152, 153, 154, 156, 157, 160, 343], "del_kei": [118, 157, 341, 343], "unsqueeze_if_oor": 118, "observation_posit": 118, "observation_veloc": 118, "delet": 118, "key1": [118, 302, 310], "key2": [118, 302, 310], "center": [119, 294], "width": [119, 142], "out_keys_inv": [120, 122, 125, 135, 136, 137, 141, 154, 343], "scalar": [120, 144, 177, 179, 201, 202, 224, 228, 229, 231, 242, 245, 246, 247, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 273, 275, 276, 277, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 331, 337, 343], "permit": [120, 129, 156], "rewardsc": [121, 155, 336, 337, 339], "rewardclip": 121, "transformed_env": [121, 154, 155], "transform_env_devic": [121, 123, 154], "transform_input_spec": [121, 122, 123, 124, 135, 137, 141, 146, 149, 150, 151, 154, 156, 158], "transform_output_spec": [121, 122, 123, 127, 133, 141, 147, 149, 154], "transformfull_done_spec": [121, 122, 123, 127, 133, 141, 147, 149, 154], "dtype_in": 122, "dtype_out": 122, "scan": [122, 125, 237, 238], "resp": [122, 125], "not_transform": [122, 125], "constructedw": [122, 125], "orig_devic": 123, "unspecifi": 123, "transform_done_spec": [123, 154], "num_actions_effect": 124, "max_act": 124, "include_forward": 124, "dimension": [124, 188, 192, 275, 280, 288, 342], "num_act": [124, 252], "action_out": 124, "_call": [124, 129, 343], "eol_kei": 126, "life": 126, "lives_kei": 126, "eol_attribut": 126, "unwrap": 126, "al": [126, 137, 172, 348], "breakout": 126, "v5": [126, 137, 348], "210": [126, 137, 343, 348], "160": [126, 137, 337, 343, 348], "eol_transform": 126, "eol": 126, "dqnloss": [126, 245, 246, 248, 251, 252, 253, 254, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 273, 318, 329, 332, 337, 339], "action_spac": [126, 183, 209, 226, 227, 233, 234, 245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 273, 339], "register_kei": 126, "loss_or_advantag": 126, "lossmodul": [126, 311, 322, 323, 329], "valueestimatorbas": [126, 260, 329], "excluded_kei": 127, "finit": [128, 345], "first_dim": 129, "last_dim": 129, "allow_positive_dim": [129, 156], "th": [129, 156, 186, 190, 343], "frameskip": 129, "repeatedli": [130, 338, 342], "init_kei": 132, "tracker": 132, "coef": 133, "pi_curr": 133, "pi_0": 133, "overfit": 133, "probabilist": [133, 232, 329, 338, 347], "get_dist": [133, 236, 237], "mod": [133, 188, 192, 239, 339], "normalparamextractor": [133, 331, 338, 342], "probabilisticactor": [133, 221, 222, 223, 225, 245, 246, 250, 252, 258, 261, 262, 263, 264, 265, 267, 331, 336, 338, 342], "tanhnorm": [133, 221, 222, 223, 232, 238, 245, 246, 258, 262, 263, 264, 265, 267, 329, 338, 342, 347], "n_ob": [133, 245, 246, 248, 249, 251, 252, 258, 262, 263, 264, 265, 267], "n_act": [133, 245, 246, 248, 249, 251, 252, 258, 262, 263, 264, 265, 267], "return_log_prob": [133, 221, 222, 223, 232, 236, 238, 264, 331, 338, 342, 347], "apply_": 133, "copy_": [133, 336], "formulat": 133, "diverg": [133, 188, 192, 232, 236, 255, 259], "noop": [134, 347], "trial": 134, "op": [134, 160, 224, 228, 229, 313], "standard_norm": [135, 145, 336, 337, 339], "affin": [135, 145], "layer": [135, 161, 173, 174, 176, 177, 184, 186, 187, 188, 190, 191, 192, 194, 199, 200, 201, 202, 204, 205, 212, 213, 219, 230, 239, 331, 337, 338, 339, 344], "normal": [135, 161, 173, 174, 189, 194, 197, 198, 203, 215, 216, 224, 232, 236, 247, 259, 262, 307, 309, 327, 331, 333, 339, 342, 348], "set_default_tensor_typ": 135, "doubletensor": 135, "isclos": 135, "next_ob": [135, 275, 276, 277, 278, 347], "rubric": [135, 238], "init_stat": [135, 336, 337, 338, 339], "3752e": 135, "01": [135, 231, 242, 247, 259, 262, 335, 336, 337, 339, 342, 343, 344, 346], "5087e": 135, "03": [135, 335, 336, 337, 338, 343, 344, 346], "9294e": 135, "9636": 135, "5608": 135, "6408": 135, "num_it": [135, 337, 338], "reduce_dim": [135, 336, 337, 338, 339], "cat_dim": [135, 336, 337, 338, 339], "keep_dim": [135, 337, 339], "statist": [135, 161, 264, 327, 336, 337, 338, 348], "approach": [135, 336, 338, 348], "gaussian": [135, 151, 172, 196, 201, 202, 207, 224, 338], "empir": [135, 172, 196, 232, 236, 336, 338, 342], "3d": [135, 173], "third": [135, 227, 342], "reorder": 137, "in_keys_in": 137, "pong": [137, 348], "channel": [137, 153, 199, 204, 205, 337], "r3m": [139, 344], "resnet": [139, 157, 159], "visual": [139, 157, 159, 338, 343], "embed": [139, 157, 158, 159, 208, 220, 221, 222, 223, 235, 240, 344], "ego4d": [139, 157, 159], "univers": [139, 157, 159], "suraj": [139, 157], "nair": [139, 157], "aravind": [139, 157], "rajeswaran": [139, 157], "vikash": [139, 157, 159], "kumar": [139, 157, 159], "chelsea": [139, 157], "finn": [139, 157], "abhinav": [139, 157], "gupta": [139, 157], "2203": [139, 157, 196, 344], "12601": [139, 157, 344], "_init": [139, 157, 336], "snippet": [139, 157, 336], "resnet50": [139, 159, 344], "model_nam": [139, 157, 159, 297], "resnet34": 139, "resnet18": 139, "r3m_vec": [139, 344], "feed": [139, 159, 260, 331, 336, 342, 345], "stack_imag": [139, 159], "tread": [139, 159], "separet": [139, 159], "hub": [139, 159, 344], "resnet50_weight": [139, 159], "imagenet1k_v1": [139, 159], "download_path": [139, 159], "tensor_pixels_kei": [139, 159], "dest": [139, 157, 159, 235], "sub_seq_len": 140, "sample_dim": [140, 336], "primarili": 140, "hesit": 140, "request": 140, "robust": 140, "mix": [140, 208, 217, 273, 336, 342], "improp": 140, "create_copi": 141, "stuff": 141, "newnam": 141, "84": [142, 336, 337, 339, 343], "halfcheetah": [142, 320, 336], "r2g": 143, "99": [143, 161, 196, 256, 269, 274, 281, 323, 336, 337, 338, 343, 347], "reward_to_go": 143, "bernoulli_": 143, "9010": 143, "9404": [143, 281], "9701": [143, 281], "9900": [143, 281], "0000": [143, 152, 228, 229, 239, 281, 338, 339, 343, 347], "crash": 143, "clamp_min": 144, "clamp_max": 144, "clip_min": 144, "clip_max": 144, "episode_": 146, "reward1": 146, "reward2": 146, "episode_reward": [146, 342], "keep_reward": 147, "keep_don": 147, "squeeze_dim": 148, "step_count_kei": 149, "update_don": 149, "adaptec": 149, "accordingli": [149, 150, 190, 233, 339], "completet": 149, "recognis": 149, "accompani": 149, "target_return": 150, "primer": [151, 339], "default_valu": [151, 339], "unit": [151, 172, 184, 186, 187, 204, 205, 210, 211, 338], "transfomedenv": 151, "mykei": 151, "__unless": 151, "exists__": 151, "pool": 152, "increas": [152, 231, 342], "10th": 152, "0216": 152, "1149": 152, "1990": 152, "2749": 152, "3281": 152, "9290": 152, "3702": 152, "8978": 152, "from_int": 153, "shape_toler": 153, "permuat": 153, "ri": 153, "principl": 154, "cattransform": 154, "notabl": 154, "rewardsum": [154, 342], "cache_spec": 155, "set_missing_toler": 155, "keyerror": 155, "unsqueeze_dim": [156, 343], "danger": 156, "vc1": 157, "vc1_vec": 157, "small": [157, 336, 338, 342, 348], "untrain": 157, "make_noload_model": 157, "naiv": 157, "vip": [158, 159, 344], "toward": 159, "implicit": [159, 258, 345], "jason": 159, "ma": 159, "shagun": 159, "sodhani": 159, "dinesh": 159, "jayaraman": 159, "osbert": 159, "bastani": 159, "ami": 159, "zhang": 159, "vip_vec": 159, "final_nam": 160, "sb3": 160, "terminal_obs_read": 160, "truli": [160, 347], "till": 160, "did": [160, 281, 337, 338, 345, 348], "nan": 160, "shared_td": 161, "decai": [161, 224, 228, 229, 266, 309, 336, 337, 339, 348], "9999": [161, 343], "0001": [161, 184, 203, 338, 343], "fly": [161, 259, 332, 338, 343, 345, 348], "to_observation_norm": 161, "underflow": [161, 309], "build_td_for_shared_vecnorm": 161, "memmori": 161, "queue": [161, 345], "td_share": 161, "state_dim": [162, 175, 180, 207, 210, 211, 225], "action_dim": [162, 175, 176, 178, 180, 207, 225, 336, 341], "gsde": [162, 263, 327], "func": 162, "gsdemodul": 162, "check_dtyp": 163, "short": [163, 190, 191, 337, 338, 342], "discrep": [163, 245, 247, 248, 249, 259, 262, 264, 273], "imposs": 163, "probabilistictdmodul": [168, 169, 194, 232, 236, 274, 307], "next_tensordict": 170, "keep_oth": [170, 343], "exclude_reward": 170, "exclude_don": 170, "exclude_act": 170, "next_": 170, "funtion": 170, "write_full_fals": 171, "leav": [171, 336], "_terminated_or_trunc": 171, "entropi": [172, 245, 246, 247, 252, 258, 259, 261, 262, 263, 265, 267, 342], "botev": 172, "et": 172, "2013": 172, "cem": 172, "plan": [172, 195, 196], "varianc": [172, 189, 203, 215, 216, 332, 336, 338, 342], "k": [172, 186, 187, 190, 191], "repeat": [172, 338, 342, 343], "maximis": [172, 176, 178, 196, 331, 336, 337, 338, 342], "horizon": [172, 196, 338], "modelbasedenv": [172, 196], "planning_horizon": [172, 196], "optim_step": [172, 196, 337], "mpc": [172, 195, 196], "num_candid": [172, 196], "candid": [172, 196], "top_k": [172, 196], "modelbasedenvbas": [172, 195, 196, 329], "safemodul": [172, 195, 221, 223, 236, 245, 246, 252, 258, 262, 263, 264, 265, 267, 316, 317, 323, 329, 347], "num_cel": [173, 174, 176, 177, 178, 179, 184, 185, 188, 192, 194, 199, 200, 221, 337, 338, 339, 342, 347], "elu": [173, 174, 176, 177, 178, 179, 184, 185, 199, 337, 347], "activation_kwarg": [173, 174, 194], "norm_class": [173, 174, 176, 177, 194], "norm_kwarg": [173, 174, 194], "bias_last_lay": [173, 174, 176, 177, 178, 179, 185, 194], "aggregator_class": [173, 174, 176, 177, 337, 339, 347], "squashdim": [173, 174, 176, 199, 347], "aggregator_kwarg": [173, 174, 176, 177, 337, 339], "squeeze_output": [173, 174, 176, 177, 337, 339], "convolut": [173, 174, 176, 177, 199, 212], "produc": [173, 174, 194, 200, 206, 221, 223, 225, 294, 338, 339, 345, 348], "cell": [173, 174, 186, 187, 188, 190, 191, 192, 194, 199, 200, 338], "kernel": [173, 174, 185, 193, 199], "cnet": [173, 174], "conv3d": 173, "34": [173, 174, 194, 337, 339, 343], "35": [173, 174, 194, 336, 337, 343, 344], "transformer_config": [175, 207, 225], "decisiontransform": [175, 207], "dtconfig": [175, 180, 207], "2202": [175, 180, 207, 261], "05607": [175, 180, 207, 261], "return_to_go": [175, 180, 207, 225], "conv_net_kwarg": [176, 177], "mlp_net_kwarg": [176, 177, 178], "use_avg_pool": [176, 177], "WITH": [176, 177, 178, 179, 231, 266], "1509": [176, 177, 178, 179, 196, 231, 249, 257, 266, 343], "02971": [176, 177, 178, 179, 231, 266], "convnet": [176, 199, 339, 347], "ndims_in": 176, "avgpool": [176, 177], "adaptiveavgpool2d": [177, 337, 339], "400": [178, 179, 342, 343, 345], "mlp_net_kwargs_net1": 179, "mlp_net_kwargs_net2": 179, "decion": 180, "desdescrib": 180, "n_embd": 180, "n_layer": [180, 186, 190], "n_head": 180, "n_inner": 180, "n_posit": 180, "resid_pdrop": 180, "attn_pdrop": 180, "gpt2config": 180, "atol": [181, 214], "06": [181, 214, 336, 337, 338, 343], "rtol": [181, 214], "batch_shap": [181, 214], "event_shap": [181, 214], "absolut": [181, 214, 336], "densiti": [181, 197, 198, 206, 216], "mass": [181, 197, 198, 206, 216, 343], "rsampl": [181, 198, 206, 236], "sample_shap": [181, 197, 198, 206], "dqnet": 182, "atom": 182, "softmax": [182, 198, 206, 226, 227], "var_num": [183, 209, 226, 227, 234], "action_value_kei": [183, 209, 226, 227, 233, 234, 260, 273], "action_mask_kei": [183, 209, 226, 227, 228, 229, 233, 234], "perspect": [183, 227, 253, 338], "1707": [183, 227, 253, 262], "06887": [183, 227, 253], "mult": [183, 200, 209, 226, 227, 233, 234], "tensordict_modul": [183, 186, 187, 190, 191, 209, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 246, 248, 252, 258, 262, 263, 264, 265, 267, 331], "nbin": [183, 226, 331], "customdistributionalqv": 183, "log_softmax": [183, 226], "from_modul": [183, 232, 235, 238, 240], "one_hot": [183, 198, 209], "qvalue_actor": [183, 209, 226, 233, 331], "to_modul": [183, 232, 235, 238, 240], "std_bia": 184, "std_min_val": 184, "belief": [184, 204, 210, 211], "1912": [184, 254, 255, 256], "01603": [184, 254, 255, 256], "softplu": [184, 203, 242, 243, 244], "out_features_valu": 185, "cnn_kwarg": [185, 337], "mlp_kwarg": [185, 193, 337], "duel": 185, "cnn": [185, 199, 337, 347], "06581": 185, "batch_first": [186, 188, 190, 192, 339], "bidirect": [186, 190, 339], "cudnn": [186, 187, 190, 191, 339], "vmap": [186, 187, 190, 191, 218, 235, 238, 347], "rnn": [186, 187, 190, 191, 339], "device_count": [186, 187, 190, 191, 336, 337, 339, 344, 348], "els": [186, 187, 190, 191, 204, 331, 333, 336, 337, 338, 339, 342, 343, 344], "n_in": [186, 187, 190, 191], "n_out": [186, 187, 190, 191], "h0": [186, 187, 190, 191], "h1": [186, 187, 190, 191], "call_gru": [186, 187], "h_out": [186, 187, 190, 191], "batched_cal": [186, 187, 190, 191], "gate": [186, 187, 190], "r_t": 186, "sigma": [186, 187, 189, 190, 191, 207, 215, 216, 224, 231, 338], "w_": [186, 187, 190, 191], "ir": [186, 187], "x_t": [186, 190], "b_": [186, 187, 190, 191], "hr": [186, 187, 190], "h_": [186, 187, 190], "z_t": 186, "iz": [186, 187], "hz": [186, 187], "n_t": 186, "odot": [186, 187, 190, 191], "hn": [186, 187, 190], "h_t": [186, 190], "sigmoid": [186, 187, 190, 191], "hadamard": [186, 187, 190, 191], "multilay": [186, 190], "_t": [186, 190, 342, 343], "ge": [186, 190], "bernoulli": [186, 190], "b_ih": [186, 187, 190, 191, 192], "b_hh": [186, 187, 190, 191, 192], "seq": [186, 188, 190, 192, 339, 341], "h_0": [186, 190, 191], "unbatch": [186, 190], "pack": [186, 190, 338, 348], "pack_padded_sequ": [186, 190], "pack_sequ": [186, 190], "num": [186, 190], "_layer": [186, 190], "_size": [186, 187, 190, 191], "h_n": [186, 190], "packedsequ": [186, 190], "weight_ih_l": [186, 190], "learnabl": [186, 187, 190, 191], "w_ir": 186, "w_iz": 186, "w_in": 186, "num_direct": [186, 190], "weight_hh_l": [186, 190], "w_hr": 186, "w_hz": 186, "w_hn": 186, "bias_ih_l": [186, 190], "b_ir": 186, "b_iz": 186, "b_in": 186, "bias_hh_l": [186, 190], "b_hr": 186, "b_hz": 186, "b_hn": 186, "bias": [186, 187, 190, 191, 242, 332, 336], "mathcal": [186, 187, 190, 191], "sqrt": [186, 187, 190, 191, 231], "frac": [186, 187, 190, 191, 338], "seq_len": [186, 190], "subtli": 186, "matrix": [186, 190, 201, 202], "contrast": [186, 257, 345], "hx": [186, 187, 190, 191], "lstmcell": [187, 192], "gru_cel": 187, "z": 187, "weight_ih": [187, 191], "weight_hh": [187, 191], "bias_ih": [187, 191], "bias_hh": [187, 191], "rocm": [187, 191], "embedd": [188, 192, 193], "grucel": [188, 235], "proj_siz": [188, 190], "python_bas": [188, 192], "recurrent_st": [188, 339], "custom_kei": [188, 192], "recurrent_mod": [188, 192], "rs": [188, 336], "gru_module_train": 188, "policy_train": [188, 192], "traj_td": [188, 192], "policy_infer": [188, 192], "td_inf": [188, 192], "assert_clos": [188, 192], "upscal": [189, 215, 216], "tanh_loc": [189, 215, 216], "event_dim": [189, 214, 215], "ultim": [189, 215, 216], "poor": [189, 215, 216], "explos": [189, 215, 216], "switch": [189, 216], "formula": [189, 215, 216, 245, 247, 259, 262, 332, 338], "c0": [190, 191], "c1": [190, 191], "call_lstm": [190, 191], "c_out": [190, 191], "i_t": 190, "ii": [190, 191], "hi": [190, 191], "f_t": 190, "hf": [190, 191], "g_t": 190, "ig": [190, 191], "hg": [190, 191], "o_t": 190, "ho": [190, 191], "c_t": 190, "c_": 190, "forget": 190, "consequ": 190, "1402": 190, "1128": 190, "c_0": [190, 191], "proj": 190, "c_n": 190, "w_ii": 190, "w_if": 190, "w_ig": 190, "w_io": 190, "w_hi": 190, "w_hf": 190, "w_hg": 190, "w_ho": 190, "b_ii": 190, "b_if": 190, "b_ig": 190, "b_io": 190, "b_hi": 190, "b_hf": 190, "b_hg": 190, "b_ho": 190, "weight_hr_l": 190, "_revers": 190, "analog": 190, "cn": 190, "lstm_cell": 191, "h_1": 191, "c_1": 191, "time_step": [191, 193], "cx": 191, "trust": 192, "correspont": 192, "recurrent_state_h": [192, 339], "recurrent_state_c": [192, 339], "triplet": [192, 233, 234], "lstm_modul": 192, "rs_h": 192, "rs_c": 192, "hidden0": 192, "hidden1": 192, "lstm_kwarg": 193, "next_observ": [193, 245, 246, 248, 249, 251, 252, 258, 262, 263, 264, 265, 267, 341], "2d": [193, 342], "hidden0_in": 193, "hidden1_in": 193, "hidden0_out": 193, "hidden1_out": 193, "single_bias_last_lay": 194, "layer_class": 194, "layer_kwarg": 194, "perceptron": 194, "seamless": 194, "lazylinear": [194, 331, 338, 343, 344, 347], "42": [194, 245, 246, 248, 258, 265, 335, 337, 339, 342, 343, 345, 346], "noisylinear": [194, 201, 329, 337], "noisylazylinear": [194, 329], "At": [195, 228, 337, 338, 339, 341, 343, 344], "mpcplanner": 195, "tensordict_out": [195, 348], "mppi": 196, "covari": 196, "william": [196, 264], "aldrich": 196, "theodor": 196, "01149": 196, "hansen": 196, "wang": 196, "su": 196, "04955": 196, "valueoper": [196, 221, 222, 223, 245, 246, 247, 248, 252, 258, 259, 262, 263, 264, 265, 267, 323, 331, 336, 338], "tdlambdaestim": [196, 329, 336], "value_net": [196, 249, 251, 264, 275, 276, 277, 278, 338], "adv": 196, "lmbda": [196, 269, 275, 278, 280, 286, 287, 288, 291, 292, 332, 336, 338, 342], "95": [196, 269, 337, 338, 339, 343, 344], "value_network": [196, 248, 249, 251, 253, 258, 265, 275, 276, 277, 278, 332, 336, 338], "temperatur": [196, 246, 258], "neg_inf": [197, 198], "inf": [197, 198], "www": [197, 198], "api_doc": [197, 198], "tf_agent": [197, 198], "event": [197, 198, 206, 284, 285, 286, 287, 289, 290, 291, 292, 345], "unnorm": [197, 198, 206], "sparse_mask": [197, 198], "dens": [197, 198], "0831": [197, 198], "1203": [197, 198], "0928": [197, 198], "1972": [197, 198], "grad_method": [198, 206], "reparamgradientstrategi": [198, 206], "passthrough": [198, 206], "proxi": [198, 206, 332], "relaxedonehot": [198, 206], "zeros_lik": [198, 343], "sample_non_valid": 198, "centralis": [199, 200, 342], "share_param": [199, 200, 342], "basi": [199, 345], "homogen": [199, 200, 342], "agent_network": [199, 200], "modulelist": [199, 200, 320, 347], "lazyconv2d": [199, 347], "2592": [199, 337], "decentralis": [199, 342], "n_agent_input": [200, 342], "n_agent_output": [200, 342], "toech": 200, "centalis": 200, "shown": [200, 331, 341, 342, 345], "std_init": [201, 202], "initialize_paramet": 201, "isol": [201, 260], "1706": [202, 217], "10295v3": 202, "induc": 202, "aid": 202, "scale_map": 203, "biased_softplus_1": 203, "scale_lb": [203, 210, 211], "exp": [203, 244], "module_norm": 203, "decod": 204, "1803": [204, 205, 208], "10122": [204, 205], "rnn_hidden": 204, "latent": 205, "excacli": 206, "inres": 207, "mu": [207, 231, 338], "state_shap": [208, 273], "mixing_embed_dim": [208, 273], "qmix": [208, 342], "mixer": [208, 217, 273], "monoton": 208, "hyper": 208, "11485": 208, "qmixerloss": [208, 217], "qmix_vdn": [208, 217], "eventu": [208, 339, 343], "vdn": [208, 217], "greedi": [209, 227, 228, 229, 234, 337, 339], "hidden_dim": [210, 211], "posterior": [210, 255], "rssm": [210, 211, 255], "1811": [210, 211], "04551": [210, 211], "obs_embed": 210, "rnn_hidden_dim": 211, "dream": 211, "tanhtransform": 215, "decomposit": 217, "05296": 217, "hide": [218, 338, 342], "satisfi": [218, 331], "vmap_dim": 218, "lam": 218, "sample_in": 218, "sample_in_td": 218, "vm": 218, "translat": [220, 232], "character": [220, 226, 232, 233, 235, 345], "overflow": [220, 226, 227, 232, 233, 234, 235, 236], "td_modul": [220, 221, 222, 223, 232, 235, 236, 238, 240, 347], "3635": 220, "0340": 220, "1476": 220, "3911": [220, 343], "1664": [220, 337, 343], "5455": 220, "2247": 220, "4583": 220, "2916": 220, "2160": 220, "5337": 220, "5193": 220, "grad_fn": [220, 228, 229, 347], "addmmbackward0": 220, "actorvalueoper": [221, 331], "get_policy_oper": [221, 222, 223, 247, 259, 262, 331], "standalon": [221, 222, 223], "tdmodul": [221, 222, 223, 323], "get_critic_oper": 221, "common_oper": [221, 223], "policy_oper": [221, 222, 223], "value_oper": [221, 222, 223], "normalparamwrapp": [221, 222, 223, 232, 238, 245, 246, 252, 258, 262, 263, 264, 265, 267, 329, 347], "module_hidden": [221, 223], "td_module_hidden": [221, 223], "module_act": [221, 223], "td_module_act": [221, 222, 223], "module_valu": [221, 222, 223], "td_module_valu": [221, 222, 223], "state_action_valu": [221, 240, 246, 265, 274, 320, 323, 331, 336, 347], "td_clone": [221, 222, 223], "tensordictmodulewrapp": [221, 316, 317, 323], "get_policy_head": [221, 222, 223], "safesequenti": [221, 222, 223, 273], "head": [221, 223, 247, 259, 262], "get_value_head": [221, 222, 223], "get_value_oper": [221, 222, 223, 247, 259, 262], "action_modul": 222, "state_valu": [222, 223, 240, 247, 259, 262, 263, 265, 275, 276, 277, 278, 280, 282, 284, 286, 288, 289, 291, 331, 336, 338, 342], "qualiti": [223, 331], "actorcriticoper": [223, 247, 259, 262, 331], "embeddig": 223, "refet": 223, "actorcriticwrapp": [223, 331, 336], "po": [224, 229], "sigma_init": 224, "epsilon": [224, 228, 229, 231, 266, 309, 337, 338, 339], "sigma_end": 224, "annealing_num_step": [224, 228, 229, 231, 336, 337, 339], "captur": [224, 228, 229, 231], "omiss": [224, 228, 229, 231], "ommit": [224, 228, 229, 231, 345], "inferec": 225, "set_tensor_kei": 225, "dt_inference_wrapp": 225, "baz": 225, "inference_context": 225, "obs_dim": 225, "tanhdelta": [225, 329, 336], "dtactor": 225, "actor_modul": [225, 347], "dist_class": 225, "dist_kwarg": 225, "distribution_kwarg": [225, 232, 236, 338, 342], "inference_actor": 225, "sequence_length": 225, "mask_context": 225, "out_act": 225, "qvaluemodul": [226, 233, 273, 339], "distributionaldqnnet": 226, "make_log_softmax": 226, "my_action_valu": [227, 234], "chanc": 227, "thid": 227, "threshold": [228, 246, 247, 338], "eps_init": [228, 229, 231, 337, 339], "eps_end": [228, 229, 231, 337], "explorative_polici": [228, 229, 231], "9055": [228, 229, 343], "9277": [228, 229], "6295": [228, 229], "2532": [228, 229], "addbackward0": [228, 229], "lmheadmodel": 230, "extract": [230, 336, 338], "actor_head": [230, 247, 259, 262], "base_model": 230, "lm_head": 230, "ornstein": 231, "uhlenbeck": 231, "ou": [231, 336], "correl": 231, "noise_t": 231, "noise_": 231, "theta": [231, 338, 343], "sigma_t": 231, "sigma_": 231, "anneal": 231, "ou_prev_nois": 231, "ou_step": 231, "x0": 231, "sigma_min": 231, "n_steps_ann": 231, "is_init_kei": 231, "_ou_prev_nois": 231, "_ou_step": 231, "default_interaction_typ": [232, 236], "interaction_typ": [232, 236], "set_interaction_typ": [232, 236], "cache_dist": [232, 236], "n_empirical_estim": [232, 236], "compound": 232, "compositedistribut": 232, "categ": 232, "distribution_map": 232, "chose": 234, "functionalmodul": 235, "functionalmodulewithbuff": 235, "td_fmodul": 235, "td_function": 235, "td_state": 235, "params_repeat": 235, "td_vmap": [235, 238], "random_sampl": [235, 236], "suppli": 236, "fist": 236, "log_prob_kei": [236, 342], "probabilistictensordictsequenti": [237, 245, 247, 259, 262, 264, 316, 317, 347], "partial_toler": [237, 238, 341], "who": [237, 238], "AND": [237, 238], "tensordictsequenci": 238, "tensordictsequ": 238, "safeprobabilisticmodul": [238, 331], "spec1": 238, "net1": 238, "module1": 238, "td_module1": 238, "spec2": 238, "module2": 238, "td_module2": 238, "clamp": [239, 255, 311, 343], "boundari": [239, 338, 342], "resolut": 239, "simplest": [239, 336, 338, 339, 342, 345, 348], "9944": 239, "9991": 239, "3020": 239, "2299": [239, 343], "5418": 239, "2989": 239, "6849": 239, "3169": 239, "2690": 239, "9649": [239, 343], "5686": 239, "8602": 239, "0315": 239, "8455": [239, 343], "6027": 239, "4746": 239, "7843": 239, "7782": 239, "2111": 239, "5115": 239, "4687": 239, "5760": 239, "custommodul": 240, "cat": [240, 246, 248, 258, 263, 265, 267, 347], "imaginari": 241, "imagin": 241, "transition_model": 241, "get_reward_oper": 241, "get_transition_model_oper": 241, "min_val": [242, 244], "_bia": 242, "invert": [243, 338], "surject": 244, "expln": 244, "biased_softplu": [244, 329], "beggin": 244, "biased_softplus_": 244, "syntax": [244, 336], "met": [244, 343], "1602": 245, "01783v2": 245, "entropy_bonu": [245, 247, 259, 262, 338], "favour": [245, 247, 259, 262], "samples_mc_entropi": [245, 247, 259, 261, 262], "mont": [245, 247, 259, 262, 336], "carlo": [245, 247, 259, 262, 336], "entropy_coef": [245, 247, 259, 262, 338, 342], "critic_coef": [245, 247, 259, 262, 338], "loss_critic_typ": [245, 247, 259, 262, 264, 338], "l1": [245, 247, 248, 249, 252, 259, 262, 263, 264, 267, 270, 273, 331, 336], "l2": [245, 247, 248, 249, 250, 251, 252, 255, 256, 259, 262, 263, 264, 267, 270, 273, 336], "smooth_l1": [245, 246, 247, 248, 249, 252, 258, 259, 262, 263, 264, 265, 267, 270, 273, 338], "separate_loss": [245, 247, 248, 252, 258, 259, 262, 263, 264, 265, 267], "propag": [245, 247, 248, 252, 258, 259, 262, 263, 264, 265, 267, 275, 276, 277, 278, 338, 342], "advantage_kei": [245, 247, 259, 262, 264, 275, 276, 277, 278], "value_target_kei": [245, 247, 259, 262, 264, 275, 276, 277, 278, 338], "value_target": [245, 247, 259, 262, 264, 275, 276, 277, 278, 338, 342], "loss_crit": [245, 262, 338, 342], "loss_entropi": [245, 262, 338, 342], "loss_object": [245, 262, 338, 342], "recur": [245, 246, 248, 249, 251, 252, 258, 262, 263, 264, 265, 267, 275, 276, 277, 278, 279], "next_reward": [245, 246, 248, 249, 251, 252, 258, 262, 263, 264, 265, 267, 275, 276, 277, 278], "next_don": [245, 246, 248, 249, 251, 252, 258, 262, 263, 264, 265, 267, 275, 276, 277, 278], "next_termin": [245, 246, 248, 249, 251, 252, 258, 262, 263, 264, 265, 267, 275, 276, 277, 278], "loss_obj": 245, "sacloss": [245, 257, 266, 329], "select_out_kei": [245, 246, 248, 252, 258, 262, 263, 265, 267], "essenti": [245, 246, 247, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 273, 337, 343, 345], "make_value_estim": [245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 268, 273, 332, 336, 337, 342], "value_typ": [245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 269, 273, 336], "valueestim": [245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 269, 273, 329, 332, 336, 342], "hyperparam": [245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 273, 336], "enum": [245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 269, 273, 336], "default_value_estim": [245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 273, 336], "default_value_kwarg": [245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 273, 329, 336], "dqn_loss": [245, 246, 248, 249, 251, 252, 253, 254, 258, 260, 262, 263, 264, 265, 267, 268, 273], "conserv": [246, 251], "2006": [246, 251, 343], "actor_network": [246, 248, 250, 252, 258, 261, 263, 265, 267, 336], "qvalue_network": [246, 252, 258, 263, 265, 267], "loss_funct": [246, 248, 249, 250, 251, 252, 258, 263, 265, 267, 270, 273, 336], "alpha_init": [246, 252, 261, 263, 265], "min_alpha": [246, 252, 261, 263, 265], "max_alpha": [246, 252, 261, 263, 265], "fixed_alpha": [246, 252, 261, 263, 265], "target_entropi": [246, 252, 261, 263, 265], "prod": [246, 261, 265], "n_action": [246, 249, 251, 261, 265], "delay_actor": [246, 248, 265, 267], "delay_qvalu": [246, 252, 263, 265, 267], "min_q_weight": 246, "max_q_backup": 246, "backup": 246, "deterministic_backup": 246, "num_random": 246, "with_lagrang": 246, "lagrang": 246, "lagrange_thresh": 246, "valueclass": [246, 248, 252, 258, 263, 265, 267], "qvalu": [246, 252, 258, 263, 265, 267, 320], "loss_actor": [246, 248, 252, 258, 263, 264, 265, 267, 306, 336, 347], "loss_alpha": [246, 252, 263, 265], "loss_alpha_prim": 246, "loss_qvalu": [246, 252, 258, 263, 265, 267], "clip_epsilon": [247, 338, 342], "normalize_advantag": [247, 259, 262, 342], "value_kei": [247, 259, 262, 275, 276, 277, 278, 336], "somemodul": [247, 259, 262], "someactor": [247, 259, 262], "value_head": [247, 259, 262], "somevalu": [247, 259, 262], "loss_modul": [247, 257, 259, 260, 262, 266, 311, 322, 323, 332, 333, 336, 337, 338, 342, 345], "ppoloss": [247, 259, 329], "delay_valu": [248, 249, 251, 253, 264, 265, 273, 337, 339], "loss_valu": [248, 258, 264, 265, 336, 338, 342, 347], "pred_valu": [248, 267, 336, 347], "pred_value_max": [248, 336, 347], "target_valu": [248, 263, 267, 274, 332, 336, 347], "target_value_max": [248, 336, 347], "qvalueactor": [249, 251, 273, 331, 337, 339], "double_dqn": 249, "06461": [249, 257], "mult_one_hot": [249, 252, 273], "loss_val": [249, 251, 332, 336, 338, 339, 342, 345], "2106": 250, "01345": 250, "distanc": [251, 259, 270, 274, 275, 342], "loss_cql": 251, "dcql_loss": 251, "num_qvalue_net": [252, 258, 263, 265, 267], "target_entropy_weight": 252, "onehotcategor": [252, 329], "disctount": 253, "distributionalqvalueactor": [253, 331], "input_tensordict": [253, 336], "actor_model": 254, "value_model": [254, 256], "model_based_env": 254, "dreamerenv": [254, 329], "imagination_horizon": 254, "unrol": [254, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292], "discount_loss": [254, 256], "lambda_kl": 255, "lambda_reco": 255, "lambda_reward": 255, "reco_loss": 255, "reward_loss": 255, "free_nat": 255, "nat": 255, "delayed_clamp": 255, "global_averag": 255, "value_loss": 256, "fake_data": 256, "ddpgloss": [257, 266, 323, 329, 336, 347], "td3loss": [257, 266, 329], "value_network_update_interv": 257, "2110": 258, "06169": 258, "expectil": 258, "tau": [258, 266, 336, 337], "antmaz": 258, "sticht": 258, "loss_value_diff": 258, "diff": 258, "old_polici": 259, "new_polici": 259, "apart": [259, 342], "dtarg": 259, "samples_mc_kl": 259, "analyt": 259, "decrement": 259, "loss_": [260, 306, 332, 336], "equip": [260, 339], "gh": 260, "_acceptedkei": 260, "dataclass": [260, 320], "_forward_value_estimator_kei": 260, "alter": [260, 331], "value_estim": [260, 275, 276, 277, 278, 279, 332, 336, 342], "myloss": 260, "action2": 260, "convert_to_funct": [260, 336], "expand_dim": 260, "create_target_param": [260, 336], "compare_against": [260, 336], "_param": 260, "expans": 260, "resampl": 260, "_target_param": 260, "blend": 260, "upcom": [260, 284, 285, 286, 287, 289, 290, 291, 292, 336], "proxim": [262, 338, 342], "optimis": [262, 307, 338, 342], "flavour": [262, 342, 347], "clipppoloss": [262, 329, 338, 342], "klpenppoloss": [262, 329], "regularis": 262, "06347": 262, "gae": [262, 329, 332, 336, 338, 342], "ppo_loss": 262, "tdlambda": [262, 269, 332, 336], "base_lay": 262, "randn_lik": 262, "samplelogprob": 262, "openreview": [263, 320], "ay8zfzm0tdd": [263, 320], "sub_sample_len": 263, "subsampl": [263, 302, 333], "action_log_prob_actor": 263, "state_action_value_actor": [263, 267], "connectionist": 264, "1992": 264, "doi": 264, "1007": 264, "bf00992696": 264, "actor_net": [264, 336, 338], "1801": 265, "01290": 265, "applic": [265, 273, 343], "1812": 265, "05905": 265, "redqloss": [266, 329], "math": 266, "theta_t": [266, 343], "theta_": [266, 343], "polyak": 266, "policy_nois": 267, "noise_clip": 267, "next_state_valu": [267, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 329], "td0": [268, 336], "strict_shap": 270, "view_a": 270, "qmixer": [273, 329], "local_valu": 273, "visibl": [273, 342], "dafault": 273, "acceptedkei": 273, "global_valu": 273, "penultim": 273, "local_value_network": 273, "mixer_network": 273, "suggest": [273, 342], "value_modul": [273, 338, 347], "qnet": [273, 336], "next_val_kei": 274, "pred_next_v": 274, "usus": 274, "mse": 274, "q_valu": 274, "n_steps_to_next": 274, "value_next_st": 274, "1506": [275, 280, 288], "02438": [275, 280, 288], "exponenti": [275, 276, 277, 278, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 309], "average_ga": [275, 338], "skip_exist": [275, 276, 277, 278], "advang": 275, "gradient_mod": 275, "value_error": [275, 276, 277, 278, 279], "sign": 275, "target_param": [275, 276, 277, 278, 279, 336, 342], "98": [275, 276, 277, 278, 337, 343, 344], "94": [275, 278, 337, 343, 344], "unpack": [275, 276, 277, 278], "tensor_kei": [275, 276, 277, 278, 279], "next_valu": [275, 276, 277, 278, 279], "aka": [276, 337], "average_reward": [276, 277, 278], "tdestim": [276, 277, 279], "infti": 277, "valuefunctionbas": 279, "time_dim": [280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292], "old_stat": [280, 282, 284, 286, 288, 289, 291], "new_stat": [280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292], "rolling_gamma": [284, 285, 286, 287, 289, 290, 291, 292], "g1": [284, 285, 286, 287, 289, 290, 291, 292], "g2": [284, 285, 286, 287, 289, 290, 291, 292], "g3": [284, 285, 286, 287, 289, 290, 291, 292], "g4": [284, 285, 286, 287, 289, 290, 291, 292], "v3": [284, 285, 286, 287, 289, 290, 291, 292], "out_file_bas": 293, "skip_reset": 293, "interv": [293, 294, 303, 313, 337, 343], "center_crop": 294, "make_grid": 294, "grid": 294, "exp_nam": [295, 296, 299, 300, 301, 323, 337], "log_dir": [295, 296, 298, 300, 337], "templat": 295, "csv": [296, 298, 337], "minim": [296, 345], "dependeci": 296, "experiment_nam": [297, 298], "uuid": [297, 337, 348], "logger_typ": 298, "logger_nam": 298, "tensorboard": [298, 300, 347], "wandb": [298, 301, 347], "mlflow": [298, 299], "wandb_kwarg": 298, "mlflow_kwarg": 298, "tracking_uri": 299, "uri": 299, "datastor": 299, "tb_log": 300, "tensoarboard": 300, "sub_traj_len": 302, "min_sub_traj_len": 302, "register_op": [302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 333, 337], "process_optim_batch": [302, 308, 309, 333], "td_out": [302, 310], "_process_optim_batch_hook": [302, 333], "batch_subsampl": 302, "clear_cuda": 303, "pre_optim_step": [303, 333], "counter": [304, 333], "log_pbar": [304, 305, 307, 309, 333, 337], "progress": [304, 305, 307, 311, 333, 337, 339, 348], "count_fram": 304, "pre_steps_log": [304, 305, 333], "count_frames_log": 304, "lognam": 305, "r_train": [305, 337], "log_reward": [305, 337], "loss_compon": 306, "appl": 306, "omit": [306, 338, 343, 345], "optimizer_hook": 306, "record_interv": [307, 336, 337], "record_fram": [307, 314, 336, 337], "policy_explor": [307, 323, 336, 337], "log_kei": [307, 337], "suffix": 307, "underestim": 307, "set_exploration_typ": [307, 329, 338, 339, 347], "r_evalu": [307, 336], "flatten_tensordict": [308, 337], "max_dim": 308, "rb_trainer": 308, "batch_process": [308, 309, 310, 333], "post_loss": [308, 333], "999": [309, 337], "jitter": 309, "finfo": 309, "default_dtyp": 309, "get_default_dtyp": 309, "reward_norm": 309, "update_reward_stat": 309, "normalize_reward": 309, "make_train": [310, 329], "_process_batch_hook": [310, 333], "select_kei": [310, 333], "versatil": 311, "optim_steps_per_batch": [311, 333, 337], "epoch": [311, 338, 342], "clip_grad_norm": 311, "clip_norm": 311, "progress_bar": 311, "save_trainer_interv": 311, "log_interv": [311, 337], "save_trainer_fil": [311, 333], "datacollectorbas": [313, 316, 317, 323, 329], "update_weights_interv": [313, 337], "sit": [313, 337], "update_weight": 313, "post_step": [313, 333], "cfg": [314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327], "dictconfig": [314, 315, 316, 317, 320, 321, 322, 323, 324, 327], "divid": [314, 331, 336, 342, 343], "unknowingli": 314, "annealing_fram": [314, 336], "init_env_step": [314, 315, 336], "proof_environ": [315, 320, 336], "sta": 315, "ot": 315, "actor_model_explor": [316, 317, 336], "make_env_kwarg": [316, 317], "targetnetupdat": [318, 319, 322, 323], "redqloss_deprec": 319, "actor_net_kwarg": 320, "qvalue_net_kwarg": 320, "observation_kei": 320, "parser_env_arg": 320, "parser_model_args_continu": 320, "cattensor": [320, 336, 341, 343, 348], "hydra": 320, "config_stor": 320, "configstor": 320, "config_field": 320, "config_cl": 320, "redqmodelconfig": 320, "envconfig": 320, "make_dataclass": 320, "cls_name": 320, "cs": 320, "config_path": 320, "config_nam": 320, "replayargsconfig": 321, "target_net_updat": [323, 336, 337], "constitu": 323, "learnt": [323, 336, 338], "tensorboardlogg": [323, 329], "egreedywrapp": [323, 337, 339], "env_proof": 323, "obs_spec": 323, "net_valu": 323, "dir": [323, 333, 337], "gettempdir": 323, "argpars": [324, 327], "namespac": [324, 327], "parser": [324, 327], "transformed_env_constructor": [324, 329], "num_env_per_collector": [325, 326], "video_tag": 327, "norm_obs_onli": 327, "use_env_cr": 327, "custom_env_mak": 327, "custom_env": 327, "return_transformed_env": 327, "action_dim_gsd": 327, "state_dim_gsd": 327, "obs_norm_state_dict": 327, "wheter": 327, "maker": 327, "asyncdatacollector": 329, "distributedsyncdatacollector": 329, "submitit_delayed_launch": 329, "raycollector": 329, "immutabledatasetwrit": 329, "tensordictmaxvaluewrit": 329, "d4rlexperiencereplai": 329, "minariexperiencereplai": 329, "openmlexperiencereplai": 329, "openxexperiencereplai": 329, "vd4rlexperiencereplai": 329, "unboundeddiscretetensorspec": [329, 348], "lazystackedtensorspec": 329, "lazystackedcompositespec": 329, "prompttensordicttoken": 329, "rolloutfrommodel": 329, "tokenizeddatasetload": 329, "create_infinite_iter": 329, "consolidate_spec": 329, "check_no_exclusive_kei": 329, "contains_lazy_spec": 329, "check_marl_group": 329, "tensordictrecord": 329, "videorecord": [329, 338], "get_available_librari": 329, "set_exploration_mod": 329, "make_composite_from_td": [329, 343], "terminated_or_trunc": 329, "braxwrapp": 329, "dmcontrolenv": [329, 336, 341, 348], "dmcontrolwrapp": [329, 348], "jumanjienv": 329, "jumanjiwrapp": 329, "mogymenv": 329, "mogymwrapp": 329, "multithreadedenvwrapp": 329, "openmlenv": 329, "pettingzooenv": 329, "robohiveenv": 329, "smacv2env": 329, "smacv2wrapp": 329, "vmaswrapp": 329, "qvaluehook": 329, "distributionalqvaluehook": 329, "reset_nois": 329, "cemplann": 329, "mpcplannerbas": 329, "mppiplann": 329, "independentnorm": 329, "truncatednorm": 329, "maskedonehotcategor": 329, "inv_softplu": 329, "vmapmodul": 329, "distributionaldqnloss": [329, 337], "discretesacloss": 329, "iqlloss": 329, "cqlloss": 329, "discretecqlloss": 329, "dtloss": 329, "onlinedtloss": 329, "a2closs": 329, "reinforceloss": 329, "dreameractorloss": 329, "dreamermodelloss": 329, "dreamervalueloss": 329, "td0estim": [329, 336], "td1estim": [329, 336], "td0_return_estim": 329, "td0_advantage_estim": 329, "td1_return_estim": 329, "vec_td1_return_estim": 329, "td1_advantage_estim": 329, "vec_td1_advantage_estim": 329, "td_lambda_return_estim": 329, "vec_td_lambda_return_estim": 329, "td_lambda_advantage_estim": 329, "vec_td_lambda_advantage_estim": 329, "generalized_advantage_estim": 329, "vec_generalized_advantage_estim": 329, "reward2go": 329, "distance_loss": [329, 336], "hold_out_net": 329, "hold_out_param": [329, 336], "softupd": [329, 336, 337, 339], "hardupd": [329, 336], "batchsubsampl": [329, 333], "clearcudacach": 329, "countframeslog": 329, "logreward": [329, 333, 337], "optimizerhook": [329, 337], "replaybuffertrain": [329, 333, 337], "rewardnorm": 329, "selectkei": [329, 333], "trainerhookbas": [329, 333, 337], "updateweight": [329, 333, 337], "make_collector_offpolici": 329, "make_collector_onpolici": 329, "make_dqn_loss": 329, "make_redq_loss": 329, "make_redq_model": 329, "make_replay_buff": [329, 336], "make_target_updat": 329, "parallel_env_constructor": [329, 336], "sync_async_collector": 329, "sync_sync_collector": 329, "correct_for_frame_skip": 329, "get_stats_random_rollout": 329, "csvlogger": [329, 337], "mlflowlogg": 329, "wandblogg": 329, "get_logg": 329, "generate_exp_nam": 329, "journei": 330, "textbook": 330, "highlight": 330, "ever": [330, 342], "bump": 330, "think": [330, 338, 342, 348], "benefit": [330, 342, 345], "pr": 330, "ground": [331, 336, 343], "categori": [331, 333], "recycl": [331, 345], "impos": 331, "violat": 331, "noisier": 331, "Their": [331, 342], "sd": 331, "prob_modul": 331, "pick": [331, 336, 337], "tabl": [331, 337], "hopefulli": [331, 337], "functional_modul": 331, "make_funct": [331, 347], "mathbb": [331, 337], "rightarrow": [331, 337], "soften": 331, "backbon": [331, 339, 341, 347], "make_actor": 331, "make_valu": 331, "shared_param": 331, "make_common": 331, "reusabl": [332, 336, 345], "swappabl": [332, 336], "characterist": [332, 336, 343], "trainabl": [332, 336, 344], "whatev": [332, 336], "smth": [332, 336], "metric": [332, 336], "nutshel": [332, 336], "barto": [332, 342], "chapter": 332, "significantli": [332, 336, 337, 342], "next_stat": 332, "value_net_loss": 332, "pow": [332, 336], "therebi": 332, "room": 332, "convers": 332, "signifi": [332, 342], "underperform": 332, "thin": 332, "intric": 332, "believ": 333, "scheme": [333, 348], "substenti": 333, "_pre_steps_log_hook": 333, "_pre_optim_hook": 333, "sub_batch": 333, "_post_loss_hook": 333, "_post_optim_hook": 333, "post_optim": [333, 337], "_post_optim_log": 333, "post_optim_log": 333, "_post_steps_hook": 333, "_post_steps_log_hook": 333, "post_steps_log": 333, "comment": [333, 337, 347], "reserv": 333, "logginghook": 333, "logging_hook": 333, "save_dict": 333, "some_valu": 333, "torchsnapshot": 333, "ckpt_backend": 333, "pt": [333, 344], "filepath": 333, "save_train": 333, "load_from_fil": 333, "40": [335, 337, 338, 342, 343, 345, 346], "002": [335, 346], "galleri": [335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348], "mem": [335, 346], "mb": [335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348], "torchrl_demo": [335, 346, 347], "520": [335, 343, 346, 347], "torchrl_env": [335, 346, 348], "748": [335, 346, 348], "dqn_with_rnn": [335, 339, 346], "041": [335, 339, 343, 346], "1697": [335, 339, 346], "multiagent_ppo": [335, 342, 346], "05": [335, 337, 338, 342, 343, 346], "174": [335, 342, 343, 346], "coding_dqn": [335, 337, 346], "02": [335, 336, 337, 338, 339, 342, 343, 344, 346], "52": [335, 337, 342, 343, 344, 346], "984": [335, 337, 346], "721": [335, 337, 346], "rb_tutori": [335, 345, 346], "008": [335, 343, 345, 346], "372": [335, 343, 345, 346], "145": [335, 343, 346], "coding_ddpg": [335, 336, 346], "59": [335, 336, 337, 338, 343, 345, 346], "066": [335, 336, 346], "coding_ppo": [335, 338, 346], "944": [335, 338, 346], "pretrained_model": [335, 344, 346], "00": [335, 336, 337, 338, 339, 342, 343, 344, 346], "155": [335, 343, 344, 346], "3617": [335, 346], "multi_task": [335, 341, 346], "217": [335, 341, 343, 346], "25": [335, 336, 337, 339, 343, 345, 346], "author": [336, 337, 338, 339, 342, 343, 345], "vincent": [336, 337, 338, 339, 343, 345], "moen": [336, 337, 338, 339, 343, 345], "assembl": 336, "focus": 336, "straightforward": [336, 337, 345], "overview": [336, 338, 342, 347], "transpar": [336, 339], "understood": 336, "sota": [336, 337, 347], "illustr": [336, 337, 345], "loss_dict": 336, "oblivi": [336, 338, 345], "elementari": 336, "didact": 336, "dilut": 336, "pessimist": [336, 337, 338], "target_actor_network_param": 336, "actor_in_kei": 336, "actor_crit": 336, "noth": [336, 338], "compromis": 336, "hp": 336, "hasattr": 336, "_value_estim": 336, "elif": [336, 337], "notimplementederror": 336, "unknown": 336, "_loss_actor": 336, "td_copi": 336, "actor_network_param": 336, "value_network_param": 336, "_loss_valu": 336, "pred_val": 336, "target_value_network_param": 336, "smooth": [336, 337], "loss_funt": 336, "glue": 336, "_forward": 336, "ndimens": 336, "remaind": 336, "focu": [336, 337, 338], "pixels_onli": [336, 337, 347, 348], "env_librari": 336, "env_task": 336, "env_arg": 336, "friendli": 336, "torchr": 336, "rescal": 336, "presum": 336, "make_transformed_env": 336, "reward_sc": 336, "double_to_float_list": 336, "double_to_float_inv_list": 336, "marker": 336, "env_per_collector": 336, "transform_state_dict": 336, "make_t_env": 336, "adjust": [336, 342, 343], "seem": [336, 339], "cheat": 336, "10m": 336, "cautiou": 336, "magnitud": 336, "thousand": [336, 339], "get_env_stat": 336, "proof_env": 336, "5000": [336, 337, 338], "maxim": [336, 343], "recal": [336, 338], "ddpgmlpactor": 336, "ddpgmlpqnet": 336, "materi": 336, "ornsteinuhlenbeckprocesswrapp": 336, "make_ddpg_actor": 336, "q_net": 336, "moduless": 336, "sugges": 336, "tight": 336, "10_000": [336, 338, 345], "traj_len": [336, 339], "make_record": 336, "recorder_obj": 336, "flavor": 336, "circular": 336, "buffer_s": [336, 337], "random_crop_len": 336, "prb": 336, "buffer_scratch_dir": 336, "temporari": 336, "dirrectori": 336, "trajecotri": 336, "sampel": 336, "dataflow": 336, "ceil_div": 336, "utd": [336, 339], "update_to_data": 336, "realiz": 336, "_must_": 336, "001": [336, 343], "outdat": 336, "trick": [336, 337], "despit": 336, "adam": [336, 337, 338, 339, 342, 343], "optimizer_actor": 336, "lr": [336, 337, 338, 339, 342, 343], "weight_decai": [336, 337], "optimizer_valu": 336, "total_collection_step": 336, "pretti": [336, 345], "rewards_ev": 336, "collected_fram": 336, "pbar": [336, 338, 339, 342, 343], "r0": 336, "numel": [336, 338, 339, 344, 345], "current_fram": 336, "sampled_tensordict": 336, "gn1": 336, "clip_grad_norm_": [336, 338, 342, 343], "gn2": 336, "gn": [336, 343], "td_record": 336, "rn": 336, "set_descript": [336, 338, 339, 342, 343], "2f": 336, "800": [336, 337], "2567": 336, "67it": [336, 337, 339], "1600": [336, 337], "980": 336, "46it": 336, "3200": [336, 337], "2018": 336, "19it": [336, 337], "48": [336, 337, 343, 345], "4800": [336, 337, 343], "2945": 336, "36it": [336, 337], "92": [336, 337, 338, 343, 344, 345], "83": [336, 337, 343, 344], "91": [336, 337, 343], "443": [336, 343], "78": [336, 337, 343], "56": [336, 337, 343], "5600": 336, "6400": [336, 347], "1348": [336, 343], "11it": [336, 337, 338], "85": [336, 337, 343], "74": [336, 337, 343, 344], "339": [336, 343], "90": [336, 337, 338, 342, 343, 344, 345], "72": [336, 337, 343], "7200": 336, "865": 336, "72it": 336, "49": [336, 337, 342, 343, 344], "190": [336, 343], "425": [336, 343], "80": [336, 337, 338, 342, 343, 344], "8000": [336, 338], "652": 336, "06it": [336, 337, 343], "62": [336, 337, 343], "167": [336, 343, 345], "313": [336, 343], "63": [336, 337, 343, 345], "8800": 336, "565": [336, 343], "39it": [336, 337], "09": [336, 337, 338, 339, 343], "316": [336, 343], "82": [336, 337, 343, 344], "66": [336, 337, 343, 344], "96": [336, 337, 343, 344, 345], "9600": 336, "418": [336, 343], "50it": [336, 337], "89": [336, 337, 343, 344], "261": [336, 343], "10400it": 336, "409": [336, 343], "84it": [336, 337, 343], "179": [336, 343], "171": [336, 343], "plot": [336, 338, 339, 342, 343], "mention": [336, 339, 345, 348], "matplotlib": [336, 338, 339, 342, 343, 345, 348], "pyplot": [336, 338, 339, 342, 343, 345, 348], "plt": [336, 338, 339, 342, 343, 345, 348], "zip": [336, 340], "legend": 336, "xlabel": [336, 339, 342, 343], "ylabel": [336, 342], "tight_layout": 336, "concret": [336, 338], "takeawai": [336, 337], "minut": [336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "jupyt": [336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348], "ipynb": [336, 337, 338, 339, 341, 342, 343, 344, 345, 347, 348], "sphinx": [336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348], "customis": [337, 342], "road": 337, "aspect": 337, "highest": 337, "prerequisit": [337, 339], "familiar": [337, 342, 348], "lookup": 337, "amort": [337, 338], "conjunct": 337, "cart": 337, "pole": 337, "un": 337, "actuat": 337, "frictionless": 337, "upright": 337, "duelingcnndqnet": 337, "is_notebook": 337, "shell": 337, "get_ipython": 337, "__class__": 337, "zmqinteractiveshel": 337, "qtconsol": 337, "terminalinteractiveshel": 337, "ipython": [337, 342, 343], "nameerror": 337, "umbrella": 337, "misplac": 337, "misus": 337, "orchestr": 337, "everyth": [337, 339], "five": [337, 338], "64x64": 337, "motion": [337, 343], "obs_norm_sd": 337, "simpler": 337, "get_norm_stat": 337, "test_env": 337, "make_model": 337, "dummy_env": 337, "output_s": [337, 339], "init_bia": 337, "actor_explor": 337, "eps_greedy_v": 337, "eps_greedy_val_env": 337, "get_replay_buff": 337, "n_optim": 337, "themselv": 337, "simplic": [337, 338, 344, 345], "get_collector": 337, "data_collector": 337, "bunch": 337, "concept": [337, 345], "power": 337, "ubiquit": 337, "get_loss_modul": 337, "target_updat": 337, "995": [337, 343], "sensit": 337, "variat": 337, "2e": [337, 343], "wd": 337, "upd": 337, "harder": [337, 347], "5_000": 337, "500000": 337, "100000": 337, "005": 337, "mandatori": [337, 338, 342, 343], "fairer": 337, "budget": [337, 338], "dqn_exp_": 337, "uuid1": [337, 348], "9895": 337, "0737": 337, "tmp": [337, 345], "tmp15n46rmn": 337, "dqn_exp_e077204c": 337, "aefb": 337, "11ee": [337, 348], "b9f4": [337, 348], "0242ac110002": [337, 348], "registr": 337, "cumbersom": 337, "buffer_hook": 337, "weight_updat": 337, "descript": [337, 338], "aliv": 337, "total_reward": 337, "07": [337, 343], "20it": 337, "4045": 337, "9259": 337, "38it": [337, 343], "53it": [337, 343], "3712": 337, "40it": 337, "3440": 337, "43": [337, 339, 342, 343, 344], "64it": 337, "3893": 337, "192": [337, 343], "36": [337, 343], "224": [337, 343], "62it": 337, "4104": 337, "288": [337, 343], "54": [337, 343, 344], "17it": 337, "3772": 337, "58": [337, 342, 343], "25it": 337, "352": [337, 343], "61": [337, 343, 344], "4948": 337, "384": [337, 343], "83it": [337, 343], "416": [337, 343], "65": [337, 343, 344, 345], "43it": 337, "448": [337, 343], "80it": [337, 338], "480": [337, 343, 344], "67": [337, 341, 343], "52it": [337, 338, 339], "68": [337, 343], "08it": 337, "544": [337, 343], "69": [337, 343, 344], "02it": [337, 343], "4497": 337, "576": [337, 343], "34it": 337, "4797": 337, "608": [337, 343], "05it": 337, "4164": [337, 343], "640": 337, "58it": 337, "672": 337, "22it": 337, "704": 337, "56it": 337, "736": 337, "79it": [337, 338, 343], "768": 337, "18it": 337, "4526": 337, "45it": 337, "832": 337, "864": 337, "12it": [337, 343], "896": 337, "35it": [337, 343], "928": 337, "960": 337, "51it": [337, 343], "4676": 337, "992": [337, 343], "57": [337, 343, 344], "75it": [337, 343], "1056": 337, "26it": 337, "1088": 337, "1120": 337, "55": [337, 343], "1152": 337, "1184": 337, "14it": [337, 343], "1216": 337, "4224": 337, "1248": 337, "53": [337, 343, 344, 345], "1280": 337, "32it": [337, 343], "00it": [337, 343], "1344": 337, "73it": 337, "1376": 337, "95it": [337, 343], "1408": 337, "1440": 337, "09it": [337, 343], "1472": 337, "51": [337, 342, 343, 345], "99it": [337, 343], "1504": 337, "92it": [337, 338, 343], "31": [337, 339, 343, 344], "1536": 337, "1568": 337, "37it": [337, 343], "77it": [337, 343], "4586": 337, "1632": 337, "88it": [337, 343], "47": [337, 342, 343], "1696": 337, "70": [337, 338, 342, 343], "1728": 337, "21it": 337, "1760": 337, "89it": [337, 343], "1792": 337, "45": [337, 339, 343], "94it": [337, 343], "1824": 337, "1856": 337, "63it": 337, "4404": 337, "1888": 337, "60it": 337, "4134": 337, "1920": 337, "31it": 337, "1952": 337, "1984": 337, "74it": [337, 343], "2016": 337, "41": [337, 338, 339, 342, 343, 345], "2048": [337, 344], "2080": 337, "2112": [337, 343], "2144": 337, "24it": 337, "2176": 337, "61it": [337, 338], "2208": 337, "2240": 337, "2272": 337, "97it": [337, 343], "2304": 337, "2336": 337, "30it": 337, "2368": 337, "59it": 337, "2400": 337, "41it": [337, 343], "2432": 337, "2464": 337, "2496": 337, "2528": [337, 343], "2560": 337, "2624": 337, "2656": [337, 343], "2688": 337, "78it": [337, 343], "2720": [337, 343], "2752": 337, "42it": [337, 343], "2784": 337, "2816": 337, "2848": 337, "71": [337, 343], "2880": 337, "2912": 337, "81it": [337, 343], "2944": [337, 343], "60": [337, 338, 342, 343, 347], "2976": [337, 343], "28it": 337, "3040": 337, "23it": 337, "3072": 337, "3104": 337, "3136": 337, "3168": 337, "3232": [337, 343], "6667": 337, "3264": 337, "3296": 337, "3328": 337, "3360": 337, "3392": 337, "76it": [337, 343], "3424": 337, "57it": 337, "3456": [337, 343], "71it": 337, "3488": 337, "3520": 337, "54it": 337, "3552": 337, "69it": 337, "3584": 337, "3616": 337, "27it": 337, "73": [337, 343, 344], "3648": 337, "68it": [337, 343], "3680": 337, "4645": 337, "01it": [337, 343], "3744": 337, "76": [337, 343, 344, 345], "3776": 337, "3808": 337, "77": [337, 342, 343, 345], "3840": 337, "3872": 337, "16it": 337, "3904": 337, "79": [337, 343, 344], "3936": 337, "3968": 337, "4000": [337, 338], "4032": 337, "4064": 337, "44it": [337, 339], "4096": 337, "4128": [337, 343], "10it": 337, "4160": 337, "13it": [337, 343], "4192": 337, "4256": [337, 343], "4288": [337, 343], "4320": 337, "4352": 337, "4384": 337, "4416": 337, "4448": 337, "85it": [337, 338, 343], "4480": 337, "4512": 337, "4544": 337, "04it": [337, 338], "4576": 337, "4608": 337, "93": [337, 343, 345], "4640": 337, "4672": [337, 343], "4704": 337, "4736": 337, "4768": 337, "07it": [337, 338], "97": [337, 343, 344], "4832": 337, "4864": 337, "47it": 337, "4896": 337, "4928": 337, "4960": 337, "4992": 337, "5024it": 337, "print_csv_files_in_fold": 337, "folder_path": 337, "csv_file": 337, "output_str": 337, "dirpath": 337, "walk": [337, 341], "endswith": 337, "strip": 337, "4948333501815796": 337, "47967082262039185": 337, "4676021933555603": 337, "45859628915786743": 337, "3388276696205139": 337, "305767297744751": 337, "16165339946746826": 337, "2718842029571533": 337, "22393092513084412": 337, "3012517988681793": 337, "29449042677879333": 337, "355030357837677": 337, "3256152868270874": 337, "grad_norm_0": 337, "009674549102783": 337, "3503787517547607": 337, "182246208190918": 337, "8152060508728027": 337, "8359227180480957": 337, "362555742263794": 337, "980325222015381": 337, "734330415725708": 337, "0512478351593018": 337, "10000000894069672": 337, "666666507720947": 337, "qvaluenetwork": 337, "worst": 337, "accuraci": 337, "fanci": 337, "talk": 338, "repetit": 338, "six": 338, "sophist": [338, 342], "invent": 338, "theta_k": 338, "pi_": 338, "exceed": 338, "discourag": [338, 343], "indispens": 338, "analyz": 338, "lingua": 338, "franca": 338, "defaultdict": [338, 343], "has_cuda": [338, 342, 348], "3e": [338, 339, 342], "max_grad_norm": [338, 342], "ourselv": [338, 348], "benefici": 338, "errat": 338, "hamper": [338, 345], "reactiv": 338, "xy": 338, "sub_batch_s": 338, "num_epoch": [338, 342], "entropy_ep": [338, 342], "generalist": 338, "interchang": [338, 344, 345], "panel": 338, "charact": 338, "inverteddoublependulum": 338, "transmit": 338, "stai": 338, "supplementari": [338, 348], "told": 338, "stringent": [338, 342], "confid": [338, 342], "ran": 338, "f_": 338, "mu_": 338, "difficulti": [338, 348], "brought": [338, 339], "d_ob": 338, "d_action": 338, "policy_modul": [338, 342], "That": 338, "said": 338, "briefli": [338, 342], "refil": [338, 342], "conveni": [338, 342, 343], "easiest": [338, 342], "mathemat": [338, 342], "tradeoff": [338, 342], "advantage_modul": 338, "lr_schedul": [338, 343], "cosineannealinglr": [338, 343], "eval_str": 338, "tensordict_data": [338, 342], "data_view": [338, 342], "subdata": [338, 342], "cum_reward_str": 338, "4f": [338, 339, 343], "stepcount_str": 338, "param_group": 338, "lr_str": 338, "eval_rollout": 338, "nice": 338, "332": [338, 343], "1315": 338, "0909": 338, "0003": [338, 339, 343], "333": [338, 343], "1224": 338, "3000": 338, "334": [338, 343], "96it": [338, 343], "1510": 338, "335": [338, 343], "1866": 338, "0002": [338, 339, 343], "336": [338, 343], "2073": 338, "6000": 338, "337": [338, 343], "2226": 338, "7000": 338, "2375": 338, "2472": 338, "9000": 338, "2565": 338, "338": [338, 343], "2614": 338, "cap": [338, 345], "figsiz": [338, 343], "subplot": [338, 343, 348], "titl": [338, 339, 342, 343], "bit": [338, 339, 342, 345], "lstmmodul": 339, "84x84": 339, "accessori": 339, "stamp": 339, "tensordictprim": 339, "assist": 339, "emb": 339, "n_cell": 339, "customiz": 339, "almost": 339, "wouldn": 339, "make_tensordict_prim": 339, "qval": 339, "stoch_polici": 339, "opportun": 339, "coupl": [339, 343, 345], "uniniti": 339, "again": [339, 342, 344, 345, 348], "redund": 339, "strongli": 339, "million": 339, "sake": [339, 344, 345], "20_000": [339, 343], "longest": 339, "npai": 339, "action_spread": 339, "1000000": 339, "121": [339, 343, 348], "113": [339, 343], "0004": [339, 343], "150": [339, 343], "149": [339, 343], "86it": [339, 343], "166": [339, 343], "tutorials_python": 340, "tutorials_jupyt": 340, "humanoid": 341, "env1_obs_kei": 341, "observation_stand": 341, "env2_obs_kei": 341, "observation_walk": 341, "tdreset1": 341, "tdreset2": 341, "tdreset": 341, "policy_common": 341, "policy_stand": 341, "policy_walk": 341, "But": 341, "exclusive_field": [341, 347], "stack_dim": [341, 347], "env1_mak": 341, "env2_mak": 341, "_single_task": 341, "td_rollout": 341, "matteo": 342, "bettini": 342, "maddpg": 342, "navig": 342, "lidar": 342, "sensor": 342, "collis": 342, "tie": 342, "mappo": 342, "ippo": 342, "phase": [342, 345], "mathbf": 342, "pi": [342, 343], "fed": [342, 345], "approxim": [342, 348], "literatur": 342, "overcom": 342, "stationari": 342, "concurr": 342, "analys": 342, "gui": 342, "visualis": 342, "multiagentmlp": 342, "divic": 342, "vmas_devic": 342, "6_000": 342, "team": [342, 347], "n_iter": 342, "minibatch_s": 342, "generalis": 342, "furthermor": 342, "simd": 342, "parallelis": 342, "warp": 342, "todai": 342, "circl": 342, "surround": 342, "dot": [342, 343], "collid": 342, "drag": 342, "elast": 342, "acceler": 342, "penalis": 342, "num_vmas_env": 342, "scenario_nam": 342, "four": [342, 343], "environmnet": 342, "final_rew": 342, "agent_collis": 342, "stress": 342, "paramount": 342, "n_rollout_step": 342, "evolut": 342, "yourself": 342, "utilis": 342, "n_actions_per_ag": 342, "n_obs_per_ag": 342, "share_parameters_polici": 342, "policy_net": 342, "denot": 342, "carefulli": [342, 348], "grant": 342, "converg": 342, "cooper": 342, "share_parameters_crit": 342, "critic_net": 342, "fantast": 342, "minibatch": 342, "desc": 342, "episode_reward_mean": 342, "episode_reward_mean_list": 342, "get_item_shap": 342, "critic_param": 342, "target_critic_param": 342, "refresh": 342, "3641679584980011": 342, "4940122067928314": 342, "0600677728652954": 342, "4344534873962402": 342, "1100871562957764": 342, "304917335510254": 342, "6943857669830322": 342, "871443748474121": 342, "8500826358795166": 342, "759843587875366": 342, "xvfb": 342, "pyvirtualdisplai": 342, "1400": [342, 343], "900": 342, "pil": 342, "rendering_callback": 342, "fromarrai": 342, "rgb_arrai": [342, 343], "gif": 342, "save_al": 342, "append_imag": 342, "profici": 342, "master": 342, "freeli": 343, "codebas": 343, "touch": 343, "undertaken": 343, "broader": 343, "wider": 343, "algebra": 343, "acquaint": 343, "avenu": 343, "_apply_to_composit": 343, "default_x": 343, "default_i": 343, "torqu": 343, "upward": 343, "angular": 343, "sin": 343, "rad": 343, "sec": 343, "gravit": 343, "angl": 343, "deleg": 343, "new_th": 343, "new_thdot": 343, "thdot": 343, "g_forc": 343, "max_torqu": 343, "angle_norm": 343, "max_spe": 343, "albeit": 343, "gen_param": 343, "high_th": 343, "high_thdot": 343, "low_th": 343, "low_thdot": 343, "rng": 343, "lazili": 343, "organ": [343, 345], "trivial": 343, "shortcut": [343, 348], "irrelev": 343, "_make_spec": 343, "td_param": 343, "pseudo": 343, "render_mod": 343, "render_fp": 343, "random_": 343, "_make_step": 343, "staticmethod": 343, "complic": [343, 345, 348], "showcas": 343, "skeleton": 343, "_apply_transform": [343, 348], "_inv_apply_transform": [343, 348], "subset": [343, 344], "unitari": 343, "sine": 343, "cosin": 343, "sintransform": 343, "tensordict_reset": 343, "costransform": 343, "t_sin": 343, "t_co": 343, "cat_transform": 343, "mdp": 343, "simple_rollout": 343, "unexplor": 343, "recreat": 343, "init_td": 343, "traj_return": 343, "last_reward": 343, "is_ipython": 343, "inlin": 343, "get_backend": 343, "ion": 343, "gcf": 343, "clear_output": 343, "625": 343, "0488": 343, "0748": 343, "519": 343, "87it": 343, "0499": 343, "4472": 343, "073": 343, "0685": 343, "0408": 343, "552": 343, "5154": 343, "9086": 343, "9385": 343, "2568": 343, "4981": 343, "223": 343, "8929": 343, "4491": 343, "581": 343, "3233": 343, "0664": 343, "596": 343, "1021": 343, "5263": 343, "9579": 343, "5807": 343, "8075": 343, "212": 343, "2009": 343, "5525": 343, "914": 343, "2894": 343, "0115": 343, "0977": 343, "1845": 343, "1830": 343, "4858": 343, "233": 343, "2863": 343, "0297": 343, "464": 343, "4617": 343, "5997": 343, "904": 343, "1647": 343, "0777": 343, "901": 343, "4709": 343, "6813": 343, "8317": 343, "3221": 343, "5554": 343, "276": 343, "3353": 343, "701": 343, "8570": 343, "6656": 343, "463": 343, "7779": 343, "6911": 343, "875": 343, "0796": 343, "7082": 343, "308": 343, "0421": 343, "1496": 343, "5037": 343, "1755": 343, "5029": 343, "9454": 343, "665": 343, "9330": 343, "2118": 343, "444": 343, "0995": 343, "6294": 343, "3146": 343, "2909": 343, "461": 343, "9720": 343, "1298": 343, "9923": 343, "0345": 343, "3438": 343, "3688": 343, "424": 343, "6953": 343, "5233": 343, "411": 343, "8011": 343, "5329": 343, "2677": 343, "6969": 343, "7010": 343, "376": 343, "9352": 343, "7707": 343, "6178": 343, "5646": 343, "348": 343, "7304": 343, "9407": 343, "942": 343, "98it": 343, "3882": 343, "7604": 343, "3507": 343, "8928": 343, "258": 343, "6978": 343, "4641": 343, "549": 343, "6047": 343, "5005": 343, "4136": 343, "2993": 343, "3222": 343, "4046": 343, "7314": 343, "275": 343, "6331": 343, "9318": 343, "961": 343, "8331": 343, "1604": 343, "4099": 343, "4761": 343, "125": [343, 345], "4262": 343, "6363": 343, "382": 343, "3593": 343, "7377": 343, "2847": 343, "3443": 343, "867": 343, "3592": 343, "4760": 343, "441": 343, "9950": 343, "8021": 343, "3528": 343, "1214": 343, "708": 343, "4023": 343, "3583": 343, "3801": 343, "0310": 343, "120": 343, "4244": 343, "2039": 343, "4850": 343, "8748": 343, "706": 343, "4897": 343, "9210": 343, "8964": 343, "0832": 343, "3934": 343, "456": 343, "8971": 343, "2933": 343, "3377": 343, "6996": 343, "2274": 343, "8916": 343, "098": 343, "2660": 343, "9110": 343, "4503": 343, "6956": 343, "9172": 343, "4026": 343, "946": 343, "9229": 343, "5205": 343, "294": 343, "8872": 343, "6637": 343, "019": 343, "9281": 343, "2082": 343, "724": 343, "8561": 343, "6574": 343, "357": 343, "4138": 343, "5230": 343, "385": 343, "4065": 343, "5642": 343, "921": 343, "9786": 343, "4129": 343, "5831": 343, "266": 343, "7723": 343, "4152": 343, "0898": 343, "389": 343, "5155": [343, 348], "5376": 343, "5616": 343, "4094": 343, "283": 343, "5333": 343, "4803": 343, "895": 343, "6566": 343, "2588": 343, "662": 343, "4732": 343, "7503": 343, "068": 343, "0714": 343, "3370": 343, "059": 343, "8612": 343, "1915": 343, "3855": 343, "0349": 343, "9644": 343, "4538": 343, "445": 343, "0392": 343, "4080": 343, "1648": 343, "9599": 343, "143": 343, "4284": 343, "5946": 343, "2590": 343, "9181": 343, "4621": 343, "9075": 343, "674": 343, "1772": 343, "9444": 343, "351": 343, "9391": 343, "5595": 343, "8673": 343, "6240": 343, "5919": 343, "0018": 343, "1071": 343, "9127": 343, "251": 343, "9799": 343, "3131": 343, "9612": 343, "9705": 343, "8741": 343, "2230": 343, "0972": 343, "0337": 343, "0350": 343, "0654": 343, "102": [343, 345], "2441": 343, "4596": 343, "362": 343, "103": 343, "4362": 343, "104": 343, "4041": 343, "6907": 343, "105": 343, "4664": 343, "2760": 343, "0299": 343, "9712": 343, "349": 343, "107": 343, "3332": 343, "4479": 343, "772": 343, "108": 343, "4357": 343, "9591": 343, "543": 343, "109": 343, "6216": 343, "1353": 343, "692": 343, "110": 343, "6261": 343, "7086": 343, "496": 343, "111": [343, 345], "7758": 343, "9818": 343, "112": [343, 345], "7772": 343, "5055": 343, "5840": 343, "3180": 343, "2083": 343, "115": 343, "5275": 343, "6873": 343, "116": 343, "4107": 343, "1624": 343, "117": 343, "6372": 343, "2571": 343, "118": 343, "4039": 343, "4428": 343, "119": 343, "4728": 343, "5628": 343, "6767": 343, "2466": 343, "522": 343, "5873": 343, "5072": 343, "122": [343, 348], "6548": 343, "3766": 343, "123": 343, "5134": 343, "1955": 343, "124": 343, "2481": 343, "0591": 343, "4500": 343, "3368": 343, "126": [343, 345], "9708": 343, "7059": 343, "127": [343, 345], "3031": 343, "2534": 343, "843": 343, "3327": 343, "6193": 343, "129": 343, "4831": 343, "1172": 343, "2593": 343, "4219": 343, "962": 343, "8380": 343, "899": 343, "132": 343, "2721": 343, "9048": 343, "133": [343, 345], "2419": 343, "5248": 343, "134": 343, "2139": 343, "4278": 343, "135": 343, "0690": 343, "5140": 343, "136": 343, "1140": 343, "7402": 343, "137": 343, "5356": 343, "1636": 343, "138": 343, "0671": 343, "8798": 343, "139": 343, "8918": 343, "3298": 343, "307": 343, "140": 343, "1779": 343, "141": [343, 345], "1771": 343, "3624": 343, "936": 343, "142": 343, "1683": 343, "4810": 343, "9373": 343, "4435": 343, "144": 343, "4396": 343, "8092": 343, "2572": 343, "146": 343, "4212": 343, "0260": 343, "147": 343, "0939": 343, "6478": 343, "605": 343, "148": 343, "6606": 343, "7289": 343, "9300": 343, "7193": 343, "563": 343, "1166": 343, "8514": 343, "151": 343, "9108": 343, "0672": 343, "292": 343, "152": 343, "8591": 343, "3768": 343, "153": [343, 345], "9976": 343, "154": 343, "0576": 343, "0067": 343, "935": 343, "4199": 343, "1722": 343, "156": 343, "8310": 343, "3466": 343, "157": 343, "8631": 343, "2492": 343, "158": 343, "8763": 343, "1277": 343, "159": 343, "5562": 343, "7446": 343, "1082": 343, "9830": 343, "161": 343, "0946": 343, "5229": 343, "162": 343, "4574": 343, "6900": 343, "163": [343, 344], "2229": 343, "0318": 343, "482": 343, "164": 343, "0543": 343, "0817": 343, "761": 343, "165": 343, "2809": 343, "5118": 343, "366": 343, "1142": 343, "5635": 343, "1949": 343, "2327": 343, "982": 343, "168": [343, 345], "0967": 343, "0387": 343, "457": 343, "169": 343, "0782": 343, "2150": 343, "170": 343, "82it": 343, "5222": 343, "3725": 343, "9288": 343, "9837": 343, "172": 343, "1416": 343, "1099": 343, "173": 343, "8620": 343, "8475": 343, "1807": 343, "4375": 343, "175": 343, "1148": 343, "0645": 343, "65it": 343, "2751": 343, "8313": 343, "177": 343, "9286": 343, "9770": 343, "178": 343, "5735": 343, "2837": 343, "2926": 343, "9489": 343, "180": 343, "91it": 343, "1507": 343, "181": 343, "93it": 343, "8724": 343, "3567": 343, "182": 343, "3574": 343, "6140": 343, "183": 343, "7895": 343, "2518": 343, "184": 343, "6146": 343, "185": 343, "8776": 343, "7358": 343, "186": 343, "3722": 343, "8428": 343, "187": 343, "7955": 343, "188": [343, 345], "0092": 343, "7106": 343, "829": 343, "189": 343, "2264": 343, "6919": 343, "1438": 343, "1362": 343, "191": 343, "0618": 343, "8217": 343, "9420": 343, "6765": 343, "193": 343, "7745": 343, "0709": 343, "194": 343, "9478": 343, "6867": 343, "195": 343, "6507": 343, "6225": 343, "196": 343, "2244": 343, "2195": 343, "197": 343, "5385": 343, "9263": 343, "198": 343, "1878": 343, "2374": 343, "199": 343, "8054": 343, "3504": 343, "557": 343, "0766": 343, "6825": 343, "201": 343, "2011": 343, "8393": 343, "202": 343, "0803": 343, "7815": 343, "203": 343, "8363": 343, "2460": 343, "204": 343, "8643": 343, "2191": 343, "593": 343, "205": 343, "0773": 343, "1343": 343, "206": 343, "8657": 343, "207": 343, "9304": 343, "7584": 343, "208": 343, "8752": 343, "2307": 343, "209": 343, "5250": 343, "4869": 343, "7837": 343, "5762": 343, "211": 343, "6661": 343, "8600": 343, "2502": 343, "1752": 343, "213": 343, "3075": 343, "8871": 343, "214": 343, "9406": 343, "8090": 343, "215": 343, "6291": 343, "8923": 343, "876": 343, "216": 343, "9504": 343, "21e": 343, "7431": 343, "7880": 343, "218": 343, "4463": 343, "5432": 343, "219": 343, "3793": 343, "3313": 343, "220": 343, "8843": 343, "0369": 343, "065": 343, "221": 343, "4828": 343, "8391": 343, "222": 343, "6265": 343, "2913": 343, "947": 343, "5541": 343, "1252": 343, "7342": 343, "2396": 343, "225": 343, "5936": 343, "1924": 343, "226": 343, "9975": 343, "2045": 343, "227": 343, "8367": 343, "9540": 343, "228": 343, "7259": 343, "6743": 343, "229": 343, "4827": 343, "7528": 343, "230": 343, "7361": 343, "8756": 343, "231": 343, "7646": 343, "1116": 343, "232": 343, "5426": 343, "8385": 343, "5662": 343, "8585": 343, "234": 343, "8234": 343, "7930": 343, "235": 343, "2648": 343, "9309": 343, "236": 343, "6817": 343, "237": 343, "0943": 343, "1533": 343, "238": 343, "3045": 343, "0483": 343, "239": 343, "240": [343, 347, 348], "6415": 343, "0201": 343, "241": 343, "4437": 343, "4365": 343, "242": 343, "0358": 343, "4943": 343, "243": 343, "1272": 343, "5003": 343, "1180": 343, "2637": 343, "245": 343, "7197": 343, "0873": 343, "246": 343, "2917": 343, "247": 343, "0160": 343, "0738": 343, "248": 343, "3689": 343, "0120": 343, "249": 343, "5570": 343, "0475": 343, "250": 343, "4423": 343, "2220": 343, "6803": 343, "252": 343, "1465": 343, "7214": 343, "253": 343, "8801": 343, "7034": 343, "254": 343, "9136": 343, "4076": 343, "7589": 343, "5013": 343, "8150": 343, "2241": 343, "257": 343, "0753": 343, "8081": 343, "1951": 343, "8314": 343, "259": 343, "0038": 343, "260": 343, "0889": 343, "4616": 343, "0655": 343, "262": 343, "8333": 343, "9476": 343, "263": 343, "7554": 343, "3798": 343, "264": 343, "3717": 343, "3947": 343, "529": 343, "265": 343, "3060": 343, "6495": 343, "7467": 343, "8889": 343, "267": 343, "8457": 343, "591": 343, "268": 343, "7137": 343, "0536": 343, "771": 343, "269": 343, "1651": 343, "388": 343, "270": 343, "8246": 343, "5709": 343, "281": 343, "271": 343, "7502": 343, "0521": 343, "032": 343, "272": 343, "5475": 343, "7253": 343, "273": 343, "2856": 343, "7130": 343, "274": 343, "2778": 343, "4122": 343, "8368": 343, "1841": 343, "9622": 343, "1603": 343, "003e": 343, "277": 343, "0247": 343, "346": 343, "278": 343, "2238": 343, "6418": 343, "279": 343, "0626": 343, "2538": 343, "280": 343, "0149": 343, "7380": 343, "2167": 343, "8911": 343, "282": 343, "8725": 343, "1983": 343, "8142": 343, "3709": 343, "284": 343, "4989": 343, "285": 343, "6464": 343, "6210": 343, "286": 343, "9726": 343, "0820": 343, "287": 343, "6975": 343, "9091": 343, "4926": 343, "4791": 343, "289": 343, "0905": 343, "3500": 343, "290": 343, "2287": 343, "291": 343, "9918": 343, "5543": 343, "9245": 343, "6444": 343, "631": 343, "293": 343, "0448": 343, "4769": 343, "8566": 343, "7208": 343, "295": 343, "0966": 343, "296": 343, "5303": 343, "1537": 343, "023": 343, "297": 343, "2682": 343, "564": 343, "298": 343, "66it": 343, "4318": 343, "5063": 343, "299": 343, "7475": 343, "4190": 343, "8186": 343, "5077": 343, "301": 343, "1883": 343, "5291": 343, "472": 343, "302": 343, "1256": 343, "3998": 343, "303": 343, "3622": 343, "0930": 343, "626": 343, "304": 343, "9500": 343, "0075": 343, "5664": 343, "305": 343, "5697": 343, "3024": 343, "306": 343, "3117": 343, "0052": 343, "006": 343, "0981": 343, "9312": 343, "3873": 343, "309": 343, "0411": 343, "2650": 343, "310": 343, "1656": 343, "0228": 343, "004": 343, "311": 343, "1196": 343, "2478": 343, "312": 343, "7353": 343, "0812": 343, "3022": 343, "758": 343, "314": 343, "1406": 343, "4626": 343, "315": 343, "2156": 343, "851": 343, "1953": 343, "3774": 343, "317": 343, "6385": 343, "9917": 343, "318": 343, "2764": 343, "905": 343, "319": 343, "6391": 343, "9317": 343, "9748": 343, "2679": 343, "321": 343, "8495": 343, "5125": 343, "8177": 343, "6602": 343, "323": 343, "0704": 343, "5776": 343, "324": 343, "9833": [343, 347], "1339": 343, "402": 343, "325": 343, "1238": 343, "326": 343, "9299": 343, "0227": 343, "327": 343, "7727": 343, "1607": 343, "328": 343, "3958": 343, "3223": 343, "763": 343, "329": 343, "4742": 343, "1797": 343, "330": 343, "0144": 343, "0085": 343, "791": 343, "331": 343, "8284": 343, "0428": 343, "0098": 343, "7365": 343, "4566": 343, "0781": 343, "086": 343, "3355": 343, "0230": 343, "9346": 343, "0423": 343, "076": 343, "3711": 343, "1335": 343, "6855": 343, "0304": 343, "0023": 343, "8459": 343, "9998": 343, "4399": 343, "2303": 343, "1346": 343, "340": 343, "2915": 343, "7116": 343, "341": 343, "5560": 343, "0487": 343, "342": 343, "5119": 343, "061": 343, "343": 343, "3305": 343, "3705": 343, "957": 343, "344": 343, "6068": 343, "345": 343, "5731": 343, "3897": 343, "0376": 343, "347": 343, "0434": 343, "012": 343, "1300": 343, "1215": 343, "0968": 343, "0885": 343, "350": 343, "0073": 343, "5052": 343, "4184": 343, "2817": 343, "8887": 343, "353": 343, "4779": 343, "1009": 343, "354": 343, "0604": 343, "599": 343, "355": 343, "4486": 343, "1176": 343, "656": 343, "356": 343, "2436": 343, "0668": 343, "8849": 343, "0012": 343, "358": 343, "7511": 343, "8804": 343, "359": 343, "8870": 343, "6728": 343, "360": 343, "8841": 343, "5508": 343, "361": 343, "5242": 343, "0268": 343, "0013": 343, "6185": 343, "363": 343, "1378": 343, "0204": 343, "364": 343, "0355": 343, "685": 343, "365": 343, "4884": 343, "0231": 343, "0770": 343, "0014": 343, "6793": 343, "367": 343, "9834": 343, "863": 343, "368": 343, "6709": 343, "462": 343, "369": 343, "5199": 343, "9790": 343, "370": 343, "9401": 343, "7802": 343, "371": 343, "6723": 343, "2678": 343, "6201": 343, "373": 343, "2184": 343, "7385": 343, "374": 343, "6344": 343, "617": 343, "375": 343, "9945": 343, "0772": 343, "567": 343, "7576": 343, "0398": 343, "377": 343, "3396": 343, "0022": 343, "094": 343, "378": 343, "3073": 343, "4018": 343, "379": 343, "1869": 343, "380": 343, "0481": 343, "1117": 343, "381": 343, "6823": 343, "981": 343, "8305": 343, "0210": 343, "383": 343, "4908": 343, "0272": 343, "538": 343, "3267": 343, "0111": 343, "7965": 343, "1796": 343, "0039": 343, "5396": 343, "386": 343, "3757": 343, "0490": 343, "387": 343, "1394": 343, "4187": 343, "2986": 343, "7954": 343, "1274": 343, "0063": 343, "813": 343, "390": 343, "8706": 343, "0114": 343, "391": 343, "55it": 343, "6922": 343, "2423": 343, "392": 343, "9115": 343, "2602": 343, "393": 343, "2449": 343, "0783": 343, "394": 343, "0631": 343, "0057": 343, "7444": 343, "395": 343, "3339": 343, "0167": 343, "396": 343, "90it": 343, "4806": 343, "397": 343, "4171": 343, "067": 343, "398": 343, "2618": 343, "5809": 343, "399": 343, "0054": 343, "3364": 343, "8733": 343, "0184": 343, "401": 343, "9137": 343, "0113": 343, "025": 343, "0386": 343, "0625": 343, "403": 343, "1332": 343, "0582": 343, "7816": 343, "404": 343, "8341": 343, "0941": 343, "854": 343, "405": 343, "8615": 343, "588": 343, "406": 343, "3849": 343, "407": 343, "9395": 343, "0765": 343, "055": 343, "408": 343, "2685": 343, "2235": 343, "688": 343, "3052": 343, "4249": 343, "410": 343, "6806": 343, "6383": 343, "3721": 343, "9981": 343, "412": 343, "1862": 343, "822": 343, "413": 343, "9811": 343, "0171": 343, "013": 343, "414": 343, "0252": 343, "0049": 343, "6205": 343, "415": 343, "1108": 343, "4921": 343, "9142": 343, "8130": 343, "417": 343, "1725": 343, "0036": 343, "3196": 343, "7795": 343, "0242": 343, "799": 343, "419": 343, "7737": 343, "0138": 343, "420": 343, "1462": 343, "0053": 343, "421": 343, "9226": 343, "6139": 343, "422": 343, "9889": 343, "0403": 343, "423": 343, "6194": 343, "0032": 343, "3989": 343, "0104": 343, "9960": 343, "0009": 343, "6009": 343, "426": 343, "2697": 343, "0914": 343, "427": 343, "1114": 343, "428": 343, "9862": 343, "1932": 343, "429": 343, "0637": 343, "0623": 343, "082": 343, "430": 343, "9906": 343, "2031": 343, "431": 343, "9948": 343, "0895": 343, "432": 343, "1970": 343, "0256": 343, "433": 343, "4231": 343, "0449": 343, "644": 343, "434": 343, "1039": 343, "1973": 343, "435": 343, "4561": 343, "1225": 343, "436": 343, "0211": 343, "2125": 343, "437": 343, "3866": 343, "0050": 343, "7202": 343, "438": 343, "6388": 343, "0072": 343, "439": 343, "1187": 343, "0015": 343, "5116": 343, "440": 343, "0432": 343, "0025": 343, "7809": 343, "1925": 343, "0103": 343, "442": 343, "9570": 343, "0871": 343, "5601": 343, "0165": 343, "0047": 343, "6061": 343, "2746": 343, "0027": 343, "7887": 343, "446": 343, "1835": 343, "0035": 343, "855": 343, "447": 343, "8420": 343, "548": 343, "2653": 343, "0126": 343, "9736": 343, "449": 343, "0594": 343, "0119": 343, "6196": 343, "450": 343, "4509": 343, "0373": 343, "451": 343, "0620": 343, "452": 343, "6898": 343, "3235": 343, "687": 343, "453": 343, "5879": 343, "454": 343, "8406": 343, "0694": 343, "455": 343, "8259": 343, "0235": 343, "8500": 343, "0024": 343, "4054": 343, "458": 343, "2027": 343, "0894": 343, "459": 343, "5966": 343, "460": 343, "6942": 343, "0016": 343, "4254": 343, "6703": 343, "0145": 343, "8124": 343, "0218": 343, "9196": 343, "0188": 343, "8986": 343, "0884": 343, "0084": 343, "5624": 343, "465": 343, "8862": 343, "0006": 343, "5384": 343, "466": 343, "5837": 343, "467": 343, "8954": 343, "0101": 343, "6751": 343, "468": 343, "8063": 343, "0122": 343, "9635": 343, "469": 343, "0692": 343, "4216": 343, "470": 343, "1227": 343, "0586": 343, "162e": 343, "471": 343, "9690": 343, "0074": 343, "4166": 343, "6324": 343, "473": 343, "0778": 343, "474": 343, "8548": 343, "0017": 343, "4408": 343, "475": 343, "8125": 343, "1515": 343, "476": 343, "2733": 343, "0044": 343, "2836": 343, "477": 343, "7497": 343, "7681": 343, "478": 343, "8547": 343, "0105": 343, "7212": 343, "479": 343, "9848": 343, "0019": 343, "6498": 343, "1987": 343, "0011": 343, "5473": 343, "481": 343, "8991": 343, "0033": 343, "6091": 343, "9189": 343, "5771": 343, "483": 343, "6781": 343, "7542": 343, "484": 343, "5959": 343, "0064": 343, "4295": 343, "485": 343, "2547": 343, "486": 343, "0636": 343, "547": 343, "487": 343, "0065": 343, "488": 343, "1694": 343, "0083": 343, "5759": 343, "489": 343, "0493": 343, "0021": 343, "7805": 343, "490": 343, "0950": 343, "497": 343, "491": 343, "9717": 343, "3672": 343, "492": 343, "0207": 343, "493": 343, "8266": 343, "0069": 343, "5365": 343, "494": 343, "2623": 343, "5078": 343, "495": 343, "4545": 343, "09636": 343, "8754": 343, "0010": 343, "498": 343, "0031": 343, "8269": 343, "499": 343, "4082": 343, "6642": 343, "2284": 343, "501": 343, "9130": 343, "0008": 343, "502": 343, "503": 343, "7624": 343, "0056": 343, "3858": 343, "504": 343, "0890": 343, "0042": 343, "505": 343, "7505": 343, "2157": 343, "506": 343, "8394": 343, "3413": 343, "507": 343, "9609": 343, "0041": 343, "6905": 343, "508": 343, "8467": 343, "4409": 343, "509": 343, "510": 343, "8128": 343, "3559": 343, "511": 343, "1479": 343, "0264": 343, "1589": 343, "566": 343, "513": 343, "2756": 343, "0046": 343, "5266": 343, "514": 343, "9873": 343, "0112": [343, 348], "9314": 343, "515": 343, "3791": 343, "0721": 343, "516": 343, "4580": 343, "0758": 343, "6114": 343, "517": 343, "2431": 343, "518": 343, "1958": 343, "5553": 343, "8924": 343, "0097": 343, "3737": 343, "0234": 343, "521": 343, "9125": 343, "4623": 343, "3230": 343, "0589": 343, "3784": 343, "523": 343, "9482": 343, "0051": 343, "524": 343, "1979": 343, "0045": 343, "6401": 343, "525": 343, "1588": 343, "0048": 343, "6255": 343, "526": 343, "6084": 343, "3477": 343, "1475": 343, "0209": 343, "528": 343, "7611": 343, "1040": 343, "0099": 343, "0173": 343, "643": 343, "530": 343, "8189": 343, "4358": 343, "531": 343, "9897": 343, "532": 343, "1548": 343, "9751": 343, "533": 343, "6362": 343, "7495": 343, "534": 343, "1749": 343, "9513": 343, "535": 343, "7708": 343, "0371": 343, "536": 343, "2649": 343, "0437": 343, "537": 343, "5491": 343, "0276": 343, "6426": 343, "7294": 343, "078e": 343, "539": 343, "9928": 343, "540": 343, "7937": 343, "0124": 343, "9664": 343, "541": 343, "3342": 343, "542": 343, "2046": [343, 348], "5496": 343, "0956": 343, "0059": 343, "545": 343, "9028": 343, "5843": 343, "546": 343, "0674": 343, "0178": 343, "797": 343, "2815": 343, "0599": 343, "1587": 343, "9276": 343, "8228": 343, "6164": 343, "551": 343, "6850": 343, "9167": 343, "3092": 343, "0670": 343, "9177": 343, "553": 343, "1599": 343, "0043": 343, "554": 343, "6367": 343, "555": 343, "3657": 343, "556": 343, "6694": 343, "2622": 343, "0372": 343, "4841": 343, "558": 343, "2707": 343, "0058": 343, "757": 343, "559": 343, "2267": 343, "5415": 343, "560": 343, "4556": 343, "0163": 343, "561": 343, "1839": [343, 348], "0809": 343, "6262": 343, "562": 343, "0278": 343, "1112": 343, "6155": 343, "1427": 343, "3582": 343, "624": 343, "7870": 343, "9490": 343, "0439": 343, "8796": 343, "568": 343, "8026": 343, "612": 343, "569": 343, "3147": 343, "8486": 343, "570": 343, "7917": 343, "0129": 343, "571": 343, "9553": 343, "0020": 343, "6871": 343, "572": 343, "3132": 343, "0159": 343, "8646": 343, "573": 343, "5320": 343, "0269": 343, "574": 343, "2955": 343, "0245": 343, "575": 343, "3347": 343, "0179": 343, "9718": 343, "1629": 343, "804": 343, "577": 343, "0070": 343, "4335": 343, "578": 343, "579": 343, "3049": 343, "9063": 343, "580": 343, "8785": 343, "3295": 343, "5184": 343, "0546": 343, "582": 343, "4589": 343, "583": 343, "4697": 343, "2476": 343, "584": 343, "2397": 343, "585": 343, "4953": 343, "1775": 343, "586": 343, "2258": 343, "0110": 343, "7671": 343, "587": 343, "3981": 343, "8590": 343, "0007": 343, "589": 343, "9820": 343, "4221": 343, "590": 343, "1293": 343, "0116": 343, "868": 343, "1675": 343, "5931": 343, "592": 343, "2910": 343, "5219": 343, "2124": 343, "1730": 343, "737": 343, "594": 343, "2914": 343, "0206": 343, "595": 343, "0172": 343, "3982": 343, "0945": 343, "0121": 343, "4789": 343, "597": 343, "3805": 343, "4074": 343, "598": 343, "3310": 343, "5065": 343, "6028": 343, "6316": 343, "6724": 343, "6523": 343, "601": 343, "0136": 343, "4298": 343, "602": 343, "3524": 343, "2629": 343, "603": 343, "2635": 343, "7839": 343, "604": 343, "6041": 343, "8027": 343, "4170": 343, "4675": 343, "606": 343, "3153": 343, "9316": 343, "607": 343, "0649": 343, "9722": 343, "7989": 343, "0329": 343, "609": 343, "1976": 343, "6852": 343, "610": 343, "4793": 343, "1255": 343, "611": 343, "4581": 343, "0394": 343, "2047": 343, "0326": 343, "613": 343, "8967": 343, "8619": 343, "614": 343, "5906": 343, "6491": 343, "615": 343, "6634": 343, "4394": 343, "616": 343, "0624": 343, "0061": 343, "5676": 343, "3259": 343, "0131": 343, "7733": 343, "618": 343, "7515": 343, "0189": 343, "5575": 343, "619": 343, "9313": 343, "6286": 343, "620": 343, "4325": 343, "7832": 343, "621": 343, "1134": 343, "622": 343, "4572": 343, "0500": 343, "5838": 343, "623": 343, "3818": 343, "8623": 343, "1253": 343, "6622": 343, "subject": 343, "saw": [343, 345], "explain": 344, "semat": 344, "r3mtransform": 344, "ai": 344, "env_transform": [344, 348], "s3": 344, "amazonaw": 344, "r3m_50": 344, "374m": 344, "9m": 344, "127mb": 344, "143mb": 344, "9mb": 344, "0m": 344, "1mb": 344, "6m": 344, "7mb": 344, "3mb": 344, "4m": 344, "6mb": 344, "115m": 344, "112mb": 344, "131m": 344, "115mb": 344, "148m": 344, "121mb": 344, "160m": 344, "123mb": 344, "172m": 344, "104mb": 344, "182m": 344, "102mb": 344, "197m": 344, "212m": 344, "103mb": 344, "229m": 344, "105mb": 344, "246m": 344, "260m": 344, "120mb": 344, "272m": 344, "283m": 344, "5mb": 344, "295m": 344, "311m": 344, "113mb": 344, "322m": 344, "109mb": 344, "333m": 344, "344m": 344, "354m": 344, "101mb": 344, "364m": 344, "wiser": 344, "conclud": 344, "_storag": [344, 345], "3618": 344, "supervis": [345, 348], "pull": 345, "temporarili": 345, "ram": [345, 348], "batteri": 345, "dataliststorag": 345, "datalazytensorstorag": 345, "tensordidct": 345, "datalazymemmapstorag": 345, "buffer_list": 345, "lowest": 345, "medium": 345, "buffer_lazytensor": 345, "buffer_lazymemmap": 345, "tempdir": 345, "tmpbwwnse_a": 345, "fullest": 345, "convini": 345, "mydata": 345, "background": 345, "question": [345, 347], "_i": 345, "artifici": 345, "0892946e": 345, "she": 345, "augment": 345, "proport": 345, "hist": 345, "barcontain": 345, "artist": 345, "revert": 345, "expens": 345, "reappear": 345, "unfold": 345, "problemat": 345, "window": 345, "4th": 345, "demo": 347, "icml": 347, "vmoen": 347, "fb": 347, "invest": 347, "platform": 347, "media": 347, "predominantli": 347, "tensordict1": 347, "tensordict2": 347, "tensordict_sampl": 347, "_sampler": 347, "_sum_tre": 347, "modulenotfounderror": 347, "28791671991348267": 347, "gym_env": 347, "noopresetenv": [347, 348], "backbone_modul": 347, "params_expand": 347, "tensordict_exp": 347, "base_modul": 347, "0137": 347, "1524": 347, "0641": 347, "viewbackward0": 347, "asstridedbackward0": 347, "8728": 347, "1334": 347, "3494": 347, "6887": 347, "6402": 347, "_safetanhbackward": 347, "1132": 347, "1762": 347, "3430": 347, "2668": 347, "2918": 347, "6239": 347, "roughli": 347, "tensordicts_prealloc": 347, "tensordicts_stack": 347, "tensordict_rollout": [347, 348], "disclaim": 347, "concatmodul": 347, "loss_td": 347, "year": 347, "roadmap": 347, "compris": 347, "contributor": 347, "curiou": 347, "nascent": 347, "unsupervis": 348, "rom": 348, "licens": 348, "pygam": 348, "unifi": 348, "_build_env": 348, "adventur": 348, "airraid": 348, "alien": 348, "amidar": 348, "assault": 348, "4227": 348, "deserv": 348, "__episode__": 348, "__trajectory__": 348, "void": 348, "reproduct": 348, "tensordict_tprim": 348, "imshow": 348, "axesimag": 348, "0x7f74d415d3d0": 348, "inconsist": 348, "0x7f83b2b563c0": 348, "swingup": 348, "wrapper1": 348, "wrapper2": 348, "obviou": 348, "truth": 348, "env0": 348, "env_transformed_bi": 348, "stanc": 348, "transformeddistribut": 348, "base_dist": 348, "concat": 348, "mofidi": 348, "transformedenviron": 348, "moderet": 348, "computation": 348, "legitim": 348, "incom": 348, "amongst": 348, "wor": 348, "convention": 348, "scope": 348, "markovian": 348, "3288080526": 348, "constain": 348, "bar_": 348, "get_someth": 348, "bar_f64eedc4": 348, "aefa": 348, "aargh": 348, "foo_list": 348, "batched_env": 348, "_dispatch_caller_parallel": 348, "0x7f82a9bfbcd0": 348, "bar_fdd65532": 348, "9e6f": 348, "bar_fdd5f0ba": 348, "9614": 348, "bar_fdd5bfc8": 348, "8fea": 348, "parallen": 348, "particularili": 348, "evolv": 348, "steadi": 348, "approx": 348, "3478": 348, "1532": 348, "1910": 348, "_extra_st": 348, "observation_ssq": 348, "observation_sum": 348, "0769": 348, "1957": 348, "0288": 348, "2922": 348, "1928": 348, "dispach": 348, "absor": 348}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"], [11, 1, 1, "", "reset"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "RandomPolicy"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "BinaryDiscreteTensorSpec"], [25, 0, 1, "", "BoundedTensorSpec"], [26, 0, 1, "", "CompositeSpec"], [27, 0, 1, "", "DiscreteTensorSpec"], [28, 0, 1, "", "LazyStackedCompositeSpec"], [29, 0, 1, "", "LazyStackedTensorSpec"], [30, 0, 1, "", "MultiDiscreteTensorSpec"], [31, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [32, 0, 1, "", "MultiStep"], [33, 0, 1, "", "OneHotDiscreteTensorSpec"], [34, 0, 1, "", "PairwiseDataset"], [35, 0, 1, "", "PrioritizedReplayBuffer"], [36, 0, 1, "", "PromptData"], [37, 0, 1, "", "PromptTensorDictTokenizer"], [38, 0, 1, "", "ReplayBuffer"], [39, 0, 1, "", "RewardData"], [40, 0, 1, "", "RolloutFromModel"], [41, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [42, 0, 1, "", "TensorDictReplayBuffer"], [43, 0, 1, "", "TensorDictTokenizer"], [44, 0, 1, "", "TensorSpec"], [45, 0, 1, "", "TokenizedDatasetLoader"], [46, 0, 1, "", "UnboundedContinuousTensorSpec"], [47, 0, 1, "", "UnboundedDiscreteTensorSpec"], [48, 0, 1, "", "check_no_exclusive_keys"], [49, 0, 1, "", "consolidate_spec"], [50, 0, 1, "", "contains_lazy_spec"], [51, 0, 1, "", "create_infinite_iterator"], [58, 0, 1, "", "get_dataloader"]], "torchrl.data.BinaryDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "to_one_hot"], [24, 1, 1, "", "to_one_hot_spec"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "empty"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_empty"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "items"], [26, 1, 1, "", "keys"], [26, 1, 1, "", "lock_"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unlock_"], [26, 1, 1, "", "values"], [26, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "to_one_hot"], [27, 1, 1, "", "to_one_hot_spec"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "empty"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_empty"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "items"], [28, 1, 1, "", "keys"], [28, 1, 1, "", "lock_"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unlock_"], [28, 1, 1, "", "values"], [28, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to_categorical"], [31, 1, 1, "", "to_categorical_spec"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[32, 1, 1, "", "add_module"], [32, 1, 1, "", "apply"], [32, 1, 1, "", "bfloat16"], [32, 1, 1, "", "buffers"], [32, 1, 1, "", "children"], [32, 1, 1, "", "compile"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 1, 1, "", "double"], [32, 1, 1, "", "eval"], [32, 1, 1, "", "extra_repr"], [32, 1, 1, "", "float"], [32, 1, 1, "", "forward"], [32, 1, 1, "", "get_buffer"], [32, 1, 1, "", "get_extra_state"], [32, 1, 1, "", "get_parameter"], [32, 1, 1, "", "get_submodule"], [32, 1, 1, "", "half"], [32, 1, 1, "", "ipu"], [32, 1, 1, "", "load_state_dict"], [32, 1, 1, "", "modules"], [32, 1, 1, "", "named_buffers"], [32, 1, 1, "", "named_children"], [32, 1, 1, "", "named_modules"], [32, 1, 1, "", "named_parameters"], [32, 1, 1, "", "parameters"], [32, 1, 1, "", "register_backward_hook"], [32, 1, 1, "", "register_buffer"], [32, 1, 1, "", "register_forward_hook"], [32, 1, 1, "", "register_forward_pre_hook"], [32, 1, 1, "", "register_full_backward_hook"], [32, 1, 1, "", "register_full_backward_pre_hook"], [32, 1, 1, "", "register_load_state_dict_post_hook"], [32, 1, 1, "", "register_module"], [32, 1, 1, "", "register_parameter"], [32, 1, 1, "", "register_state_dict_pre_hook"], [32, 1, 1, "", "requires_grad_"], [32, 1, 1, "", "set_extra_state"], [32, 1, 1, "", "share_memory"], [32, 1, 1, "", "state_dict"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_empty"], [32, 1, 1, "", "train"], [32, 1, 1, "", "type"], [32, 1, 1, "", "xpu"], [32, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[34, 3, 1, "", "batch_size"], [34, 3, 1, "", "device"], [34, 1, 1, "", "from_dataset"], [34, 1, 1, "", "from_dict"], [34, 1, 1, "", "from_tensordict"], [34, 1, 1, "", "get"], [34, 1, 1, "", "load_state_dict"], [34, 1, 1, "", "memmap"], [34, 1, 1, "", "memmap_"], [34, 1, 1, "", "memmap_like"], [34, 1, 1, "", "set"], [34, 1, 1, "", "state_dict"], [34, 1, 1, "", "to_tensordict"], [34, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[35, 1, 1, "", "add"], [35, 1, 1, "", "append_transform"], [35, 1, 1, "", "dumps"], [35, 1, 1, "", "empty"], [35, 1, 1, "", "extend"], [35, 1, 1, "", "insert_transform"], [35, 1, 1, "", "loads"], [35, 1, 1, "", "sample"]], "torchrl.data.PromptData": [[36, 3, 1, "", "batch_size"], [36, 3, 1, "", "device"], [36, 1, 1, "", "from_dataset"], [36, 1, 1, "", "from_dict"], [36, 1, 1, "", "from_tensordict"], [36, 1, 1, "", "get"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "memmap"], [36, 1, 1, "", "memmap_"], [36, 1, 1, "", "memmap_like"], [36, 1, 1, "", "set"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to_tensordict"], [36, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[38, 1, 1, "", "add"], [38, 1, 1, "", "append_transform"], [38, 1, 1, "", "dumps"], [38, 1, 1, "", "empty"], [38, 1, 1, "", "extend"], [38, 1, 1, "", "insert_transform"], [38, 1, 1, "", "loads"], [38, 1, 1, "", "sample"]], "torchrl.data.RewardData": [[39, 3, 1, "", "batch_size"], [39, 3, 1, "", "device"], [39, 1, 1, "", "from_dict"], [39, 1, 1, "", "from_tensordict"], [39, 1, 1, "", "get"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "memmap"], [39, 1, 1, "", "memmap_"], [39, 1, 1, "", "memmap_like"], [39, 1, 1, "", "set"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to_tensordict"], [39, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[40, 1, 1, "", "create_rollout_td"], [40, 1, 1, "", "generate"], [40, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "dumps"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "loads"], [41, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "append_transform"], [42, 1, 1, "", "dumps"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert_transform"], [42, 1, 1, "", "loads"], [42, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[45, 1, 1, "", "dataset_to_tensordict"], [45, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "zero"]], "torchrl.data.datasets": [[52, 0, 1, "", "D4RLExperienceReplay"], [53, 0, 1, "", "MinariExperienceReplay"], [54, 0, 1, "", "OpenMLExperienceReplay"], [55, 0, 1, "", "OpenXExperienceReplay"], [56, 0, 1, "", "RobosetExperienceReplay"], [57, 0, 1, "", "VD4RLExperienceReplay"]], "torchrl.data.datasets.D4RLExperienceReplay": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 1, 1, "", "dumps"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "loads"], [52, 1, 1, "", "sample"]], "torchrl.data.datasets.MinariExperienceReplay": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 1, 1, "", "dumps"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "loads"], [53, 1, 1, "", "sample"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[54, 1, 1, "", "add"], [54, 1, 1, "", "append_transform"], [54, 1, 1, "", "dumps"], [54, 1, 1, "", "empty"], [54, 1, 1, "", "extend"], [54, 1, 1, "", "insert_transform"], [54, 1, 1, "", "loads"], [54, 1, 1, "", "sample"]], "torchrl.data.datasets.OpenXExperienceReplay": [[55, 1, 1, "", "add"], [55, 1, 1, "", "append_transform"], [55, 1, 1, "", "dumps"], [55, 1, 1, "", "empty"], [55, 1, 1, "", "extend"], [55, 1, 1, "", "insert_transform"], [55, 1, 1, "", "loads"], [55, 1, 1, "", "sample"]], "torchrl.data.datasets.RobosetExperienceReplay": [[56, 1, 1, "", "add"], [56, 1, 1, "", "append_transform"], [56, 1, 1, "", "dumps"], [56, 1, 1, "", "empty"], [56, 1, 1, "", "extend"], [56, 1, 1, "", "insert_transform"], [56, 1, 1, "", "loads"], [56, 1, 1, "", "sample"]], "torchrl.data.datasets.VD4RLExperienceReplay": [[57, 1, 1, "", "add"], [57, 1, 1, "", "append_transform"], [57, 1, 1, "", "dumps"], [57, 1, 1, "", "empty"], [57, 1, 1, "", "extend"], [57, 1, 1, "", "insert_transform"], [57, 1, 1, "", "loads"], [57, 1, 1, "", "sample"]], "torchrl.data.replay_buffers": [[59, 0, 1, "", "ImmutableDatasetWriter"], [60, 0, 1, "", "LazyMemmapStorage"], [61, 0, 1, "", "LazyTensorStorage"], [62, 0, 1, "", "ListStorage"], [63, 0, 1, "", "PrioritizedSampler"], [64, 0, 1, "", "RandomSampler"], [65, 0, 1, "", "ReplayBufferEnsemble"], [66, 0, 1, "", "RoundRobinWriter"], [67, 0, 1, "", "Sampler"], [68, 0, 1, "", "SamplerEnsemble"], [69, 0, 1, "", "SamplerWithoutReplacement"], [70, 0, 1, "", "SliceSampler"], [71, 0, 1, "", "SliceSamplerWithoutReplacement"], [72, 0, 1, "", "Storage"], [73, 0, 1, "", "StorageEnsemble"], [74, 0, 1, "", "TensorDictMaxValueWriter"], [75, 0, 1, "", "TensorDictRoundRobinWriter"], [76, 0, 1, "", "TensorStorage"], [77, 0, 1, "", "Writer"], [78, 0, 1, "", "WriterEnsemble"]], "torchrl.data.replay_buffers.ImmutableDatasetWriter": [[59, 1, 1, "", "add"], [59, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[60, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[61, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[62, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[63, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.ReplayBufferEnsemble": [[65, 1, 1, "", "add"], [65, 1, 1, "", "append_transform"], [65, 1, 1, "", "dumps"], [65, 1, 1, "", "empty"], [65, 1, 1, "", "extend"], [65, 1, 1, "", "insert_transform"], [65, 1, 1, "", "loads"], [65, 1, 1, "", "sample"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[66, 1, 1, "", "add"], [66, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[72, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.StorageEnsemble": [[73, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[74, 1, 1, "", "add"], [74, 1, 1, "", "extend"], [74, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[75, 1, 1, "", "add"], [75, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[76, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[77, 1, 1, "", "add"], [77, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.WriterEnsemble": [[78, 1, 1, "", "add"], [78, 1, 1, "", "extend"]], "torchrl.envs": [[79, 2, 1, "", "BraxEnv"], [80, 2, 1, "", "BraxWrapper"], [81, 2, 1, "", "DMControlEnv"], [82, 2, 1, "", "DMControlWrapper"], [83, 0, 1, "", "EnvBase"], [84, 0, 1, "", "EnvCreator"], [85, 0, 1, "", "EnvMetaData"], [86, 2, 1, "", "GymEnv"], [87, 0, 1, "", "GymLikeEnv"], [88, 2, 1, "", "GymWrapper"], [89, 2, 1, "", "HabitatEnv"], [90, 2, 1, "", "IsaacGymEnv"], [91, 2, 1, "", "IsaacGymWrapper"], [92, 2, 1, "", "JumanjiEnv"], [93, 2, 1, "", "JumanjiWrapper"], [94, 2, 1, "", "MOGymEnv"], [95, 2, 1, "", "MOGymWrapper"], [96, 2, 1, "", "MarlGroupMapType"], [97, 2, 1, "", "ModelBasedEnvBase"], [98, 2, 1, "", "MultiThreadedEnv"], [99, 2, 1, "", "MultiThreadedEnvWrapper"], [100, 2, 1, "", "OpenMLEnv"], [101, 0, 1, "", "ParallelEnv"], [102, 2, 1, "", "PettingZooEnv"], [103, 2, 1, "", "PettingZooWrapper"], [104, 2, 1, "", "RoboHiveEnv"], [105, 2, 1, "", "SMACv2Env"], [106, 2, 1, "", "SMACv2Wrapper"], [107, 0, 1, "", "SerialEnv"], [108, 2, 1, "", "VmasEnv"], [109, 2, 1, "", "VmasWrapper"], [110, 2, 1, "", "check_marl_grouping"], [111, 2, 1, "", "gym_backend"], [97, 1, 1, "", "rand_step"], [97, 1, 1, "", "reset"], [97, 1, 1, "", "rollout"], [113, 2, 1, "", "set_gym_backend"], [97, 1, 1, "", "set_seed"], [97, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[83, 3, 1, "", "action_key"], [83, 3, 1, "", "action_keys"], [83, 3, 1, "", "action_spec"], [83, 1, 1, "", "add_module"], [83, 1, 1, "", "apply"], [83, 3, 1, "", "batch_locked"], [83, 1, 1, "", "bfloat16"], [83, 1, 1, "", "buffers"], [83, 1, 1, "", "children"], [83, 1, 1, "", "compile"], [83, 1, 1, "", "cpu"], [83, 1, 1, "", "cuda"], [83, 3, 1, "", "done_key"], [83, 3, 1, "", "done_keys"], [83, 3, 1, "", "done_keys_groups"], [83, 3, 1, "", "done_spec"], [83, 1, 1, "", "double"], [83, 1, 1, "", "empty_cache"], [83, 1, 1, "", "eval"], [83, 1, 1, "", "extra_repr"], [83, 1, 1, "", "fake_tensordict"], [83, 1, 1, "", "float"], [83, 1, 1, "", "forward"], [83, 3, 1, "", "full_action_spec"], [83, 3, 1, "", "full_done_spec"], [83, 3, 1, "", "full_reward_spec"], [83, 3, 1, "", "full_state_spec"], [83, 1, 1, "", "get_buffer"], [83, 1, 1, "", "get_extra_state"], [83, 1, 1, "", "get_parameter"], [83, 1, 1, "", "get_submodule"], [83, 1, 1, "", "half"], [83, 3, 1, "", "input_spec"], [83, 1, 1, "", "ipu"], [83, 1, 1, "", "load_state_dict"], [83, 1, 1, "", "modules"], [83, 1, 1, "", "named_buffers"], [83, 1, 1, "", "named_children"], [83, 1, 1, "", "named_modules"], [83, 1, 1, "", "named_parameters"], [83, 3, 1, "", "observation_spec"], [83, 3, 1, "", "output_spec"], [83, 1, 1, "", "parameters"], [83, 1, 1, "", "rand_action"], [83, 1, 1, "id0", "rand_step"], [83, 1, 1, "", "register_backward_hook"], [83, 1, 1, "", "register_buffer"], [83, 1, 1, "", "register_forward_hook"], [83, 1, 1, "", "register_forward_pre_hook"], [83, 1, 1, "", "register_full_backward_hook"], [83, 1, 1, "", "register_full_backward_pre_hook"], [83, 1, 1, "", "register_load_state_dict_post_hook"], [83, 1, 1, "", "register_module"], [83, 1, 1, "", "register_parameter"], [83, 1, 1, "", "register_state_dict_pre_hook"], [83, 1, 1, "", "requires_grad_"], [83, 1, 1, "id1", "reset"], [83, 3, 1, "", "reset_keys"], [83, 3, 1, "", "reward_key"], [83, 3, 1, "", "reward_keys"], [83, 3, 1, "", "reward_spec"], [83, 1, 1, "id2", "rollout"], [83, 1, 1, "", "set_extra_state"], [83, 1, 1, "id3", "set_seed"], [83, 1, 1, "", "share_memory"], [83, 3, 1, "", "specs"], [83, 1, 1, "", "state_dict"], [83, 3, 1, "", "state_spec"], [83, 1, 1, "id4", "step"], [83, 1, 1, "", "step_and_maybe_reset"], [83, 1, 1, "", "to"], [83, 1, 1, "", "to_empty"], [83, 1, 1, "", "train"], [83, 1, 1, "", "type"], [83, 1, 1, "", "xpu"], [83, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[87, 3, 1, "", "action_key"], [87, 3, 1, "", "action_keys"], [87, 3, 1, "", "action_spec"], [87, 1, 1, "", "add_module"], [87, 1, 1, "", "apply"], [87, 3, 1, "", "batch_locked"], [87, 1, 1, "", "bfloat16"], [87, 1, 1, "", "buffers"], [87, 1, 1, "", "children"], [87, 1, 1, "", "close"], [87, 1, 1, "", "compile"], [87, 1, 1, "", "cpu"], [87, 1, 1, "", "cuda"], [87, 3, 1, "", "done_key"], [87, 3, 1, "", "done_keys"], [87, 3, 1, "", "done_keys_groups"], [87, 3, 1, "", "done_spec"], [87, 1, 1, "", "double"], [87, 1, 1, "", "empty_cache"], [87, 1, 1, "", "eval"], [87, 1, 1, "", "extra_repr"], [87, 1, 1, "", "fake_tensordict"], [87, 1, 1, "", "float"], [87, 1, 1, "", "forward"], [87, 3, 1, "", "full_action_spec"], [87, 3, 1, "", "full_done_spec"], [87, 3, 1, "", "full_reward_spec"], [87, 3, 1, "", "full_state_spec"], [87, 1, 1, "", "get_buffer"], [87, 1, 1, "", "get_extra_state"], [87, 1, 1, "", "get_parameter"], [87, 1, 1, "", "get_submodule"], [87, 1, 1, "", "half"], [87, 3, 1, "", "input_spec"], [87, 1, 1, "", "ipu"], [87, 1, 1, "", "load_state_dict"], [87, 1, 1, "", "modules"], [87, 1, 1, "", "named_buffers"], [87, 1, 1, "", "named_children"], [87, 1, 1, "", "named_modules"], [87, 1, 1, "", "named_parameters"], [87, 3, 1, "", "observation_spec"], [87, 3, 1, "", "output_spec"], [87, 1, 1, "", "parameters"], [87, 1, 1, "", "rand_action"], [87, 1, 1, "", "rand_step"], [87, 1, 1, "", "read_action"], [87, 1, 1, "", "read_done"], [87, 1, 1, "", "read_obs"], [87, 1, 1, "", "read_reward"], [87, 1, 1, "", "register_backward_hook"], [87, 1, 1, "", "register_buffer"], [87, 1, 1, "", "register_forward_hook"], [87, 1, 1, "", "register_forward_pre_hook"], [87, 1, 1, "", "register_full_backward_hook"], [87, 1, 1, "", "register_full_backward_pre_hook"], [87, 1, 1, "", "register_load_state_dict_post_hook"], [87, 1, 1, "", "register_module"], [87, 1, 1, "", "register_parameter"], [87, 1, 1, "", "register_state_dict_pre_hook"], [87, 1, 1, "", "requires_grad_"], [87, 1, 1, "", "reset"], [87, 3, 1, "", "reset_keys"], [87, 3, 1, "", "reward_key"], [87, 3, 1, "", "reward_keys"], [87, 3, 1, "", "reward_spec"], [87, 1, 1, "", "rollout"], [87, 1, 1, "", "set_extra_state"], [87, 1, 1, "", "set_info_dict_reader"], [87, 1, 1, "", "set_seed"], [87, 1, 1, "", "share_memory"], [87, 3, 1, "", "specs"], [87, 1, 1, "", "state_dict"], [87, 3, 1, "", "state_spec"], [87, 1, 1, "", "step"], [87, 1, 1, "", "step_and_maybe_reset"], [87, 1, 1, "", "to"], [87, 1, 1, "", "to_empty"], [87, 1, 1, "", "train"], [87, 1, 1, "", "type"], [87, 1, 1, "", "xpu"], [87, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[101, 3, 1, "", "action_key"], [101, 3, 1, "", "action_keys"], [101, 3, 1, "", "action_spec"], [101, 1, 1, "", "add_module"], [101, 1, 1, "", "apply"], [101, 3, 1, "", "batch_locked"], [101, 1, 1, "", "bfloat16"], [101, 1, 1, "", "buffers"], [101, 1, 1, "", "children"], [101, 1, 1, "", "compile"], [101, 1, 1, "", "cpu"], [101, 1, 1, "", "cuda"], [101, 3, 1, "", "done_key"], [101, 3, 1, "", "done_keys"], [101, 3, 1, "", "done_keys_groups"], [101, 3, 1, "", "done_spec"], [101, 1, 1, "", "double"], [101, 1, 1, "", "empty_cache"], [101, 1, 1, "", "eval"], [101, 1, 1, "", "extra_repr"], [101, 1, 1, "", "fake_tensordict"], [101, 1, 1, "", "float"], [101, 1, 1, "", "forward"], [101, 3, 1, "", "full_action_spec"], [101, 3, 1, "", "full_done_spec"], [101, 3, 1, "", "full_reward_spec"], [101, 3, 1, "", "full_state_spec"], [101, 1, 1, "", "get_buffer"], [101, 1, 1, "", "get_extra_state"], [101, 1, 1, "", "get_parameter"], [101, 1, 1, "", "get_submodule"], [101, 1, 1, "", "half"], [101, 3, 1, "", "input_spec"], [101, 1, 1, "", "ipu"], [101, 1, 1, "", "load_state_dict"], [101, 1, 1, "", "modules"], [101, 1, 1, "", "named_buffers"], [101, 1, 1, "", "named_children"], [101, 1, 1, "", "named_modules"], [101, 1, 1, "", "named_parameters"], [101, 3, 1, "", "observation_spec"], [101, 3, 1, "", "output_spec"], [101, 1, 1, "", "parameters"], [101, 1, 1, "", "rand_action"], [101, 1, 1, "", "rand_step"], [101, 1, 1, "", "register_backward_hook"], [101, 1, 1, "", "register_buffer"], [101, 1, 1, "", "register_forward_hook"], [101, 1, 1, "", "register_forward_pre_hook"], [101, 1, 1, "", "register_full_backward_hook"], [101, 1, 1, "", "register_full_backward_pre_hook"], [101, 1, 1, "", "register_load_state_dict_post_hook"], [101, 1, 1, "", "register_module"], [101, 1, 1, "", "register_parameter"], [101, 1, 1, "", "register_state_dict_pre_hook"], [101, 1, 1, "", "requires_grad_"], [101, 1, 1, "", "reset"], [101, 3, 1, "", "reset_keys"], [101, 3, 1, "", "reward_key"], [101, 3, 1, "", "reward_keys"], [101, 3, 1, "", "reward_spec"], [101, 1, 1, "", "rollout"], [101, 1, 1, "", "set_extra_state"], [101, 1, 1, "", "set_seed"], [101, 1, 1, "", "share_memory"], [101, 3, 1, "", "specs"], [101, 1, 1, "", "state_dict"], [101, 3, 1, "", "state_spec"], [101, 1, 1, "", "step"], [101, 1, 1, "", "step_and_maybe_reset"], [101, 1, 1, "", "to"], [101, 1, 1, "", "to_empty"], [101, 1, 1, "", "train"], [101, 1, 1, "", "type"], [101, 1, 1, "", "update_kwargs"], [101, 1, 1, "", "xpu"], [101, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[107, 3, 1, "", "action_key"], [107, 3, 1, "", "action_keys"], [107, 3, 1, "", "action_spec"], [107, 1, 1, "", "add_module"], [107, 1, 1, "", "apply"], [107, 3, 1, "", "batch_locked"], [107, 1, 1, "", "bfloat16"], [107, 1, 1, "", "buffers"], [107, 1, 1, "", "children"], [107, 1, 1, "", "compile"], [107, 1, 1, "", "cpu"], [107, 1, 1, "", "cuda"], [107, 3, 1, "", "done_key"], [107, 3, 1, "", "done_keys"], [107, 3, 1, "", "done_keys_groups"], [107, 3, 1, "", "done_spec"], [107, 1, 1, "", "double"], [107, 1, 1, "", "empty_cache"], [107, 1, 1, "", "eval"], [107, 1, 1, "", "extra_repr"], [107, 1, 1, "", "fake_tensordict"], [107, 1, 1, "", "float"], [107, 1, 1, "", "forward"], [107, 3, 1, "", "full_action_spec"], [107, 3, 1, "", "full_done_spec"], [107, 3, 1, "", "full_reward_spec"], [107, 3, 1, "", "full_state_spec"], [107, 1, 1, "", "get_buffer"], [107, 1, 1, "", "get_extra_state"], [107, 1, 1, "", "get_parameter"], [107, 1, 1, "", "get_submodule"], [107, 1, 1, "", "half"], [107, 3, 1, "", "input_spec"], [107, 1, 1, "", "ipu"], [107, 1, 1, "", "load_state_dict"], [107, 1, 1, "", "modules"], [107, 1, 1, "", "named_buffers"], [107, 1, 1, "", "named_children"], [107, 1, 1, "", "named_modules"], [107, 1, 1, "", "named_parameters"], [107, 3, 1, "", "observation_spec"], [107, 3, 1, "", "output_spec"], [107, 1, 1, "", "parameters"], [107, 1, 1, "", "rand_action"], [107, 1, 1, "", "rand_step"], [107, 1, 1, "", "register_backward_hook"], [107, 1, 1, "", "register_buffer"], [107, 1, 1, "", "register_forward_hook"], [107, 1, 1, "", "register_forward_pre_hook"], [107, 1, 1, "", "register_full_backward_hook"], [107, 1, 1, "", "register_full_backward_pre_hook"], [107, 1, 1, "", "register_load_state_dict_post_hook"], [107, 1, 1, "", "register_module"], [107, 1, 1, "", "register_parameter"], [107, 1, 1, "", "register_state_dict_pre_hook"], [107, 1, 1, "", "requires_grad_"], [107, 1, 1, "", "reset"], [107, 3, 1, "", "reset_keys"], [107, 3, 1, "", "reward_key"], [107, 3, 1, "", "reward_keys"], [107, 3, 1, "", "reward_spec"], [107, 1, 1, "", "rollout"], [107, 1, 1, "", "set_extra_state"], [107, 1, 1, "", "set_seed"], [107, 1, 1, "", "share_memory"], [107, 3, 1, "", "specs"], [107, 1, 1, "", "state_dict"], [107, 3, 1, "", "state_spec"], [107, 1, 1, "", "step"], [107, 1, 1, "", "step_and_maybe_reset"], [107, 1, 1, "", "to"], [107, 1, 1, "", "to_empty"], [107, 1, 1, "", "train"], [107, 1, 1, "", "type"], [107, 1, 1, "", "update_kwargs"], [107, 1, 1, "", "xpu"], [107, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[112, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[114, 0, 1, "", "ActionMask"], [115, 0, 1, "", "BinarizeReward"], [116, 0, 1, "", "BurnInTransform"], [117, 0, 1, "", "CatFrames"], [118, 0, 1, "", "CatTensors"], [119, 0, 1, "", "CenterCrop"], [120, 0, 1, "", "ClipTransform"], [121, 0, 1, "", "Compose"], [122, 0, 1, "", "DTypeCastTransform"], [123, 0, 1, "", "DeviceCastTransform"], [124, 0, 1, "", "DiscreteActionProjection"], [125, 0, 1, "", "DoubleToFloat"], [126, 0, 1, "", "EndOfLifeTransform"], [127, 0, 1, "", "ExcludeTransform"], [128, 0, 1, "", "FiniteTensorDictCheck"], [129, 0, 1, "", "FlattenObservation"], [130, 0, 1, "", "FrameSkipTransform"], [131, 0, 1, "", "GrayScale"], [132, 0, 1, "", "InitTracker"], [133, 0, 1, "", "KLRewardTransform"], [134, 0, 1, "", "NoopResetEnv"], [135, 0, 1, "", "ObservationNorm"], [136, 0, 1, "", "ObservationTransform"], [137, 0, 1, "", "PermuteTransform"], [138, 0, 1, "", "PinMemoryTransform"], [139, 0, 1, "", "R3MTransform"], [140, 0, 1, "", "RandomCropTensorDict"], [141, 0, 1, "", "RenameTransform"], [142, 0, 1, "", "Resize"], [143, 0, 1, "", "Reward2GoTransform"], [144, 0, 1, "", "RewardClipping"], [145, 0, 1, "", "RewardScaling"], [146, 0, 1, "", "RewardSum"], [147, 0, 1, "", "SelectTransform"], [148, 0, 1, "", "SqueezeTransform"], [149, 0, 1, "", "StepCounter"], [150, 0, 1, "", "TargetReturn"], [151, 0, 1, "", "TensorDictPrimer"], [152, 0, 1, "", "TimeMaxPool"], [153, 0, 1, "", "ToTensorImage"], [154, 0, 1, "", "Transform"], [155, 0, 1, "", "TransformedEnv"], [156, 0, 1, "", "UnsqueezeTransform"], [157, 0, 1, "", "VC1Transform"], [158, 0, 1, "", "VIPRewardTransform"], [159, 0, 1, "", "VIPTransform"], [160, 0, 1, "", "VecGymEnvTransform"], [161, 0, 1, "", "VecNorm"], [162, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionMask": [[114, 1, 1, "", "forward"]], "torchrl.envs.transforms.BinarizeReward": [[115, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.BurnInTransform": [[116, 1, 1, "", "forward"]], "torchrl.envs.transforms.CatFrames": [[117, 1, 1, "", "forward"], [117, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[118, 1, 1, "", "forward"], [118, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[119, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[120, 1, 1, "", "transform_observation_spec"], [120, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[121, 1, 1, "", "forward"], [121, 1, 1, "", "to"], [121, 1, 1, "", "transform_env_device"], [121, 1, 1, "", "transform_input_spec"], [121, 1, 1, "", "transform_observation_spec"], [121, 1, 1, "", "transform_output_spec"], [121, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[122, 1, 1, "", "forward"], [122, 1, 1, "", "transform_input_spec"], [122, 1, 1, "", "transform_observation_spec"], [122, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[123, 1, 1, "", "forward"], [123, 1, 1, "", "transform_done_spec"], [123, 1, 1, "", "transform_env_device"], [123, 1, 1, "", "transform_input_spec"], [123, 1, 1, "", "transform_observation_spec"], [123, 1, 1, "", "transform_output_spec"], [123, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[124, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[126, 1, 1, "", "forward"], [126, 1, 1, "", "register_keys"], [126, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[127, 1, 1, "", "forward"], [127, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[128, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[129, 1, 1, "", "forward"], [129, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[130, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[131, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[132, 1, 1, "", "forward"], [132, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[133, 1, 1, "", "forward"], [133, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[135, 1, 1, "", "init_stats"], [135, 1, 1, "", "transform_input_spec"], [135, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[137, 1, 1, "", "transform_input_spec"], [137, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[138, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[139, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[140, 1, 1, "", "forward"]], "torchrl.envs.transforms.RenameTransform": [[141, 1, 1, "", "forward"], [141, 1, 1, "", "transform_input_spec"], [141, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[142, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[143, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[144, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[145, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[146, 1, 1, "", "forward"], [146, 1, 1, "", "transform_input_spec"], [146, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[147, 1, 1, "", "forward"], [147, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.StepCounter": [[149, 1, 1, "", "forward"], [149, 1, 1, "", "transform_input_spec"], [149, 1, 1, "", "transform_observation_spec"], [149, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[150, 1, 1, "", "forward"], [150, 1, 1, "", "transform_input_spec"], [150, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[151, 1, 1, "", "forward"], [151, 1, 1, "", "to"], [151, 1, 1, "", "transform_input_spec"], [151, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[152, 1, 1, "", "forward"], [152, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[153, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[154, 3, 1, "", "container"], [154, 1, 1, "", "forward"], [154, 3, 1, "", "parent"], [154, 1, 1, "", "to"], [154, 1, 1, "", "transform_done_spec"], [154, 1, 1, "", "transform_env_device"], [154, 1, 1, "", "transform_input_spec"], [154, 1, 1, "", "transform_observation_spec"], [154, 1, 1, "", "transform_output_spec"], [154, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[155, 3, 1, "", "batch_locked"], [155, 1, 1, "", "empty_cache"], [155, 1, 1, "", "eval"], [155, 3, 1, "", "input_spec"], [155, 1, 1, "", "load_state_dict"], [155, 3, 1, "", "output_spec"], [155, 1, 1, "", "set_missing_tolerance"], [155, 1, 1, "", "set_seed"], [155, 1, 1, "", "state_dict"], [155, 1, 1, "", "to"], [155, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[156, 1, 1, "", "transform_input_spec"], [156, 1, 1, "", "transform_observation_spec"], [156, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[157, 1, 1, "", "forward"], [157, 1, 1, "", "make_noload_model"], [157, 1, 1, "", "to"], [157, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[158, 1, 1, "", "forward"], [158, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[159, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[160, 1, 1, "", "forward"], [160, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[161, 1, 1, "", "build_td_for_shared_vecnorm"], [161, 1, 1, "", "forward"], [161, 1, 1, "", "get_extra_state"], [161, 1, 1, "", "set_extra_state"], [161, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[163, 2, 1, "", "check_env_specs"], [164, 2, 1, "", "exploration_mode"], [165, 2, 1, "", "exploration_type"], [166, 2, 1, "", "get_available_libraries"], [167, 2, 1, "", "make_composite_from_td"], [168, 2, 1, "", "set_exploration_mode"], [169, 2, 1, "", "set_exploration_type"], [170, 2, 1, "", "step_mdp"], [171, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[172, 0, 1, "", "CEMPlanner"], [173, 0, 1, "", "Conv3dNet"], [174, 0, 1, "", "ConvNet"], [175, 0, 1, "", "DTActor"], [176, 0, 1, "", "DdpgCnnActor"], [177, 0, 1, "", "DdpgCnnQNet"], [178, 0, 1, "", "DdpgMlpActor"], [179, 0, 1, "", "DdpgMlpQNet"], [180, 0, 1, "", "DecisionTransformer"], [181, 0, 1, "", "Delta"], [182, 0, 1, "", "DistributionalDQNnet"], [183, 0, 1, "", "DistributionalQValueHook"], [184, 0, 1, "", "DreamerActor"], [185, 0, 1, "", "DuelingCnnDQNet"], [186, 0, 1, "", "GRU"], [187, 0, 1, "", "GRUCell"], [188, 0, 1, "", "GRUModule"], [189, 0, 1, "", "IndependentNormal"], [190, 0, 1, "", "LSTM"], [191, 0, 1, "", "LSTMCell"], [192, 0, 1, "", "LSTMModule"], [193, 0, 1, "", "LSTMNet"], [194, 0, 1, "", "MLP"], [195, 0, 1, "", "MPCPlannerBase"], [196, 0, 1, "", "MPPIPlanner"], [197, 0, 1, "", "MaskedCategorical"], [198, 0, 1, "", "MaskedOneHotCategorical"], [199, 0, 1, "", "MultiAgentConvNet"], [200, 0, 1, "", "MultiAgentMLP"], [201, 0, 1, "", "NoisyLazyLinear"], [202, 0, 1, "", "NoisyLinear"], [203, 0, 1, "", "NormalParamWrapper"], [204, 0, 1, "", "ObsDecoder"], [205, 0, 1, "", "ObsEncoder"], [206, 0, 1, "", "OneHotCategorical"], [207, 0, 1, "", "OnlineDTActor"], [208, 0, 1, "", "QMixer"], [209, 0, 1, "", "QValueHook"], [210, 0, 1, "", "RSSMPosterior"], [211, 0, 1, "", "RSSMPrior"], [212, 0, 1, "", "Squeeze2dLayer"], [213, 0, 1, "", "SqueezeLayer"], [214, 0, 1, "", "TanhDelta"], [215, 0, 1, "", "TanhNormal"], [216, 0, 1, "", "TruncatedNormal"], [217, 0, 1, "", "VDNMixer"], [218, 0, 1, "", "VmapModule"], [219, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[172, 1, 1, "", "planning"]], "torchrl.modules.Conv3dNet": [[173, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[174, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[175, 1, 1, "", "default_config"], [175, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[176, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[177, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[178, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[179, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[180, 0, 1, "", "DTConfig"], [180, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[181, 1, 1, "", "log_prob"], [181, 3, 1, "", "mean"], [181, 3, 1, "", "mode"], [181, 1, 1, "", "rsample"], [181, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[182, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[184, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[185, 1, 1, "", "forward"]], "torchrl.modules.GRU": [[186, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[187, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[188, 1, 1, "", "forward"], [188, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[189, 3, 1, "", "mode"]], "torchrl.modules.LSTM": [[190, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[191, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[192, 1, 1, "", "forward"], [192, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.LSTMNet": [[193, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[194, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[195, 1, 1, "", "forward"], [195, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[196, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[197, 1, 1, "", "log_prob"], [197, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[198, 1, 1, "", "log_prob"], [198, 1, 1, "", "rsample"], [198, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentConvNet": [[199, 1, 1, "", "forward"]], "torchrl.modules.MultiAgentMLP": [[200, 1, 1, "", "forward"]], "torchrl.modules.NoisyLazyLinear": [[201, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[203, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[204, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[205, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[206, 1, 1, "", "log_prob"], [206, 3, 1, "", "mode"], [206, 1, 1, "", "rsample"], [206, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[207, 1, 1, "", "default_config"], [207, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[208, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[210, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[211, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[213, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[214, 3, 1, "", "mean"], [214, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[215, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[216, 1, 1, "", "log_prob"], [216, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[217, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[218, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[220, 0, 1, "", "Actor"], [221, 0, 1, "", "ActorCriticOperator"], [222, 0, 1, "", "ActorCriticWrapper"], [223, 0, 1, "", "ActorValueOperator"], [224, 0, 1, "", "AdditiveGaussianWrapper"], [225, 0, 1, "", "DecisionTransformerInferenceWrapper"], [226, 0, 1, "", "DistributionalQValueActor"], [227, 0, 1, "", "DistributionalQValueModule"], [228, 0, 1, "", "EGreedyModule"], [229, 0, 1, "", "EGreedyWrapper"], [230, 0, 1, "", "LMHeadActorValueOperator"], [231, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [232, 0, 1, "", "ProbabilisticActor"], [233, 0, 1, "", "QValueActor"], [234, 0, 1, "", "QValueModule"], [235, 0, 1, "", "SafeModule"], [236, 0, 1, "", "SafeProbabilisticModule"], [237, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [238, 0, 1, "", "SafeSequential"], [239, 0, 1, "", "TanhModule"], [240, 0, 1, "", "ValueOperator"], [241, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[221, 1, 1, "", "get_critic_operator"], [221, 1, 1, "", "get_policy_head"], [221, 1, 1, "", "get_value_head"], [221, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[222, 1, 1, "", "get_policy_head"], [222, 1, 1, "", "get_policy_operator"], [222, 1, 1, "", "get_value_head"], [222, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[223, 1, 1, "", "get_policy_head"], [223, 1, 1, "", "get_policy_operator"], [223, 1, 1, "", "get_value_head"], [223, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[224, 1, 1, "", "forward"], [224, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[225, 1, 1, "", "forward"], [225, 1, 1, "", "mask_context"], [225, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[227, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[228, 1, 1, "", "forward"], [228, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.EGreedyWrapper": [[229, 1, 1, "", "forward"], [229, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[231, 1, 1, "", "forward"], [231, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[234, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[235, 1, 1, "", "random"], [235, 1, 1, "", "random_sample"], [235, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[236, 1, 1, "", "random"], [236, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[239, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[241, 1, 1, "", "get_reward_operator"], [241, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[242, 0, 1, "", "biased_softplus"], [243, 0, 1, "", "inv_softplus"], [244, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[242, 1, 1, "", "forward"]], "torchrl.objectives": [[245, 0, 1, "", "A2CLoss"], [246, 0, 1, "", "CQLLoss"], [247, 0, 1, "", "ClipPPOLoss"], [248, 0, 1, "", "DDPGLoss"], [249, 0, 1, "", "DQNLoss"], [250, 0, 1, "", "DTLoss"], [251, 0, 1, "", "DiscreteCQLLoss"], [252, 0, 1, "", "DiscreteSACLoss"], [253, 0, 1, "", "DistributionalDQNLoss"], [254, 0, 1, "", "DreamerActorLoss"], [255, 0, 1, "", "DreamerModelLoss"], [256, 0, 1, "", "DreamerValueLoss"], [257, 0, 1, "", "HardUpdate"], [258, 0, 1, "", "IQLLoss"], [259, 0, 1, "", "KLPENPPOLoss"], [260, 0, 1, "", "LossModule"], [261, 0, 1, "", "OnlineDTLoss"], [262, 0, 1, "", "PPOLoss"], [263, 0, 1, "", "REDQLoss"], [264, 0, 1, "", "ReinforceLoss"], [265, 0, 1, "", "SACLoss"], [266, 0, 1, "", "SoftUpdate"], [267, 0, 1, "", "TD3Loss"], [268, 0, 1, "", "ValueEstimators"], [269, 0, 1, "", "default_value_kwargs"], [270, 0, 1, "", "distance_loss"], [271, 0, 1, "", "hold_out_net"], [272, 0, 1, "", "hold_out_params"], [274, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[245, 1, 1, "", "forward"], [245, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[246, 1, 1, "", "forward"], [246, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[247, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[248, 1, 1, "", "forward"], [248, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[249, 1, 1, "", "forward"], [249, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[250, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[251, 1, 1, "", "forward"], [251, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteSACLoss": [[252, 1, 1, "", "forward"], [252, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[253, 1, 1, "", "forward"], [253, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[254, 1, 1, "", "forward"], [254, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[255, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[256, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[258, 1, 1, "", "forward"], [258, 1, 1, "", "loss_value_diff"], [258, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[259, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[260, 1, 1, "", "convert_to_functional"], [260, 1, 1, "", "forward"], [260, 1, 1, "", "make_value_estimator"], [260, 1, 1, "", "named_parameters"], [260, 1, 1, "", "parameters"], [260, 1, 1, "", "set_keys"], [260, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[261, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[262, 1, 1, "", "forward"], [262, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[263, 1, 1, "", "forward"], [263, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[264, 1, 1, "", "forward"], [264, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[265, 1, 1, "", "forward"], [265, 1, 1, "", "load_state_dict"], [265, 1, 1, "", "make_value_estimator"], [265, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3Loss": [[267, 1, 1, "", "forward"], [267, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[273, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[273, 1, 1, "", "forward"], [273, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[275, 0, 1, "", "GAE"], [276, 0, 1, "", "TD0Estimator"], [277, 0, 1, "", "TD1Estimator"], [278, 0, 1, "", "TDLambdaEstimator"], [279, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[275, 1, 1, "", "forward"], [275, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[276, 1, 1, "", "forward"], [276, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[277, 1, 1, "", "forward"], [277, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[278, 1, 1, "", "forward"], [278, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[279, 1, 1, "", "forward"], [279, 1, 1, "", "set_keys"], [279, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[280, 0, 1, "", "generalized_advantage_estimate"], [281, 0, 1, "", "reward2go"], [282, 0, 1, "", "td0_advantage_estimate"], [283, 0, 1, "", "td0_return_estimate"], [284, 0, 1, "", "td1_advantage_estimate"], [285, 0, 1, "", "td1_return_estimate"], [286, 0, 1, "", "td_lambda_advantage_estimate"], [287, 0, 1, "", "td_lambda_return_estimate"], [288, 0, 1, "", "vec_generalized_advantage_estimate"], [289, 0, 1, "", "vec_td1_advantage_estimate"], [290, 0, 1, "", "vec_td1_return_estimate"], [291, 0, 1, "", "vec_td_lambda_advantage_estimate"], [292, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[293, 2, 1, "", "TensorDictRecorder"], [294, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[295, 2, 1, "", "Logger"], [297, 2, 1, "", "generate_exp_name"], [298, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[296, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[299, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[300, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[301, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[302, 0, 1, "", "BatchSubSampler"], [303, 0, 1, "", "ClearCudaCache"], [304, 0, 1, "", "CountFramesLog"], [305, 0, 1, "", "LogReward"], [306, 0, 1, "", "OptimizerHook"], [307, 0, 1, "", "Recorder"], [308, 0, 1, "", "ReplayBufferTrainer"], [309, 0, 1, "", "RewardNormalizer"], [310, 0, 1, "", "SelectKeys"], [311, 0, 1, "", "Trainer"], [312, 0, 1, "", "TrainerHookBase"], [313, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[302, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[303, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[304, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[305, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[306, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[307, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[308, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[309, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[310, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[312, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[313, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[314, 2, 1, "", "correct_for_frame_skip"], [315, 2, 1, "", "get_stats_random_rollout"], [316, 2, 1, "", "make_collector_offpolicy"], [317, 2, 1, "", "make_collector_onpolicy"], [318, 2, 1, "", "make_dqn_loss"], [319, 2, 1, "", "make_redq_loss"], [320, 2, 1, "", "make_redq_model"], [321, 2, 1, "", "make_replay_buffer"], [322, 2, 1, "", "make_target_updater"], [323, 2, 1, "", "make_trainer"], [324, 2, 1, "", "parallel_env_constructor"], [325, 2, 1, "", "sync_async_collector"], [326, 2, 1, "", "sync_sync_collector"], [327, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 331, 332, 333, 334, 336, 337, 338, 342, 343, 347, 348], "tutori": [0, 338, 342], "basic": [0, 345], "intermedi": [0, 8], "advanc": 0, "refer": [0, 329], "knowledg": [0, 330], "base": [0, 7, 330], "indic": 0, "tabl": 0, "collector": [1, 336, 337, 338, 339, 342, 347], "packag": [1, 2, 3, 331, 332, 333, 334], "singl": [1, 4], "node": 1, "data": [1, 2, 4, 336, 337, 338, 342, 347], "distribut": [1, 331], "helper": [1, 3], "function": [1, 4, 332, 337, 338, 342, 347], "replai": [2, 336, 337, 338, 339, 342, 345, 347], "buffer": [2, 336, 337, 338, 339, 342, 345, 347], "compos": [2, 121], "share": 2, "across": 2, "process": 2, "store": [2, 337], "trajectori": 2, "checkpoint": [2, 333], "dataset": 2, "tensorspec": [2, 44], "reinforc": [2, 332, 338, 342], "learn": [2, 4, 338, 342], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 331, 332, 333], "env": [3, 343, 347, 348], "vector": [3, 347], "multi": [3, 331, 332, 341, 342], "agent": [3, 4, 331, 332, 342], "environ": [3, 4, 6, 7, 336, 337, 338, 339, 341, 342, 343, 347, 348], "transform": [3, 154, 336, 338, 342, 343, 345, 347, 348], "clone": [3, 7], "mask": 3, "action": [3, 4, 339, 343], "record": [3, 307, 333, 336], "domain": [3, 331], "specif": [3, 331, 341], "librari": [3, 347], "thing": [4, 336, 343], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 347], "gener": [4, 331], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 336, 343], "algorithm": [4, 331], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 336, 337], "return": [4, 332], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "polici": [4, 336, 338, 339, 341, 342, 343], "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 347], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 341], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 336, 337, 338], "standard": 4, "explor": [4, 331, 336, 337], "valu": [4, 331, 332, 336, 338, 339], "loss": [4, 336, 337, 338, 339, 342], "earli": 4, "train": [4, 8, 332, 336, 338, 339, 342, 343], "roughli": 4, "uniformli": 4, "random": [4, 342], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "episod": 4, "remain": 4, "constant": [4, 337], "increas": 4, "an": [4, 338, 339, 343], "dynam": [4, 345], "can": 4, "low": 4, "forward": [4, 336], "model": [4, 331, 336, 337, 339, 344, 347], "also": 4, "us": [4, 6, 9, 339, 344, 345, 347], "offlin": 4, "observ": [4, 336], "space": 4, "effect": [4, 343], "dramat": 4, "dure": [4, 7], "high": 4, "dimension": 4, "work": [5, 6, 7], "gym": [5, 348], "what": 5, "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "instal": [6, 7, 347], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": 7, "render": [7, 342, 348], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 336], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 343], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "randompolici": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "binarydiscretetensorspec": 24, "boundedtensorspec": 25, "compositespec": 26, "discretetensorspec": 27, "lazystackedcompositespec": 28, "lazystackedtensorspec": 29, "multidiscretetensorspec": 30, "multionehotdiscretetensorspec": 31, "multistep": 32, "onehotdiscretetensorspec": 33, "pairwisedataset": 34, "prioritizedreplaybuff": 35, "promptdata": 36, "prompttensordicttoken": 37, "replaybuff": 38, "rewarddata": 39, "rolloutfrommodel": 40, "tensordictprioritizedreplaybuff": 41, "tensordictreplaybuff": 42, "tensordicttoken": 43, "tokenizeddatasetload": 45, "unboundedcontinuoustensorspec": 46, "unboundeddiscretetensorspec": 47, "check_no_exclusive_kei": 48, "consolidate_spec": 49, "contains_lazy_spec": 50, "create_infinite_iter": 51, "d4rlexperiencereplai": 52, "minariexperiencereplai": 53, "openmlexperiencereplai": 54, "openxexperiencereplai": 55, "robosetexperiencereplai": 56, "vd4rlexperiencereplai": 57, "get_dataload": 58, "immutabledatasetwrit": 59, "lazymemmapstorag": 60, "lazytensorstorag": 61, "liststorag": 62, "prioritizedsampl": 63, "randomsampl": 64, "replaybufferensembl": 65, "roundrobinwrit": 66, "sampler": 67, "samplerensembl": 68, "samplerwithoutreplac": 69, "slicesampl": 70, "slicesamplerwithoutreplac": 71, "storag": [72, 336, 345], "storageensembl": 73, "tensordictmaxvaluewrit": 74, "tensordictroundrobinwrit": 75, "tensorstorag": 76, "writer": 77, "writerensembl": 78, "braxenv": 79, "braxwrapp": 80, "dmcontrolenv": 81, "dmcontrolwrapp": 82, "envbas": [83, 343], "envcreat": 84, "envmetadata": 85, "gymenv": 86, "gymlikeenv": 87, "gymwrapp": 88, "habitatenv": 89, "isaacgymenv": 90, "isaacgymwrapp": 91, "jumanjienv": 92, "jumanjiwrapp": 93, "mogymenv": 94, "mogymwrapp": 95, "marlgroupmaptyp": 96, "modelbasedenvbas": 97, "multithreadedenv": 98, "multithreadedenvwrapp": 99, "openmlenv": 100, "parallelenv": 101, "pettingzooenv": 102, "pettingzoowrapp": 103, "robohiveenv": 104, "smacv2env": 105, "smacv2wrapp": 106, "serialenv": 107, "vmasenv": 108, "vmaswrapp": 109, "check_marl_group": 110, "gym_backend": 111, "dreamerenv": 112, "set_gym_backend": 113, "actionmask": 114, "binarizereward": 115, "burnintransform": 116, "catfram": [117, 345], "cattensor": 118, "centercrop": 119, "cliptransform": 120, "dtypecasttransform": 122, "devicecasttransform": 123, "discreteactionproject": 124, "doubletofloat": 125, "endoflifetransform": 126, "excludetransform": 127, "finitetensordictcheck": 128, "flattenobserv": 129, "frameskiptransform": 130, "grayscal": 131, "inittrack": 132, "klrewardtransform": 133, "noopresetenv": 134, "observationnorm": 135, "observationtransform": 136, "permutetransform": 137, "pinmemorytransform": 138, "r3mtransform": 139, "randomcroptensordict": 140, "renametransform": 141, "resiz": 142, "reward2gotransform": 143, "rewardclip": 144, "rewardsc": 145, "rewardsum": 146, "selecttransform": 147, "squeezetransform": 148, "stepcount": 149, "targetreturn": 150, "tensordictprim": 151, "timemaxpool": 152, "totensorimag": 153, "transformedenv": 155, "unsqueezetransform": 156, "vc1transform": 157, "viprewardtransform": 158, "viptransform": 159, "vecgymenvtransform": 160, "vecnorm": [161, 348], "gsdenois": 162, "check_env_spec": 163, "exploration_mod": 164, "exploration_typ": 165, "get_available_librari": 166, "make_composite_from_td": 167, "set_exploration_mod": 168, "set_exploration_typ": 169, "step_mdp": 170, "terminated_or_trunc": 171, "cemplann": 172, "conv3dnet": 173, "convnet": 174, "dtactor": 175, "ddpgcnnactor": 176, "ddpgcnnqnet": 177, "ddpgmlpactor": 178, "ddpgmlpqnet": 179, "decisiontransform": 180, "delta": 181, "distributionaldqnnet": 182, "distributionalqvaluehook": 183, "dreameractor": 184, "duelingcnndqnet": 185, "gru": 186, "grucel": 187, "grumodul": 188, "independentnorm": 189, "lstm": [190, 339], "lstmcell": 191, "lstmmodul": 192, "lstmnet": 193, "mlp": [194, 339], "mpcplannerbas": 195, "mppiplann": 196, "maskedcategor": 197, "maskedonehotcategor": 198, "multiagentconvnet": 199, "multiagentmlp": 200, "noisylazylinear": 201, "noisylinear": 202, "normalparamwrapp": 203, "obsdecod": 204, "obsencod": 205, "onehotcategor": 206, "onlinedtactor": 207, "qmixer": [208, 332], "qvaluehook": 209, "rssmposterior": 210, "rssmprior": 211, "squeeze2dlay": 212, "squeezelay": 213, "tanhdelta": 214, "tanhnorm": 215, "truncatednorm": 216, "vdnmixer": 217, "vmapmodul": 218, "reset_nois": 219, "actor": [220, 331, 336], "actorcriticoper": 221, "actorcriticwrapp": 222, "actorvalueoper": 223, "additivegaussianwrapp": 224, "decisiontransformerinferencewrapp": 225, "distributionalqvalueactor": 226, "distributionalqvaluemodul": 227, "egreedymodul": 228, "egreedywrapp": 229, "lmheadactorvalueoper": 230, "ornsteinuhlenbeckprocesswrapp": 231, "probabilisticactor": 232, "qvalueactor": 233, "qvaluemodul": 234, "safemodul": [235, 331], "safeprobabilisticmodul": 236, "safeprobabilistictensordictsequenti": 237, "safesequenti": 238, "tanhmodul": 239, "valueoper": 240, "worldmodelwrapp": 241, "biased_softplu": 242, "inv_softplu": 243, "map": 244, "a2closs": 245, "cqlloss": 246, "clipppoloss": 247, "ddpgloss": 248, "dqnloss": 249, "dtloss": 250, "discretecqlloss": 251, "discretesacloss": 252, "distributionaldqnloss": 253, "dreameractorloss": 254, "dreamermodelloss": 255, "dreamervalueloss": 256, "hardupd": 257, "iqlloss": 258, "klpenppoloss": 259, "lossmodul": [260, 336], "onlinedtloss": 261, "ppoloss": 262, "redqloss": 263, "reinforceloss": 264, "sacloss": 265, "softupd": 266, "td3loss": 267, "valueestim": 268, "default_value_kwarg": 269, "distance_loss": 270, "hold_out_net": 271, "hold_out_param": 272, "qmixerloss": 273, "next_state_valu": 274, "gae": 275, "td0estim": 276, "td1estim": 277, "tdlambdaestim": 278, "valueestimatorbas": 279, "generalized_advantage_estim": 280, "reward2go": 281, "td0_advantage_estim": 282, "td0_return_estim": 283, "td1_advantage_estim": 284, "td1_return_estim": 285, "td_lambda_advantage_estim": 286, "td_lambda_return_estim": 287, "vec_generalized_advantage_estim": 288, "vec_td1_advantage_estim": 289, "vec_td1_return_estim": 290, "vec_td_lambda_advantage_estim": 291, "vec_td_lambda_return_estim": 292, "tensordictrecord": 293, "videorecord": 294, "logger": [295, 333], "csvlogger": 296, "generate_exp_nam": 297, "get_logg": 298, "mlflowlogg": 299, "tensorboardlogg": 300, "wandblogg": 301, "batchsubsampl": 302, "clearcudacach": 303, "countframeslog": 304, "logreward": 305, "optimizerhook": 306, "replaybuffertrain": 308, "rewardnorm": 309, "selectkei": 310, "trainer": [311, 333, 337], "trainerhookbas": 312, "updateweight": 313, "correct_for_frame_skip": 314, "get_stats_random_rollout": 315, "make_collector_offpolici": 316, "make_collector_onpolici": 317, "make_dqn_loss": 318, "make_redq_loss": 319, "make_redq_model": 320, "make_replay_buff": 321, "make_target_updat": 322, "make_train": 323, "parallel_env_constructor": 324, "sync_async_collector": 325, "sync_sync_collector": 326, "transformed_env_constructor": 327, "readm": [328, 340], "tuto": [328, 340], "api": 329, "contribut": [330, 347], "content": 330, "modul": [331, 336, 339, 347], "tensordict": [331, 345, 347], "wrapper": 331, "probabilist": 331, "q": [331, 337, 339], "oper": 331, "join": 331, "hook": [331, 333, 337], "regular": 331, "planner": 331, "object": [332, 336, 347], "dqn": [332, 337, 339], "ddpg": [332, 336], "sac": 332, "redq": 332, "iql": 332, "cql": 332, "dt": 332, "td3": 332, "ppo": [332, 338, 342], "a2c": 332, "dreamer": 332, "builder": 333, "_util": 334, "comput": [335, 337, 343, 346], "time": [335, 336, 346], "code": [336, 343], "setup": [336, 339], "The": 336, "__init__": 336, "method": 336, "estim": 336, "put": 336, "togeth": [336, 343], "call": 336, "parallel": [336, 341, 348], "execut": [336, 341, 343], "stat": 336, "build": [336, 337, 345], "evalu": 336, "batch": [336, 343, 345], "size": [336, 345], "construct": 336, "target": [336, 337], "network": [336, 337, 338, 339, 342], "updat": 336, "experi": [336, 343], "result": [336, 338, 342], "conclus": [336, 337, 338, 339, 342, 343, 345], "A": [337, 345], "exampl": [337, 345], "deep": 337, "collect": [337, 338], "paramet": [337, 338], "hyperparamet": [337, 338, 342], "regist": 337, "possibl": 337, "improv": 337, "defin": [338, 342], "loop": [338, 339, 342, 343], "next": [338, 342], "step": [338, 342, 348], "recurr": 339, "overview": 339, "convolut": 339, "select": 339, "further": 339, "read": 339, "divers": 341, "rollout": [341, 342, 343, 348], "critic": 342, "pendulum": 343, "write": 343, "_step": 343, "reset": [343, 348], "simul": 343, "_reset": 343, "metadata": 343, "_spec": 343, "spec": [343, 348], "shape": 343, "seed": [343, 348], "wrap": 343, "class": [343, 347], "test": 343, "our": 343, "custom": [343, 345], "simpl": 343, "pretrain": 344, "vanilla": 345, "integr": 345, "tensorclass": 345, "sampl": 345, "iter": 345, "over": 345, "fix": 345, "priorit": 345, "save": 345, "raw": 345, "imag": 345, "more": 345, "complex": 345, "introduct": 347, "config": 347, "tensordictmodul": 347, "sequenc": 347, "program": 347, "ensembl": 347, "meta": 347, "special": 347, "state": 347, "frame_skip": 348, "deepmind": 348, "control": 348, "devic": 348, "run": 348, "close": 348, "access": 348, "attribut": 348, "kwarg": 348}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})