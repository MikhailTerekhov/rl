Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.RobosetExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "D4RLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "RobosetExperienceReplay", "get_dataloader", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "RandomSampler", "RoundRobinWriter", "Sampler", "SamplerWithoutReplacement", "Storage", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerEnv", "set_gym_backend", "ActionMask", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "CEMPlanner", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "EGreedyWrapper", "LMHeadActorValueOperator", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "README Tutos", "Task-specific policy in multi-task environments", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 46, 47, 51, 52, 53, 54, 55, 57, 58, 59, 62, 65, 66, 67, 68, 69, 72, 74, 75, 78, 88, 89, 91, 92, 93, 94, 98, 101, 105, 107, 109, 112, 114, 115, 118, 124, 125, 129, 130, 131, 133, 140, 141, 142, 143, 144, 145, 147, 150, 151, 153, 163, 164, 166, 167, 168, 169, 176, 178, 180, 182, 183, 184, 185, 189, 190, 191, 195, 202, 203, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 226, 227, 231, 234, 235, 236, 237, 239, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 263, 265, 266, 267, 268, 269, 284, 287, 296, 297, 301, 302, 305, 314, 315, 316, 317, 320, 321, 322, 326, 327, 331, 332, 334, 335, 337, 338], "open": [0, 5, 7, 11, 327, 332, 337], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338], "reinforc": [0, 3, 9, 107, 166, 167, 168, 169, 173, 217, 221, 235, 236, 240, 241, 243, 247, 248, 254, 255, 256, 319, 325, 327, 330, 333, 336, 337], "learn": [0, 3, 7, 8, 9, 18, 32, 54, 55, 107, 166, 167, 168, 169, 173, 186, 192, 217, 221, 235, 236, 240, 241, 243, 247, 248, 253, 254, 255, 256, 319, 321, 322, 325, 326, 327, 329, 330, 331, 333, 335, 336, 337, 338], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 16, 17, 88, 140, 192, 210, 222, 230, 235, 250, 252, 292, 320, 321, 322, 323, 326, 327, 328, 332, 334, 335, 338], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 18, 19, 20, 37, 43, 82, 89, 156, 319, 320, 321, 324, 326, 327, 328, 332, 333, 338], "pytorch": [0, 1, 2, 3, 53, 143, 176, 180, 191, 192, 301, 320, 323, 326, 328, 329, 332, 333, 334, 337, 338], "It": [0, 2, 3, 4, 7, 32, 37, 40, 41, 43, 45, 52, 53, 55, 74, 78, 80, 88, 89, 92, 93, 94, 98, 116, 123, 125, 130, 140, 145, 150, 153, 166, 168, 174, 189, 190, 198, 200, 201, 207, 208, 217, 218, 221, 224, 226, 235, 236, 237, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 256, 257, 263, 264, 265, 297, 310, 320, 321, 322, 326, 327, 329, 332, 333, 334, 335, 337, 338], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 30, 31, 32, 33, 35, 38, 41, 42, 45, 49, 52, 53, 54, 55, 56, 57, 61, 66, 74, 78, 88, 92, 93, 94, 98, 107, 108, 109, 110, 112, 115, 119, 124, 125, 127, 129, 130, 133, 136, 137, 140, 141, 142, 145, 147, 149, 150, 151, 161, 163, 164, 170, 173, 176, 177, 178, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 208, 210, 214, 217, 218, 219, 221, 222, 223, 224, 229, 235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 288, 292, 298, 305, 310, 313, 320, 321, 322, 323, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "python": [0, 3, 5, 6, 7, 10, 21, 104, 176, 177, 178, 180, 181, 182, 187, 188, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338], "first": [0, 1, 3, 4, 5, 7, 8, 18, 20, 21, 26, 28, 52, 53, 55, 57, 58, 68, 78, 107, 108, 119, 125, 129, 130, 143, 145, 147, 176, 178, 180, 182, 184, 189, 190, 191, 195, 210, 215, 216, 217, 222, 223, 225, 226, 237, 245, 249, 250, 252, 283, 300, 321, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "low": [0, 25, 74, 78, 92, 98, 110, 114, 157, 217, 222, 229, 326, 327, 328, 332, 333, 337, 338], "high": [0, 9, 25, 41, 74, 78, 92, 98, 110, 114, 124, 157, 217, 222, 229, 265, 270, 278, 326, 327, 328, 332, 333, 335, 337, 338], "level": [0, 3, 4, 22, 26, 28, 107, 139, 249, 326, 327, 337], "abstract": [0, 3, 8, 24, 25, 26, 27, 28, 29, 30, 44, 46, 47, 69, 74, 126, 185, 269, 293, 302, 323, 328, 333, 337], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 23, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 48, 52, 53, 54, 55, 56, 57, 58, 59, 65, 68, 74, 75, 78, 87, 88, 91, 92, 93, 94, 95, 98, 100, 107, 110, 111, 112, 114, 115, 116, 118, 119, 123, 124, 127, 129, 133, 136, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 157, 161, 162, 169, 171, 176, 177, 178, 180, 181, 182, 183, 185, 187, 188, 189, 192, 196, 198, 201, 215, 216, 218, 221, 222, 223, 225, 226, 227, 228, 229, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 260, 263, 264, 265, 266, 267, 268, 269, 298, 313, 317, 321, 322, 323, 324, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "intend": [0, 7, 13, 14, 16, 17, 18, 19, 20, 21, 45, 114, 208, 250, 321, 337], "effici": [0, 1, 2, 4, 8, 176, 192, 321, 326, 327, 328, 329, 331, 332, 334, 335, 337], "modular": [0, 228, 335, 337], "document": [0, 5, 7, 18, 19, 21, 32, 74, 78, 92, 98, 145, 327, 329, 337], "properli": [0, 74, 78, 92, 98, 328, 332, 333, 337], "test": [0, 3, 5, 147, 153, 178, 182, 183, 297, 313, 328, 329, 337], "The": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 65, 66, 74, 78, 82, 92, 93, 94, 98, 107, 111, 112, 115, 116, 117, 125, 127, 129, 133, 135, 136, 137, 139, 140, 141, 144, 145, 147, 149, 150, 160, 161, 162, 166, 167, 168, 169, 170, 173, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 189, 192, 193, 199, 200, 201, 210, 211, 215, 216, 217, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 263, 264, 265, 266, 267, 268, 269, 271, 286, 289, 290, 291, 292, 296, 313, 315, 316, 321, 322, 323, 327, 328, 329, 332, 333, 334, 335, 337, 338], "code": [0, 3, 5, 7, 8, 74, 78, 92, 98, 129, 145, 147, 176, 177, 178, 180, 181, 182, 228, 325, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338], "aim": [0, 3, 7, 28, 29, 129, 147, 149, 184, 304, 320, 321, 322, 326, 327, 337], "support": [0, 1, 3, 18, 20, 26, 54, 56, 57, 58, 65, 68, 89, 91, 93, 107, 116, 125, 141, 142, 144, 156, 173, 208, 216, 217, 222, 225, 228, 243, 265, 266, 267, 268, 289, 321, 323, 328, 329, 332, 333, 335, 337], "research": [0, 7, 9, 337], "most": [0, 3, 7, 8, 32, 114, 150, 326, 328, 333, 337, 338], "written": [0, 3, 34, 36, 39, 45, 52, 57, 74, 78, 92, 98, 107, 116, 123, 136, 139, 142, 150, 160, 161, 210, 221, 222, 225, 226, 230, 235, 237, 249, 252, 254, 264, 283, 284, 321, 322, 323, 326, 329, 331, 333, 337], "highli": [0, 2, 337, 338], "wai": [0, 2, 3, 4, 53, 82, 129, 131, 149, 150, 180, 252, 265, 266, 267, 268, 321, 326, 327, 328, 331, 332, 333, 334, 335, 337, 338], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 55, 60, 64, 74, 75, 78, 82, 87, 92, 93, 94, 96, 97, 98, 100, 104, 105, 107, 110, 111, 112, 114, 115, 116, 124, 125, 129, 130, 133, 136, 139, 140, 141, 144, 145, 147, 149, 151, 161, 162, 176, 178, 179, 180, 182, 185, 186, 189, 190, 192, 193, 206, 208, 210, 214, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 263, 264, 265, 266, 267, 268, 269, 297, 310, 315, 316, 317, 320, 321, 322, 323, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "easili": [0, 3, 7, 74, 78, 92, 98, 310, 322, 326, 327, 328, 332, 337, 338], "swap": [0, 3, 150, 328, 334, 337], "compon": [0, 2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 57, 58, 59, 65, 68, 173, 199, 216, 217, 224, 235, 236, 237, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 263, 296, 301, 326, 327, 328, 329, 331, 332, 333, 334, 337], "transform": [0, 1, 2, 4, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 40, 41, 42, 43, 52, 53, 54, 55, 74, 75, 78, 92, 93, 94, 98, 100, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 165, 166, 170, 173, 174, 197, 198, 199, 207, 215, 220, 229, 232, 234, 240, 251, 284, 298, 310, 317, 319, 325, 327, 329, 330, 334, 336], "them": [0, 2, 3, 7, 9, 21, 32, 35, 37, 38, 41, 42, 52, 53, 54, 55, 74, 75, 78, 82, 87, 92, 93, 94, 98, 100, 112, 115, 145, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 189, 190, 193, 194, 195, 197, 200, 201, 203, 207, 208, 214, 215, 217, 218, 219, 221, 224, 229, 232, 249, 255, 284, 326, 327, 329, 331, 332, 333, 334, 335, 337, 338], "write": [0, 3, 8, 23, 32, 34, 36, 37, 39, 45, 78, 110, 127, 128, 136, 139, 161, 210, 225, 226, 228, 230, 238, 239, 241, 242, 248, 253, 255, 257, 264, 269, 284, 321, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336, 337, 338], "new": [0, 2, 3, 4, 8, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 47, 60, 64, 74, 78, 89, 92, 96, 97, 98, 136, 144, 151, 160, 161, 176, 178, 182, 221, 225, 226, 231, 235, 236, 237, 239, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 263, 326, 328, 329, 332, 333, 337, 338], "ones": [0, 2, 15, 26, 32, 35, 41, 42, 74, 78, 92, 98, 108, 111, 112, 113, 115, 125, 129, 133, 141, 144, 145, 147, 149, 187, 188, 208, 225, 235, 236, 238, 248, 252, 253, 255, 257, 271, 326, 328, 332, 333, 335, 337, 338], "littl": [0, 3, 43, 328, 329, 335, 337, 338], "effort": [0, 3, 333, 335, 337], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 57, 58, 59, 64, 65, 66, 68, 74, 78, 80, 87, 88, 92, 93, 94, 98, 100, 104, 105, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 122, 123, 125, 129, 130, 131, 133, 136, 137, 139, 141, 142, 144, 145, 147, 148, 149, 150, 151, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 203, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 231, 232, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 263, 265, 266, 267, 268, 269, 283, 292, 294, 297, 298, 301, 303, 304, 305, 310, 313, 317, 320, 321, 322, 323, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "repo": [0, 6, 52, 107, 142, 147, 320, 332, 337], "attempt": [0, 214, 219, 221, 239, 248, 263, 337], "align": [0, 176, 180, 337], "exist": [0, 3, 4, 11, 18, 21, 32, 34, 36, 39, 45, 74, 78, 92, 98, 108, 113, 145, 255, 305, 317, 332, 337, 338], "ecosystem": [0, 337], "ha": [0, 2, 3, 4, 5, 7, 8, 10, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 44, 46, 47, 74, 75, 78, 82, 92, 98, 100, 107, 139, 140, 141, 142, 145, 176, 178, 180, 182, 189, 214, 217, 219, 221, 226, 249, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "dataset": [0, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 91, 151, 319, 326, 327, 334, 335, 337, 338], "pillar": [0, 337], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 105, 107, 108, 112, 113, 114, 115, 120, 124, 125, 129, 130, 136, 139, 140, 141, 142, 144, 145, 147, 150, 151, 153, 162, 178, 182, 183, 185, 186, 214, 221, 241, 244, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 292, 294, 297, 304, 305, 306, 307, 310, 313, 314, 315, 316, 317, 319, 320, 321, 325, 330, 334, 335, 336], "model": [0, 1, 3, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 74, 78, 88, 92, 98, 112, 129, 141, 147, 149, 152, 163, 164, 165, 170, 178, 182, 184, 185, 186, 190, 197, 198, 207, 211, 212, 213, 220, 225, 231, 235, 236, 237, 239, 240, 241, 244, 245, 246, 248, 249, 250, 252, 253, 255, 263, 301, 306, 307, 308, 309, 310, 319, 320, 323, 325, 328, 330, 332, 333, 335, 336, 338], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 76, 78, 88, 91, 92, 93, 94, 98, 105, 107, 112, 113, 115, 117, 123, 125, 133, 139, 150, 153, 157, 161, 162, 173, 178, 182, 183, 186, 189, 190, 199, 208, 210, 216, 218, 219, 221, 222, 223, 225, 228, 229, 230, 235, 236, 238, 239, 241, 242, 248, 252, 253, 254, 255, 257, 263, 265, 266, 267, 268, 269, 292, 298, 301, 303, 306, 313, 315, 316, 317, 319, 321, 322, 323, 329, 333, 334, 335, 338], "util": [0, 3, 17, 23, 32, 40, 74, 78, 92, 93, 94, 98, 101, 129, 149, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 170, 176, 180, 232, 233, 234, 250, 313, 319, 324, 326, 328, 332, 333, 337, 338], "e": [0, 1, 3, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 33, 57, 58, 68, 74, 75, 78, 92, 98, 108, 111, 119, 125, 129, 136, 141, 144, 145, 147, 149, 153, 176, 178, 179, 180, 182, 186, 190, 193, 199, 205, 206, 215, 217, 222, 224, 225, 226, 255, 264, 265, 266, 267, 268, 292, 304, 316, 321, 326, 327, 328, 332, 334, 337, 338], "g": [0, 1, 3, 7, 8, 10, 11, 32, 33, 74, 75, 78, 92, 98, 108, 111, 119, 125, 129, 136, 141, 144, 145, 147, 149, 153, 176, 178, 179, 180, 181, 182, 186, 190, 205, 206, 215, 222, 225, 226, 255, 264, 274, 275, 276, 277, 279, 280, 281, 282, 316, 321, 326, 327, 328, 332, 333, 334, 337, 338], "collector": [0, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 107, 133, 139, 221, 298, 301, 303, 306, 307, 313, 315, 316, 319, 323, 335, 338], "contain": [0, 3, 7, 12, 13, 14, 16, 17, 19, 20, 26, 28, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 50, 52, 53, 54, 55, 60, 62, 65, 67, 69, 74, 78, 88, 92, 98, 111, 112, 115, 129, 141, 144, 145, 147, 149, 150, 151, 160, 161, 162, 163, 164, 176, 177, 180, 181, 184, 186, 190, 210, 216, 217, 222, 224, 225, 230, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 263, 264, 265, 266, 267, 268, 269, 271, 288, 292, 304, 310, 313, 314, 315, 316, 317, 321, 322, 323, 326, 327, 328, 329, 332, 333, 334, 335, 337, 338], "etc": [0, 3, 7, 8, 11, 32, 46, 47, 74, 78, 92, 98, 123, 145, 184, 190, 326, 327, 328, 335, 337, 338], "have": [0, 1, 3, 5, 6, 7, 8, 9, 13, 14, 17, 18, 20, 21, 26, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 64, 65, 74, 78, 92, 93, 94, 98, 107, 112, 115, 116, 123, 124, 125, 139, 144, 145, 151, 153, 161, 163, 164, 183, 184, 189, 190, 208, 227, 228, 235, 237, 249, 252, 260, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 292, 301, 321, 322, 323, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "few": [0, 2, 8, 292, 328, 329, 332, 335, 337, 338], "depend": [0, 1, 2, 3, 4, 7, 8, 34, 36, 112, 115, 230, 252, 321, 326, 328, 329, 332, 333, 337, 338], "possibl": [0, 2, 3, 4, 27, 29, 32, 33, 34, 36, 39, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 163, 164, 176, 177, 180, 181, 225, 297, 301, 321, 326, 328, 329, 332, 333, 335, 337, 338], "standard": [0, 3, 125, 135, 151, 162, 174, 186, 191, 192, 214, 215, 257, 265, 266, 267, 268, 326, 327, 332, 335, 337], "numpi": [0, 11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 92, 98, 143, 301, 333, 335, 337, 338], "common": [0, 2, 3, 4, 21, 78, 105, 211, 212, 213, 220, 235, 236, 237, 242, 248, 249, 252, 253, 254, 255, 257, 313, 320, 321, 323, 326, 328, 331, 332, 333, 334, 337, 338], "openai": [0, 7, 77, 79, 95, 328, 333, 337, 338], "gym": [0, 1, 3, 4, 8, 11, 13, 14, 16, 17, 21, 22, 74, 75, 77, 78, 79, 82, 92, 95, 98, 102, 104, 107, 110, 116, 122, 123, 125, 127, 131, 133, 136, 141, 144, 150, 151, 310, 313, 320, 326, 327, 328, 329, 333, 334, 335, 337], "onli": [0, 1, 3, 4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 44, 46, 47, 52, 57, 58, 68, 74, 78, 82, 89, 92, 93, 94, 98, 107, 108, 110, 111, 112, 114, 115, 119, 125, 129, 130, 133, 139, 140, 141, 142, 144, 145, 147, 149, 151, 180, 182, 183, 189, 190, 210, 215, 216, 222, 223, 225, 226, 227, 228, 235, 237, 238, 242, 248, 249, 250, 252, 253, 254, 255, 256, 257, 265, 266, 267, 268, 269, 305, 323, 326, 327, 328, 329, 331, 332, 333, 335, 337, 338], "option": [0, 1, 3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 68, 72, 74, 75, 78, 88, 91, 92, 93, 94, 95, 98, 100, 105, 107, 108, 109, 110, 112, 114, 115, 116, 119, 120, 122, 123, 124, 125, 129, 130, 131, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 204, 205, 206, 208, 210, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 263, 264, 265, 266, 267, 268, 269, 271, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 286, 289, 292, 294, 295, 296, 297, 298, 299, 301, 305, 306, 307, 308, 309, 310, 312, 313, 315, 316, 317, 321, 329, 332, 333, 335, 337], "On": [0, 3, 7, 18, 19, 20, 21, 177, 181, 321, 327, 332], "end": [0, 3, 13, 14, 32, 35, 38, 41, 42, 52, 53, 54, 55, 64, 74, 78, 92, 98, 116, 127, 139, 140, 145, 163, 164, 176, 177, 180, 181, 185, 255, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "come": [0, 1, 3, 8, 78, 87, 92, 98, 112, 115, 210, 211, 212, 213, 222, 230, 326, 327, 328, 329, 332, 335, 337, 338], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 32, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 57, 58, 64, 65, 68, 74, 76, 78, 88, 92, 93, 94, 98, 104, 105, 107, 108, 111, 112, 115, 122, 123, 129, 133, 139, 140, 141, 142, 144, 145, 147, 149, 151, 153, 158, 159, 161, 176, 178, 180, 182, 185, 189, 190, 214, 215, 225, 250, 252, 255, 269, 292, 297, 298, 307, 317, 320, 321, 322, 324, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "re": [0, 3, 8, 32, 64, 74, 78, 92, 98, 182, 187, 188, 222, 226, 323, 326, 328, 329, 331, 333, 337, 338], "usabl": [0, 323, 329, 337], "function": [0, 3, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 45, 46, 47, 49, 57, 58, 59, 65, 68, 74, 75, 78, 92, 98, 104, 112, 115, 145, 151, 153, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 195, 196, 197, 200, 201, 203, 206, 208, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 310, 313, 319, 321, 326, 329, 331, 333, 335, 338], "cost": [0, 2, 27, 326, 327, 332, 333, 335], "return": [0, 2, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 62, 66, 67, 69, 72, 74, 75, 78, 88, 91, 92, 93, 94, 98, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 125, 127, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 160, 161, 162, 165, 166, 167, 168, 169, 171, 173, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 193, 196, 197, 198, 200, 201, 204, 205, 206, 207, 210, 211, 212, 213, 215, 222, 224, 225, 226, 230, 231, 232, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 260, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 288, 301, 304, 306, 310, 313, 314, 315, 316, 317, 319, 321, 323, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "process": [0, 1, 3, 4, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 39, 43, 45, 55, 74, 75, 78, 82, 87, 89, 92, 93, 94, 98, 112, 115, 151, 189, 190, 217, 221, 224, 319, 323, 326, 327, 329, 332, 333, 334, 335, 337, 338], "good": [0, 1, 4, 9, 326, 328, 329, 332, 337, 338], "runtim": [0, 3, 32, 74, 78, 92, 98, 333], "perform": [0, 3, 4, 8, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 74, 78, 92, 98, 101, 112, 115, 124, 145, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 189, 190, 193, 194, 195, 197, 200, 201, 203, 208, 214, 215, 217, 218, 219, 221, 224, 229, 232, 245, 252, 255, 297, 301, 322, 326, 327, 328, 329, 331, 332, 333, 338], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 32, 35, 38, 40, 41, 42, 52, 53, 54, 55, 74, 78, 87, 92, 93, 94, 96, 97, 98, 139, 151, 211, 212, 213, 221, 242, 250, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 321, 322, 326, 327, 328, 329, 332, 333, 334, 335, 337, 338], "read": [0, 2, 3, 7, 17, 23, 37, 40, 57, 58, 59, 65, 68, 74, 78, 92, 98, 105, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 127, 128, 130, 131, 133, 136, 137, 139, 140, 141, 142, 144, 147, 148, 150, 151, 161, 196, 210, 211, 212, 213, 216, 222, 225, 226, 228, 230, 231, 235, 236, 237, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 263, 265, 266, 267, 268, 269, 284, 297, 301, 310, 321, 326, 327, 328, 331, 332, 333, 334, 338], "more": [0, 2, 3, 4, 6, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 54, 55, 74, 78, 81, 82, 92, 93, 94, 98, 100, 143, 147, 152, 173, 180, 184, 191, 193, 210, 214, 216, 217, 225, 230, 235, 243, 250, 252, 265, 270, 278, 296, 320, 322, 323, 326, 327, 328, 329, 331, 332, 333, 334, 338], "about": [0, 3, 5, 7, 9, 18, 19, 20, 43, 55, 322, 326, 327, 328, 332, 333, 337, 338], "philosophi": [0, 9], "capabl": [0, 1, 7, 9, 323, 326, 331, 334, 338], "beyond": 0, "api": [0, 2, 3, 5, 93, 94, 95, 129, 149, 322, 323, 332, 333, 337, 338], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 48, 50, 74, 75, 78, 88, 92, 98, 101, 107, 108, 118, 123, 130, 153, 178, 182, 210, 216, 217, 222, 223, 224, 225, 226, 321, 322, 327, 328, 329, 331, 332, 333, 334, 335, 338], "paper": [0, 129, 147, 149, 176, 198, 207, 241, 247, 310, 326, 328, 332], "ppo": [0, 4, 8, 222, 226, 237, 249, 252, 319, 321, 325, 326, 327, 330, 336], "pendulum": [0, 3, 13, 14, 16, 17, 21, 22, 74, 75, 77, 78, 79, 89, 92, 98, 107, 110, 111, 117, 122, 123, 125, 131, 133, 139, 141, 142, 144, 145, 151, 178, 182, 313, 321, 325, 327, 328, 330, 336, 337, 338], "your": [0, 2, 3, 7, 8, 10, 18, 32, 74, 78, 82, 87, 92, 93, 94, 98, 151, 317, 320, 321, 322, 325, 327, 328, 329, 330, 332, 335, 336, 337], "introduct": [0, 322, 325, 330, 332, 336, 338], "multi": [0, 7, 9, 28, 29, 32, 74, 78, 92, 96, 97, 98, 176, 178, 180, 182, 183, 184, 189, 190, 263, 265, 266, 267, 268, 319, 325, 326, 327, 328, 329, 330, 333, 336, 337], "agent": [0, 9, 28, 29, 87, 93, 94, 96, 97, 99, 100, 101, 139, 140, 187, 188, 189, 190, 192, 198, 207, 263, 319, 325, 330, 333, 336], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 40, 52, 53, 55, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 178, 182, 185, 186, 225, 250, 283, 305, 306, 307, 310, 313, 315, 316, 317, 319, 321, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335, 336], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 60, 61, 68, 72, 74, 75, 78, 88, 91, 92, 93, 94, 95, 96, 97, 98, 104, 105, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 122, 123, 125, 129, 130, 131, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 149, 151, 153, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 192, 193, 196, 197, 198, 199, 205, 206, 207, 208, 210, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 278, 287, 288, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 311, 313, 317, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 332, 333, 336, 338], "pretrain": [0, 325, 330, 336], "recurr": [0, 176, 177, 178, 180, 182, 201, 325, 327, 330, 335, 336], "dqn": [0, 116, 173, 216, 217, 235, 236, 238, 239, 241, 242, 243, 244, 247, 248, 250, 252, 253, 254, 255, 256, 257, 263, 308, 319, 321, 325, 330, 336], "train": [0, 1, 3, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 34, 36, 39, 40, 45, 56, 74, 78, 92, 93, 94, 98, 112, 120, 129, 140, 145, 147, 149, 153, 166, 168, 178, 182, 214, 218, 219, 221, 235, 236, 237, 238, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 263, 265, 301, 303, 313, 319, 323, 325, 327, 330, 334, 335, 336, 338], "polici": [0, 1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 74, 78, 88, 92, 98, 114, 123, 140, 158, 159, 173, 178, 182, 189, 190, 192, 199, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 229, 235, 236, 237, 238, 242, 248, 249, 251, 252, 253, 254, 255, 257, 297, 303, 306, 307, 313, 315, 316, 321, 322, 323, 325, 327, 330, 334, 335, 336, 337, 338], "replai": [0, 8, 13, 14, 16, 35, 38, 41, 42, 52, 53, 54, 55, 60, 61, 62, 63, 65, 66, 67, 107, 114, 130, 133, 141, 238, 239, 241, 242, 248, 253, 255, 257, 298, 301, 311, 313, 319, 323, 325, 330, 333, 334, 336], "buffer": [0, 1, 3, 4, 8, 13, 14, 16, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 74, 78, 88, 92, 98, 107, 111, 114, 129, 130, 133, 141, 144, 145, 147, 149, 225, 228, 238, 239, 241, 242, 248, 253, 255, 257, 298, 301, 311, 313, 319, 323, 325, 330, 333, 334, 336, 338], "task": [0, 3, 9, 28, 29, 40, 45, 72, 78, 81, 92, 93, 94, 95, 98, 129, 139, 147, 149, 248, 325, 326, 327, 328, 329, 330, 332, 333, 336, 337, 338], "specif": [0, 2, 5, 8, 41, 42, 78, 170, 215, 301, 319, 322, 323, 325, 328, 329, 330, 332, 335, 336], "object": [0, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 57, 58, 59, 65, 68, 74, 78, 92, 98, 112, 115, 116, 125, 129, 144, 145, 147, 151, 186, 198, 207, 210, 211, 222, 225, 226, 227, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 305, 306, 307, 312, 313, 317, 319, 321, 323, 325, 327, 328, 329, 330, 332, 333, 335, 336, 338], "ddpg": [0, 166, 167, 168, 169, 238, 247, 256, 319, 321, 325, 327, 330, 336], "loss": [0, 3, 8, 36, 116, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 263, 264, 265, 296, 301, 308, 309, 310, 313, 322, 323, 325, 330, 333, 335, 336, 337], "trainer": [0, 235, 236, 237, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 263, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 325, 326, 330, 336], "A": [0, 1, 2, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 76, 78, 80, 81, 92, 95, 98, 110, 114, 120, 123, 129, 130, 131, 141, 144, 145, 147, 148, 150, 151, 152, 153, 160, 162, 163, 164, 173, 176, 177, 178, 180, 181, 182, 184, 186, 187, 188, 190, 192, 193, 208, 214, 215, 216, 217, 218, 219, 222, 223, 226, 228, 229, 232, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 260, 263, 265, 266, 267, 268, 269, 271, 285, 286, 289, 294, 301, 303, 310, 313, 322, 325, 326, 328, 330, 332, 333, 336, 338], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 66, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 81, 83, 84, 85, 86, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 122, 123, 125, 127, 129, 131, 133, 136, 139, 140, 141, 142, 143, 144, 145, 147, 149, 151, 157, 160, 161, 162, 163, 164, 165, 170, 173, 176, 177, 178, 180, 181, 182, 183, 184, 186, 189, 190, 193, 196, 197, 198, 199, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 228, 229, 230, 235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 258, 259, 263, 265, 266, 267, 268, 271, 292, 293, 294, 295, 296, 298, 299, 300, 303, 310, 313, 321, 322, 323, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338], "packag": [0, 6, 7, 10, 104, 319, 320, 338], "singl": [0, 3, 13, 14, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 54, 55, 66, 74, 78, 92, 98, 107, 108, 129, 133, 149, 163, 164, 176, 177, 178, 180, 181, 182, 183, 184, 190, 224, 228, 237, 239, 241, 242, 243, 249, 252, 253, 257, 265, 266, 267, 268, 274, 275, 276, 277, 279, 280, 281, 282, 310, 317, 319, 326, 327, 328, 329, 331, 332, 333, 334, 335], "node": [0, 2, 18, 19, 20, 21, 22, 310, 319], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 93, 94, 123, 125, 162, 171, 172, 173, 174, 179, 186, 187, 188, 193, 196, 197, 200, 201, 204, 205, 206, 214, 215, 216, 217, 222, 226, 227, 235, 236, 237, 242, 243, 248, 249, 252, 253, 254, 255, 257, 319, 323, 327, 328, 332, 333, 337, 338], "helper": [0, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 326, 327, 329, 333], "compos": [0, 3, 32, 35, 38, 41, 42, 52, 53, 54, 55, 61, 62, 63, 66, 67, 74, 78, 92, 98, 107, 144, 145, 151, 220, 245, 255, 310, 319, 326, 327, 328, 329, 331, 332, 335, 337, 338], "tensorspec": [0, 3, 15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 46, 47, 48, 49, 50, 74, 78, 88, 92, 98, 100, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 121, 122, 123, 125, 127, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 161, 201, 210, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 229, 236, 239, 242, 253, 255, 257, 263, 319, 333], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 66, 68, 74, 75, 78, 87, 88, 92, 93, 94, 96, 97, 98, 100, 101, 104, 105, 107, 108, 110, 112, 113, 114, 115, 116, 117, 122, 123, 125, 127, 129, 130, 131, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 157, 160, 161, 162, 166, 167, 168, 169, 170, 173, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 193, 196, 197, 198, 199, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 239, 241, 242, 243, 244, 248, 249, 250, 252, 253, 254, 255, 257, 259, 263, 264, 265, 266, 267, 268, 271, 283, 284, 292, 298, 301, 304, 305, 310, 311, 313, 314, 317, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338], "human": [0, 53, 319, 333], "feedback": [0, 319, 337], "rlhf": [0, 40, 45, 56, 123, 319, 321], "envbas": [0, 3, 13, 14, 16, 17, 18, 19, 20, 21, 75, 78, 92, 98, 105, 112, 115, 124, 131, 144, 145, 151, 153, 162, 185, 186, 297, 305, 306, 307, 310, 313, 315, 316, 317, 319], "gymlikeenv": [0, 319], "envmetadata": [0, 319], "vector": [0, 1, 8, 24, 27, 33, 87, 93, 94, 100, 114, 150, 166, 168, 176, 177, 180, 181, 184, 265, 268, 278, 279, 280, 281, 282, 319, 326, 327, 329, 331, 332, 333, 334, 338], "mask": [0, 1, 4, 23, 27, 30, 31, 33, 93, 94, 105, 130, 173, 187, 188, 199, 215, 216, 217, 218, 219, 223, 224, 298, 319, 327, 329, 338], "action": [0, 2, 8, 9, 13, 14, 15, 16, 17, 21, 27, 33, 40, 44, 53, 55, 71, 74, 78, 84, 87, 88, 92, 93, 94, 96, 97, 98, 99, 100, 105, 110, 112, 114, 115, 116, 117, 120, 123, 124, 127, 131, 133, 137, 139, 145, 150, 157, 160, 162, 165, 166, 167, 168, 169, 170, 172, 173, 174, 178, 182, 184, 185, 186, 187, 188, 189, 197, 198, 199, 201, 204, 205, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 229, 230, 235, 236, 238, 239, 241, 242, 248, 250, 252, 253, 254, 255, 257, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 310, 313, 317, 319, 321, 322, 323, 326, 327, 328, 331, 332, 334, 335, 337, 338], "record": [0, 32, 74, 78, 92, 98, 123, 252, 283, 284, 285, 286, 287, 288, 289, 290, 291, 313, 319, 327, 328], "domain": [0, 2, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 74, 78, 92, 98, 114, 141, 157, 210, 216, 217, 222, 223, 224, 225, 226, 227, 228, 319, 328, 329, 332, 333, 337, 338], "modul": [0, 2, 3, 4, 8, 11, 32, 40, 66, 74, 78, 87, 88, 92, 98, 104, 111, 114, 116, 123, 129, 130, 140, 141, 144, 145, 147, 149, 151, 152, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 261, 263, 265, 266, 267, 268, 269, 301, 308, 309, 313, 319, 322, 323, 327, 328, 331, 332, 333, 334, 335], "tensordict": [0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 57, 58, 60, 66, 67, 68, 71, 74, 75, 76, 78, 84, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 105, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 129, 130, 131, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 157, 160, 161, 162, 172, 173, 178, 182, 183, 185, 186, 198, 199, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 257, 263, 264, 265, 266, 267, 268, 269, 283, 292, 296, 297, 298, 300, 301, 310, 319, 322, 323, 326, 327, 328, 329, 331, 332, 333, 334, 338], "actor": [0, 3, 4, 15, 21, 123, 162, 165, 166, 168, 173, 174, 186, 197, 199, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 263, 310, 319, 322, 327, 328, 329, 332, 334, 337], "explor": [0, 1, 152, 192, 210, 214, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 235, 297, 306, 307, 313, 319, 328, 329, 332, 333], "valu": [0, 1, 3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 56, 74, 78, 87, 92, 98, 104, 106, 107, 108, 110, 112, 114, 115, 116, 124, 125, 129, 130, 133, 134, 136, 141, 142, 144, 145, 149, 151, 157, 161, 166, 167, 168, 169, 171, 173, 174, 175, 178, 179, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 196, 198, 199, 204, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 292, 294, 295, 296, 297, 298, 301, 310, 313, 319, 323, 327, 331, 332, 333, 335, 337, 338], "gener": [0, 1, 2, 3, 7, 8, 9, 16, 35, 38, 40, 63, 64, 74, 75, 78, 88, 92, 93, 94, 96, 97, 98, 111, 112, 113, 117, 123, 125, 131, 136, 137, 139, 144, 150, 161, 171, 187, 188, 196, 210, 222, 226, 230, 231, 253, 259, 265, 270, 278, 287, 301, 319, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338], "hook": [0, 32, 74, 78, 92, 98, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 189, 190, 193, 194, 195, 197, 199, 200, 201, 203, 208, 214, 215, 217, 218, 219, 221, 224, 229, 232, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 319], "planner": [0, 162, 186, 319], "sac": [0, 242, 253, 255, 319], "redq": [0, 253, 309, 310, 319], "iql": [0, 248, 319, 332], "cql": [0, 236, 241, 319], "dt": [0, 221, 319, 333], "td3": [0, 257, 319], "a2c": [0, 235, 319], "dreamer": [0, 103, 174, 244, 245, 246, 319, 321], "checkpoint": [0, 319, 334], "builder": [0, 319, 327, 338], "logger": [0, 284, 286, 287, 288, 289, 290, 291, 295, 301, 313, 317, 319, 327], "_util": [0, 3, 11, 319], "implement_for": [0, 3, 319], "contribut": 0, "thing": [0, 3, 7, 8, 320, 328, 329, 332, 335, 338], "consid": [0, 1, 3, 8, 20, 32, 34, 36, 39, 57, 58, 68, 74, 78, 92, 98, 114, 151, 171, 189, 204, 320, 326, 333, 335], "when": [0, 1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 57, 58, 59, 61, 64, 65, 68, 74, 75, 78, 87, 89, 91, 92, 93, 94, 98, 105, 107, 111, 112, 114, 115, 123, 124, 125, 129, 130, 136, 141, 144, 145, 147, 149, 150, 151, 158, 159, 162, 173, 176, 177, 180, 181, 184, 185, 186, 187, 188, 191, 199, 205, 222, 225, 226, 228, 232, 237, 239, 243, 249, 252, 255, 258, 263, 264, 265, 266, 267, 268, 283, 284, 298, 317, 320, 321, 323, 326, 327, 328, 329, 332, 333, 334, 335, 338], "debug": [0, 6, 8, 40, 320, 338], "work": [0, 2, 3, 4, 8, 11, 32, 34, 36, 38, 39, 74, 78, 82, 92, 98, 108, 123, 129, 147, 150, 151, 163, 164, 184, 217, 224, 229, 237, 249, 252, 301, 320, 321, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "habitat": [0, 3, 80, 320, 334], "lab": [0, 3, 72, 73, 320], "mujoco": [0, 6, 8, 95, 320, 328, 329], "error": [0, 1, 3, 7, 10, 11, 29, 32, 74, 78, 92, 98, 101, 130, 153, 320, 326, 328, 332, 338], "solut": [0, 3, 6, 7, 9, 21, 320, 321, 323, 337], "resourc": [0, 1, 21, 320, 326, 328, 332], "version": [0, 1, 3, 6, 11, 32, 34, 36, 40, 74, 78, 92, 93, 98, 100, 150, 213, 250, 255, 265, 268, 320, 321, 326, 328, 329, 332, 333, 334, 338], "issu": [0, 4, 5, 8, 53, 57, 58, 68, 82, 107, 130, 142, 210, 216, 217, 222, 223, 224, 225, 226, 320, 337], "index": [0, 3, 7, 8, 10, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 57, 58, 60, 62, 66, 67, 68, 69, 74, 78, 92, 98, 100, 107, 114, 160, 187, 188, 331, 332, 335, 337], "search": [0, 161, 327], "page": [0, 7], "somewhat": [1, 322, 338], "equival": [1, 3, 17, 24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 52, 53, 55, 56, 74, 78, 92, 98, 113, 116, 145, 173, 180, 199, 216, 217, 223, 224, 252, 298, 337, 338], "dataload": [1, 56, 64, 327, 328, 335], "except": [1, 2, 3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 74, 78, 92, 98, 107, 118, 133, 140, 141, 142, 176, 178, 180, 182, 196, 214, 218, 219, 221, 321, 327, 335, 337, 338], "1": [1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 66, 71, 74, 75, 78, 84, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 120, 123, 125, 127, 129, 130, 131, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 149, 151, 157, 160, 162, 163, 164, 165, 166, 167, 169, 170, 173, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 200, 201, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 228, 229, 230, 232, 235, 236, 237, 238, 239, 241, 242, 245, 248, 249, 251, 252, 253, 254, 255, 256, 257, 263, 264, 265, 266, 267, 268, 271, 273, 274, 275, 279, 280, 282, 292, 297, 298, 299, 310, 313, 317, 320, 321, 322, 323, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338], "thei": [1, 2, 3, 4, 8, 9, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 74, 78, 87, 92, 93, 94, 98, 100, 118, 123, 129, 137, 144, 145, 149, 182, 183, 235, 236, 237, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 263, 298, 301, 321, 322, 323, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "collect": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 35, 38, 41, 42, 52, 53, 54, 55, 92, 95, 98, 107, 125, 129, 149, 153, 221, 236, 238, 241, 242, 253, 255, 257, 292, 298, 301, 303, 304, 305, 313, 323, 326, 329, 332, 333, 334, 335, 337, 338], "over": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 42, 43, 45, 51, 66, 74, 78, 92, 98, 114, 125, 136, 142, 160, 208, 228, 243, 245, 250, 271, 304, 323, 326, 327, 328, 332, 333, 338], "non": [1, 3, 8, 21, 32, 34, 35, 36, 38, 39, 41, 42, 74, 78, 92, 93, 94, 98, 106, 111, 119, 129, 141, 144, 145, 146, 147, 149, 160, 176, 178, 180, 182, 189, 225, 226, 235, 236, 238, 239, 241, 242, 243, 244, 245, 248, 250, 252, 253, 254, 255, 257, 263, 265, 266, 267, 268, 321, 326, 329, 332, 333, 335, 338], "static": [1, 11, 40, 45, 151, 248, 333, 335], "2": [1, 3, 8, 9, 10, 11, 13, 14, 16, 21, 22, 26, 28, 30, 31, 32, 35, 36, 37, 38, 41, 42, 43, 45, 55, 56, 74, 75, 78, 87, 91, 92, 93, 94, 96, 97, 98, 99, 100, 108, 111, 112, 113, 114, 115, 123, 125, 127, 129, 133, 136, 139, 140, 141, 144, 145, 147, 149, 151, 157, 161, 163, 164, 165, 166, 167, 168, 170, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 197, 208, 215, 216, 217, 218, 219, 221, 225, 229, 230, 235, 236, 237, 238, 242, 248, 249, 252, 253, 254, 255, 257, 264, 265, 266, 267, 268, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 292, 321, 322, 325, 326, 327, 328, 329, 331, 332, 333, 335, 336, 337, 338], "like": [1, 2, 3, 4, 7, 21, 26, 28, 32, 35, 38, 41, 42, 45, 74, 78, 80, 87, 92, 93, 94, 98, 116, 143, 153, 176, 180, 190, 220, 253, 322, 326, 328, 329, 332, 333, 334, 335, 338], "being": [1, 2, 3, 7, 8, 17, 18, 20, 21, 32, 56, 74, 78, 92, 98, 112, 114, 115, 124, 131, 145, 158, 159, 178, 182, 218, 221, 237, 249, 252, 255, 284, 298, 303, 315, 316, 317, 321, 326, 327, 328, 329, 332, 333, 335], "s": [1, 2, 3, 6, 7, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 74, 78, 82, 89, 92, 93, 94, 98, 107, 111, 129, 139, 141, 143, 144, 145, 147, 149, 151, 153, 163, 164, 178, 182, 188, 189, 190, 192, 198, 207, 211, 213, 214, 217, 218, 222, 225, 226, 229, 236, 248, 250, 255, 265, 266, 267, 268, 269, 310, 321, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "accept": [1, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 53, 55, 56, 74, 78, 88, 92, 98, 107, 111, 119, 129, 136, 141, 144, 145, 146, 147, 149, 208, 225, 226, 227, 255, 323, 328, 338], "two": [1, 2, 3, 4, 8, 10, 32, 40, 64, 74, 78, 92, 98, 125, 129, 149, 169, 176, 178, 180, 182, 202, 226, 249, 260, 297, 301, 310, 322, 326, 327, 328, 329, 331, 332, 333, 335, 337, 338], "main": [1, 2, 3, 5, 20, 22, 75, 226, 301, 321, 322, 326, 327, 331, 338], "argument": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 53, 55, 56, 64, 74, 78, 89, 92, 93, 98, 110, 111, 129, 137, 139, 141, 144, 145, 147, 149, 160, 163, 164, 176, 178, 180, 182, 184, 187, 188, 189, 190, 191, 208, 210, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 229, 230, 235, 236, 237, 238, 239, 240, 241, 242, 247, 248, 249, 251, 252, 253, 254, 255, 257, 259, 263, 265, 266, 267, 268, 269, 273, 283, 294, 304, 310, 313, 314, 317, 326, 327, 328, 329, 332, 333, 335, 338], "list": [1, 6, 7, 8, 9, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 49, 52, 53, 54, 55, 59, 64, 65, 74, 78, 88, 92, 93, 94, 98, 100, 101, 110, 112, 115, 123, 125, 127, 129, 136, 145, 147, 149, 151, 160, 172, 178, 182, 184, 187, 188, 194, 199, 217, 223, 224, 226, 228, 229, 230, 250, 255, 262, 265, 268, 283, 297, 298, 315, 316, 321, 326, 328, 331, 333, 334, 335, 337, 338], "constructor": [1, 16, 18, 19, 20, 21, 38, 45, 144, 235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 263, 265, 266, 267, 268, 269, 310, 314, 317, 321, 326, 327, 328, 332, 335], "iter": [1, 11, 13, 14, 16, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 51, 52, 53, 54, 55, 56, 74, 78, 92, 98, 117, 125, 137, 163, 164, 184, 189, 190, 203, 210, 216, 222, 223, 225, 227, 228, 230, 250, 262, 297, 300, 301, 310, 322, 323, 326, 328, 329, 332, 333], "execut": [1, 3, 6, 7, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 41, 42, 52, 53, 54, 55, 74, 75, 78, 82, 88, 89, 92, 98, 105, 145, 176, 178, 180, 182, 218, 227, 228, 305, 317, 321, 323, 325, 327, 328, 329, 332, 335, 336, 338], "step": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 71, 74, 75, 78, 84, 88, 92, 93, 94, 98, 105, 119, 122, 125, 139, 140, 141, 142, 145, 150, 160, 161, 162, 174, 176, 178, 180, 182, 183, 185, 186, 214, 218, 219, 221, 222, 226, 235, 244, 252, 264, 265, 266, 267, 268, 271, 272, 273, 283, 292, 297, 301, 323, 326, 327, 329, 331, 333, 334, 335, 337], "queri": [1, 3, 13, 14, 16, 17, 32, 34, 36, 39, 74, 78, 92, 98, 129, 144, 147, 151, 228, 326, 333, 337], "defin": [1, 2, 11, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 74, 78, 92, 98, 130, 140, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 189, 190, 193, 194, 195, 197, 200, 201, 203, 208, 214, 215, 217, 218, 219, 221, 224, 229, 232, 239, 241, 250, 265, 266, 267, 268, 269, 283, 314, 326, 327, 329, 333, 335, 338], "number": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 68, 74, 78, 88, 89, 91, 92, 93, 94, 98, 107, 114, 120, 124, 125, 135, 139, 142, 151, 162, 163, 164, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 189, 190, 193, 194, 195, 198, 200, 201, 204, 205, 206, 207, 210, 214, 215, 218, 219, 221, 222, 225, 226, 230, 234, 236, 242, 244, 248, 249, 251, 253, 255, 257, 292, 294, 297, 301, 303, 304, 305, 315, 316, 317, 321, 326, 327, 328, 329, 332, 333, 334, 338], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 54, 64, 74, 78, 92, 98, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 125, 127, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 176, 178, 182, 184, 191, 192, 235, 236, 237, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 263, 266, 267, 268, 298, 326, 328, 329, 332, 333, 335, 338], "deliv": [1, 16, 18, 19, 20, 326, 327, 337], "stack": [1, 3, 7, 8, 18, 20, 21, 28, 29, 50, 74, 78, 87, 92, 93, 94, 98, 151, 176, 178, 180, 181, 182, 227, 228, 283, 292, 321, 327, 331, 333, 337], "user": [1, 2, 3, 5, 8, 21, 32, 52, 53, 55, 74, 78, 92, 98, 140, 145, 170, 183, 252, 255, 314, 322, 323, 326, 327, 333, 337, 338], "reset": [1, 3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 52, 53, 54, 55, 71, 74, 75, 78, 84, 87, 88, 89, 91, 92, 93, 94, 98, 107, 116, 119, 122, 124, 129, 136, 139, 140, 141, 142, 144, 147, 150, 151, 153, 161, 176, 178, 182, 209, 221, 283, 310, 326, 327, 328, 329, 331, 332, 337], "whenev": [1, 2, 3, 32, 35, 38, 41, 42, 104, 122, 145, 150, 250, 265, 266, 267, 268, 303, 321], "reach": [1, 13, 14, 16, 17, 18, 19, 20, 21, 22, 40, 64, 74, 78, 92, 98, 139, 214, 218, 219, 221, 326, 328, 332, 337, 338], "done": [1, 3, 4, 7, 8, 13, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 52, 53, 55, 71, 74, 75, 78, 84, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 105, 107, 112, 113, 115, 116, 117, 124, 125, 127, 131, 133, 135, 137, 139, 141, 142, 144, 145, 151, 160, 161, 162, 176, 178, 182, 186, 235, 236, 238, 239, 241, 242, 248, 252, 253, 254, 255, 257, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 310, 322, 326, 328, 329, 331, 332, 333, 334, 335, 337, 338], "state": [1, 2, 3, 4, 13, 14, 16, 17, 32, 35, 38, 40, 41, 42, 52, 53, 54, 55, 71, 74, 78, 84, 88, 92, 93, 94, 96, 97, 98, 107, 108, 110, 116, 125, 131, 139, 140, 144, 145, 151, 160, 161, 162, 165, 170, 174, 176, 177, 178, 180, 181, 182, 183, 184, 186, 194, 197, 198, 200, 201, 207, 211, 225, 231, 235, 237, 241, 249, 250, 252, 253, 254, 255, 263, 264, 265, 266, 267, 268, 269, 317, 321, 322, 326, 327, 328, 329, 332, 333, 338], "after": [1, 3, 8, 13, 14, 18, 20, 21, 26, 32, 40, 74, 78, 82, 92, 98, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 127, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 160, 176, 178, 182, 191, 214, 216, 218, 219, 223, 245, 255, 327, 328, 329, 332, 333, 334, 335, 338], "predefin": [1, 327, 328, 329, 335], "becaus": [1, 3, 4, 7, 34, 36, 39, 40, 74, 78, 92, 98, 116, 123, 139, 144, 150, 169, 183, 190, 210, 216, 217, 222, 223, 224, 225, 226, 326, 327, 329, 331, 332, 333, 335, 338], "potenti": [1, 2, 333, 335], "comput": [1, 3, 4, 8, 13, 16, 21, 27, 32, 40, 74, 78, 92, 98, 125, 145, 148, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 193, 194, 195, 196, 197, 200, 201, 203, 205, 206, 208, 211, 214, 215, 217, 218, 219, 221, 222, 224, 226, 229, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 305, 322, 326, 328, 329, 331, 332, 334, 335], "heavi": [1, 8, 335], "crucial": [1, 214, 218, 219, 221, 248, 250, 326, 327, 328, 329, 332, 333, 338], "configur": [1, 8, 13, 14, 16, 17, 21, 22, 40, 123, 165, 170, 197, 250, 252, 310, 321, 326, 327, 328, 332, 333], "hyperparamet": [1, 235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 263, 326, 333, 335], "appropri": [1, 3, 4, 7, 13, 14, 16, 17, 62, 66, 67, 69, 92, 98, 116, 314, 317, 326, 335], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 68, 72, 73, 74, 75, 78, 88, 89, 91, 92, 93, 94, 95, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 310, 313, 314, 315, 316, 317, 321, 322, 326, 329, 332, 333, 334, 337], "take": [1, 3, 8, 23, 40, 74, 78, 92, 98, 110, 139, 142, 144, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 189, 190, 193, 194, 195, 197, 200, 201, 203, 208, 214, 215, 217, 218, 219, 220, 221, 222, 224, 229, 232, 234, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 292, 303, 321, 323, 326, 327, 328, 332, 333, 335, 338], "consider": [1, 3, 8, 327, 332, 335], "whether": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 46, 47, 52, 53, 54, 55, 74, 78, 88, 92, 93, 94, 95, 98, 100, 112, 115, 140, 145, 161, 163, 164, 178, 182, 184, 230, 236, 237, 238, 239, 241, 242, 243, 249, 250, 252, 253, 255, 257, 263, 265, 268, 326, 327, 328, 332, 333, 338], "should": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 65, 66, 74, 78, 87, 88, 92, 93, 94, 95, 98, 107, 110, 111, 112, 113, 116, 117, 119, 123, 125, 130, 131, 133, 136, 137, 139, 140, 142, 144, 145, 150, 151, 153, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 189, 190, 193, 194, 195, 197, 200, 201, 203, 208, 214, 215, 217, 218, 219, 221, 222, 224, 225, 226, 229, 232, 242, 247, 249, 250, 252, 253, 256, 264, 265, 266, 267, 268, 269, 284, 296, 297, 298, 301, 313, 315, 316, 317, 321, 323, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "occur": [1, 8, 14, 28, 29, 108, 125, 130, 150, 161, 210, 216, 217, 222, 223, 224, 225, 226, 245, 335, 338], "serial": [1, 2, 3, 32, 74, 78, 92, 98, 151], "optim": [1, 2, 8, 32, 40, 74, 78, 92, 98, 145, 162, 186, 191, 192, 236, 250, 251, 252, 255, 296, 301, 313, 322, 323, 328, 329, 332, 333], "parallel": [1, 3, 8, 17, 93, 94, 150, 153, 235, 314, 315, 316, 317, 327, 328, 332], "syncdatacollector": [1, 13, 14, 17, 18, 19, 20, 21, 107, 133, 313, 316, 319, 328, 329, 332, 335], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 74, 75, 76, 78, 80, 87, 88, 92, 93, 94, 98, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 315, 316, 317, 321, 322, 323, 326, 327, 328, 329, 332, 335, 338], "worker": [1, 2, 13, 14, 16, 17, 18, 19, 20, 21, 22, 36, 45, 56, 75, 89, 92, 98, 151, 315, 316, 317, 326, 328, 337, 338], "multisyncdatacollector": [1, 18, 19, 20, 21, 316, 319, 328, 337], "split": [1, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 45, 52, 53, 55, 56, 87, 93, 94, 176, 180, 235, 236, 237, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 263, 321, 323, 328, 335, 337], "workload": 1, "across": [1, 3, 8, 18, 19, 20, 21, 35, 38, 41, 42, 82, 151, 189, 221, 303, 319, 321, 326, 332, 333], "aggreg": [1, 3, 161, 163, 164, 166, 167, 228], "result": [1, 3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 41, 42, 52, 53, 54, 55, 64, 74, 75, 78, 92, 98, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 121, 122, 123, 124, 125, 127, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 153, 160, 161, 176, 178, 180, 182, 184, 189, 199, 215, 217, 218, 224, 235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 263, 265, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 303, 321, 327, 329, 333, 334, 337, 338], "final": [1, 3, 4, 21, 34, 36, 39, 40, 150, 176, 178, 180, 182, 189, 214, 218, 219, 220, 221, 227, 265, 297, 321, 326, 327, 328, 332, 333, 338], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 315, 319, 326, 327, 328, 337], "sever": [1, 8, 30, 32, 45, 74, 78, 92, 98, 108, 110, 145, 252, 326, 328, 335, 338], "batch": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 54, 55, 56, 57, 58, 61, 64, 66, 68, 74, 78, 88, 89, 91, 92, 98, 107, 119, 125, 127, 130, 133, 141, 145, 146, 150, 151, 161, 171, 172, 176, 177, 178, 180, 181, 182, 183, 187, 188, 189, 190, 191, 196, 198, 204, 208, 221, 225, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 292, 295, 298, 299, 300, 301, 303, 315, 316, 317, 323, 327, 328, 329, 331, 332, 334, 337, 338], "gather": [1, 3, 18, 20, 21, 45, 56, 57, 58, 68, 130, 188, 196, 264, 305, 320, 326, 327, 328, 329, 332, 333, 335, 338], "continu": [1, 9, 25, 46, 74, 78, 92, 93, 94, 98, 157, 166, 167, 168, 169, 221, 228, 235, 236, 242, 248, 252, 253, 254, 255, 256, 257, 265, 270, 278, 321, 326, 328, 329, 332, 333, 335, 337, 338], "concomitantli": 1, "network": [1, 4, 8, 32, 74, 78, 87, 92, 93, 94, 98, 163, 164, 166, 167, 168, 169, 172, 174, 175, 180, 184, 189, 190, 192, 194, 195, 198, 200, 201, 202, 207, 211, 212, 213, 215, 225, 229, 236, 237, 238, 239, 241, 242, 243, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 261, 263, 265, 266, 267, 268, 269, 312, 313, 321, 322, 323, 331, 333, 338], "impli": [1, 338], "weight": [1, 4, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 40, 74, 78, 92, 96, 97, 98, 111, 129, 141, 144, 145, 147, 149, 176, 177, 178, 180, 181, 182, 189, 192, 225, 235, 236, 237, 242, 245, 255, 303, 312, 321, 323, 326, 327, 328, 329, 331, 333, 335, 337], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 20, 21, 28, 29, 32, 52, 53, 55, 74, 78, 92, 98, 123, 125, 137, 145, 146, 151, 153, 184, 189, 322, 323, 326, 327, 328, 329, 332, 333, 334, 335, 337, 338], "slightli": [1, 321, 322, 329, 333, 334, 335, 338], "lag": [1, 13, 14, 16, 17, 326, 327, 328], "therefor": [1, 3, 7, 55, 74, 78, 92, 98, 133, 252, 263, 338], "although": [1, 8, 74, 78, 92, 98, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 189, 190, 193, 194, 195, 197, 200, 201, 203, 208, 214, 215, 217, 218, 219, 221, 224, 229, 232, 323, 326, 327, 335], "fastest": 1, "price": 1, "suitabl": [1, 2], "where": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 66, 68, 74, 78, 87, 88, 91, 92, 93, 94, 98, 105, 107, 116, 123, 129, 133, 136, 139, 140, 142, 144, 146, 149, 150, 160, 161, 176, 177, 180, 181, 187, 188, 189, 214, 218, 219, 221, 222, 225, 226, 234, 235, 236, 237, 242, 243, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 322, 323, 326, 327, 328, 331, 332, 333, 335, 338], "asynchron": [1, 9, 14, 21, 32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225, 235, 315, 327, 328], "off": [1, 2, 4, 179, 206, 216, 255, 297, 306, 321, 323, 326, 327, 328, 332, 334, 338], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 16, 17, 18, 20, 21, 32, 52, 53, 55, 74, 78, 92, 93, 94, 98, 112, 115, 119, 125, 140, 145, 150, 173, 176, 178, 180, 182, 190, 191, 211, 213, 215, 217, 223, 235, 243, 248, 252, 297, 321, 323, 326, 327, 328, 329, 332, 333, 334, 335, 338], "remot": [1, 2, 18, 19, 20, 21, 92, 98, 338], "rollout": [1, 3, 13, 14, 16, 21, 23, 40, 74, 78, 81, 88, 89, 92, 93, 94, 96, 97, 98, 99, 100, 105, 107, 110, 112, 115, 116, 117, 123, 127, 131, 136, 137, 139, 140, 142, 153, 162, 178, 182, 186, 221, 235, 305, 321, 326, 328, 329, 334, 335, 337], "necessari": [1, 4, 6, 8, 13, 14, 16, 17, 53, 55, 137, 253, 265, 266, 267, 268, 269, 322, 326, 328], "synchronis": [1, 75, 332], "either": [1, 5, 22, 32, 40, 56, 74, 78, 92, 98, 139, 140, 231, 257, 288, 323, 326, 327, 329, 334, 335, 337, 338], "update_policy_weights_": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 326, 332, 337], "update_at_each_batch": [1, 13, 14, 17, 326], "true": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 64, 72, 73, 74, 75, 76, 78, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 105, 107, 108, 111, 114, 119, 122, 123, 124, 125, 129, 130, 131, 135, 137, 139, 141, 143, 144, 145, 146, 147, 149, 151, 153, 157, 160, 161, 162, 163, 164, 166, 167, 168, 169, 175, 176, 177, 178, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 205, 206, 210, 211, 212, 213, 214, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 235, 236, 237, 238, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 257, 260, 265, 266, 267, 268, 271, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 294, 295, 297, 298, 301, 317, 321, 322, 323, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "second": [1, 3, 8, 176, 178, 180, 182, 217, 237, 249, 252, 255, 300, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 55, 56, 57, 58, 68, 71, 74, 76, 78, 81, 82, 84, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 111, 112, 113, 115, 116, 117, 123, 127, 128, 129, 131, 133, 137, 139, 141, 143, 144, 145, 147, 149, 157, 160, 162, 163, 164, 165, 166, 167, 168, 169, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 186, 189, 190, 191, 192, 197, 198, 199, 207, 210, 211, 212, 213, 215, 216, 217, 221, 222, 223, 224, 225, 228, 230, 235, 236, 238, 239, 241, 242, 248, 252, 253, 254, 255, 257, 263, 265, 266, 267, 268, 298, 303, 310, 311, 321, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337], "oper": [1, 3, 4, 7, 8, 13, 14, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 44, 45, 46, 47, 74, 78, 92, 98, 119, 123, 144, 172, 173, 177, 181, 193, 211, 212, 213, 216, 217, 220, 225, 231, 235, 237, 238, 239, 243, 249, 252, 254, 263, 264, 265, 266, 267, 268, 301, 310, 319, 323, 326, 327, 328, 329, 331, 332, 333, 338], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 43, 44, 45, 52, 73, 74, 75, 78, 88, 92, 98, 107, 125, 141, 144, 151, 157, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 189, 190, 193, 194, 195, 197, 200, 201, 203, 208, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 232, 239, 242, 250, 263, 265, 266, 267, 268, 284, 288, 297, 305, 306, 307, 310, 313, 315, 316, 321, 322, 323, 326, 328, 329, 333, 335, 338], "cpu": [1, 3, 8, 10, 13, 14, 16, 18, 19, 20, 21, 24, 26, 28, 32, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 53, 55, 56, 57, 58, 68, 71, 74, 78, 84, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 111, 112, 113, 115, 116, 117, 127, 129, 131, 133, 137, 139, 141, 144, 145, 147, 149, 157, 160, 162, 176, 177, 178, 180, 181, 182, 186, 191, 192, 198, 199, 207, 210, 211, 212, 213, 215, 216, 217, 222, 223, 224, 225, 228, 230, 235, 236, 238, 239, 241, 242, 248, 252, 253, 254, 255, 257, 263, 298, 310, 321, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "slower": 1, "than": [1, 2, 3, 4, 8, 13, 14, 16, 17, 52, 74, 78, 82, 92, 98, 131, 169, 178, 180, 182, 184, 193, 208, 210, 214, 216, 225, 230, 250, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 320, 322, 326, 327, 328, 332, 333, 335, 337, 338], "one": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 52, 53, 54, 55, 60, 62, 65, 67, 69, 74, 75, 78, 82, 87, 91, 92, 93, 94, 98, 100, 105, 107, 110, 112, 113, 114, 115, 124, 125, 129, 133, 136, 138, 140, 141, 142, 144, 145, 146, 149, 151, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 189, 190, 193, 194, 195, 196, 197, 199, 200, 201, 203, 208, 210, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 229, 230, 232, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 248, 249, 250, 252, 253, 254, 255, 256, 257, 263, 265, 266, 267, 268, 272, 273, 294, 296, 297, 301, 305, 310, 317, 320, 321, 322, 323, 326, 327, 328, 329, 331, 332, 333, 334, 335, 338], "cuda": [1, 3, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 74, 78, 81, 82, 92, 98, 111, 123, 128, 129, 141, 144, 145, 147, 149, 176, 177, 180, 181, 225, 241, 293, 326, 327, 328, 329, 332, 334, 338], "multipl": [1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 27, 43, 92, 98, 108, 110, 114, 124, 133, 136, 139, 144, 151, 176, 180, 182, 183, 189, 191, 192, 210, 216, 222, 223, 225, 226, 229, 237, 242, 249, 252, 253, 257, 271, 310, 317, 321, 323, 326, 327, 328, 332, 333, 335, 337], "infer": [1, 92, 98, 107, 151, 178, 182, 191, 215, 241, 326, 328, 335], "run": [1, 3, 4, 5, 6, 7, 8, 10, 13, 14, 17, 21, 32, 72, 73, 74, 78, 88, 92, 98, 124, 125, 145, 151, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 189, 190, 193, 194, 195, 197, 200, 201, 203, 208, 214, 215, 217, 218, 219, 221, 224, 227, 228, 229, 232, 255, 297, 315, 316, 317, 320, 323, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337], "dispatch": [1, 18, 19, 20, 21, 208], "avail": [1, 3, 4, 6, 21, 64, 82, 92, 93, 94, 123, 173, 199, 222, 226, 250, 315, 316, 321, 326, 327, 328, 329, 332, 333, 335, 338], "speed": [1, 2, 4, 8, 27, 92, 98, 322, 326, 327, 328, 329, 332, 333, 335], "up": [1, 2, 3, 8, 9, 13, 14, 16, 27, 40, 52, 53, 55, 92, 98, 142, 144, 252, 320, 321, 322, 326, 327, 328, 329, 332, 333, 335, 338], "avoid": [1, 32, 57, 58, 68, 74, 78, 92, 98, 104, 145, 151, 210, 225, 230, 237, 249, 252, 255, 304, 328, 332], "oom": [1, 57, 58, 68], "choic": [1, 2, 52, 53, 55, 92, 193, 321, 322, 326, 327, 332], "size": [1, 2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 61, 64, 65, 66, 68, 71, 74, 76, 78, 84, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 99, 100, 108, 112, 115, 116, 117, 119, 127, 129, 131, 133, 137, 138, 139, 141, 143, 144, 145, 146, 149, 151, 157, 160, 162, 163, 164, 165, 170, 171, 173, 176, 177, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 193, 196, 197, 198, 199, 200, 201, 204, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 228, 230, 235, 236, 238, 239, 241, 242, 248, 250, 252, 253, 254, 255, 257, 263, 264, 265, 266, 267, 268, 269, 284, 292, 298, 310, 321, 327, 328, 329, 331, 332, 333, 334, 337, 338], "pass": [1, 3, 4, 13, 14, 16, 18, 19, 20, 21, 22, 26, 32, 35, 38, 40, 41, 42, 45, 53, 55, 57, 58, 66, 68, 74, 75, 76, 78, 87, 89, 92, 93, 94, 98, 112, 115, 131, 144, 146, 151, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 189, 190, 191, 193, 194, 195, 197, 198, 200, 201, 203, 207, 208, 210, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 232, 237, 249, 250, 252, 265, 266, 267, 268, 269, 298, 315, 316, 317, 321, 326, 327, 328, 329, 331, 332, 333, 335, 338], "ie": [1, 3, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 45, 46, 47, 60, 74, 78, 82, 91, 92, 98, 107, 119, 146, 151, 161, 178, 182, 215, 235, 237, 238, 242, 248, 249, 252, 253, 254, 255, 257, 265, 266, 267, 268, 321, 322, 327, 328, 332, 335], "store": [1, 3, 8, 13, 14, 16, 17, 20, 26, 32, 34, 36, 37, 39, 41, 42, 43, 45, 55, 56, 57, 58, 59, 60, 68, 74, 78, 92, 98, 150, 151, 162, 183, 186, 235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 263, 310, 319, 323, 326, 328, 329, 332, 334, 335, 338], "while": [1, 3, 7, 8, 32, 74, 78, 92, 98, 133, 145, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 189, 190, 193, 194, 195, 197, 200, 201, 203, 208, 214, 215, 217, 218, 219, 221, 224, 229, 232, 248, 249, 252, 255, 321, 326, 328, 329, 332, 333, 334, 335, 337], "wait": [1, 20, 21, 22, 329, 333], "also": [1, 2, 3, 8, 9, 11, 32, 34, 36, 39, 41, 53, 55, 56, 57, 58, 68, 74, 78, 92, 93, 94, 98, 104, 107, 114, 125, 131, 133, 136, 137, 139, 141, 145, 176, 180, 201, 222, 227, 228, 229, 235, 236, 238, 239, 241, 242, 248, 252, 255, 265, 272, 273, 321, 323, 326, 327, 328, 329, 331, 332, 333, 335, 338], "impact": [1, 112, 115, 327, 329, 332], "memori": [1, 2, 3, 8, 21, 27, 32, 34, 36, 39, 45, 52, 53, 55, 57, 74, 75, 78, 82, 92, 98, 107, 111, 129, 141, 144, 145, 147, 149, 151, 180, 181, 225, 317, 323, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "manag": [1, 8, 261, 262, 265, 266, 267, 268, 297], "kei": [1, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 66, 74, 78, 92, 98, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 128, 129, 130, 131, 133, 136, 137, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 160, 161, 162, 172, 173, 178, 182, 185, 186, 199, 210, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 263, 264, 265, 266, 267, 268, 269, 284, 295, 296, 297, 299, 300, 301, 305, 310, 322, 323, 326, 328, 329, 331, 332, 333, 335, 337, 338], "control": [1, 3, 5, 8, 16, 72, 73, 87, 93, 94, 114, 160, 166, 167, 168, 169, 178, 182, 185, 186, 201, 208, 221, 225, 226, 227, 235, 237, 249, 252, 256, 265, 270, 278, 321, 323, 326, 327, 328, 332, 333, 335], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 64, 74, 78, 82, 89, 92, 95, 98, 107, 108, 112, 115, 120, 123, 124, 125, 129, 130, 139, 141, 142, 144, 145, 147, 153, 176, 177, 179, 180, 181, 182, 187, 188, 189, 206, 211, 212, 213, 215, 222, 225, 226, 228, 235, 236, 237, 239, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 260, 263, 265, 266, 267, 268, 292, 296, 310, 321, 322, 323, 326, 327, 328, 329, 331, 332, 333, 334, 335, 338], "storing_devic": [1, 13, 14, 16, 17, 18, 19, 20, 21, 326, 327, 332, 337], "dure": [1, 3, 13, 14, 16, 17, 18, 19, 20, 36, 40, 45, 52, 53, 54, 55, 56, 74, 78, 92, 93, 94, 98, 107, 110, 112, 115, 120, 127, 145, 178, 182, 297, 301, 322, 326, 327, 328, 329, 332, 333, 335, 338], "heurist": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 221, 326, 338], "usual": [1, 3, 4, 6, 7, 8, 52, 74, 78, 92, 98, 192, 252, 265, 266, 267, 268, 269, 283, 310, 320, 321, 323, 326, 327, 328, 329, 332, 335, 338], "same": [1, 2, 3, 4, 11, 13, 14, 16, 18, 19, 20, 21, 28, 29, 32, 34, 36, 39, 43, 45, 52, 64, 74, 75, 78, 87, 92, 93, 94, 98, 107, 112, 114, 115, 120, 124, 125, 144, 145, 151, 163, 164, 177, 178, 181, 182, 184, 187, 188, 189, 190, 215, 221, 229, 255, 326, 327, 328, 331, 332, 334, 335, 338], "storag": [1, 2, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 57, 58, 59, 64, 66, 68, 74, 76, 78, 92, 98, 107, 112, 115, 133, 319, 323, 327, 328, 329, 332, 334], "default": [1, 2, 3, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 60, 68, 72, 74, 78, 91, 92, 93, 94, 95, 98, 100, 105, 107, 108, 112, 114, 115, 116, 119, 123, 124, 125, 127, 129, 130, 133, 135, 137, 139, 140, 141, 142, 143, 145, 146, 147, 149, 150, 151, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 203, 204, 205, 206, 210, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 229, 230, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 310, 313, 317, 323, 326, 327, 328, 329, 334, 335, 337, 338], "behaviour": [1, 3, 21, 78, 108, 112, 115, 125, 130, 140, 160, 178, 179, 182, 206, 297, 321, 327, 335], "besid": 1, "those": [1, 2, 3, 5, 7, 26, 28, 92, 98, 107, 112, 115, 125, 141, 142, 182, 222, 226, 227, 228, 303, 315, 316, 321, 326, 327, 332, 333, 338], "choos": [1, 87, 178, 182, 252, 321, 322, 326, 327, 328, 332, 335], "follow": [1, 2, 3, 6, 7, 8, 32, 34, 36, 37, 39, 40, 52, 54, 74, 78, 88, 91, 92, 93, 94, 96, 97, 98, 100, 123, 129, 147, 163, 164, 176, 178, 180, 182, 184, 217, 223, 224, 234, 235, 236, 237, 238, 242, 248, 249, 252, 253, 254, 255, 257, 301, 310, 321, 322, 323, 326, 327, 328, 329, 331, 332, 333, 335, 337, 338], "max_frames_per_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 304, 326, 328, 337], "frame": [1, 2, 13, 14, 16, 17, 18, 19, 20, 21, 32, 107, 120, 214, 218, 219, 221, 283, 284, 294, 297, 301, 304, 305, 326, 327, 328, 329, 332, 335, 337, 338], "call": [1, 2, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 68, 74, 78, 91, 92, 98, 107, 110, 111, 114, 119, 122, 123, 125, 127, 128, 129, 136, 141, 144, 145, 147, 149, 150, 151, 153, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 186, 189, 190, 191, 193, 194, 195, 197, 200, 201, 203, 208, 214, 215, 217, 218, 219, 221, 224, 225, 226, 228, 229, 232, 237, 249, 252, 255, 264, 265, 266, 267, 268, 283, 297, 323, 327, 328, 329, 332, 333, 335, 338], "frames_per_batch": [1, 13, 14, 16, 17, 18, 19, 20, 21, 107, 133, 304, 326, 327, 328, 329, 332, 335, 337], "each": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 30, 31, 32, 40, 41, 52, 74, 75, 78, 92, 93, 94, 98, 100, 129, 133, 136, 139, 140, 141, 142, 149, 151, 173, 176, 177, 178, 180, 182, 189, 190, 194, 198, 199, 207, 214, 216, 217, 218, 224, 228, 271, 274, 275, 276, 277, 279, 280, 281, 282, 297, 298, 315, 316, 321, 326, 327, 328, 329, 332, 333, 334, 335, 337, 338], "init_random_fram": [1, 13, 14, 16, 17, 18, 19, 20, 21, 304, 326, 327], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 44, 46, 47, 61, 74, 78, 88, 92, 98, 114, 124, 125, 141, 153, 176, 178, 180, 182, 218, 222, 225, 226, 236, 253, 297, 305, 321, 326, 327, 328, 329, 333, 334, 335, 337, 338], "rand_step": [1, 3, 70, 72, 73, 74, 75, 77, 78, 79, 83, 85, 86, 88, 89, 92, 98, 122, 141, 151, 333, 337, 338], "reset_at_each_it": [1, 13, 14, 16, 17, 18, 19, 20, 21, 326], "split_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 52, 53, 55, 326, 327, 328], "trajectori": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 32, 41, 52, 53, 55, 60, 66, 74, 78, 92, 98, 130, 139, 144, 162, 182, 186, 221, 252, 265, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 292, 319, 322, 326, 327, 328, 329, 333, 335, 337, 338], "pad": [1, 3, 23, 37, 43, 52, 53, 55, 107, 163, 164, 166, 167, 182, 183, 187, 188, 189, 298], "along": [1, 3, 23, 28, 29, 34, 36, 39, 40, 45, 52, 53, 55, 58, 68, 107, 108, 125, 127, 130, 136, 143, 182, 184, 187, 188, 192, 216, 222, 225, 226, 250, 321, 326, 327, 329, 332, 333, 335], "point": [1, 3, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 54, 60, 62, 66, 67, 69, 74, 78, 92, 98, 107, 111, 129, 140, 141, 143, 144, 145, 147, 149, 185, 225, 234, 243, 301, 320, 327, 328, 331, 332, 333, 335, 338], "boolean": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 78, 130, 139, 161, 187, 188, 214, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 323, 329], "repres": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 41, 53, 74, 78, 92, 98, 100, 120, 130, 151, 173, 187, 188, 199, 216, 217, 223, 224, 226, 260, 265, 298, 326, 328, 329, 332], "valid": [1, 3, 23, 34, 36, 37, 45, 56, 101, 130, 145, 163, 164, 184, 187, 188, 214, 221, 249, 265, 266, 267, 268, 298, 323, 338], "exploration_typ": [1, 13, 14, 16, 18, 19, 20, 21, 297, 319, 326, 327], "strategi": [1, 16, 87, 188, 196, 218, 321, 323, 326, 327, 332, 335], "reset_when_don": [1, 13, 14, 16, 18, 19, 20, 21], "These": [1, 2, 7, 32, 40, 74, 78, 92, 98, 129, 149, 321, 322, 326, 328, 332, 333, 335, 338], "tool": [1, 2, 3, 5, 329, 333, 335, 338], "backend": [1, 3, 7, 11, 18, 19, 21, 22, 92, 102, 104, 323, 326, 328, 329, 333], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 319], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 319], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "torch": [1, 2, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 60, 64, 66, 68, 71, 74, 75, 78, 84, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 105, 108, 111, 112, 113, 114, 115, 116, 117, 123, 125, 127, 129, 131, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 149, 151, 157, 160, 161, 162, 163, 164, 165, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 204, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 233, 235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 292, 299, 300, 310, 313, 321, 322, 323, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "multiprocess": [1, 2, 3, 18, 19, 20, 75, 76, 151, 327, 328, 333, 338], "synchron": [1, 13, 19, 21, 89, 315, 316, 327, 328], "mode": [1, 6, 13, 14, 16, 18, 19, 20, 21, 32, 74, 78, 89, 92, 98, 112, 115, 140, 145, 151, 154, 158, 159, 171, 178, 179, 182, 196, 204, 205, 206, 222, 226, 250, 297, 326, 327, 329, 332, 337, 338], "find": [1, 4, 6, 7, 18, 19, 20, 35, 37, 43, 180, 214, 221, 295, 299, 326, 327, 332], "dedic": [1, 2, 3, 18, 19, 20, 21, 211, 212, 213, 321, 326, 331, 332], "folder": [1, 2, 327], "sub": [1, 2, 3, 13, 14, 18, 19, 20, 21, 74, 78, 92, 98, 130, 227, 228, 292, 301, 321, 326, 327, 328, 331, 337, 338], "all": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 44, 46, 47, 49, 74, 75, 78, 88, 92, 93, 94, 98, 100, 101, 107, 110, 111, 112, 113, 115, 118, 123, 124, 125, 129, 136, 141, 142, 144, 145, 147, 149, 151, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 189, 190, 193, 194, 195, 197, 200, 201, 203, 208, 214, 215, 217, 218, 219, 221, 224, 225, 226, 228, 229, 232, 245, 250, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 296, 301, 304, 315, 316, 317, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335, 337, 338], "variou": [1, 3, 13, 14, 16, 17, 178, 182, 235, 236, 237, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 258, 263, 315, 316, 326, 327, 328, 332, 338], "machin": [1, 7, 18, 19, 20, 32, 54, 82, 332], "One": [1, 2, 4, 8, 31, 33, 45, 107, 133, 147, 196, 214, 225, 229, 256, 260, 288, 326, 327, 335, 338], "wonder": 1, "why": [1, 3, 333, 338], "parallelenv": [1, 2, 3, 13, 14, 16, 17, 20, 74, 78, 89, 93, 94, 98, 314, 319, 326, 327, 328, 331, 337, 338], "instead": [1, 4, 7, 8, 11, 27, 32, 74, 78, 92, 98, 119, 141, 145, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 189, 190, 193, 194, 195, 197, 200, 201, 203, 208, 214, 215, 217, 218, 219, 221, 224, 229, 232, 235, 237, 239, 242, 243, 248, 249, 252, 253, 254, 255, 263, 265, 269, 273, 317, 321, 333, 335, 338], "In": [1, 3, 4, 5, 7, 8, 10, 11, 17, 21, 22, 32, 52, 53, 55, 74, 78, 92, 93, 94, 98, 111, 112, 113, 115, 129, 133, 137, 140, 141, 143, 144, 145, 147, 149, 150, 176, 179, 180, 184, 189, 201, 205, 206, 225, 228, 234, 235, 236, 238, 239, 241, 242, 248, 250, 252, 253, 254, 255, 257, 303, 315, 316, 317, 321, 322, 326, 327, 328, 329, 331, 332, 333, 334, 335, 338], "lower": [1, 2, 3, 17, 21, 25, 110, 151, 200, 201, 229, 328, 333], "io": [1, 89, 180, 181], "footprint": [1, 2, 335], "need": [1, 2, 3, 4, 7, 8, 10, 11, 18, 19, 20, 21, 32, 34, 36, 65, 74, 78, 82, 87, 92, 93, 94, 98, 107, 110, 119, 129, 131, 142, 145, 149, 151, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 189, 190, 191, 193, 194, 195, 197, 200, 201, 203, 208, 214, 215, 217, 218, 219, 221, 223, 224, 225, 229, 232, 234, 242, 253, 254, 255, 257, 264, 269, 284, 301, 317, 321, 322, 326, 327, 328, 329, 332, 333, 335, 337, 338], "commun": [1, 2, 3, 320, 328, 338], "yet": [1, 334], "spec": [1, 2, 3, 15, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 48, 49, 50, 52, 74, 76, 78, 88, 92, 98, 100, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 125, 127, 129, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 153, 157, 161, 173, 199, 201, 210, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 235, 236, 238, 239, 241, 242, 248, 252, 253, 254, 255, 257, 263, 310, 321, 326, 327, 328, 329, 331, 332, 337], "plai": [1, 3, 93, 94, 107, 327, 328, 335, 338], "role": [1, 3, 327, 338], "opposit": 1, "direct": [1, 32, 74, 78, 92, 98, 176, 180, 250, 327], "sinc": [1, 2, 3, 4, 5, 7, 32, 35, 38, 41, 42, 74, 78, 92, 93, 94, 98, 160, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 189, 190, 193, 194, 195, 197, 200, 201, 203, 208, 214, 215, 216, 217, 218, 219, 221, 223, 224, 229, 232, 326, 327, 328, 329, 333, 334, 335, 337, 338], "faster": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 55, 89, 265, 266, 267, 268, 329, 332], "share": [1, 3, 6, 8, 34, 36, 39, 57, 58, 59, 65, 68, 75, 92, 98, 151, 178, 182, 189, 190, 211, 212, 213, 235, 237, 238, 242, 248, 249, 252, 253, 254, 255, 257, 317, 319, 321, 328, 329, 331, 332, 337, 338], "among": [1, 3, 93, 94, 332], "achiev": [1, 3, 4, 32, 74, 78, 82, 92, 98, 140, 161, 298, 323, 326, 327, 328, 329, 332, 333, 338], "via": [1, 4, 7, 8, 35, 38, 41, 42, 52, 53, 54, 55, 92, 129, 144, 149, 240, 250, 322, 323, 326, 327, 328, 329, 335, 338], "prohibit": [1, 3], "slow": [1, 3, 4, 34, 36, 39], "compar": [1, 3, 297, 322, 326, 328, 332, 335, 338], "gpu": [1, 7, 8, 32, 57, 58, 68, 74, 78, 82, 92, 98, 326, 328, 329, 332, 338], "nativ": [1, 7, 9, 53, 74, 78, 92, 98, 107, 329, 335], "driver": [1, 7], "practic": [1, 3, 4, 5, 8, 179, 205, 206, 234, 320, 326, 327, 328, 329, 332, 334, 338], "mean": [1, 2, 3, 4, 7, 13, 14, 16, 18, 19, 20, 21, 34, 36, 39, 41, 60, 78, 125, 151, 162, 171, 174, 176, 178, 180, 182, 183, 186, 204, 214, 222, 226, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 321, 322, 326, 327, 328, 332, 333, 335, 337, 338], "keyword": [1, 3, 13, 14, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 53, 55, 56, 74, 78, 92, 98, 110, 111, 129, 137, 141, 144, 145, 147, 149, 178, 182, 187, 188, 210, 214, 215, 216, 218, 219, 221, 222, 223, 225, 226, 229, 235, 236, 237, 238, 239, 240, 241, 242, 247, 248, 249, 251, 252, 253, 254, 255, 257, 259, 263, 265, 266, 267, 268, 269, 273, 314, 326, 327, 328, 332, 335, 338], "build": [1, 3, 7, 23, 26, 32, 35, 38, 41, 42, 52, 53, 54, 55, 74, 78, 92, 95, 98, 133, 151, 162, 178, 182, 186, 220, 222, 226, 301, 308, 309, 311, 312, 321, 323, 328, 329, 332, 333, 334, 337, 338], "given": [1, 2, 3, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 40, 41, 42, 44, 46, 47, 48, 49, 52, 53, 54, 55, 74, 78, 88, 92, 98, 111, 114, 125, 129, 141, 144, 145, 147, 149, 160, 162, 173, 174, 176, 180, 186, 199, 203, 210, 216, 217, 218, 221, 224, 225, 226, 227, 228, 230, 234, 238, 239, 241, 264, 265, 266, 267, 268, 269, 271, 293, 297, 313, 321, 323, 326, 327, 328, 332, 333, 338], "mani": [1, 3, 4, 38, 74, 235, 237, 242, 249, 252, 253, 257, 321, 326, 327, 328, 332, 333, 335, 338], "eg": [1, 2, 3, 11, 34, 36, 39, 57, 58, 59, 65, 68, 74, 78, 82, 92, 98, 114, 139, 145, 189, 215], "gymnasium": [1, 3, 5, 11, 74, 78, 85, 86, 92, 98, 102, 104, 117, 137, 139, 150, 327, 328, 333, 337], "other": [1, 2, 3, 4, 7, 8, 21, 22, 32, 35, 38, 41, 42, 45, 52, 53, 55, 57, 58, 59, 64, 65, 68, 74, 78, 88, 92, 98, 110, 113, 114, 137, 143, 147, 151, 176, 178, 182, 192, 193, 215, 217, 218, 224, 226, 235, 236, 237, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 263, 265, 298, 310, 315, 316, 321, 323, 326, 327, 328, 329, 332, 333, 334, 335, 337, 338], "warn": [1, 3, 214, 218, 219, 221, 327], "quickli": [1, 3, 327, 332, 338], "becom": [1, 3, 4, 21, 176, 180, 332, 338], "quit": [1, 3, 321, 326, 327, 328, 332, 338], "annoi": [1, 3], "By": [1, 2, 3, 33, 74, 78, 92, 93, 94, 98, 100, 208, 226, 250, 297, 317, 326, 334, 335, 338], "filter": [1, 3, 4, 45, 235, 236, 238, 242, 248, 252, 253, 255], "out": [1, 3, 4, 5, 9, 21, 32, 34, 36, 39, 45, 52, 74, 78, 92, 93, 94, 98, 141, 153, 176, 177, 180, 187, 188, 191, 192, 210, 215, 216, 217, 221, 222, 223, 224, 225, 226, 261, 262, 323, 326, 327, 328, 329, 332, 333, 335, 337, 338], "If": [1, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 64, 66, 68, 74, 75, 78, 82, 88, 92, 93, 94, 98, 100, 102, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 123, 124, 125, 129, 130, 133, 136, 137, 140, 141, 142, 144, 145, 147, 149, 151, 160, 161, 163, 164, 176, 177, 178, 180, 181, 182, 183, 184, 187, 188, 189, 190, 208, 210, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 248, 249, 250, 252, 253, 254, 255, 257, 263, 264, 265, 266, 267, 268, 269, 279, 280, 281, 282, 288, 296, 298, 301, 303, 305, 310, 313, 317, 320, 326, 327, 328, 329, 331, 332, 333, 335, 337, 338], "still": [1, 3, 9, 214, 249, 250, 326, 327, 329, 331, 333, 335, 338], "wish": [1, 3, 104, 335], "see": [1, 3, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 54, 55, 56, 74, 78, 81, 89, 92, 93, 94, 98, 100, 111, 129, 141, 143, 144, 145, 147, 149, 152, 163, 164, 176, 179, 180, 184, 190, 191, 198, 206, 207, 211, 213, 225, 226, 298, 326, 327, 328, 329, 332, 333, 335, 338], "displai": [1, 3, 7, 301, 323, 326, 327, 332, 333], "filter_warnings_subprocess": [1, 3], "fals": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 64, 68, 71, 72, 74, 75, 78, 84, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 105, 107, 108, 111, 112, 115, 116, 117, 119, 122, 123, 124, 125, 127, 129, 130, 131, 133, 135, 137, 139, 141, 143, 144, 145, 146, 147, 149, 151, 153, 160, 161, 162, 163, 164, 166, 173, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 190, 198, 199, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 235, 236, 237, 238, 239, 241, 242, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 257, 260, 263, 265, 266, 267, 268, 274, 275, 276, 277, 279, 280, 281, 282, 294, 295, 297, 298, 299, 301, 310, 317, 321, 323, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "central": [2, 189, 326, 327, 332, 335], "part": [2, 4, 8, 32, 40, 53, 55, 74, 78, 92, 98, 125, 133, 136, 178, 182, 230, 292, 317, 326, 328, 329, 333, 338], "algorithm": [2, 3, 8, 9, 13, 14, 88, 120, 235, 252, 253, 254, 255, 292, 306, 319, 322, 323, 326, 327, 328, 329, 332, 334, 335, 337], "implement": [2, 3, 9, 11, 16, 32, 65, 74, 78, 89, 92, 98, 111, 112, 113, 117, 123, 131, 137, 139, 144, 151, 163, 176, 177, 178, 179, 180, 181, 182, 204, 205, 206, 235, 236, 240, 241, 248, 250, 251, 252, 255, 310, 321, 323, 326, 327, 328, 329, 333, 337], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 26, 32, 34, 36, 39, 40, 42, 52, 64, 74, 75, 78, 82, 92, 98, 107, 123, 129, 131, 147, 150, 151, 162, 182, 183, 189, 190, 235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 263, 320, 321, 322, 323, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "give": [2, 3, 7, 41, 74, 78, 88, 92, 98, 107, 320, 322, 326, 327, 332, 333, 334, 337], "abil": [2, 250, 333, 335], "veri": [2, 3, 327, 333, 335, 337, 338], "influenti": 2, "sampl": [2, 4, 8, 9, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 66, 68, 74, 78, 88, 91, 92, 98, 107, 130, 133, 154, 155, 158, 159, 162, 171, 179, 186, 187, 188, 196, 197, 200, 205, 206, 210, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 235, 236, 237, 238, 239, 241, 249, 251, 252, 257, 292, 298, 301, 304, 321, 326, 327, 328, 329, 332, 334, 337, 338], "latenc": 2, "especi": [2, 3, 7, 8, 108], "larger": [2, 4, 248], "volum": 2, "lazymemmapstorag": [2, 35, 38, 41, 42, 52, 53, 54, 55, 107, 319, 326, 327, 329, 334, 335], "advis": [2, 338], "due": [2, 3, 5, 334, 335, 338], "serialis": [2, 34, 36, 39], "memmaptensor": 2, "well": [2, 3, 8, 17, 21, 32, 35, 37, 38, 41, 42, 65, 74, 78, 92, 98, 180, 200, 201, 250, 269, 326, 327, 329, 334, 335, 337, 338], "specifi": [2, 11, 13, 14, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 74, 78, 92, 93, 94, 98, 100, 112, 113, 115, 136, 138, 140, 146, 162, 180, 225, 226, 250, 256, 321, 326, 328, 329], "file": [2, 6, 7, 8, 34, 36, 39, 52, 53, 55, 283, 323, 325, 327, 335, 336], "locat": [2, 7, 34, 36, 39, 45, 74, 78, 92, 98, 116, 125, 135, 179, 193, 205, 206, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 326, 327, 328, 332, 335], "improv": [2, 4, 120, 235, 322, 332, 335], "failur": [2, 4], "recoveri": 2, "liststorag": [2, 35, 38, 41, 42, 319, 335], "were": [2, 7, 92, 98, 328, 335], "found": [2, 3, 6, 7, 10, 21, 26, 32, 34, 36, 39, 45, 52, 53, 55, 74, 78, 82, 92, 98, 105, 107, 133, 136, 142, 151, 161, 218, 219, 222, 226, 249, 250, 252, 326, 327, 329], "rough": 2, "benchmark": [2, 3, 9], "http": [2, 5, 6, 7, 10, 18, 19, 20, 35, 43, 54, 55, 60, 82, 89, 93, 94, 95, 107, 129, 147, 165, 166, 167, 168, 169, 170, 173, 174, 175, 180, 186, 187, 188, 192, 194, 195, 197, 198, 200, 201, 207, 217, 221, 235, 236, 239, 240, 241, 243, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 265, 270, 278, 310, 334, 337], "github": [2, 5, 6, 7, 10, 18, 19, 20, 53, 93, 94, 95, 147, 337], "com": [2, 5, 6, 7, 10, 18, 19, 20, 55, 82, 93, 94, 95, 334, 337], "tree": [2, 34, 36, 39, 74, 78, 92, 98], "type": [2, 3, 14, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 56, 74, 78, 87, 88, 92, 93, 94, 98, 111, 112, 113, 116, 117, 123, 129, 131, 137, 139, 141, 144, 145, 147, 149, 151, 155, 159, 163, 164, 184, 189, 190, 192, 198, 207, 214, 216, 222, 225, 226, 235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 259, 263, 271, 310, 315, 321, 326, 327, 328, 332, 333, 335, 338], "1x": 2, "lazytensorstorag": [2, 41, 42, 66, 133, 319, 328, 332, 335], "83x": 2, "3": [2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 17, 21, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 74, 78, 81, 87, 89, 91, 92, 93, 94, 96, 97, 98, 105, 107, 111, 114, 116, 117, 123, 125, 127, 129, 131, 133, 136, 137, 139, 140, 141, 143, 144, 145, 147, 149, 157, 162, 163, 164, 166, 167, 170, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 186, 189, 190, 193, 196, 198, 208, 210, 211, 212, 213, 216, 217, 222, 224, 225, 228, 229, 230, 235, 236, 238, 239, 241, 242, 243, 244, 245, 248, 250, 252, 253, 254, 255, 257, 263, 265, 266, 267, 268, 271, 274, 275, 276, 277, 279, 280, 281, 282, 284, 300, 321, 323, 326, 327, 328, 329, 332, 333, 334, 335, 337, 338], "44x": 2, "between": [2, 3, 4, 5, 13, 14, 16, 17, 21, 32, 40, 64, 74, 78, 92, 98, 114, 124, 134, 145, 153, 163, 164, 176, 178, 182, 184, 189, 190, 217, 222, 226, 235, 237, 238, 241, 242, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 260, 265, 297, 301, 322, 326, 327, 329, 332, 333, 338], "long": [2, 3, 13, 14, 16, 17, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 44, 46, 47, 114, 180, 181, 329, 335], "sharabl": 2, "featur": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 33, 45, 53, 74, 78, 87, 92, 93, 94, 96, 97, 98, 107, 119, 123, 127, 141, 142, 146, 151, 163, 164, 174, 175, 176, 177, 178, 180, 181, 182, 184, 191, 192, 226, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 317, 321, 326, 327, 328, 329, 333, 335, 338], "allow": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 29, 32, 33, 74, 78, 92, 98, 131, 160, 184, 235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 258, 260, 263, 321, 323, 326, 328, 329, 332, 333, 335, 338], "popul": [2, 3, 35, 38, 41, 42, 52, 53, 54, 55, 122, 141, 326, 328, 329, 333, 335], "collabor": 2, "rather": [2, 4, 131, 326, 327, 328, 332], "incur": 2, "some": [2, 3, 4, 7, 8, 9, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 44, 45, 46, 47, 52, 53, 55, 57, 58, 66, 68, 74, 78, 92, 93, 94, 98, 100, 129, 145, 147, 153, 166, 178, 182, 203, 226, 227, 228, 292, 304, 321, 323, 326, 327, 328, 329, 332, 333, 335, 337, 338], "transmiss": 2, "overhead": [2, 92, 98], "includ": [2, 3, 4, 7, 9, 21, 32, 57, 58, 59, 65, 68, 74, 78, 88, 92, 98, 140, 145, 151, 250, 255, 304, 321, 323, 326, 327, 328, 329, 332, 333, 335, 338], "ani": [2, 3, 5, 8, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 57, 58, 59, 62, 64, 65, 66, 67, 68, 69, 74, 75, 78, 92, 93, 94, 98, 100, 105, 119, 129, 130, 133, 145, 147, 151, 153, 161, 163, 164, 170, 184, 192, 215, 225, 226, 227, 228, 235, 236, 238, 239, 241, 242, 248, 250, 252, 253, 254, 255, 257, 265, 289, 301, 320, 326, 327, 328, 332, 333, 335, 337, 338], "subclass": [2, 3, 74, 78, 92, 98, 144, 150, 153, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 189, 190, 193, 194, 195, 197, 200, 201, 203, 208, 214, 215, 217, 218, 219, 221, 224, 225, 226, 227, 229, 232, 250, 252, 327, 329, 333, 335], "tensorstorag": [2, 319], "instanti": [2, 3, 21, 34, 36, 39, 82, 144, 190, 326, 327, 332, 333, 335, 338], "content": [2, 8, 13, 14, 16, 26, 28, 34, 35, 36, 38, 39, 41, 42, 64, 89, 163, 164, 184, 189, 190, 222, 250, 328, 333, 337], "map": [2, 3, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 74, 78, 87, 92, 93, 94, 96, 97, 98, 100, 101, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 125, 127, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 157, 173, 193, 210, 211, 212, 213, 216, 222, 223, 225, 226, 228, 229, 230, 231, 255, 263, 297, 319, 321, 322, 326, 327, 328, 329, 334], "tensor": [2, 3, 8, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 60, 62, 66, 67, 68, 69, 71, 74, 75, 78, 84, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 105, 107, 108, 111, 112, 114, 115, 116, 117, 119, 122, 125, 127, 129, 130, 131, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 235, 236, 238, 239, 241, 242, 245, 246, 248, 250, 252, 253, 254, 255, 257, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 310, 321, 323, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "writer": [2, 38, 42, 52, 53, 54, 55, 62, 66, 67, 319, 328], "tensordictroundrobinwrit": [2, 319], "current": [2, 3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 74, 78, 80, 89, 92, 98, 107, 130, 140, 141, 142, 144, 145, 154, 155, 160, 174, 183, 201, 221, 243, 255, 287, 323, 326, 327, 328, 329, 332, 333, 337, 338], "goe": [2, 4, 93, 94, 326, 328, 332, 338], "sampler": [2, 35, 38, 41, 42, 52, 53, 54, 55, 57, 58, 59, 60, 61, 64, 65, 66, 68, 130, 239, 243, 263, 319, 326, 328, 332, 335], "prioritizedsampl": [2, 35, 38, 41, 42, 52, 53, 54, 55, 239, 243, 263, 319, 326, 335], "extend": [2, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 62, 66, 67, 69, 133, 298, 323, 326, 327, 328, 329, 332, 334, 335, 337], "access": [2, 3, 7, 8, 32, 35, 54, 74, 78, 92, 98, 129, 147, 317, 320, 326, 332, 333, 335], "show": [2, 32, 74, 78, 92, 98, 190, 321, 326, 328, 329, 332, 333, 335, 337], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 17, 21, 22, 35, 37, 38, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 60, 66, 68, 74, 75, 78, 86, 88, 92, 93, 94, 96, 97, 98, 101, 102, 104, 105, 107, 110, 116, 117, 122, 123, 125, 127, 129, 131, 133, 136, 137, 139, 140, 141, 142, 144, 149, 151, 157, 160, 161, 162, 173, 176, 177, 178, 180, 181, 182, 184, 186, 189, 190, 193, 198, 199, 207, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 228, 229, 230, 235, 236, 237, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 263, 265, 266, 267, 268, 294, 297, 310, 313, 321, 322, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "tensordictreplaybuff": [2, 35, 38, 41, 52, 53, 54, 55, 66, 107, 298, 313, 319, 326, 327, 329, 335], "mp": [2, 18, 19, 20, 75, 151], "def": [2, 3, 11, 22, 32, 74, 75, 78, 88, 92, 98, 104, 105, 112, 115, 162, 173, 176, 177, 180, 181, 186, 222, 230, 236, 238, 242, 248, 250, 253, 255, 257, 323, 326, 327, 331, 332, 333, 337, 338], "rb": [2, 35, 38, 41, 42, 52, 53, 54, 55, 66, 107, 133, 327, 329, 332, 334, 335, 337], "updat": [2, 3, 4, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 39, 40, 41, 60, 74, 78, 88, 92, 93, 94, 98, 105, 112, 114, 115, 139, 140, 145, 148, 151, 161, 162, 176, 178, 182, 186, 214, 218, 219, 221, 222, 223, 224, 225, 226, 235, 236, 238, 239, 241, 242, 243, 244, 247, 248, 250, 252, 253, 254, 255, 256, 257, 263, 265, 266, 267, 268, 269, 297, 301, 303, 306, 307, 312, 313, 323, 327, 328, 329, 332, 333, 335, 337, 338], "td": [2, 3, 15, 26, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 66, 70, 71, 72, 73, 77, 79, 83, 84, 85, 86, 105, 108, 112, 113, 114, 115, 122, 123, 125, 133, 136, 141, 143, 145, 151, 160, 162, 173, 178, 182, 185, 186, 198, 199, 207, 210, 211, 212, 213, 215, 216, 218, 219, 221, 222, 223, 225, 228, 230, 263, 266, 267, 268, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 292, 300, 310, 321, 322, 326, 329, 332, 333, 337, 338], "10": [2, 7, 22, 26, 35, 38, 40, 41, 42, 43, 45, 57, 58, 66, 68, 75, 88, 93, 94, 96, 97, 99, 100, 105, 107, 140, 142, 143, 162, 165, 170, 176, 177, 180, 181, 183, 186, 197, 208, 218, 219, 221, 222, 229, 236, 239, 241, 242, 252, 253, 254, 257, 263, 265, 266, 267, 268, 271, 292, 323, 326, 327, 328, 329, 332, 333, 334, 335, 337, 338], "__name__": [2, 22, 75, 327], "__main__": [2, 22, 75], "21": [2, 55, 93, 94, 325, 327, 328, 329, 331, 333, 334, 335, 336], "zero": [2, 3, 4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 42, 44, 45, 46, 47, 52, 58, 68, 74, 78, 92, 98, 108, 112, 114, 115, 125, 133, 157, 160, 162, 176, 177, 178, 180, 181, 182, 183, 187, 188, 190, 198, 207, 218, 219, 221, 224, 232, 235, 236, 238, 239, 241, 242, 248, 252, 253, 254, 255, 257, 263, 265, 266, 267, 268, 271, 329, 337], "proc": 2, "target": [2, 4, 8, 21, 32, 74, 75, 78, 92, 98, 140, 144, 225, 226, 235, 236, 237, 238, 239, 241, 242, 243, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 263, 264, 265, 266, 267, 268, 269, 304, 312, 313, 322, 323, 329, 333], "arg": [2, 12, 14, 26, 28, 32, 57, 58, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 105, 111, 129, 138, 141, 144, 145, 146, 148, 149, 162, 163, 164, 172, 178, 182, 184, 185, 186, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 257, 263, 265, 266, 267, 268, 269, 291, 294, 298, 301, 317, 327], "start": [2, 3, 4, 5, 13, 21, 45, 75, 87, 160, 296, 326, 327, 332, 333, 335, 338], "join": [2, 75, 319, 327, 328], "now": [2, 3, 7, 35, 107, 190, 326, 327, 328, 329, 331, 332, 334, 335, 338], "length": [2, 17, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 40, 43, 44, 45, 46, 47, 56, 74, 78, 92, 98, 130, 151, 162, 163, 164, 166, 168, 170, 172, 176, 180, 184, 186, 189, 190, 210, 225, 230, 292, 298, 326, 328, 329, 333, 335, 338], "20": [2, 45, 55, 66, 74, 78, 82, 92, 98, 140, 176, 177, 180, 181, 215, 292, 327, 328, 329, 332, 333, 337, 338], "assert": [2, 3, 6, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 78, 81, 104, 107, 110, 112, 115, 123, 131, 151, 153, 157, 190, 193, 208, 265, 266, 267, 268, 292, 300, 331, 335, 338], "len": [2, 35, 38, 41, 42, 52, 53, 54, 55, 57, 58, 68, 127, 163, 164, 184, 190, 326, 333, 334, 335, 337], "_data": [2, 333], "0": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 21, 22, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 49, 52, 53, 54, 55, 56, 57, 58, 60, 68, 71, 74, 78, 81, 84, 88, 92, 95, 96, 97, 98, 105, 106, 107, 108, 110, 111, 113, 114, 123, 124, 125, 129, 133, 136, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 153, 162, 163, 164, 166, 167, 169, 170, 174, 176, 178, 179, 180, 181, 182, 184, 186, 188, 189, 190, 191, 192, 193, 196, 200, 201, 204, 205, 206, 208, 210, 214, 215, 217, 218, 219, 221, 224, 225, 228, 229, 232, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 263, 264, 265, 266, 267, 268, 271, 272, 273, 292, 299, 313, 317, 322, 323, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338], "too": [2, 7, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 44, 46, 47, 92, 98, 124, 141, 179, 205, 206, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 263, 265, 266, 267, 268, 327, 328, 333, 335, 338], "difficult": [2, 4], "element": [2, 13, 14, 16, 18, 19, 20, 21, 30, 31, 33, 35, 38, 41, 42, 52, 53, 54, 55, 57, 58, 59, 60, 66, 68, 91, 107, 130, 140, 163, 164, 176, 177, 180, 210, 214, 216, 225, 226, 230, 292, 326, 328, 335, 338], "pai": [2, 8, 326, 329], "attent": [2, 8, 326, 329, 338], "alwai": [2, 3, 20, 26, 28, 32, 56, 74, 78, 92, 98, 123, 124, 243, 250, 321, 322, 327, 328, 329, 332, 333, 335], "lead": [2, 3, 4, 8, 10, 11, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 64, 141, 179, 198, 205, 206, 326, 329, 332, 333, 335, 337], "dimens": [2, 3, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 53, 55, 57, 58, 66, 68, 74, 78, 92, 98, 100, 107, 108, 119, 125, 127, 130, 136, 138, 143, 146, 151, 163, 164, 165, 170, 178, 180, 182, 184, 187, 188, 189, 191, 192, 197, 198, 202, 203, 204, 205, 208, 216, 235, 236, 237, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 317, 321, 326, 327, 328, 329, 332, 333, 335], "word": [2, 3, 40, 52, 53, 55, 250, 326, 333, 338], "creat": [2, 3, 4, 5, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 45, 56, 74, 75, 78, 82, 89, 92, 93, 98, 107, 129, 144, 145, 147, 150, 151, 157, 160, 163, 164, 166, 167, 168, 169, 170, 175, 178, 182, 184, 185, 189, 190, 215, 226, 239, 243, 253, 255, 263, 284, 298, 305, 306, 307, 313, 315, 316, 321, 326, 327, 328, 329, 332, 333, 334, 335, 337, 338], "1m": [2, 304, 326, 328, 329, 334], "multidimension": [2, 41, 60, 335], "doe": [2, 3, 18, 34, 35, 36, 39, 41, 45, 52, 60, 65, 170, 176, 177, 178, 180, 181, 182, 191, 208, 215, 227, 228, 235, 237, 243, 249, 252, 264, 301, 321, 323, 326, 327, 328, 329, 333, 335, 338], "desir": [2, 3, 32, 74, 78, 92, 98, 111, 125, 127, 129, 130, 141, 144, 145, 147, 149, 158, 159, 163, 164, 184, 190, 210, 216, 217, 222, 223, 224, 225, 226, 321, 326, 332, 333], "diversifi": 2, "make": [2, 3, 4, 7, 32, 34, 36, 39, 40, 52, 53, 54, 55, 65, 74, 78, 79, 82, 84, 86, 89, 92, 98, 117, 125, 129, 130, 133, 139, 147, 153, 176, 177, 180, 181, 189, 190, 191, 216, 226, 252, 265, 266, 267, 268, 298, 307, 317, 321, 322, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "do": [2, 3, 4, 7, 78, 100, 130, 150, 151, 160, 190, 191, 212, 265, 323, 326, 327, 328, 329, 331, 332, 333, 335, 337, 338], "custom": [2, 3, 5, 32, 74, 78, 92, 98, 147, 189, 190, 229, 243, 252, 258, 317, 321, 326, 327, 328, 329, 332], "name": [2, 3, 6, 7, 11, 16, 32, 34, 36, 39, 45, 52, 54, 56, 72, 74, 78, 87, 89, 92, 93, 94, 95, 98, 100, 101, 114, 117, 131, 136, 137, 139, 145, 147, 150, 161, 178, 182, 216, 223, 235, 236, 237, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 263, 269, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 310, 323, 326, 327, 328, 329, 332, 333, 338], "randomcroptensordict": [2, 326], "here": [2, 3, 4, 7, 8, 9, 10, 55, 74, 78, 82, 92, 93, 94, 98, 107, 321, 322, 326, 327, 328, 329, 332, 333, 335, 337, 338], "how": [2, 3, 18, 19, 20, 32, 35, 41, 60, 74, 78, 92, 93, 94, 98, 100, 235, 237, 247, 249, 252, 301, 320, 321, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "requir": [2, 3, 4, 7, 8, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 52, 53, 74, 78, 82, 89, 92, 95, 98, 111, 129, 141, 144, 145, 147, 149, 184, 208, 225, 227, 228, 235, 236, 237, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 263, 321, 323, 326, 327, 328, 329, 332, 333, 335, 338], "our": [2, 3, 7, 8, 18, 107, 321, 326, 327, 328, 329, 331, 332, 334, 335, 337], "enjoi": [2, 3], "separ": [2, 4, 8, 13, 14, 17, 18, 20, 21, 23, 129, 149, 236, 238, 241, 242, 253, 255, 257, 326, 327, 332, 335, 338], "save": [2, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 74, 78, 92, 98, 150, 283, 301, 323, 332], "disk": [2, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 301, 323, 326, 327, 329, 335], "dump": [2, 35, 38, 41, 42, 52, 53, 54, 55, 283], "load": [2, 6, 7, 13, 14, 16, 17, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 73, 74, 78, 92, 98, 104, 151, 317, 323, 326, 335], "json": 2, "metadata": [2, 52, 328, 332, 338], "cannot": [2, 3, 4, 7, 22, 26, 27, 28, 31, 33, 74, 78, 82, 92, 98, 112, 115, 130, 136, 223, 327, 328, 329, 332, 333], "anticip": [2, 112, 115], "compli": [2, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "structur": [2, 3, 7, 34, 35, 36, 38, 39, 40, 41, 42, 45, 66, 74, 78, 92, 98, 112, 115, 161, 189, 221, 265, 266, 267, 268, 269, 322, 326, 328, 329, 332, 333, 334, 335], "guarante": [2, 32, 34, 36, 39, 57, 58, 59, 65, 68, 74, 78, 92, 98, 151, 337], "back": [2, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 44, 46, 47, 52, 150, 210, 216, 217, 222, 223, 224, 225, 226, 328, 332, 333, 335], "exact": [2, 3, 92, 180], "look": [2, 3, 5, 7, 8, 32, 74, 78, 87, 92, 93, 94, 98, 129, 130, 147, 222, 226, 227, 228, 322, 328, 329, 332, 333, 334, 335, 337, 338], "statu": [2, 3], "its": [2, 3, 4, 5, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 44, 46, 47, 49, 74, 78, 88, 92, 93, 94, 98, 101, 107, 116, 123, 139, 140, 144, 145, 150, 151, 163, 164, 187, 188, 189, 190, 214, 216, 222, 223, 226, 229, 235, 236, 237, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 257, 263, 301, 313, 323, 326, 327, 328, 329, 332, 333, 334, 335, 338], "prioriti": [2, 4, 35, 41, 42, 57, 58, 59, 60, 65, 68, 238, 239, 241, 242, 243, 248, 253, 255, 257, 263, 323, 326, 327, 335], "max": [2, 23, 33, 36, 41, 45, 56, 60, 114, 142, 204, 205, 206, 215, 221, 236, 237, 242, 251, 253, 255, 326, 328, 329, 332], "heap": 2, "under": [2, 3, 4, 21, 32, 40, 52, 53, 55, 74, 78, 92, 98, 210, 216, 217, 222, 223, 224, 225, 226, 250, 265, 266, 267, 268, 269, 322, 326, 327, 333, 338], "hood": [2, 21, 333], "just": [2, 3, 4, 11, 74, 78, 87, 92, 93, 94, 98, 110, 161, 190, 292, 321, 323, 326, 327, 328, 329, 332, 333, 335, 337, 338], "public": [2, 54, 129, 149], "method": [2, 3, 4, 11, 13, 14, 15, 16, 17, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 68, 74, 78, 92, 98, 107, 111, 112, 113, 116, 117, 119, 123, 125, 129, 131, 132, 133, 137, 139, 141, 144, 145, 147, 149, 162, 183, 210, 211, 212, 213, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 263, 269, 283, 314, 322, 323, 324, 327, 328, 329, 333, 335, 338], "don": [2, 3, 4, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 107, 327, 328, 335, 337, 338], "t": [2, 3, 4, 6, 7, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 44, 46, 47, 60, 64, 66, 74, 75, 78, 89, 92, 98, 107, 112, 115, 116, 129, 133, 140, 142, 149, 151, 160, 176, 180, 216, 221, 225, 256, 265, 266, 267, 268, 269, 271, 301, 303, 317, 320, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "assum": [2, 3, 6, 26, 33, 40, 41, 42, 52, 53, 55, 78, 92, 98, 109, 119, 129, 130, 136, 141, 147, 149, 157, 178, 182, 183, 208, 229, 239, 243, 255, 263, 274, 275, 276, 277, 279, 280, 281, 282, 284, 326, 328, 329, 331, 333], "serializ": 2, "altern": [2, 4, 27, 89, 170, 187, 188, 189, 234, 326, 328, 332], "state_dict": [2, 13, 14, 16, 17, 21, 32, 34, 36, 39, 74, 78, 92, 98, 145, 151, 255, 317, 323, 326, 327, 338], "load_state_dict": [2, 13, 14, 16, 17, 21, 32, 34, 36, 39, 74, 78, 92, 98, 145, 151, 255, 323, 326], "drawback": 2, "struggl": 2, "big": [2, 328, 335, 338], "wrapper": [2, 3, 11, 15, 17, 34, 36, 39, 40, 41, 42, 70, 71, 72, 73, 77, 79, 80, 82, 83, 84, 85, 86, 88, 90, 93, 94, 95, 96, 97, 99, 100, 102, 150, 193, 208, 214, 215, 219, 221, 226, 231, 265, 289, 290, 291, 317, 319, 328, 329, 332, 334, 338], "around": [2, 5, 7, 15, 17, 41, 42, 88, 226, 265, 326, 327, 332, 338], "offlin": [2, 8, 13, 14, 16, 17, 18, 19, 20, 21, 107, 153, 236, 241, 248, 323, 334, 335, 337], "present": [2, 3, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 60, 64, 74, 78, 92, 98, 117, 133, 137, 160, 161, 165, 166, 167, 168, 169, 175, 180, 192, 197, 221, 225, 226, 227, 228, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 257, 263, 265, 266, 267, 268, 269, 317, 323, 326, 331, 332, 335, 337], "replaybuff": [2, 41, 42, 69, 107, 130, 133, 239, 243, 263, 311, 313, 319, 328, 332, 334, 335, 337], "promptli": 2, "virtual": [2, 3], "instal": [2, 3, 5, 10, 18, 19, 20, 52, 54, 93, 94, 96, 97, 301, 320, 328, 329, 332, 338], "respons": [2, 3, 8, 301, 338], "d4rl": [2, 52, 53, 55], "clone": [2, 4, 8, 26, 28, 123, 211, 212, 213, 225, 248, 310, 319, 326, 333, 337], "repositori": [2, 7, 53, 54], "latest": [2, 3, 10, 89, 93, 94, 298, 328, 332, 333, 337], "wheel": [2, 328], "publish": 2, "pypi": [2, 337], "openml": [2, 54, 91], "scikit": [2, 54], "panda": [2, 54], "parent": [2, 3, 21, 26, 28, 44, 74, 107, 108, 111, 113, 116, 119, 120, 125, 129, 136, 139, 140, 141, 142, 144, 146, 147, 211, 250, 252, 269, 326, 333, 337, 338], "basic": [2, 88, 321, 328, 338], "properti": [2, 3, 32, 34, 36, 39, 74, 78, 88, 92, 98, 144, 145, 171, 179, 191, 196, 204, 205, 206, 250, 255, 333, 335], "observ": [2, 3, 8, 13, 14, 16, 17, 21, 32, 44, 52, 53, 55, 71, 72, 73, 74, 75, 78, 84, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 107, 108, 109, 110, 111, 112, 113, 116, 117, 119, 121, 122, 123, 125, 126, 127, 131, 132, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 150, 151, 160, 165, 166, 167, 168, 169, 170, 173, 178, 182, 183, 189, 194, 195, 197, 199, 200, 210, 211, 212, 213, 215, 216, 218, 219, 221, 222, 223, 230, 231, 235, 236, 237, 238, 239, 241, 242, 245, 248, 249, 252, 253, 254, 255, 257, 263, 265, 266, 267, 268, 269, 284, 310, 313, 321, 323, 327, 328, 329, 331, 332, 333, 335, 337, 338], "shape": [2, 3, 13, 14, 16, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 53, 55, 56, 57, 58, 68, 74, 78, 87, 91, 92, 93, 94, 96, 97, 98, 99, 100, 108, 112, 115, 116, 117, 123, 125, 127, 131, 133, 137, 139, 141, 143, 151, 152, 153, 157, 160, 162, 165, 170, 171, 172, 176, 177, 178, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 193, 196, 197, 198, 199, 204, 207, 210, 211, 212, 213, 215, 216, 217, 222, 223, 224, 225, 228, 229, 230, 235, 236, 238, 239, 241, 242, 248, 252, 253, 254, 255, 257, 260, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 292, 298, 301, 313, 321, 326, 327, 328, 329, 331, 332, 334, 335, 337, 338], "dtype": [2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 55, 56, 57, 58, 60, 68, 71, 74, 78, 84, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 105, 111, 112, 113, 114, 115, 116, 117, 123, 125, 127, 129, 131, 133, 137, 139, 141, 143, 144, 145, 147, 149, 153, 157, 160, 161, 162, 173, 176, 177, 178, 180, 181, 182, 186, 191, 192, 198, 199, 207, 210, 211, 212, 213, 215, 216, 217, 221, 222, 223, 224, 225, 228, 230, 235, 236, 238, 239, 241, 242, 248, 252, 253, 254, 255, 257, 263, 265, 266, 267, 268, 271, 310, 321, 328, 329, 331, 332, 333, 334, 335, 337, 338], "match": [2, 3, 6, 8, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 74, 75, 78, 92, 98, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 121, 122, 123, 125, 127, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 163, 164, 171, 178, 182, 184, 189, 190, 204, 210, 215, 216, 222, 223, 225, 226, 229, 230, 236, 242, 249, 251, 253, 255, 298, 303, 321, 326, 328, 331, 332, 333, 335, 337, 338], "input": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 46, 47, 74, 78, 88, 91, 92, 93, 94, 95, 98, 100, 105, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 127, 128, 129, 130, 131, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 160, 161, 163, 164, 166, 167, 168, 169, 172, 173, 176, 177, 178, 180, 181, 182, 183, 184, 189, 190, 191, 192, 199, 200, 201, 202, 203, 208, 210, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 235, 236, 237, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 295, 299, 304, 313, 321, 322, 323, 326, 327, 328, 329, 332, 333, 337, 338], "output": [2, 3, 4, 13, 14, 16, 17, 32, 35, 38, 41, 42, 52, 53, 54, 55, 74, 78, 88, 91, 92, 93, 94, 95, 98, 100, 107, 110, 111, 112, 113, 115, 117, 123, 125, 129, 131, 136, 137, 139, 142, 144, 147, 149, 150, 153, 161, 163, 164, 165, 166, 167, 170, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 184, 189, 190, 193, 199, 208, 210, 211, 214, 215, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 263, 265, 266, 267, 268, 269, 284, 292, 321, 322, 326, 327, 328, 329, 331, 332, 333, 334, 337, 338], "send": [2, 3, 8, 337], "receiv": [2, 3, 32, 40, 74, 78, 92, 98, 144, 184, 271, 322, 326, 328, 331, 333], "spawn": [2, 3, 4, 18, 22, 82, 89, 332], "check_env_spec": [2, 3, 319, 328, 332, 333], "saniti": [2, 3, 7, 153, 328], "utmost": 2, "techniqu": [2, 8, 327, 335], "commonli": [2, 338], "emploi": [2, 192], "realm": 2, "languag": [2, 40], "scarc": 2, "address": [2, 335], "subdomain": 2, "within": [2, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 46, 47, 74, 78, 92, 98, 107, 112, 115, 116, 139, 150, 151, 161, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 189, 190, 193, 194, 195, 197, 200, 201, 203, 208, 214, 215, 217, 218, 219, 221, 224, 229, 232, 239, 243, 263, 321, 333, 337], "offer": [2, 3, 7, 321, 327, 333, 338], "facilit": [2, 3, 7, 128, 129, 147, 149, 211, 212, 213, 321, 326, 329, 333], "interact": [2, 4, 5, 7, 8, 13, 14, 16, 18, 19, 20, 21, 222, 226, 326, 328, 332, 333, 338], "extern": [2, 3, 112, 115, 338], "consist": [2, 3, 32, 35, 38, 41, 42, 74, 78, 92, 98, 123, 150, 164, 184, 326, 327, 328, 333, 334, 338], "token": [2, 36, 37, 40, 43, 45, 56], "format": [2, 17, 31, 32, 33, 55, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225, 326, 327, 338], "manner": [2, 78, 129, 147, 321, 326, 327, 328, 331, 333, 335], "handl": [3, 21, 32, 74, 78, 92, 98, 150, 151, 182, 184, 301, 315, 316, 326, 327, 328, 332, 335], "differ": [3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 74, 78, 87, 92, 93, 94, 98, 107, 114, 125, 131, 145, 146, 173, 176, 177, 178, 180, 181, 182, 184, 186, 189, 190, 199, 248, 252, 260, 265, 266, 267, 271, 272, 273, 297, 301, 303, 315, 316, 321, 322, 323, 326, 327, 328, 331, 332, 333, 334, 335, 338], "dm": [3, 326, 338], "base": [3, 4, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 35, 38, 41, 42, 45, 63, 66, 67, 69, 82, 88, 89, 90, 92, 98, 133, 141, 147, 148, 189, 211, 220, 235, 236, 238, 239, 241, 242, 244, 248, 252, 253, 254, 255, 257, 301, 310, 321, 322, 323, 326, 327, 329, 332, 333, 335, 338], "goal": [3, 4, 140, 326, 327, 328, 329, 332, 333], "abl": [3, 87, 93, 94, 326, 328, 329, 331, 332, 333, 335, 337], "experi": [3, 35, 38, 41, 42, 52, 53, 54, 55, 60, 153, 286, 287, 288, 289, 290, 291, 320, 327, 328, 332, 335], "even": [3, 4, 8, 14, 18, 20, 21, 57, 58, 59, 65, 68, 74, 75, 78, 82, 92, 98, 161, 326, 328, 332, 333, 338], "simul": [3, 5, 7, 8, 95, 100, 103, 162, 186, 321, 326, 328, 332], "box": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 16, 17, 21, 22, 74, 75, 78, 92, 93, 94, 96, 97, 98, 107, 110, 116, 122, 123, 125, 127, 131, 133, 136, 141, 144, 150, 151, 310, 313, 326, 327, 328, 329, 331, 332, 334, 335, 337, 338], "hope": 3, "imit": 3, "nn": [3, 13, 14, 16, 17, 21, 32, 40, 74, 78, 88, 92, 98, 111, 114, 116, 123, 129, 141, 144, 145, 147, 149, 162, 163, 164, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 184, 186, 188, 189, 190, 193, 198, 199, 207, 210, 211, 212, 213, 215, 216, 218, 219, 221, 222, 223, 225, 226, 227, 228, 230, 235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 263, 265, 266, 267, 268, 310, 313, 321, 322, 326, 327, 328, 329, 331, 332, 333, 334, 337], "typic": [3, 4, 8, 32, 74, 78, 92, 98, 116, 140, 222, 236, 250, 252, 255, 321, 322, 323, 328, 332, 333], "organis": [3, 55, 327], "arbitrari": [3, 33, 92, 98, 321, 326, 327, 333], "nest": [3, 26, 28, 32, 34, 36, 39, 48, 57, 58, 68, 74, 78, 92, 98, 107, 139, 142, 161, 265, 266, 267, 268, 269, 323, 327, 328, 332, 333, 335, 337], "attribut": [3, 4, 32, 34, 36, 39, 45, 74, 78, 92, 98, 116, 129, 147, 178, 182, 226, 235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 263, 326, 329, 333], "batch_siz": [3, 8, 13, 14, 15, 16, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 58, 61, 66, 68, 71, 74, 76, 78, 81, 84, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 107, 112, 115, 116, 117, 127, 131, 133, 137, 139, 141, 144, 160, 161, 162, 170, 173, 178, 182, 186, 198, 199, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 228, 229, 230, 235, 236, 238, 239, 241, 242, 248, 252, 253, 254, 255, 257, 263, 292, 298, 310, 321, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "togeth": [3, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 40, 74, 78, 87, 92, 93, 94, 98, 107, 130, 176, 178, 180, 182, 207, 211, 212, 213, 231, 321, 327, 328, 329], "expect": [3, 4, 7, 26, 32, 38, 44, 45, 64, 74, 78, 88, 91, 92, 95, 98, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 121, 122, 123, 125, 127, 129, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 153, 176, 177, 178, 180, 181, 182, 189, 190, 217, 221, 225, 228, 235, 236, 237, 238, 239, 241, 242, 248, 249, 250, 252, 253, 254, 255, 257, 263, 305, 320, 321, 322, 323, 326, 328, 329, 332, 333, 335, 338], "live": [3, 12, 13, 14, 16, 17, 19, 20, 32, 35, 38, 41, 42, 52, 53, 54, 55, 74, 78, 88, 92, 98, 116], "actual": [3, 4, 7, 17, 52, 53, 55, 74, 78, 92, 98, 150, 304, 322, 326, 328, 332, 333], "retriev": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 74, 78, 92, 98, 108, 113, 116, 125, 160, 162, 163, 186, 222, 226, 229, 235, 236, 237, 239, 249, 252, 253, 255, 257, 263, 265, 266, 267, 268, 310, 317, 323, 327, 328, 333, 338], "care": [3, 8, 74, 78, 92, 98, 144, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 189, 190, 193, 194, 195, 197, 200, 201, 203, 208, 214, 215, 217, 218, 219, 221, 224, 229, 232, 326, 328, 332, 333, 335], "below": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 56, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 163, 164, 176, 179, 180, 184, 190, 206, 225, 298, 326, 327, 328, 329, 333], "parametr": [3, 192, 226, 236, 248, 255, 326, 328], "hardwar": 3, "observation_spec": [3, 74, 78, 88, 92, 98, 105, 107, 108, 109, 110, 111, 112, 113, 115, 116, 119, 121, 122, 123, 125, 127, 129, 132, 136, 139, 140, 141, 142, 143, 144, 146, 147, 150, 162, 178, 182, 186, 305, 313, 326, 328, 331, 332, 333, 338], "compositespec": [3, 28, 49, 74, 76, 78, 88, 92, 98, 105, 112, 113, 114, 115, 117, 123, 131, 137, 139, 141, 144, 157, 161, 162, 186, 210, 214, 222, 228, 229, 319, 326, 328, 329, 332, 333, 338], "pair": [3, 32, 34, 36, 39, 52, 74, 78, 92, 98, 133, 141, 178, 211, 222, 226, 250, 265, 266, 267, 268, 269, 321, 322, 326, 327, 328, 331, 333, 338], "state_spec": [3, 74, 78, 88, 92, 98, 105, 162, 186, 328, 333, 338], "empti": [3, 26, 28, 35, 38, 41, 42, 52, 53, 54, 55, 74, 78, 91, 92, 98, 129, 142, 145, 147, 149, 288, 326, 333], "action_spec": [3, 13, 14, 15, 16, 18, 19, 20, 71, 74, 78, 84, 88, 92, 93, 94, 98, 105, 107, 112, 115, 123, 133, 162, 173, 186, 199, 201, 210, 216, 222, 223, 236, 239, 241, 253, 255, 257, 313, 321, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "reward_spec": [3, 74, 78, 88, 92, 98, 105, 106, 110, 111, 112, 113, 115, 134, 135, 136, 144, 146, 162, 186, 328, 332, 333, 338], "reward": [3, 13, 14, 16, 32, 34, 39, 40, 44, 45, 53, 55, 56, 66, 71, 74, 78, 84, 88, 91, 92, 96, 97, 98, 99, 100, 105, 106, 110, 111, 112, 113, 115, 116, 117, 123, 127, 131, 133, 134, 135, 136, 137, 139, 140, 144, 145, 146, 148, 149, 151, 157, 160, 162, 178, 186, 215, 231, 235, 236, 238, 239, 241, 242, 245, 248, 250, 252, 253, 254, 255, 257, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 294, 295, 297, 299, 317, 322, 323, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "done_spec": [3, 74, 78, 92, 98, 112, 113, 115, 116, 144, 161, 328, 332, 333, 338], "flag": [3, 8, 35, 38, 41, 42, 52, 53, 54, 55, 100, 221, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 321, 332, 333, 334], "section": [3, 4, 176, 180, 327, 332], "termin": [3, 7, 32, 40, 52, 53, 55, 74, 78, 92, 93, 94, 96, 97, 98, 99, 100, 116, 161, 162, 178, 182, 186, 227, 235, 236, 238, 239, 241, 242, 248, 252, 253, 254, 255, 257, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "input_spec": [3, 74, 78, 88, 92, 98, 111, 112, 113, 114, 125, 127, 131, 136, 137, 139, 140, 141, 144, 145, 146, 148, 333], "full_action_spec": [3, 74, 78, 92, 98, 162, 186, 332], "full_state_spec": [3, 74, 78, 92, 98, 162, 186], "lock": [3, 26, 28, 34, 36, 39, 74, 78, 92, 98, 141, 151, 333], "modifi": [3, 7, 8, 26, 28, 32, 45, 74, 78, 92, 98, 111, 119, 123, 129, 141, 144, 145, 147, 149, 215, 221, 225, 304, 310, 326, 327, 328, 332, 333], "directli": [3, 4, 8, 74, 78, 88, 92, 98, 133, 150, 250, 317, 321, 328, 332, 333, 335], "output_spec": [3, 74, 78, 92, 98, 111, 112, 113, 117, 123, 131, 137, 139, 144, 145, 333], "full_observation_spec": [3, 74, 78, 92, 98, 162, 186], "full_reward_spec": [3, 74, 78, 92, 98, 332], "full_done_spec": [3, 74, 78, 92, 98, 161, 332], "importantli": [3, 222, 226], "4": [3, 7, 24, 26, 27, 28, 33, 34, 35, 36, 38, 39, 40, 41, 42, 52, 53, 54, 55, 72, 73, 74, 77, 78, 83, 85, 86, 87, 88, 92, 96, 97, 98, 105, 107, 116, 133, 139, 140, 151, 162, 163, 164, 165, 166, 167, 170, 173, 174, 175, 176, 177, 180, 181, 183, 184, 186, 189, 190, 193, 194, 195, 196, 197, 198, 199, 207, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 228, 230, 235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 263, 283, 321, 326, 327, 328, 329, 332, 333, 334, 335, 337, 338], "action_s": 3, "help": [3, 4, 32, 74, 78, 92, 98, 116, 320, 322, 326, 327, 328, 329, 332], "prealloc": [3, 333], "With": [3, 87, 140, 323, 326, 327, 332, 335, 338], "necessarili": [3, 338], "0s": [3, 141, 329], "stateless": [3, 144, 250, 326, 333, 338], "step_and_maybe_reset": [3, 74, 78, 92, 98], "partial": [3, 74, 78, 92, 98, 107, 140, 141, 142, 301, 329], "next": [3, 4, 8, 13, 14, 16, 26, 28, 32, 35, 38, 40, 41, 42, 52, 53, 54, 55, 56, 66, 71, 74, 75, 78, 84, 88, 92, 96, 97, 98, 99, 100, 107, 112, 115, 116, 117, 122, 123, 127, 131, 133, 136, 137, 139, 141, 150, 151, 157, 160, 162, 177, 178, 181, 182, 186, 201, 231, 235, 236, 238, 239, 241, 242, 243, 248, 252, 253, 254, 255, 257, 263, 264, 265, 266, 267, 268, 269, 295, 297, 299, 326, 327, 329, 331, 333, 334, 335, 337, 338], "step_mdp": [3, 178, 182, 319, 329, 333, 337, 338], "done_kei": [3, 74, 78, 92, 98, 116, 133, 139, 160, 332], "assign": [3, 4, 13, 14, 32, 34, 36, 39, 74, 78, 92, 98, 145, 238, 239, 241, 255, 328, 332, 335], "_reset": [3, 74, 78, 88, 92, 98, 105, 107, 112, 115, 161, 162, 186], "signal": [3, 17, 52, 53, 55, 78, 107, 116, 139, 142, 161, 322, 326, 328, 332, 335, 338], "stop": [3, 16, 21, 40, 74, 78, 92, 98, 328, 332, 337, 338], "data_": [3, 74, 78, 92, 98], "i": [3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 35, 38, 42, 43, 57, 58, 60, 68, 74, 78, 92, 98, 129, 133, 136, 145, 149, 177, 181, 193, 199, 217, 222, 224, 225, 226, 265, 266, 267, 268, 292, 304, 326, 327, 328, 329, 332, 333, 335, 337, 338], "rang": [3, 4, 8, 11, 27, 35, 38, 40, 41, 42, 52, 53, 54, 55, 57, 58, 66, 74, 75, 78, 92, 98, 133, 143, 151, 177, 181, 249, 257, 322, 323, 326, 328, 329, 332, 333, 335, 337], "n": [3, 6, 7, 24, 27, 32, 33, 40, 74, 78, 92, 98, 107, 114, 119, 146, 176, 177, 180, 186, 221, 226, 235, 242, 250, 264, 298, 321, 323, 327, 328, 329, 332, 335, 338], "append": [3, 8, 35, 38, 41, 42, 52, 53, 54, 55, 74, 75, 78, 92, 98, 110, 133, 141, 150, 177, 178, 181, 182, 216, 223, 326, 327, 328, 329, 332, 333, 334, 335, 337], "set_se": [3, 13, 14, 16, 17, 21, 71, 74, 78, 84, 88, 92, 98, 125, 131, 136, 140, 142, 145, 333, 337, 338], "seed": [3, 13, 14, 16, 17, 21, 55, 72, 74, 78, 88, 92, 93, 94, 98, 99, 100, 105, 112, 115, 145, 153, 301], "determinist": [3, 32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 165, 174, 194, 201, 210, 219, 225, 226, 229, 236, 321, 326, 327, 329, 333, 338], "preced": [3, 183, 329], "without": [3, 7, 9, 32, 40, 52, 74, 78, 92, 98, 100, 105, 112, 115, 143, 176, 177, 180, 181, 212, 213, 235, 236, 238, 239, 241, 242, 248, 252, 253, 254, 255, 257, 264, 265, 266, 267, 268, 269, 313, 320, 321, 326, 327, 328, 332, 333, 335, 338], "risk": [3, 130], "overlap": [3, 41], "consecut": [3, 64, 82, 182, 221, 329, 332, 338], "reproduc": [3, 107, 153, 326, 328, 332], "maximum": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 40, 43, 45, 56, 57, 58, 59, 68, 74, 78, 92, 98, 114, 134, 139, 140, 142, 204, 205, 206, 229, 236, 242, 248, 250, 251, 255, 298, 326, 327, 328, 329, 332, 335], "max_step": [3, 13, 74, 78, 88, 92, 98, 99, 100, 139, 332, 337, 338], "tensordictmodul": [3, 13, 14, 16, 17, 20, 21, 40, 88, 123, 173, 178, 182, 186, 198, 199, 207, 208, 211, 212, 213, 214, 215, 216, 219, 221, 222, 223, 224, 225, 227, 228, 229, 231, 236, 238, 242, 244, 245, 246, 248, 250, 253, 255, 257, 263, 264, 265, 266, 267, 268, 297, 313, 321, 326, 328, 329, 331, 332, 333, 334], "compat": [3, 7, 11, 18, 19, 32, 34, 36, 39, 52, 65, 74, 78, 80, 91, 92, 98, 107, 139, 147, 151, 176, 177, 178, 180, 181, 182, 223, 235, 236, 238, 239, 241, 242, 248, 250, 252, 253, 254, 255, 257, 260, 326, 329, 335, 337], "mark": [3, 16, 74, 78, 92, 98, 178, 182], "trail": [3, 151], "time": [3, 4, 7, 8, 13, 14, 16, 17, 18, 20, 21, 32, 35, 38, 40, 41, 42, 55, 66, 74, 75, 78, 87, 91, 92, 93, 94, 98, 104, 108, 130, 136, 141, 142, 151, 160, 174, 176, 180, 182, 183, 221, 237, 242, 245, 249, 250, 252, 253, 257, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 301, 321, 322, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "treat": 3, "figur": [3, 326, 328, 329, 332, 333, 338], "summar": [3, 333], "brief": [3, 328], "entri": [3, 13, 14, 18, 19, 20, 21, 23, 26, 28, 32, 34, 36, 37, 39, 45, 49, 52, 53, 54, 55, 74, 78, 92, 98, 107, 109, 110, 112, 115, 116, 119, 122, 125, 127, 129, 131, 133, 136, 139, 140, 141, 149, 151, 160, 161, 178, 187, 188, 215, 216, 223, 224, 236, 255, 265, 266, 267, 268, 321, 326, 328, 329, 332, 333, 334, 335, 338], "deliveri": 3, "design": [3, 13, 14, 32, 33, 74, 78, 92, 98, 107, 130, 145, 215, 235, 236, 237, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 263, 326, 327, 328, 329, 331, 332, 333, 335, 338], "metaclass": 3, "ensur": [3, 32, 35, 41, 60, 64, 74, 78, 92, 98, 107, 129, 139, 147, 151, 216, 321, 327, 328, 333, 335], "everi": [3, 8, 17, 26, 28, 32, 33, 65, 74, 78, 92, 98, 139, 140, 151, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 189, 190, 193, 194, 195, 197, 200, 201, 203, 208, 214, 215, 217, 218, 219, 221, 224, 229, 232, 301, 323, 326, 327, 328, 329, 332, 333], "flank": [3, 329], "dual": 3, "strictli": [3, 8, 32, 74, 78, 92, 98, 145, 255, 326, 328], "refer": [3, 7, 8, 9, 21, 32, 40, 74, 78, 92, 98, 145, 151, 162, 173, 174, 186, 187, 188, 189, 194, 195, 200, 201, 217, 235, 243, 244, 245, 246, 252, 255, 265, 270, 278, 325, 326, 328, 332], "union": [3, 11, 13, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 60, 74, 78, 92, 98, 105, 114, 116, 122, 125, 129, 130, 133, 135, 147, 149, 151, 160, 163, 164, 166, 167, 168, 169, 171, 173, 175, 183, 184, 187, 188, 189, 190, 191, 192, 196, 198, 199, 204, 205, 206, 207, 225, 241, 242, 247, 253, 256, 278, 284, 295, 297, 298, 306, 307, 310, 311, 313, 314, 315, 316, 317], "interpret": [3, 327], "last": [3, 4, 11, 13, 14, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 46, 47, 52, 64, 74, 78, 92, 98, 119, 125, 130, 140, 142, 163, 164, 176, 178, 180, 182, 183, 184, 187, 188, 194, 202, 208, 214, 215, 218, 219, 226, 327, 328, 329, 332, 333, 334, 335, 337, 338], "indic": [3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 62, 64, 66, 67, 69, 74, 78, 92, 98, 107, 108, 139, 140, 141, 142, 145, 161, 163, 164, 184, 187, 188, 190, 221, 223, 224, 232, 235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 263, 305, 317, 320, 323, 328, 329, 333, 335, 338], "truncat": [3, 13, 14, 16, 18, 19, 20, 21, 37, 43, 45, 52, 53, 55, 74, 78, 92, 93, 94, 98, 116, 117, 124, 133, 139, 161, 178, 182, 206, 271, 326, 328, 329, 331, 334, 335, 337, 338], "carri": [3, 21, 45, 74, 78, 92, 98, 141, 250, 327, 329, 332, 333, 335], "assess": [3, 101, 326], "split_trajectori": [3, 13, 14, 16, 17, 18, 19, 20, 21, 319], "slice": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 52], "adjac": [3, 23, 119], "reli": [3, 176, 177, 180, 181, 235, 322, 326, 328, 333, 338], "traj_id": [3, 13, 14, 16, 23, 133, 329, 335, 337], "junction": 3, "miss": [3, 4, 6, 7, 11, 26, 32, 74, 78, 92, 98, 145, 160, 227, 228, 255, 320, 326, 329], "context": [3, 5, 8, 32, 74, 75, 78, 91, 92, 98, 141, 146, 190, 191, 215, 261, 262, 265, 266, 267, 268, 270, 278, 297, 321, 322, 326, 327, 328, 332, 333, 334, 335], "through": [3, 4, 5, 8, 11, 16, 18, 20, 21, 26, 28, 82, 87, 92, 93, 94, 98, 112, 115, 130, 184, 198, 222, 226, 227, 228, 232, 265, 266, 267, 268, 321, 326, 327, 328, 331, 332, 333, 334, 335, 338], "inittrack": [3, 178, 182, 326, 329], "tutori": [3, 325, 326, 327, 329, 330, 331, 333, 334, 335, 336, 338], "inform": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 43, 74, 75, 78, 81, 92, 98, 163, 164, 184, 190, 322, 323, 326, 327, 328, 329, 332, 333, 335], "scratch": [3, 8, 327, 333], "better": [3, 8, 9, 178, 182, 322, 328, 333], "intens": [3, 8], "gym3": 3, "envpool": [3, 89, 90], "interfac": [3, 81, 91, 184, 191, 321, 326, 328, 333, 335], "simultan": [3, 20, 92, 98, 333], "often": [3, 8, 247, 301, 326, 327, 333, 335, 338], "competit": [3, 332], "advantag": [3, 8, 175, 235, 237, 249, 252, 254, 265, 266, 267, 268, 269, 270, 272, 274, 276, 278, 279, 281, 322, 323, 326, 327, 328, 329, 332, 333, 338], "scale": [3, 4, 52, 107, 123, 125, 135, 140, 143, 174, 179, 193, 200, 201, 205, 206, 211, 212, 213, 222, 226, 228, 235, 236, 248, 252, 253, 254, 255, 299, 305, 310, 317, 321, 326, 327, 328, 329, 332, 337], "varieti": 3, "own": [3, 13, 14, 17, 22, 32, 74, 78, 92, 93, 94, 98, 327, 328, 332, 333], "As": [3, 4, 74, 78, 87, 92, 93, 94, 98, 133, 226, 265, 321, 326, 327, 328, 329, 332, 333, 334, 335, 337, 338], "inherit": [3, 185, 250, 323, 328, 332], "serialenv": [3, 74, 78, 92, 141, 319, 338], "Of": [3, 7, 320, 333, 338], "cours": [3, 4, 320, 328, 333, 338], "correspond": [3, 4, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 47, 60, 74, 78, 88, 89, 92, 98, 129, 141, 145, 149, 151, 178, 180, 182, 187, 188, 218, 219, 221, 222, 226, 239, 242, 255, 263, 265, 266, 267, 268, 269, 326, 327, 328, 332, 333, 334], "count": [3, 75, 139, 221, 297, 301, 304, 326, 327, 328, 329, 335, 338], "make_env": [3, 100, 151, 306, 307, 326, 327, 338], "gymenv": [3, 5, 13, 14, 16, 17, 21, 22, 74, 75, 78, 80, 92, 98, 107, 110, 111, 116, 122, 123, 125, 127, 131, 133, 136, 140, 141, 142, 144, 145, 151, 178, 182, 310, 313, 319, 321, 326, 327, 328, 329, 334, 335, 337, 338], "v1": [3, 13, 14, 16, 17, 21, 22, 52, 53, 74, 75, 78, 89, 92, 98, 107, 110, 117, 122, 123, 125, 131, 133, 136, 139, 140, 141, 142, 144, 178, 182, 260, 274, 275, 276, 277, 279, 280, 281, 282, 321, 327, 329, 333, 335, 337, 338], "from_pixel": [3, 72, 73, 107, 310, 326, 327, 329, 334, 335, 337, 338], "9": [3, 7, 32, 35, 38, 41, 55, 66, 87, 93, 94, 140, 151, 235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 258, 263, 322, 325, 326, 327, 328, 332, 333, 335, 336], "81": [3, 326, 327, 333], "must": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 53, 55, 56, 57, 58, 59, 65, 68, 74, 75, 78, 92, 93, 94, 98, 107, 110, 116, 120, 123, 125, 127, 137, 140, 141, 142, 145, 146, 151, 163, 164, 173, 178, 182, 184, 187, 188, 189, 190, 199, 210, 216, 217, 222, 223, 224, 225, 226, 229, 230, 235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 256, 257, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 310, 326, 327, 328, 329, 331, 333, 335, 337], "print": [3, 6, 7, 13, 14, 16, 21, 22, 24, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 53, 55, 56, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 104, 107, 108, 112, 113, 114, 115, 122, 125, 131, 133, 136, 139, 141, 142, 143, 151, 157, 160, 161, 163, 164, 170, 173, 178, 184, 187, 188, 189, 190, 193, 196, 199, 210, 211, 212, 213, 215, 216, 218, 219, 221, 223, 225, 228, 230, 250, 310, 313, 321, 323, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "simpli": [3, 6, 34, 36, 39, 45, 117, 137, 150, 250, 321, 322, 326, 328, 332, 338], "b": [3, 7, 8, 23, 26, 28, 34, 36, 39, 40, 41, 42, 66, 176, 177, 180, 181, 189, 190, 191, 192, 198, 207, 229, 265, 266, 267, 268, 269, 271, 284, 321, 327, 334, 335], "c": [3, 6, 7, 26, 34, 36, 39, 41, 42, 54, 125, 143, 180, 181, 327, 335], "d": [3, 35, 54, 55, 56, 60, 176, 180, 222, 226, 337], "get": [3, 4, 6, 7, 8, 9, 34, 35, 36, 38, 39, 52, 57, 58, 65, 66, 68, 75, 92, 98, 105, 108, 112, 114, 115, 123, 125, 130, 140, 141, 143, 151, 210, 218, 219, 222, 223, 226, 265, 266, 267, 268, 269, 288, 321, 326, 327, 328, 329, 332, 333, 335, 337, 338], "forc": [3, 6, 7, 13, 14, 18, 20, 21, 53, 55, 327, 332, 333], "privat": [3, 74, 78, 92, 98, 150, 333, 338], "distinct": [3, 331], "convent": [3, 100, 322, 326, 329, 332, 333], "absenc": 3, "total": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 30, 31, 33, 237, 249, 252, 292, 294, 297, 301, 304, 305, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338], "unless": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 64, 74, 78, 92, 98, 328], "wa": [3, 5, 7, 35, 38, 41, 42, 52, 53, 54, 55, 74, 78, 92, 98, 145, 161, 180, 247, 256, 271, 322, 327, 328, 331, 335, 337], "abov": [3, 7, 32, 74, 78, 92, 98, 179, 205, 206, 234, 322, 323, 326, 328, 332, 333, 338], "detail": [3, 5, 6, 7, 32, 74, 78, 92, 93, 94, 98, 143, 145, 173, 176, 180, 217, 235, 243, 252, 320, 327, 331, 335], "deal": [3, 326, 328, 332, 335], "proper": [3, 4, 6, 7, 265, 266, 267, 268, 327, 328, 332, 335], "behav": [3, 80, 88, 176, 180, 196, 248, 334], "accord": [3, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 39, 40, 125, 135, 179, 191, 200, 205, 206, 263, 321, 333, 335], "develop": [3, 4, 7, 82, 326, 337], "inner": [3, 74, 78, 92, 98, 114, 323, 327, 328, 332, 338], "logic": 3, "nevertheless": [3, 328, 335], "kept": [3, 13, 14, 16, 17, 64, 114, 137, 144, 153, 160, 179, 205, 206], "mind": [3, 332], "desig": 3, "previou": [3, 4, 10, 32, 40, 41, 141, 161, 176, 180, 201, 215, 328, 329, 333, 338], "wherev": 3, "isn": [3, 8, 34, 36, 39, 116, 216, 225, 332], "expos": [3, 95, 112, 115, 227, 327], "modif": [3, 5, 26, 28, 32, 74, 78, 92, 98, 119, 161, 250, 328, 333], "lost": [3, 8, 150], "eras": [3, 74, 78, 92, 98, 145], "intern": [3, 324], "face": [3, 5, 8, 9, 338], "NOT": [3, 130], "outsid": [3, 16, 332, 333], "keep": [3, 4, 7, 8, 14, 42, 64, 66, 92, 98, 125, 129, 149, 151, 160, 221, 294, 301, 326, 327, 328, 329, 332, 333, 335, 337, 338], "right": [3, 6, 7, 40, 183, 327, 328, 332, 333, 338], "preliminari": 3, "warranti": 3, "affect": [3, 8, 32, 74, 78, 92, 98, 144, 145, 153, 265, 266, 267, 268], "assumpt": [3, 333, 335], "made": [3, 32, 57, 58, 59, 65, 68, 74, 78, 92, 98, 221, 239, 263, 326, 327, 329, 332, 334], "preclud": 3, "presenc": 3, "annihil": 3, "effect": [3, 26, 32, 74, 78, 92, 98, 107, 145, 301, 326, 335, 338], "reason": [3, 4, 8, 32, 74, 78, 92, 93, 94, 98, 129, 147, 182, 322, 326, 327, 328, 333, 335], "root": [3, 26, 28, 52, 53, 55, 107, 142, 160, 179, 205, 206, 329, 332, 333, 334, 335, 338], "known": [3, 5, 7, 8, 272, 273, 326, 327], "advanc": [3, 21, 35, 38, 41, 42, 335], "explicitli": [3, 4, 327, 329, 332, 335], "place": [3, 13, 14, 16, 17, 26, 28, 32, 34, 36, 39, 57, 58, 68, 74, 75, 78, 92, 98, 111, 116, 129, 141, 144, 145, 147, 149, 150, 151, 161, 215, 225, 298, 303, 304, 327, 328, 332, 333, 335], "superse": 3, "pettingzoowrapp": [3, 319], "group": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 74, 78, 87, 92, 93, 94, 98, 100, 101, 321, 327, 328, 332], "associ": [3, 32, 34, 36, 39, 74, 78, 92, 98, 200, 317, 326, 335], "environemtn": 3, "__not__": 3, "constrain": [3, 123, 178, 182, 252], "li": 3, "fact": [3, 7, 8, 326, 328, 332, 333, 334, 335, 338], "predict": [3, 32, 40, 174, 185, 186, 215, 231, 241, 243, 245, 246, 264, 321, 326, 327], "know": [3, 4, 9, 35, 38, 41, 42, 214, 253, 297, 326, 327, 328, 329, 332, 335], "meaning": 3, "could": [3, 4, 6, 327, 328, 332, 334, 338], "perfectli": [3, 323, 326, 333], "case": [3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 32, 35, 41, 53, 55, 60, 74, 78, 92, 98, 112, 113, 115, 143, 145, 153, 182, 184, 190, 222, 225, 226, 228, 229, 234, 235, 236, 238, 239, 241, 242, 248, 252, 253, 254, 255, 257, 265, 266, 267, 268, 292, 303, 315, 316, 317, 321, 323, 326, 327, 328, 329, 332, 333, 335, 338], "meaningless": 3, "discard": [3, 45, 52, 53, 78, 147, 160, 283, 335, 338], "val": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 337], "agent0": 3, "agent1": 3, "overridden": [3, 53, 55, 74, 78, 92, 98, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 189, 190, 193, 194, 195, 197, 200, 201, 203, 208, 214, 215, 217, 218, 219, 221, 224, 229, 232, 329], "overrid": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 38, 44, 46, 47, 74, 78, 92, 98, 317, 321], "elimin": 3, "field": [3, 13, 14, 16, 17, 26, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 53, 55, 57, 58, 68, 71, 74, 78, 84, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 112, 115, 116, 117, 127, 131, 133, 137, 139, 141, 145, 160, 162, 173, 178, 182, 186, 198, 199, 207, 210, 211, 212, 213, 215, 216, 217, 221, 222, 223, 224, 225, 228, 230, 235, 236, 238, 239, 241, 242, 248, 252, 253, 254, 255, 257, 263, 305, 310, 320, 321, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "bool": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 64, 71, 72, 73, 74, 75, 76, 78, 84, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 105, 107, 108, 112, 114, 115, 116, 117, 119, 123, 124, 125, 127, 129, 131, 133, 135, 137, 139, 141, 143, 145, 146, 147, 149, 151, 153, 160, 161, 162, 163, 164, 166, 167, 176, 177, 178, 179, 180, 181, 182, 184, 186, 189, 190, 191, 192, 205, 206, 210, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 257, 260, 263, 265, 266, 267, 268, 271, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 294, 295, 297, 298, 299, 301, 310, 317, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "pixel": [3, 7, 26, 107, 109, 116, 119, 121, 125, 127, 129, 132, 143, 147, 149, 166, 194, 195, 284, 310, 321, 326, 327, 329, 334, 335, 337, 338], "500": [3, 326, 327, 333, 337, 338], "uint8": [3, 34, 36, 39, 47, 116, 127, 143, 327, 334, 335, 337, 338], "none": [3, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 65, 66, 68, 74, 75, 78, 87, 88, 92, 93, 94, 98, 99, 100, 102, 106, 107, 108, 109, 110, 111, 112, 113, 115, 119, 121, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 147, 149, 151, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 251, 252, 253, 254, 255, 256, 257, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290, 295, 296, 297, 298, 299, 300, 301, 305, 306, 307, 310, 313, 315, 316, 317, 321, 323, 326, 327, 328, 329, 332, 333, 335, 337, 338], "is_shar": [3, 13, 14, 16, 26, 34, 36, 37, 39, 40, 41, 42, 43, 45, 53, 55, 56, 57, 58, 68, 71, 74, 78, 84, 87, 88, 91, 92, 93, 94, 96, 97, 98, 99, 100, 112, 115, 116, 117, 127, 131, 133, 137, 139, 141, 151, 160, 162, 173, 178, 182, 186, 198, 199, 207, 210, 211, 212, 213, 215, 216, 217, 221, 222, 223, 224, 225, 228, 230, 235, 236, 238, 239, 241, 242, 248, 252, 253, 254, 255, 257, 263, 310, 321, 328, 329, 331, 332, 333, 334, 335, 337, 338], "note": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 38, 39, 41, 42, 74, 78, 92, 98, 112, 115, 151, 161, 176, 178, 180, 182, 221, 222, 226, 243, 326, 327, 331, 332, 338], "launch": [3, 13, 14, 18, 19, 20, 22, 92, 98], "bottleneck": [3, 8], "so": [3, 4, 6, 7, 10, 32, 34, 36, 39, 40, 74, 78, 92, 98, 141, 151, 227, 228, 328, 329, 332, 333, 338], "onc": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 74, 78, 92, 98, 133, 145, 214, 219, 221, 299, 323, 327, 328, 329, 333, 335, 338], "great": [3, 7, 8, 337], "speedup": [3, 8, 338], "precis": [3, 112, 115, 160, 177, 181, 326, 328], "anoth": [3, 8, 34, 36, 39, 74, 78, 82, 92, 98, 112, 113, 115, 141, 144, 184, 235, 236, 237, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 263, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 321, 322, 326, 328, 329, 331, 332, 333, 338], "misspecifi": 3, "caus": [3, 7, 8, 57, 58, 68, 74, 78, 82, 92, 98, 130, 338], "breakag": 3, "rais": [3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 74, 78, 92, 98, 101, 107, 118, 124, 133, 140, 141, 142, 145, 153, 214, 218, 219, 221, 255, 326, 328, 332, 335], "mismatch": [3, 327], "mostli": [3, 17, 322, 335, 338], "purpos": [3, 7, 107, 176, 313, 326, 328, 329, 332, 334, 338], "want": [3, 6, 7, 8, 125, 235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 263, 321, 326, 327, 328, 329, 332, 333, 334, 335, 337, 338], "subprocess": [3, 13, 14, 75, 92, 98], "addit": [3, 4, 32, 52, 74, 78, 89, 92, 98, 111, 129, 141, 144, 145, 147, 149, 176, 214, 215, 225, 234, 250, 265, 322, 326, 327, 332, 335], "multithread": [3, 35, 38, 41, 42, 52, 53, 54, 55, 56, 89, 90, 335], "multithreadedenv": [3, 319], "underneath": 3, "higher": [3, 4, 110, 229, 326, 327, 328, 335, 338], "restrict": [3, 327, 334, 335, 338], "flexibl": [3, 9, 89, 258, 322, 323, 335, 338], "cover": [3, 320, 328, 333, 337], "popular": [3, 321, 329, 332], "atari": [3, 4, 107, 338], "classic": [3, 88, 94, 327], "benchmark_batched_env": 3, "py": [3, 104, 198, 207, 323, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338], "pipelin": [3, 7, 321, 328], "seamlessli": [3, 333], "infrastructur": [3, 332], "view": [3, 8, 27, 32, 33, 55, 74, 78, 92, 98, 105, 173, 176, 180, 184, 333, 335, 337, 338], "core": [3, 8, 310, 323, 329, 337], "decis": [3, 165, 197, 215, 240, 251, 329, 332, 335, 338], "act": [3, 4, 93, 94, 190, 236, 238, 248, 253, 255, 257, 329, 332], "world": [3, 5, 88, 231, 245, 332, 333, 338], "paradigm": [3, 17, 332], "decpodp": 3, "markov": [3, 338], "game": [3, 4, 5], "per": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 82, 92, 93, 94, 110, 136, 174, 189, 190, 218, 301, 315, 316, 326, 327, 328, 329, 332, 335, 337], "accommod": [3, 13, 14, 16, 17], "thank": [3, 326], "carrier": [3, 328, 329, 335], "particular": [3, 32, 45, 52, 74, 78, 92, 98, 145, 322, 323, 327, 329, 331, 332, 335], "thu": [3, 249, 332], "hand": [3, 7, 21, 332, 333], "let": [3, 6, 7, 32, 43, 74, 78, 92, 93, 94, 98, 107, 178, 182, 189, 190, 216, 297, 322, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "understand": [3, 8, 326, 327, 332], "go": [3, 7, 87, 130, 133, 215, 271, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "vma": [3, 99, 100, 332], "robot": [3, 5, 7, 129, 147, 149, 332], "what": [3, 8, 35, 44, 74, 78, 92, 98, 116, 141, 160, 223, 320, 321, 322, 327, 328, 329, 332, 333, 334, 335, 337, 338], "vmasenv": [3, 319, 332], "balanc": [3, 326, 327], "num_env": [3, 21, 81, 99, 100, 332], "n_agent": [3, 99, 100, 189, 190, 198, 207, 263, 332], "5": [3, 24, 26, 28, 35, 38, 41, 42, 75, 84, 89, 96, 97, 99, 100, 133, 139, 140, 162, 163, 164, 173, 174, 176, 179, 180, 183, 184, 186, 189, 190, 194, 199, 205, 206, 215, 216, 223, 229, 249, 252, 254, 257, 321, 325, 326, 327, 332, 333, 334, 335, 336, 337, 338], "info": [3, 35, 38, 41, 42, 52, 53, 54, 55, 74, 78, 92, 93, 94, 95, 96, 97, 98, 99, 100, 147, 150, 152, 332, 335], "ground_rew": 3, "pos_rew": [3, 332], "16": [3, 32, 55, 74, 78, 92, 98, 107, 325, 326, 327, 329, 333, 335, 336, 337], "style": [3, 35, 38, 41, 42, 52, 53, 54, 55], "relat": [3, 4, 10, 35, 119, 235, 236, 238, 239, 241, 242, 248, 252, 253, 254, 255, 257, 327, 333], "vari": [3, 93, 94, 130, 332], "creation": [3, 92, 98, 326, 338], "info_spec": 3, "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 33, 74, 78, 92, 98, 105, 161, 239, 242, 263, 319, 328, 332, 338], "you": [3, 5, 6, 7, 8, 9, 10, 32, 43, 74, 78, 82, 87, 92, 93, 94, 96, 97, 98, 104, 151, 180, 320, 321, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "simpl": [3, 9, 32, 33, 74, 78, 92, 98, 166, 226, 239, 241, 250, 254, 265, 321, 322, 326, 327, 328, 332, 338], "composit": [3, 26, 28, 74, 78, 92, 98, 328, 333], "prefix": [3, 23, 32, 34, 36, 39, 45, 74, 78, 92, 98, 145, 250, 255, 283, 329, 338], "exactli": [3, 32, 74, 78, 80, 92, 98, 145, 176, 180, 255, 326, 329, 332], "action_kei": [3, 15, 74, 78, 92, 98, 105, 114, 160, 162, 185, 186, 214, 218, 219, 221, 332], "reward_kei": [3, 74, 78, 92, 98, 160, 162, 186, 295, 299, 332], "automat": [3, 5, 57, 58, 68, 74, 78, 92, 93, 94, 98, 112, 115, 125, 150, 163, 210, 222, 321, 326, 328, 332, 333, 335, 337], "sure": [3, 4, 7, 54, 65, 82, 133, 216, 317, 321, 326, 328, 329, 332, 333, 335, 337, 338], "set_kei": [3, 116, 235, 237, 239, 242, 243, 248, 249, 250, 252, 253, 254, 255, 263, 269, 332], "awai": [3, 328, 332], "eas": [3, 332], "leaf": [3, 26, 28, 74, 78, 92, 98, 139, 226], "would": [3, 32, 40, 74, 78, 92, 98, 176, 178, 180, 182, 184, 189, 323, 327, 328, 329, 333, 335, 338], "full": [3, 74, 78, 92, 98, 178, 182, 217, 292, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "raw": [3, 4, 40, 179, 205, 206, 327, 333], "torchvis": [3, 129, 149, 337, 338], "transformedenv": [3, 13, 74, 75, 78, 92, 98, 105, 107, 110, 111, 112, 115, 116, 117, 119, 122, 123, 124, 125, 127, 131, 133, 136, 137, 139, 140, 141, 142, 144, 151, 178, 182, 310, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "primit": [3, 4, 235, 236, 238, 239, 241, 242, 248, 252, 253, 254, 255, 257], "built": [3, 5, 7, 235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 258, 263, 311, 313, 314, 317, 326, 327, 328, 329, 335, 338], "base_env": [3, 74, 78, 92, 98, 105, 110, 112, 114, 115, 123, 127, 139, 141, 142, 326, 327, 328, 334, 337, 338], "totensorimag": [3, 107, 327, 329, 335, 337, 338], "in_kei": [3, 13, 14, 16, 17, 21, 52, 88, 106, 107, 108, 109, 110, 112, 114, 115, 119, 121, 123, 125, 126, 127, 129, 131, 132, 133, 134, 135, 136, 140, 142, 143, 144, 145, 147, 149, 151, 162, 172, 178, 182, 186, 198, 207, 208, 210, 211, 212, 213, 215, 216, 222, 223, 225, 226, 228, 229, 230, 235, 236, 237, 238, 239, 241, 242, 248, 249, 252, 253, 254, 255, 257, 263, 265, 266, 267, 268, 283, 284, 310, 313, 321, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "resiz": [3, 107, 327, 329, 335, 338], "64": [3, 34, 36, 39, 107, 166, 167, 175, 178, 182, 190, 198, 263, 326, 327, 328, 329, 331, 333, 334, 335, 337, 338], "appar": [3, 294], "bring": [3, 328, 338], "signific": [3, 5, 8, 328, 338], "kind": [3, 38, 44, 160, 335], "consult": 3, "interest": [3, 222, 226, 321, 327, 328, 332, 333, 338], "resize_par": 3, "out_kei": [3, 13, 14, 16, 17, 21, 88, 106, 107, 108, 109, 110, 112, 115, 119, 121, 123, 125, 126, 127, 129, 131, 132, 133, 134, 135, 136, 140, 142, 143, 144, 147, 149, 151, 162, 172, 173, 178, 182, 186, 198, 199, 207, 208, 210, 211, 212, 213, 215, 217, 222, 223, 224, 225, 226, 228, 229, 230, 235, 236, 237, 242, 248, 249, 252, 253, 254, 255, 263, 265, 266, 267, 268, 284, 297, 313, 321, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "easi": [3, 5, 54, 214, 218, 219, 221, 321, 322, 326, 327, 328, 332, 334, 335, 338], "graph": [3, 4, 8, 261, 262, 326, 333], "inv": [3, 110, 114, 127, 133, 333], "appli": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 43, 44, 46, 47, 52, 53, 54, 55, 74, 78, 92, 98, 105, 107, 108, 111, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 128, 130, 131, 133, 136, 137, 139, 140, 141, 142, 144, 145, 147, 148, 150, 151, 176, 180, 205, 216, 265, 296, 323, 326, 327, 328, 333, 337, 338], "revers": [3, 180], "order": [3, 16, 32, 33, 35, 38, 41, 42, 52, 53, 54, 55, 64, 74, 78, 92, 98, 112, 115, 127, 145, 210, 216, 225, 227, 228, 230, 235, 236, 238, 242, 248, 252, 253, 254, 255, 257, 327, 332], "chain": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 111, 114, 163, 164, 228, 338], "taken": [3, 74, 78, 92, 98, 187, 188, 219, 322, 326, 328, 329, 332, 333], "invers": [3, 4, 35, 38, 41, 42, 52, 53, 54, 55, 107, 112, 115, 125, 133, 233, 248, 333], "in_keys_inv": [3, 110, 112, 115, 125, 126, 127, 131, 133, 144, 326, 331, 333, 338], "append_transform": [3, 35, 38, 41, 42, 52, 53, 54, 55, 129, 141, 147, 326, 329, 333, 337, 338], "doubletofloat": [3, 310, 326, 328, 331], "float32": [3, 13, 14, 16, 26, 34, 35, 36, 39, 40, 41, 42, 44, 45, 53, 57, 58, 60, 68, 71, 74, 78, 84, 88, 91, 92, 96, 97, 98, 99, 100, 112, 115, 116, 117, 125, 127, 131, 133, 137, 139, 141, 143, 157, 160, 162, 173, 178, 182, 186, 198, 199, 207, 210, 211, 212, 213, 215, 216, 221, 222, 223, 224, 225, 228, 230, 235, 236, 238, 239, 241, 242, 248, 252, 253, 254, 255, 257, 263, 310, 321, 328, 329, 331, 332, 333, 334, 335, 337, 338], "float64": [3, 32, 53, 55, 74, 78, 92, 98, 111, 112, 115, 129, 141, 144, 145, 147, 149, 225, 331, 338], "regist": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 74, 78, 92, 98, 112, 115, 116, 145, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 189, 190, 193, 194, 195, 197, 200, 201, 203, 208, 214, 215, 217, 218, 219, 221, 224, 229, 232, 235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 263, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 323, 326, 328, 335], "manipul": [3, 4, 8, 129, 147], "third_transform": 3, "replac": [3, 6, 7, 26, 28, 32, 114, 116, 160, 218, 321, 335], "unexpect": [3, 32, 74, 78, 92, 98, 145, 255, 338], "behviour": 3, "fortun": [3, 329], "ident": [3, 13, 14, 16, 32, 34, 36, 39, 92, 98, 116, 189, 190, 265, 266, 267, 268, 315, 316, 327, 332], "alreadi": [3, 8, 11, 32, 34, 36, 39, 45, 74, 78, 92, 98, 141, 161, 226, 265, 266, 267, 268, 326, 328, 332], "chang": [3, 5, 7, 32, 35, 38, 41, 42, 57, 58, 59, 64, 65, 68, 74, 78, 92, 98, 111, 112, 113, 115, 117, 123, 131, 137, 139, 144, 145, 151, 180, 235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 263, 322, 326, 328, 329, 332, 333, 334, 335, 338], "happen": [3, 74, 78, 92, 98, 214, 327, 334, 338], "catfram": [3, 327], "hold": [3, 261, 262, 333, 335], "notic": [3, 107, 328, 333], "parenthood": 3, "henc": [3, 35, 130, 161, 189, 321, 326, 328, 332, 333], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 333], "discret": [3, 24, 27, 30, 31, 33, 47, 74, 78, 92, 93, 94, 98, 100, 114, 196, 199, 241, 242, 243, 321, 327, 328, 332, 338], "might": [3, 34, 36, 37, 39, 288, 320, 326, 338], "throughout": [3, 235, 236, 237, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 263, 328, 338], "action_mask": [3, 93, 94, 96, 97, 105], "unavail": [3, 93, 94], "probabl": [3, 4, 8, 40, 171, 173, 176, 178, 180, 182, 184, 187, 188, 196, 206, 218, 222, 226, 321, 327, 337], "categor": [3, 27, 31, 33, 93, 94, 100, 105, 116, 173, 196, 199, 216, 217, 222, 223, 224, 239, 242, 263, 329], "probabilistictensordictmodul": [3, 123, 226, 227, 337], "tensordictsequenti": [3, 178, 182, 216, 218, 227, 321, 326, 329, 331, 334, 337], "maskedcategor": [3, 188, 319], "linear": [3, 13, 14, 16, 17, 21, 32, 74, 78, 88, 92, 98, 111, 123, 129, 141, 144, 145, 147, 149, 162, 163, 164, 173, 184, 186, 189, 190, 191, 192, 193, 199, 200, 201, 210, 211, 212, 213, 218, 219, 220, 221, 222, 223, 225, 228, 230, 235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 263, 265, 266, 267, 268, 313, 321, 327, 331, 334, 337], "in_feat": 3, "out_feat": 3, "logit": [3, 36, 40, 187, 188, 196, 217, 222, 242, 321], "dist": [3, 10, 187, 188, 196], "distribution_class": [3, 123, 211, 212, 213, 215, 222, 226, 228, 235, 236, 242, 248, 252, 253, 254, 255, 321, 326, 328, 332, 337], "wrap": [3, 5, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 53, 74, 78, 92, 93, 94, 98, 100, 153, 178, 182, 208, 211, 212, 213, 214, 219, 221, 223, 231, 263, 321, 326, 327, 328, 329, 332, 338], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 105, 130], "add": [3, 4, 6, 21, 32, 35, 38, 41, 42, 52, 53, 54, 55, 62, 66, 67, 69, 74, 78, 92, 98, 107, 123, 178, 182, 191, 220, 235, 296, 328, 329, 332, 333, 335, 337], "enviorn": [3, 93, 94, 100, 332], "itself": [3, 32, 74, 78, 92, 98, 102, 250, 328], "log": [3, 4, 8, 40, 171, 172, 173, 187, 188, 196, 206, 216, 217, 222, 226, 235, 236, 237, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 263, 294, 295, 297, 301, 313, 321, 322, 323, 326, 327, 328, 332, 333, 337], "mission": 3, "irrespect": [3, 225, 226], "dmcontrol": [3, 326], "jumanji": [3, 83, 84], "natur": [3, 326, 329], "special": [3, 321, 326, 329, 338], "framework": [3, 4, 9, 22, 88, 176, 337, 338], "Its": [3, 32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 151, 225, 269], "success": [3, 53, 107, 144, 218, 327, 333, 335, 337], "been": [3, 5, 7, 8, 17, 18, 20, 21, 40, 64, 74, 78, 82, 92, 98, 123, 139, 140, 144, 176, 180, 214, 219, 221, 326, 327, 328, 329, 331, 332, 333, 335, 338], "foundat": [3, 5, 93, 94, 328, 332], "inspir": [3, 333], "howev": [3, 5, 7, 32, 74, 78, 92, 98, 107, 136, 140, 145, 255, 321, 326, 327, 328, 329, 333, 335, 338], "gone": [3, 4, 5], "sometim": [3, 329, 338], "hard": [3, 7, 247, 327, 338], "adopt": [3, 5, 326, 338], "prefer": [3, 17, 20, 35, 38, 41, 42, 130, 137, 252, 298, 321, 328, 332, 335], "moreov": 3, "maintain": [3, 5, 9, 333], "both": [3, 7, 32, 74, 75, 78, 92, 93, 94, 98, 107, 131, 145, 161, 163, 164, 178, 181, 182, 184, 189, 190, 211, 212, 213, 217, 224, 235, 237, 238, 242, 248, 249, 250, 252, 253, 254, 255, 257, 297, 321, 326, 328, 332, 333, 334, 335, 338], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 327, 328, 329, 332, 333, 335, 338], "decor": [3, 8, 11, 104, 250, 265, 266, 267, 268], "set_gym_backend": [3, 102, 319], "relev": [3, 40, 265, 266, 267, 268, 269, 333], "gym_backend": [3, 104, 319], "env1": [3, 331], "path": [3, 6, 7, 32, 34, 35, 36, 38, 39, 41, 42, 45, 52, 53, 54, 55, 56, 57, 74, 78, 92, 98, 104, 129, 149, 186, 301, 323, 327], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 55, 104], "__init__": [3, 7, 88, 104, 105, 112, 115, 162, 173, 176, 180, 186, 230, 236, 238, 242, 248, 253, 255, 257, 323, 333, 338], "env2": [3, 331], "_env": [3, 6, 338], "classic_control": 3, "pendulumenv": [3, 333], "0x15147e190": 3, "0x1629916a0": 3, "further": [3, 5, 328], "tell": [3, 4, 7, 93, 94, 326, 329, 332], "mo_gymnasium": [3, 86, 102], "handi": 3, "side": [3, 4, 338], "v0": [3, 77, 78, 79, 83, 84, 85, 86, 111, 145, 151, 313], "26": [3, 325, 327, 328, 333, 334, 335, 336, 338], "fun": [3, 11, 104, 328, 332], "reveal": 4, "bug": [4, 337], "curv": 4, "won": [4, 32, 74, 75, 78, 92, 98, 129, 149, 301, 317, 327, 328], "exploit": 4, "video": [4, 9, 284, 297, 317, 332], "cv": 4, "flip": 4, "imag": [4, 7, 72, 109, 129, 143, 149, 184, 326, 327, 332, 334, 338], "correspondingli": 4, "prescript": 4, "tune": [4, 123, 332, 334], "coeffici": [4, 40, 123, 332], "bonu": [4, 235, 237, 249, 252], "beta": [4, 35, 41, 60, 248, 249, 326, 327, 335, 337], "reduc": [4, 6, 27, 140, 327, 328], "downstream": [4, 326], "formul": [4, 332], "ob": [4, 8, 26, 28, 35, 38, 41, 42, 52, 53, 54, 55, 66, 105, 112, 113, 115, 125, 143, 157, 160, 189, 190, 223, 230, 236, 238, 242, 248, 253, 255, 257, 265, 266, 267, 268, 327, 331, 333, 337, 338], "rate": [4, 151, 264, 327, 328, 332], "gradient": [4, 32, 74, 78, 92, 98, 145, 179, 188, 192, 196, 205, 206, 235, 237, 238, 242, 248, 249, 250, 252, 253, 254, 255, 257, 264, 265, 266, 267, 268, 301, 326, 328, 332, 333], "norm": [4, 8, 301, 326, 327, 328, 332, 333], "easier": [4, 321, 326], "behavior": [4, 32, 74, 78, 92, 98, 145, 248, 328, 329, 332, 333], "local": [4, 7, 10, 16, 21, 32, 74, 78, 92, 98, 145, 189, 190, 198, 207, 263, 289, 332], "optima": 4, "sens": [4, 333], "product": [4, 9, 176, 177, 180, 181, 315, 316], "sum": [4, 21, 31, 33, 66, 136, 187, 188, 207, 245, 264, 271, 322, 326, 327, 328, 329, 332, 333, 338], "track": [4, 13, 14, 16, 17, 18, 19, 20, 21, 42, 64, 136, 151, 221, 289, 294, 327, 329, 332, 333, 335], "stat": [4, 125, 305, 317, 327, 328], "w": [4, 107, 109, 132, 143, 176, 221, 284, 327, 329, 335], "r": [4, 32, 105, 110, 125, 177, 226, 234, 264, 321, 327, 333, 338], "yield": [4, 16, 21, 32, 74, 78, 92, 98, 250, 326], "insight": 4, "auxiliari": 4, "credit": 4, "futur": [4, 32, 34, 36, 39, 74, 78, 92, 98, 129, 145, 149, 184, 235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 263, 320, 337], "past": [4, 327, 335], "spars": [4, 329], "ineffici": 4, "ad": [4, 13, 14, 16, 32, 35, 38, 41, 42, 49, 52, 53, 54, 55, 60, 74, 78, 92, 98, 136, 145, 191, 192, 221, 235, 237, 239, 243, 249, 252, 255, 263, 327, 329, 335, 338], "intermedi": [4, 178, 182, 217, 326, 334], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 326], "discov": 4, "score": [4, 40], "undesir": 4, "though": [4, 74, 78, 92, 98, 184, 328, 332], "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 337], "individu": [4, 18, 19, 20, 21, 32, 45, 74, 78, 92, 98, 326, 332], "select": [4, 15, 35, 38, 41, 42, 52, 53, 54, 55, 93, 94, 100, 105, 107, 108, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 123, 124, 128, 130, 131, 133, 136, 137, 139, 140, 141, 142, 144, 147, 148, 150, 151, 162, 178, 182, 216, 223, 300, 326, 335], "fall": [4, 52], "explicit": [4, 11, 45, 183, 335], "mechan": [4, 32, 74, 78, 92, 98, 145, 327, 333], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 34, 36, 39, 74, 78, 92, 98, 180, 248, 328, 332], "addition": 4, "timestep": [4, 40, 52, 133, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 332], "realli": 4, "larg": [4, 27, 34, 36, 39, 112, 115, 147, 327, 328, 332, 335], "huge": [4, 190, 329], "std": [4, 125, 151, 193, 197, 214, 326, 338], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 325, 329, 330, 331, 334, 335, 336], "initi": [4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 40, 74, 78, 92, 98, 125, 129, 141, 144, 145, 147, 152, 162, 176, 177, 180, 181, 186, 191, 192, 214, 218, 219, 221, 235, 236, 238, 239, 241, 242, 243, 244, 248, 249, 250, 251, 252, 253, 254, 255, 257, 263, 310, 317, 327, 329, 333, 338], "estim": [4, 116, 123, 211, 212, 213, 235, 236, 237, 238, 239, 241, 242, 243, 244, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 263, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 322, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "encount": [4, 320, 327, 333], "unseen": 4, "extrins": 4, "wrong": 4, "bonus": 4, "denser": 4, "prior": [4, 201, 245, 332], "freshli": 4, "doesn": [4, 11, 89, 112, 115], "drop": [4, 64, 160], "meant": [4, 88], "encourag": [4, 326, 327, 335], "measur": [4, 328], "novelti": 4, "revisit": 4, "previous": [4, 328, 338], "diminish": 4, "decreas": 4, "ideal": [4, 125, 333], "down": [4, 13, 14, 16, 17, 329], "anyth": 4, "try": [4, 7, 8, 9, 26, 28, 34, 36, 39, 327, 328, 329, 332, 333, 337, 338], "distil": 4, "nois": [4, 152, 192, 209, 221, 253, 257, 297, 317, 326], "exploratori": [4, 235, 237, 249, 252], "misalign": 4, "trade": 4, "unavoid": 4, "schedul": [4, 7, 40, 297, 328, 333], "divers": [4, 92, 98], "bootstrap": [4, 243, 266, 272, 273, 326, 329], "noisi": [4, 191, 192, 209, 321], "unstabl": [4, 179, 205, 206], "inher": 4, "stochast": [4, 123, 174, 192, 194, 201, 236, 240, 242, 248, 251, 253, 255, 321, 328, 332], "enemi": 4, "variabl": [4, 7, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 53, 55, 100, 176, 177, 178, 180, 181, 182, 186, 211, 212, 213, 250, 253, 323, 327], "pomdp": [4, 335], "loos": [4, 321, 327, 328], "nonexist": 4, "architectur": [4, 170, 332], "sequenc": [4, 13, 14, 16, 17, 26, 28, 30, 31, 35, 37, 38, 40, 43, 45, 56, 62, 66, 67, 69, 106, 107, 108, 109, 112, 114, 115, 119, 121, 125, 126, 130, 131, 132, 133, 134, 135, 136, 140, 142, 143, 144, 151, 163, 164, 171, 173, 176, 180, 184, 187, 188, 189, 190, 196, 199, 203, 215, 227, 228, 240, 283, 284, 296, 297, 298, 300, 301, 310, 321, 326, 328, 329, 331, 332, 338], "lstm": [4, 181, 182, 183, 193], "rel": [4, 141, 171, 204, 326, 327, 332, 335], "tend": 4, "stabl": [4, 9, 10], "compens": 4, "descent": [4, 192], "1000": [4, 38, 74, 78, 92, 98, 107, 151, 218, 221, 222, 226, 247, 326, 327, 328, 329, 334, 335], "minimum": [4, 92, 98, 134, 174, 193, 204, 205, 206, 229, 232, 234, 236, 242, 250, 251, 255, 292, 326, 328, 332], "manual": [4, 18, 20, 21, 326, 329, 335], "deviat": [4, 125, 151, 162, 174, 186, 191, 192, 214, 252, 257, 326, 332], "radic": 4, "begin": [4, 13, 14, 16, 18, 19, 20, 21, 176, 177, 180, 181], "stabil": [4, 120], "stage": [4, 326, 333], "never": 4, "prevent": [4, 26, 28, 179, 205, 206, 249, 252, 299, 335], "solv": [4, 9, 10, 320, 326, 327, 328, 332, 333, 335], "entir": [4, 189, 328, 333, 335], "submit": [4, 320, 337], "suffici": [4, 326], "recommend": [4, 7, 34, 36, 39, 82, 332], "system": [4, 5, 328, 332, 333], "adequ": [4, 153, 328, 332], "infeas": 4, "allevi": [4, 321], "prune": 4, "fire": [4, 32, 74, 78, 92, 98], "certain": [4, 18, 20, 21, 32, 45, 74, 78, 92, 98, 104, 120, 139, 145, 177, 181, 218, 249, 321, 326, 327, 328, 332, 338], "illeg": 4, "move": [4, 21, 32, 74, 78, 92, 98, 111, 113, 129, 141, 144, 145, 147, 149, 151, 160, 184, 225, 299, 326, 327, 329, 337, 338], "chess": 4, "combin": [4, 144, 327, 335], "grasp": 4, "releas": [4, 7, 10, 32, 74, 78, 92, 98, 145, 255, 337], "top": [4, 66, 162, 186], "p": [4, 75, 96, 97], "wherein": 4, "cumul": [4, 136, 140, 162, 271, 328], "q": [4, 9, 74, 78, 92, 98, 166, 167, 168, 169, 172, 173, 175, 198, 199, 207, 213, 217, 223, 224, 236, 238, 239, 241, 242, 243, 247, 248, 253, 255, 257, 263, 310, 319, 326], "flow": [4, 326, 328, 332, 333, 335], "reparameter": [4, 171, 188, 196], "soft": [4, 247, 255, 256], "critic": [4, 8, 211, 220, 235, 237, 238, 242, 248, 249, 252, 253, 254, 255, 257, 326, 328], "clip": [4, 40, 110, 134, 237, 257, 301, 328, 332, 333], "oppos": [4, 45], "incorrect": 4, "thought": [4, 74, 78, 92, 98], "bound": [4, 17, 21, 25, 26, 32, 74, 78, 92, 98, 110, 124, 151, 200, 201, 210, 216, 217, 221, 222, 223, 224, 225, 226, 229, 257, 321, 326, 327, 328, 338], "region": 4, "squash": [4, 329, 337], "tanh": [4, 163, 164, 176, 177, 179, 180, 181, 184, 190, 204, 205, 206, 229, 328, 332, 333, 334, 337], "correct": [4, 34, 36, 39, 123, 304, 328, 329], "prob": [4, 187, 188, 196, 328, 332], "rememb": 4, "remap": 4, "origin": [4, 8, 13, 14, 16, 17, 34, 36, 39, 40, 82, 113, 114, 123, 129, 145, 149, 176, 222, 225, 226, 247, 250, 252, 310, 326, 331, 333, 338], "real": [5, 226, 322, 329, 333], "histor": 5, "ceas": 5, "fork": 5, "farama": [5, 85, 86, 93, 94, 328, 333], "usag": [5, 7, 52, 53, 55, 107, 116, 178, 182, 248, 255, 258, 321, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "bc": [5, 337], "break": [5, 13, 14, 16, 21, 32, 38, 42, 53, 55, 56, 74, 78, 92, 98, 107, 133, 151, 327, 335, 337], "against": [5, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 74, 78, 92, 98, 153, 210, 216, 217, 222, 223, 224, 225, 226, 328, 332], "13": [5, 10, 11, 95, 150, 325, 326, 327, 328, 332, 333, 334, 335, 336], "construct": [5, 32, 35, 38, 41, 42, 74, 78, 92, 93, 98, 112, 115, 153, 178, 182, 201, 226, 301, 321, 327, 328, 329, 333, 335, 338], "best": [5, 9, 82, 178, 182, 332, 335, 337], "gymwrapp": [5, 74, 78, 92, 98, 117, 137, 139, 150, 319, 328, 337], "feel": [5, 320, 337], "free": [5, 7, 112, 115, 235, 245, 252, 323, 328, 332, 337], "gladli": 5, "instruct": [6, 7, 10, 22, 52, 114, 116, 326, 327, 328, 329, 332, 335], "prepar": [6, 328], "conda": [6, 7, 320], "7": [6, 10, 27, 33, 35, 38, 41, 140, 162, 163, 164, 183, 184, 186, 189, 271, 325, 326, 327, 332, 333, 335, 336, 337], "cmake": 6, "14": [6, 11, 125, 326, 327, 328, 333, 334, 335], "activ": [6, 7, 9, 163, 164, 170, 174, 184, 189, 190, 237, 249, 252, 321, 333, 337], "sim": 6, "bullet": 6, "physic": [6, 7, 92, 95, 323, 326, 332, 333], "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 320], "withbullet": 6, "forg": [6, 7], "aihabitat": 6, "nightli": 6, "y": [6, 7, 91, 183, 189, 208, 326, 328, 332], "git": [6, 7, 10], "facebookresearch": 6, "subdirectori": 6, "verbos": 6, "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 49, 74, 78, 92, 98, 138, 250, 332, 338], "command": [6, 7, 10, 328, 332, 333, 338], "readm": [6, 7], "md": [6, 7], "habitatenv": [6, 319], "_has_habitat": 6, "available_env": [6, 70, 71, 72, 73, 74, 77, 78, 79, 83, 84, 85, 86, 92, 96, 97, 98, 338], "startswith": [6, 322, 326], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 75, 250, 326], "env_nam": [6, 70, 72, 77, 83, 85, 89, 95, 326, 328, 338], "llvmlite": 6, "config": [6, 7, 129, 149, 165, 170, 197, 305, 306, 307, 310, 311, 314], "var": [6, 7, 32, 74, 78, 92, 98, 145, 250, 255], "ld_preload": [6, 7], "8": [6, 7, 38, 55, 60, 71, 74, 78, 92, 98, 140, 163, 164, 166, 167, 175, 184, 211, 212, 213, 222, 225, 228, 248, 325, 326, 327, 332, 333, 334, 335, 336, 337], "bind": 6, "deactiv": [6, 7, 216], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 32, 74, 78, 92, 98, 145, 250, 255, 335], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 327], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 52], "stand": [7, 331, 333], "joint": [7, 327], "dynam": [7, 248, 328, 333], "contact": [7, 37], "engin": [7, 95, 333], "biomechan": 7, "graphic": 7, "anim": [7, 332], "area": 7, "demand": [7, 338], "fast": [7, 9, 71, 131, 253, 326, 327, 328], "accur": [7, 52, 53, 55, 327, 333, 335], "articul": 7, "recent": [7, 11, 150, 338], "acquir": [7, 328], "deepmind": [7, 8, 9, 72, 73, 116, 328], "whomev": 7, "licenc": 7, "incorpor": [7, 214, 218, 219, 221, 329, 333], "relianc": 7, "obsolet": 7, "seri": [7, 8, 33, 62, 66, 67, 69, 98, 124, 144, 284, 321, 322, 326, 327, 328, 332, 335, 338], "legaci": 7, "pro": [7, 320], "tip": [7, 320], "glfw": 7, "osmesa": 7, "egl": 7, "advic": [7, 338], "sudo": [7, 320], "enabl": [7, 8, 52, 57, 58, 68, 178, 182, 221, 297, 328, 332, 333, 335], "apt": [7, 332], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 57, 58, 59, 65, 68, 327, 329], "workflow": [7, 211, 212, 213], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "pre": [7, 22, 32, 45, 58, 74, 78, 92, 98, 129, 147, 149, 338], "binari": [7, 24, 27, 33, 106, 173, 199, 216, 217, 223, 224, 239, 242, 263], "setup": [7, 82], "mkdir": 7, "cd": 7, "tag": [7, 284, 289, 317], "earlier": [7, 326, 328, 329, 332, 335], "roboti": 7, "download": [7, 10, 52, 53, 55, 82, 129, 149, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338], "html": [7, 89], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": [7, 13, 14, 92, 98], "obtain": [7, 40, 74, 78, 92, 98, 129, 140, 149, 162, 198, 298, 326, 328, 332], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 34, 36, 45, 56], "bin": [7, 173, 217, 321], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 169, 222, 226, 326, 328, 335], "nvidia": [7, 82], "older": [7, 11], "hack": [7, 326], "line": [7, 32, 74, 78, 92, 98, 327, 332], "adatp": 7, "script": [7, 153, 310, 313, 317, 321, 322, 323, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "unnot": [7, 130], "until": [7, 21, 142, 144, 328, 329, 332], "complet": [7, 9, 64, 78, 107, 139, 320, 322, 326, 328, 331], "mujoco_pi": 7, "trigger": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 327, 335], "troubleshoot": 7, "gl": 7, "h": [7, 107, 109, 132, 143, 176, 177, 178, 180, 181, 182, 186, 284, 327, 329, 335], "eglshim": 7, "fatal": 7, "No": 7, "directori": [7, 34, 36, 39, 45, 52, 53, 55, 57, 289, 323], "devel": 7, "ubuntu": [7, 82], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "38": [7, 325, 326, 327, 329, 332, 333, 335, 336], "disappear": [7, 327, 329, 331], "libstdc": 7, "6": [7, 13, 14, 16, 17, 38, 55, 84, 96, 97, 125, 127, 140, 163, 164, 171, 177, 183, 184, 189, 190, 194, 204, 222, 230, 310, 326, 327, 332, 333, 335, 337, 338], "glibcxx_3": 7, "29": [7, 327, 333, 335], "compil": [7, 32, 74, 78, 92, 98, 176, 177, 180, 181], "libosmesa": 7, "libgcc": 7, "Then": [7, 150, 328, 331], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 26, 28, 32, 74, 78, 92, 98, 124, 145, 255, 338], "job": [7, 18, 19, 20, 22], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 325, 326, 327, 328, 329, 331, 333, 336], "114": [7, 333, 335], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 333], "offscreenopenglcontext": 7, "fail": [7, 22, 26, 28, 105, 153], "opengl": [7, 332], "global": [7, 32, 74, 78, 92, 93, 94, 98, 198, 207, 222, 226, 263, 323, 326, 332], "cuda_visible_devic": 7, "id": [7, 23, 40, 221, 253, 287, 310], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "onscreen": 7, "101": [7, 333, 335], "correctli": [7, 32, 74, 78, 92, 98], "lgl": 7, "libegl": 7, "x11": [7, 332], "xlib": 7, "libx11": 7, "xorg": 7, "loop": [8, 13, 14, 16, 17, 34, 36, 39, 78, 160, 214, 218, 219, 221, 252, 301, 323, 326, 327, 331, 335], "sketch": [8, 323], "_": [8, 35, 38, 41, 42, 52, 53, 54, 55, 75, 82, 100, 108, 112, 114, 115, 123, 125, 131, 143, 151, 210, 225, 230, 234, 235, 236, 238, 242, 248, 252, 253, 255, 257, 265, 266, 267, 268, 326, 327, 328, 329, 332, 333, 335, 337], "n_training_step": 8, "datapoint": [8, 45, 335], "onlin": [8, 13, 17, 107, 170, 197, 235, 240, 251, 252, 292, 317, 328, 329, 332, 335], "n_data_per_train": 8, "no_grad": [8, 32, 74, 78, 92, 98, 123, 176, 177, 180, 181, 265, 266, 267, 268, 328, 329, 332], "replay_buff": [8, 35, 38, 41, 42, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 298, 313, 326, 327, 328, 332, 335], "loss_fn": [8, 329, 337], "backward": [8, 32, 74, 78, 92, 98, 151, 176, 177, 180, 181, 235, 236, 238, 242, 248, 252, 253, 254, 255, 257, 326, 328, 329, 332, 333], "zero_grad": [8, 32, 74, 78, 92, 98, 323, 326, 328, 329, 332, 333], "backpropag": [8, 235, 236, 237, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 263, 332, 333], "differenti": [8, 45, 123, 265, 266, 267, 268, 329, 332, 333], "denomin": 8, "artifact": 8, "numer": [8, 38, 151, 179, 205, 206, 210, 216, 217, 222, 223, 224, 225, 226, 299, 328, 335, 338], "misconcept": 8, "freed": 8, "appear": [8, 33, 333, 335], "compuat": 8, "twice": 8, "fix": [8, 141, 236, 251, 255, 327, 333, 338], "retain_graph": 8, "discuss": [8, 9, 332], "inplac": [8, 32, 34, 36, 39, 74, 78, 92, 98, 145, 255, 326], "accumul": 8, "onto": [8, 33, 34, 36, 39, 157, 210, 214, 216, 217, 221, 222, 223, 224, 225, 226, 329, 333], "exclud": [8, 52, 55, 107, 117, 160, 198, 332, 335], "forward": [8, 32, 74, 78, 92, 98, 105, 107, 108, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 123, 125, 128, 129, 130, 131, 133, 136, 137, 139, 140, 141, 142, 144, 147, 148, 150, 151, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 189, 190, 191, 193, 194, 195, 197, 198, 200, 201, 203, 207, 208, 214, 215, 217, 218, 219, 221, 222, 224, 225, 226, 229, 230, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 257, 263, 265, 266, 267, 268, 269, 322, 333, 337], "submodul": [8, 32, 74, 78, 92, 98, 102, 250], "param": [8, 32, 40, 74, 78, 88, 92, 98, 111, 112, 113, 117, 123, 131, 137, 139, 144, 171, 173, 204, 215, 222, 225, 228, 230, 250, 259, 262, 265, 266, 267, 268, 269, 326, 332, 333, 334, 337], "grad": [8, 32, 74, 78, 92, 98, 326, 328], "whose": [8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 74, 78, 92, 93, 94, 98, 111, 129, 141, 144, 145, 147, 149, 193, 198, 225], "neg": [8, 13, 14, 16, 17, 18, 19, 20, 21, 35, 41, 60, 107, 119, 130, 146, 244, 322, 328, 332, 333], "ask": [8, 326, 328, 329, 332, 334, 338], "much": [8, 13, 14, 35, 41, 60, 92, 98, 249, 252, 328, 332, 333, 335, 338], "render": [8, 297, 326, 327, 328], "upon": [8, 333], "factor": [8, 32, 133, 179, 192, 205, 206, 214, 218, 219, 221, 236, 241, 243, 244, 246, 256, 271, 326, 327, 332, 335, 338], "fit": [8, 11, 125, 322, 323, 326], "bottlneck": 8, "brax": [8, 70, 71, 131, 338], "jax": [8, 11], "improperli": 8, "item": [8, 13, 26, 28, 32, 38, 45, 56, 66, 74, 78, 92, 98, 118, 145, 187, 188, 238, 239, 241, 255, 292, 322, 323, 326, 328, 329, 332, 333, 335], "underli": [8, 74, 78, 92, 98, 250, 333], "tedeiou": 8, "priorit": [8, 35, 41, 60, 238, 239, 241, 242, 248, 253, 255, 257, 326, 327], "amount": [8, 221, 327, 335], "contigu": [8, 55, 74, 78, 92, 98, 157, 328, 332, 333, 335, 337, 338], "costli": [8, 333], "concaten": [8, 21, 30, 31, 107, 108, 125, 144, 180, 184, 228, 326, 327, 332, 333, 335, 338], "constitut": [8, 327, 332, 333], "plain": 8, "profil": 8, "fulli": [8, 32, 74, 78, 92, 98, 177, 181, 327, 333, 335], "frequent": [8, 335], "program": [8, 248, 338], "functorch": [8, 10], "incl": 8, "suit": [8, 73, 328, 338], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "expand": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 225, 228, 250, 332, 333, 337], "new_shap": 8, "permut": [8, 64, 127, 337, 338], "idea": [9, 253, 323, 329, 332], "introductori": 9, "intro": [9, 328, 329], "dai": [9, 337], "2022": [9, 10, 333, 337], "spin": 9, "deep": [9, 107, 166, 167, 168, 169, 172, 221, 235, 247, 255, 256, 326], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": 9, "summari": [9, 125, 151, 326, 327, 328, 329], "reddit": 9, "reagent": 9, "orient": [9, 338], "baselines3": 9, "tf": 9, "bandit": [9, 91], "tensorflow": [9, 187, 188], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": 9, "salina": 9, "sequenti": [9, 32, 74, 78, 92, 98, 123, 227, 228, 252, 321, 328, 329, 332, 333, 334, 338], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 337], "grade": 9, "factori": [9, 43], "throughput": [9, 326], "cherri": 9, "jaxrl": 9, "space": [9, 33, 44, 74, 78, 92, 98, 110, 114, 157, 170, 173, 189, 195, 199, 210, 214, 216, 217, 219, 221, 222, 223, 224, 225, 226, 228, 229, 230, 239, 241, 242, 257, 263, 321, 327, 328, 329, 332, 333, 337, 338], "mbrl": [9, 88, 321], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 333], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 328, 329, 332], "notebook": [10, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338], "24": [10, 55, 327, 329, 333, 335], "11": [10, 27, 33, 45, 57, 58, 68, 75, 143, 162, 186, 325, 326, 327, 328, 329, 332, 333, 335, 336], "12": [10, 55, 57, 58, 68, 96, 97, 325, 326, 327, 332, 333, 335, 336], "pip": [10, 54, 332, 337, 338], "pip3": [10, 328, 329, 332], "extra": [10, 32, 74, 78, 92, 98, 107, 151, 160, 321, 328, 329, 335], "url": 10, "org": [10, 35, 60, 107, 129, 147, 165, 166, 167, 168, 169, 170, 173, 174, 175, 180, 186, 187, 188, 192, 194, 195, 197, 198, 200, 201, 207, 217, 221, 235, 236, 239, 240, 241, 243, 244, 245, 246, 247, 248, 251, 252, 254, 255, 256, 265, 270, 278, 334], "whl": 10, "u": [10, 54, 176, 177, 180, 181, 333], "There": [10, 178, 182, 321, 323, 328, 329, 332, 333, 335, 338], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 250], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 60, 72, 74, 76, 78, 91, 92, 93, 94, 95, 98, 100, 101, 102, 105, 107, 114, 116, 122, 123, 125, 129, 130, 132, 139, 140, 145, 147, 149, 150, 151, 154, 158, 160, 161, 162, 163, 164, 166, 167, 168, 169, 172, 173, 175, 178, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 198, 199, 207, 210, 216, 217, 222, 223, 224, 225, 226, 229, 230, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 257, 260, 263, 264, 265, 266, 267, 268, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 305, 310, 311, 317, 327, 328], "callabl": [11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 74, 75, 78, 88, 92, 98, 104, 116, 234, 306, 307, 315, 316, 317, 327], "from_vers": 11, "to_vers": 11, "intersect": [11, 139], "vs": [11, 178, 182, 183, 337], "longer": [11, 327, 332, 335], "self": [11, 26, 28, 32, 34, 36, 39, 74, 78, 88, 92, 98, 105, 111, 112, 115, 129, 141, 144, 145, 147, 149, 162, 173, 186, 198, 207, 214, 218, 219, 222, 225, 230, 235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 263, 265, 266, 267, 268, 269, 323, 326, 327, 333, 337], "x": [11, 23, 26, 32, 38, 40, 123, 143, 164, 173, 175, 176, 177, 178, 180, 181, 182, 183, 184, 186, 189, 190, 208, 216, 222, 223, 232, 234, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 301, 326, 328, 333, 335, 337], "23": [11, 55, 327, 333, 334], "lambda": [11, 13, 14, 16, 17, 21, 22, 38, 74, 75, 78, 92, 98, 104, 123, 141, 208, 216, 223, 244, 246, 265, 268, 276, 277, 281, 282, 313, 322, 326, 327, 332, 335, 337, 338], "import_modul": 11, "27": [11, 325, 327, 329, 331, 333, 336], "get_class_that_defined_method": 11, "f": [11, 78, 181, 234, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 326, 327, 328, 329, 332, 333, 335, 338], "otherwis": [11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 43, 44, 45, 46, 47, 52, 56, 74, 78, 87, 92, 93, 94, 98, 100, 107, 114, 125, 140, 141, 142, 145, 151, 176, 179, 180, 189, 190, 205, 206, 216, 223, 229, 236, 245, 250, 251, 255, 297, 298, 323, 326, 327, 328, 329, 333, 338], "classmethod": [11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 147, 165, 197], "module_set": 11, "setters_dict": 11, "dict": [11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 34, 36, 39, 55, 74, 75, 78, 92, 93, 94, 98, 100, 101, 123, 141, 145, 150, 151, 163, 164, 165, 166, 167, 168, 169, 170, 175, 183, 184, 197, 222, 226, 255, 288, 289, 297, 306, 307, 310, 315, 316, 317, 326, 327, 328, 338], "setter": 11, "setter_dict": 11, "copi": [11, 18, 19, 20, 21, 32, 34, 36, 39, 40, 45, 74, 78, 92, 98, 131, 140, 145, 160, 178, 182, 215, 250, 255, 322, 326, 327, 329, 335], "kwd": 12, "policy_weight": [12, 13, 14, 16, 17, 19, 20], "tensordictbas": [12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 32, 41, 42, 52, 53, 54, 55, 74, 76, 78, 92, 98, 105, 107, 108, 111, 112, 113, 116, 117, 118, 119, 122, 123, 128, 130, 131, 133, 136, 137, 139, 140, 141, 142, 144, 150, 151, 160, 161, 162, 178, 182, 185, 186, 214, 215, 217, 218, 219, 221, 224, 225, 226, 235, 236, 237, 238, 239, 240, 241, 242, 243, 248, 249, 250, 251, 252, 253, 254, 255, 257, 263, 264, 265, 266, 267, 268, 269, 301, 326, 333], "udpdat": [12, 13, 14, 16, 17, 19, 20], "create_env_fn": [13, 14, 16, 17, 18, 19, 20, 21, 75, 92, 98, 326, 337], "int": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 65, 66, 67, 68, 69, 72, 74, 78, 88, 92, 93, 94, 98, 100, 107, 108, 109, 114, 119, 120, 124, 125, 127, 129, 130, 132, 138, 139, 142, 145, 146, 147, 149, 153, 157, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 197, 198, 199, 200, 201, 203, 204, 205, 207, 208, 214, 215, 216, 217, 218, 219, 221, 222, 224, 225, 226, 235, 236, 237, 242, 244, 245, 249, 250, 251, 252, 253, 257, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 292, 293, 294, 297, 298, 301, 303, 310, 311, 315, 316, 317, 333], "200": [13, 14, 16, 17, 21, 32, 74, 78, 92, 98, 99, 100, 133, 166, 167, 174, 200, 201, 326, 329, 333], "total_fram": [13, 14, 16, 17, 18, 19, 20, 21, 107, 133, 301, 304, 313, 323, 326, 327, 328, 329, 332, 335, 337], "device_typ": [13, 16, 27, 30, 33, 163, 164, 165, 166, 167, 168, 169, 175, 184, 191, 192, 197], "create_env_kwarg": [13, 14, 16, 17, 75, 89, 92, 98, 326], "postproc": [13, 14, 16, 17, 18, 19, 20, 21, 133, 327, 335], "explorationtyp": [13, 14, 16, 20, 21, 250, 297, 326, 327, 328, 329, 337], "interactiontyp": [13, 16, 18, 19, 20, 21, 155, 159, 222, 226, 297], "exploration_mod": [13, 16, 18, 19, 20, 319, 321], "preemptive_threshold": [13, 14], "float": [13, 14, 25, 27, 32, 33, 35, 40, 41, 46, 60, 74, 78, 92, 98, 107, 111, 112, 115, 123, 125, 129, 133, 134, 135, 140, 141, 143, 144, 145, 147, 149, 151, 171, 174, 176, 179, 180, 184, 187, 188, 191, 192, 200, 201, 204, 206, 214, 225, 229, 232, 233, 234, 235, 236, 241, 242, 245, 246, 247, 248, 251, 253, 255, 256, 257, 264, 270, 271, 272, 273, 274, 275, 276, 277, 278, 299, 326, 327, 335, 338], "num_thread": [13, 14, 34, 36, 39, 92, 98], "num_sub_thread": [13, 14, 92, 98], "datacollector": [13, 14, 16, 17, 222, 226, 252, 328], "recept": 13, "safe": [13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 210, 214, 216, 217, 221, 222, 223, 224, 225, 226, 228, 321, 337], "stepcount": [13, 74, 78, 92, 98, 144, 326, 327, 328, 329, 332, 337], "env_mak": [13, 14, 16, 21, 313, 338], "50": [13, 14, 16, 21, 37, 40, 325, 327, 328, 329, 332, 333, 334, 336, 337], "2000": [13, 14, 16, 45, 81, 328, 335], "enumer": [13, 14, 16, 21, 32, 38, 42, 74, 78, 92, 98, 258, 322, 326, 327, 328, 329, 335, 337], "int64": [13, 14, 16, 24, 27, 30, 34, 36, 37, 39, 40, 41, 43, 45, 53, 55, 56, 74, 78, 87, 91, 92, 93, 94, 96, 97, 98, 116, 127, 133, 139, 173, 199, 216, 217, 221, 222, 223, 224, 321, 328, 329, 333, 335, 337, 338], "step_count": [13, 14, 16, 74, 78, 92, 98, 139, 328, 329, 337], "shutdown": [13, 14, 16, 17, 21, 326, 337], "del": [13, 14, 16, 326, 328, 331, 337, 338], "randompolici": [13, 14, 16, 18, 19, 20, 22, 107, 133, 319, 335], "lifespan": [13, 14, 16, 18, 19, 20, 327], "divis": [13, 14, 16, 18, 19, 20, 332], "endless": [13, 14, 16, 18, 19, 20], "dictionari": [13, 14, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 74, 78, 92, 98, 100, 141, 145, 222, 226, 255, 297, 315, 316, 317, 323, 327, 328, 333, 338], "span": [13, 14, 16, 17, 18, 19, 20, 21], "n_step": [13, 14, 16, 17, 18, 19, 20, 21, 32, 327, 328, 332], "independ": [13, 14, 16, 17, 18, 19, 20, 21, 144, 146, 190, 322, 323, 326, 327, 332, 335, 337], "ignor": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 43, 44, 46, 47, 74, 78, 92, 98, 114, 117, 137, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 195, 197, 200, 201, 203, 208, 214, 215, 217, 218, 219, 221, 224, 229, 232, 265, 335], "mainli": [13, 14, 16, 17, 18, 19, 20, 21, 40, 321, 332, 333], "round": [13, 14, 16], "closest": [13, 14, 16], "post": [13, 14, 16, 18, 19, 20, 21, 32, 53, 74, 78, 92, 98], "multistep": [13, 14, 16, 18, 19, 20, 21, 319, 327], "return_same_td": [13, 14, 16], "cautious": [13, 14, 16, 252], "whole": [13, 14, 16, 26, 28, 32, 45, 74, 78, 92, 98, 145, 222, 255, 292, 326, 328], "boolm": [13, 14], "update_policy_weight_": [13, 14], "sync": [13, 14, 18, 19, 20, 21, 303, 313, 323, 326, 337], "async": [13, 14, 18, 19, 20, 21, 150, 326, 337], "ratio": [13, 14, 40, 326, 328], "finish": [13, 14, 21, 78, 133, 338], "rest": [13, 14, 321, 328, 329, 333, 337], "earli": [13, 14, 78, 139, 337], "thread": [13, 14, 34, 36, 39, 89, 92, 98], "equal": [13, 14, 89, 92, 98, 124, 125, 163, 164, 172, 176, 178, 180, 182, 184, 190, 256, 260, 292, 315, 316, 326, 328, 334], "plu": [13, 14, 40, 92, 98, 333], "safeti": [13, 14, 88, 92, 98], "harm": [13, 14, 92, 98], "ordereddict": [13, 14, 16, 17, 21, 32, 74, 78, 92, 98, 145, 151, 255, 327], "form": [13, 14, 17, 32, 35, 38, 41, 42, 52, 53, 54, 55, 74, 78, 92, 98, 151, 176, 178, 180, 182, 234, 235, 237, 249, 252, 301, 321, 332], "worker0": [13, 14, 17], "state_dict0": [13, 14, 17], "worker1": [13, 14, 17], "state_dict1": [13, 14, 17], "reset_idx": [13, 14, 17], "static_se": [13, 14, 16, 17, 21, 74, 78, 92, 98, 145], "integ": [13, 14, 16, 17, 23, 30, 31, 32, 33, 40, 47, 65, 74, 78, 92, 98, 116, 120, 125, 139, 163, 164, 184, 189, 190, 248, 255, 335], "increment": [13, 14, 16, 17, 74, 78, 92, 98, 249], "env_fn": [13, 14, 16, 17, 75, 315, 316], "env_fn_parallel": [13, 14, 16, 17], "100": [13, 14, 16, 17, 32, 35, 38, 41, 42, 43, 52, 53, 54, 55, 57, 58, 74, 78, 92, 98, 110, 116, 125, 133, 139, 189, 217, 293, 313, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "300": [13, 14, 16, 17, 168, 169, 333], "out_se": [13, 14, 16, 17, 338], "shut": [13, 14, 16, 17], "irrevers": [13, 14, 17], "kwarg": [14, 16, 17, 21, 25, 26, 32, 52, 57, 58, 66, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 105, 111, 129, 138, 141, 144, 145, 146, 148, 149, 152, 162, 163, 164, 166, 167, 168, 169, 172, 175, 178, 179, 182, 184, 185, 186, 189, 190, 196, 204, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 263, 264, 265, 266, 267, 268, 269, 284, 288, 289, 291, 294, 301, 306, 307, 310, 314, 315, 316, 322, 328, 332], "tupl": [15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 55, 74, 78, 92, 98, 105, 114, 116, 122, 123, 125, 130, 160, 166, 172, 173, 178, 181, 182, 183, 184, 190, 193, 197, 198, 199, 216, 217, 223, 224, 229, 235, 236, 238, 242, 244, 248, 250, 252, 253, 254, 255, 257, 265, 266, 267, 268, 284, 295, 297, 299, 308, 309, 326], "rand": [15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 55, 71, 84, 88, 105, 112, 115, 162, 186, 222, 235, 236, 238, 239, 241, 242, 248, 252, 253, 255, 257, 333, 337, 338], "describ": [15, 44, 108, 144, 204, 205, 239, 287, 322, 326, 328, 332, 333, 338], "tensor_spec": [15, 105, 161, 242, 252, 254], "boundedtensorspec": [15, 22, 26, 74, 78, 92, 98, 218, 219, 221, 222, 229, 235, 236, 238, 248, 252, 253, 255, 257, 319, 328, 332, 333, 337, 338], "cube": 15, "envcreat": [16, 22, 313, 314, 317, 319, 326, 327, 337, 338], "interruptor": 16, "_interruptor": 16, "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "chunk": 16, "policy_state_dict": 16, "env_state_dict": 16, "close": [16, 17, 78, 89, 123, 235, 237, 249, 252, 326, 331, 333, 337], "pin_memori": [17, 35, 38, 41, 42, 52, 53, 54, 55, 128, 326, 337], "regular": [17, 34, 36, 39, 74, 78, 92, 98, 145, 199, 217, 223, 224, 225, 226, 243, 303, 319, 323, 326, 327, 335, 338], "mere": 17, "greater": [17, 178, 182, 326, 327, 337], "sent": [17, 57, 58, 68, 151], "server": 17, "postprocessor": 17, "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 301], "string": [18, 19, 20, 32, 37, 45, 56, 74, 78, 92, 98, 104, 129, 139, 149, 178, 182, 216, 222, 223, 234, 283, 300, 310, 322, 326, 328, 329], "respect": [18, 19, 20, 32, 74, 78, 92, 98, 106, 111, 112, 115, 129, 130, 141, 144, 145, 147, 149, 176, 180, 189, 201, 225, 230, 296, 328, 329, 332], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 320, 327, 328, 331, 335], "serv": [18, 20, 21, 80, 335, 338], "fashion": [18, 20, 21, 34, 36, 39], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 20, 21, 53, 55, 74, 78, 92, 98, 119], "seen": [18, 20, 21, 322, 326, 327, 329, 332, 335], "turn": [18, 20, 21, 34, 36, 39, 121, 146, 150, 216, 297, 322, 326, 327, 329, 333, 334], "submitit_delai": [18, 22], "former": [18, 19, 20, 35, 38, 41, 42, 52, 74, 78, 92, 98, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 189, 190, 193, 194, 195, 197, 200, 201, 203, 208, 214, 215, 217, 218, 219, 221, 224, 229, 232, 326], "whilst": [18, 19, 20], "latter": [18, 19, 20, 32, 52, 74, 78, 92, 98, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 189, 190, 193, 194, 195, 197, 200, 201, 203, 208, 214, 215, 217, 218, 219, 221, 224, 229, 232, 252, 315, 316], "homonym": [18, 19, 20, 333], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 326], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 33, 222, 226], "tensorpiperpcbackendopt": 20, "_td": [21, 75], "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 315, 316, 326, 327], "coordin": 21, "init": [21, 32, 74, 78, 92, 98, 326, 327, 328], "autodetect": 21, "similarli": [21, 32, 64, 74, 78, 92, 98, 189, 227, 228, 248, 338], "num_cpu": 21, "num_gpu": 21, "1024": [21, 170, 327, 335], "equat": [21, 78, 221, 234, 237, 256, 328, 333], "exce": [21, 328, 335], "indefinit": [21, 51], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 301, 326, 328, 329], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "32": [22, 26, 35, 38, 41, 42, 52, 53, 54, 55, 96, 97, 99, 100, 163, 164, 165, 166, 167, 170, 175, 184, 189, 190, 194, 195, 197, 198, 207, 263, 326, 327, 328, 329, 333, 334, 335, 337, 338], "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": 22, "jump": 22, "host": [22, 32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225], "wherea": [22, 114, 250, 323], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 165, 170, 197, 215], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "rollout_tensordict": 23, "durat": [23, 332], "meta": [23, 44, 52, 76, 323, 328, 332, 335], "aren": [23, 140, 329], "assert_is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "belong": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 150, 151, 321, 326, 332], "encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 114, 195, 196, 200, 234, 321, 327, 328, 329, 333, 335], "ndarrai": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 78, 221, 229], "ignore_devic": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "np": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 78, 229, 333], "cast": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 56, 74, 78, 92, 98, 111, 112, 115, 123, 129, 141, 144, 145, 147, 149, 151, 225, 310, 338], "least": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 110, 338], "complient": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "singleton": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 163, 164, 184, 202, 203], "implements_for_spec": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "torch_funct": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "tensor_to_index": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 338], "project": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 114, 178, 180, 210, 214, 216, 217, 221, 222, 223, 224, 225, 226, 321, 337, 338], "uniform": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 41, 44, 46, 47, 60], "unbound": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 141, 157, 333, 335], "squeez": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 107, 138, 140, 163, 164, 202, 203, 326, 333, 335], "dim": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 107, 108, 127, 141, 146, 151, 181, 183, 203, 208, 317, 327, 328, 333, 335], "to_numpi": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "transformed_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 144, 145, 193, 204, 317], "check_spec_encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "to_one_hot": [24, 27, 30], "hot": [24, 27, 30, 31, 33, 93, 94, 100, 105, 114, 173, 196, 199, 216, 217, 223, 224, 235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 263, 329], "to_one_hot_spec": [24, 27, 30], "onehotdiscretetensorspec": [24, 27, 173, 199, 216, 223, 239, 241, 242, 263, 319, 321], "convert": [24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 74, 78, 92, 98, 111, 112, 115, 129, 141, 144, 145, 147, 149, 151, 225, 234, 250, 326, 327, 328, 333, 335], "type_check": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "fill": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 141, 150, 182, 329, 333, 334], "upper": [25, 124], "unnam": 26, "pixels_spec": 26, "observation_vector_spec": 26, "33": [26, 32, 74, 78, 92, 98, 163, 164, 184, 325, 327, 333, 336], "composite_spec": 26, "observation_vector": [26, 108, 310, 326], "randn": [26, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 57, 58, 68, 125, 157, 165, 170, 173, 176, 177, 180, 181, 183, 187, 188, 189, 193, 196, 197, 199, 210, 211, 212, 213, 215, 216, 222, 223, 225, 228, 229, 230, 235, 236, 238, 239, 241, 242, 248, 252, 253, 254, 255, 257, 265, 266, 267, 268, 300, 321, 337, 338], "td_project": 26, "is_empti": [26, 28, 333], "include_nest": [26, 28], "leaves_onli": [26, 28], "itemsview": 26, "immedi": [26, 28, 32, 74, 78, 92, 98, 264, 332], "children": [26, 28, 32, 74, 78, 92, 98], "keysview": [26, 28], "reflect": [26, 28, 93, 94, 150, 160, 250, 304, 327, 328, 329, 332], "lock_": [26, 28], "recurs": [26, 28, 32, 48, 49, 74, 78, 92, 98, 250], "succeed": [26, 28, 328, 332, 333], "selected_kei": [26, 28, 137, 326], "unlock_": [26, 28], "unlock": [26, 28, 34, 36, 39], "valuesview": 26, "onehottensorspec": 27, "action_valu": [27, 33, 172, 173, 199, 216, 217, 223, 224, 242, 250, 263, 321, 329], "arang": [27, 33, 173, 188, 216, 292, 321, 335], "argmax": [27, 173, 199, 217, 224], "chosen_action_valu": [27, 33, 198, 199, 207, 223, 224, 263, 321, 329], "outcom": [27, 33, 171, 204], "lazi": [28, 29, 49, 50, 74, 78, 92, 98, 100, 129, 147, 163, 191, 227, 228, 326, 327, 331, 335, 338], "represent": [28, 29, 32, 74, 78, 92, 98, 129, 147, 149, 326, 333, 334, 338], "drawn": [28, 29, 141, 218, 222, 226, 328, 332], "lazystackedtensordict": [28, 74, 78, 88, 92, 98, 331, 337], "heterogen": [28, 29, 87, 93, 94, 153, 189, 190, 326, 327], "semant": [28, 29, 321], "thrown": [29, 32, 74, 78, 92, 98, 335], "nvec": [30, 31], "cardin": [30, 31, 173, 199, 216, 217, 224, 328], "ax": [30, 191, 192], "m": [30, 32, 74, 78, 92, 98, 114, 226, 321, 327, 333], "ts": [30, 31], "multionehotdiscretetensorspec": [30, 239, 242, 263, 319], "use_regist": [31, 33], "to_categor": [31, 33], "to_categorical_spec": [31, 33], "multidiscretetensorspec": [31, 319], "gamma": [32, 133, 186, 235, 236, 238, 239, 241, 242, 243, 244, 246, 248, 250, 252, 253, 254, 255, 257, 258, 259, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 313, 322, 326, 327, 328, 332, 337], "sutton": [32, 322, 332], "1988": 32, "tempor": [32, 178, 182, 186, 266, 267, 272, 273], "44": [32, 327, 333], "discount": [32, 75, 133, 236, 241, 243, 244, 246, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 322, 327, 328, 332], "ahead": [32, 338], "add_modul": [32, 74, 78, 92, 98], "child": [32, 74, 78, 92, 98], "fn": [32, 37, 74, 78, 92, 98, 193, 315, 316], "init_weight": [32, 74, 78, 92, 98], "fill_": [32, 74, 78, 92, 98, 327, 329, 338], "net": [32, 74, 78, 92, 98, 183, 190, 235, 236, 242, 248, 252, 253, 254, 255, 310, 313, 327, 333, 334, 337], "in_featur": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 163, 164, 166, 167, 168, 169, 183, 184, 190, 191, 192, 211, 225, 239, 241, 337], "out_featur": [32, 74, 78, 88, 92, 98, 111, 129, 141, 144, 145, 147, 149, 162, 163, 164, 166, 167, 168, 169, 174, 175, 178, 182, 183, 184, 186, 189, 190, 191, 192, 211, 216, 225, 239, 241, 321, 326, 329, 337], "bia": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 163, 164, 174, 176, 177, 178, 180, 181, 182, 184, 190, 191, 192, 193, 218, 219, 221, 225, 232, 233, 234, 250, 255, 322, 326, 327, 328, 329, 332, 337], "requires_grad": [32, 74, 78, 92, 98, 123], "bfloat16": [32, 74, 78, 92, 98], "datatyp": [32, 74, 78, 92, 98, 335], "member": [32, 74, 78, 92, 98, 250], "xdoctest": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225, 250, 255], "skip": [32, 74, 78, 92, 98, 120, 145, 153, 222, 226, 250, 255, 265, 266, 267, 268, 283, 284, 294, 297, 326, 327, 328, 333], "buf": [32, 74, 78, 92, 98], "20l": [32, 74, 78, 92, 98, 250], "1l": [32, 74, 78, 92, 98, 250], "5l": [32, 74, 78, 92, 98, 250], "__call__": [32, 37, 74, 78, 92, 98, 226, 323], "doubl": [32, 46, 74, 78, 92, 98, 111, 112, 113, 115, 129, 141, 144, 145, 147, 149, 225, 239, 243, 247, 253, 256, 263, 326, 327, 328, 329, 338], "eval": [32, 74, 78, 92, 98, 145, 151, 326, 327, 328], "evalu": [32, 74, 78, 92, 98, 145, 171, 187, 188, 196, 206, 253, 306, 307, 327, 328], "dropout": [32, 74, 78, 92, 98, 145, 176, 178, 180, 182, 184, 329], "batchnorm": [32, 74, 78, 92, 98, 145], "disabl": [32, 74, 78, 92, 98, 145, 179, 206, 326], "comparison": [32, 74, 78, 92, 98, 145, 250, 326, 327], "similar": [32, 74, 78, 92, 93, 94, 98, 111, 129, 141, 144, 145, 147, 148, 149, 151, 211, 213, 222, 225, 226, 322, 326, 327, 328, 329, 333, 338], "confus": [32, 74, 78, 92, 98, 145], "extra_repr": [32, 74, 78, 92, 98], "shift": [32, 232, 265, 266, 267, 268, 328], "nontermin": 32, "original_reward": 32, "newli": [32, 74, 78, 92, 98], "OR": 32, "reshap": [32, 178, 182, 184, 328, 332], "get_buff": [32, 74, 78, 92, 98], "throw": [32, 34, 36, 39, 74, 78, 92, 98, 338], "docstr": [32, 74, 78, 92, 98], "get_submodul": [32, 74, 78, 92, 98], "explan": [32, 74, 78, 92, 98], "qualifi": [32, 74, 78, 92, 98], "referenc": [32, 74, 78, 92, 98], "attributeerror": [32, 74, 78, 92, 98], "invalid": [32, 74, 78, 92, 98, 101, 187, 188], "resolv": [32, 74, 78, 92, 98], "someth": [32, 74, 78, 87, 92, 98, 320, 327, 328, 333, 338], "get_extra_st": [32, 74, 78, 92, 98, 151], "set_extra_st": [32, 74, 78, 92, 98, 151], "picklabl": [32, 74, 78, 92, 98, 151], "pickl": [32, 74, 78, 92, 98, 151], "get_paramet": [32, 74, 78, 92, 98], "sai": [32, 74, 78, 92, 98, 189, 334, 338], "net_b": [32, 74, 78, 92, 98], "net_c": [32, 74, 78, 92, 98], "conv": [32, 74, 78, 92, 98, 163, 164, 327], "conv2d": [32, 74, 78, 92, 98, 164, 189, 337], "kernel_s": [32, 74, 78, 92, 98, 163, 164, 166, 167, 189, 194, 327, 337], "stride": [32, 74, 78, 92, 98, 163, 164, 166, 167, 175, 189, 327, 337], "diagram": [32, 74, 78, 92, 98], "degre": [32, 74, 78, 92, 98], "named_modul": [32, 74, 78, 92, 98], "o": [32, 74, 78, 92, 98, 181], "transit": [32, 52, 74, 78, 92, 98, 231, 326, 329, 333, 335], "half": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225, 326], "ipu": [32, 74, 78, 92, 98], "strict": [32, 34, 36, 39, 74, 78, 92, 98, 145, 255], "descend": [32, 74, 78, 92, 98, 145, 255], "persist": [32, 74, 78, 92, 98, 145, 160, 255], "enforc": [32, 64, 74, 78, 92, 98, 145, 227, 255, 333], "preserv": [32, 74, 78, 92, 98, 145, 255], "missing_kei": [32, 74, 78, 92, 98, 145, 255], "unexpected_kei": [32, 74, 78, 92, 98, 145, 255], "namedtupl": [32, 74, 78, 92, 98, 145, 255], "duplic": [32, 64, 74, 78, 92, 98, 239, 243, 250, 263], "l": [32, 74, 78, 92, 98, 176, 180, 264, 328, 333], "idx": [32, 74, 78, 92, 98], "named_buff": [32, 74, 78, 92, 98], "remove_dupl": [32, 74, 78, 92, 98, 250], "prepend": [32, 74, 78, 92, 98, 250], "running_var": [32, 74, 78, 92, 98], "named_children": [32, 74, 78, 92, 98], "conv4": [32, 74, 78, 92, 98], "conv5": [32, 74, 78, 92, 98], "memo": [32, 74, 78, 92, 98], "named_paramet": [32, 74, 78, 92, 98, 123, 250], "register_backward_hook": [32, 74, 78, 92, 98], "removablehandl": [32, 74, 78, 92, 98], "deprec": [32, 74, 78, 92, 98, 145, 154, 158, 172, 219, 235, 237, 239, 242, 243, 248, 249, 252, 253, 254, 255, 263, 265, 266, 267, 268, 273, 338], "favor": [32, 74, 78, 92, 98, 328], "register_full_backward_hook": [32, 74, 78, 92, 98], "register_buff": [32, 74, 78, 92, 98], "running_mean": [32, 74, 78, 92, 98], "alongsid": [32, 74, 78, 92, 98, 332], "num_featur": [32, 74, 78, 92, 98], "register_forward_hook": [32, 74, 78, 92, 98, 173, 199], "with_kwarg": [32, 74, 78, 92, 98], "always_cal": [32, 74, 78, 92, 98], "posit": [32, 35, 38, 41, 42, 52, 53, 54, 55, 74, 78, 92, 98, 119, 120, 138, 139, 142, 145, 146, 193, 255, 322, 328, 332, 333, 335], "signatur": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225, 322, 326, 333], "register_module_forward_hook": [32, 74, 78, 92, 98], "regardless": [32, 74, 78, 92, 98, 237, 249, 252], "register_forward_pre_hook": [32, 74, 78, 92, 98], "invok": [32, 74, 78, 92, 98], "And": [32, 74, 78, 92, 98], "forward_pr": [32, 74, 78, 92, 98], "register_module_forward_pre_hook": [32, 74, 78, 92, 98], "grad_input": [32, 74, 78, 92, 98], "grad_output": [32, 74, 78, 92, 98], "subsequ": [32, 74, 78, 92, 98, 329], "technic": [32, 74, 78, 92, 98, 327, 329], "caller": [32, 74, 78, 92, 98], "register_module_full_backward_hook": [32, 74, 78, 92, 98], "register_full_backward_pre_hook": [32, 74, 78, 92, 98], "backward_pr": [32, 74, 78, 92, 98], "register_module_full_backward_pre_hook": [32, 74, 78, 92, 98], "register_load_state_dict_post_hook": [32, 74, 78, 92, 98], "incompatible_kei": [32, 74, 78, 92, 98], "clear": [32, 74, 78, 82, 92, 98, 293], "register_modul": [32, 74, 78, 92, 98, 323], "alia": [32, 74, 78, 92, 98], "register_paramet": [32, 74, 78, 92, 98], "register_state_dict_pre_hook": [32, 74, 78, 92, 98], "keep_var": [32, 34, 36, 39, 74, 78, 92, 98, 145, 255], "requires_grad_": [32, 74, 78, 92, 98], "autograd": [32, 74, 78, 92, 98, 145, 255], "freez": [32, 74, 78, 92, 98], "finetun": [32, 74, 78, 92, 98], "gan": [32, 74, 78, 92, 98], "share_memori": [32, 74, 75, 78, 92, 98, 326], "share_memory_": [32, 74, 78, 92, 98, 337], "destin": [32, 34, 36, 39, 74, 78, 92, 98, 112, 113, 115, 145, 147, 151, 160, 255, 284], "averag": [32, 74, 78, 92, 98, 145, 151, 221, 244, 245, 255, 299, 326, 328], "shallow": [32, 74, 78, 92, 98, 145, 255, 329], "pleas": [32, 53, 74, 78, 92, 93, 94, 98, 107, 142, 145, 255, 320], "detach": [32, 74, 78, 92, 98, 145, 250, 255, 265, 266, 267, 268, 326], "non_block": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225, 329], "memory_format": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225], "channels_last": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225], "complex": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225, 326, 327], "integr": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 169, 178, 182, 186, 225, 321, 332, 333, 334], "unchang": [32, 74, 78, 92, 98, 111, 114, 129, 141, 144, 145, 147, 149, 218, 225, 298, 326, 335], "tri": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225], "pin": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225], "4d": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225], "ignore_w": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225], "1913": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225], "3420": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225], "5113": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225], "2325": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225], "torch_doctest_cuda1": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225], "gpu1": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225], "1914": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225], "5112": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225, 333], "2324": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225], "float16": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 177, 181, 225], "cdoubl": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225], "3741": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225], "j": [32, 35, 60, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225, 323], "2382": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225], "5593": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225, 333], "4443": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225], "complex128": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225], "6122": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225], "1150": [32, 74, 78, 92, 98, 111, 129, 141, 144, 145, 147, 149, 225], "to_empti": [32, 74, 78, 92, 98], "dst_type": [32, 74, 78, 92, 98], "xpu": [32, 74, 78, 92, 98], "set_to_non": [32, 74, 78, 92, 98], "unidimension": 33, "keepdim": 33, "user_regist": 33, "priori": 33, "definit": [33, 65, 189], "uniqu": [33, 107, 116, 140, 141, 142, 335], "discretebox": [33, 74, 78, 92, 98, 328, 332, 338], "chosen_data": [34, 56], "rewarddata": [34, 56, 319], "rejected_data": [34, 56], "from_dataset": [34, 36, 56], "dataset_nam": [34, 36, 40, 45, 56, 91], "max_length": [34, 36, 37, 43, 45, 56], "550": [34, 36, 40, 45, 56, 333], "root_dir": [34, 36, 45, 56], "from_disk": [34, 36, 45, 56], "num_work": [34, 36, 45, 56, 89, 92, 98, 326, 327], "carperai": [34, 36, 40, 45], "openai_summarize_comparison": [34, 36, 45], "sequen": [34, 36], "cach": [34, 36, 45, 52, 53, 55, 56, 74, 78, 92, 98, 112, 115, 129, 145, 149, 293, 334], "load_from_disk": [34, 36, 45, 56], "load_dataset": [34, 36, 45, 56], "attention_mask": [34, 36, 37, 39, 40, 43, 45, 56], "memorymappedtensor": [34, 36, 45, 57, 334], "92534": 34, "input_id": [34, 36, 37, 39, 40, 43, 45, 56], "end_scor": [34, 39, 40, 56], "sub_data": [34, 36], "from_dict": [34, 36, 39, 45], "batch_dim": [34, 36, 39, 45, 317], "determin": [34, 35, 36, 39, 41, 52, 60, 74, 78, 92, 98, 129, 149, 189, 221, 327, 332], "input_dict": [34, 36, 39], "exclusinv": [34, 36, 39], "__maximum__": [34, 36, 39], "toler": [34, 36, 39, 171, 204], "sie": [34, 36, 39], "input_td": [34, 36, 39], "from_tensordict": [34, 36, 39], "non_tensordict": [34, 36, 39], "_no_default_": [34, 36, 39], "getattr": [34, 36, 39], "tensorclass": [34, 36, 39, 56, 57, 58, 68], "from_flatten": [34, 36, 39], "attemptedli": [34, 36, 39], "memmap": [34, 36, 39, 57, 92, 98, 151, 298, 335], "copy_exist": [34, 36, 39], "return_earli": [34, 36, 39], "mimic": [34, 36, 39, 74, 78, 92, 98], "renam": [34, 36, 39, 131, 133, 160, 326], "cross": [34, 36, 39, 162], "anymor": [34, 36, 39, 145, 225], "tensordictfutur": [34, 36, 39], "deepli": [34, 36, 39], "insid": [34, 36, 39, 338], "memmap_": [34, 36, 39, 151], "memmap_lik": [34, 36, 39], "contentless": [34, 36, 39], "1_000_000": [34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 55, 326, 329], "alloc": [34, 36, 39, 58, 187, 188, 326], "setattr": [34, 36, 39], "tent": [34, 36, 39, 45], "flatten": [34, 36, 39, 119, 298, 329, 332], "to_tensordict": [34, 36, 39, 329], "unbind": [34, 36, 39, 178, 182], "alpha": [35, 41, 60, 163, 164, 189, 236, 242, 251, 253, 255, 326, 335, 337], "ep": [35, 41, 60, 151, 221, 237, 256, 299, 326, 327, 329], "1e": [35, 41, 60, 151, 171, 174, 193, 204, 326, 327, 328, 332], "08": [35, 41, 60, 326, 327, 328, 332, 333], "collate_fn": [35, 38, 41, 42, 52, 53, 54, 55, 335, 337], "prefetch": [35, 38, 41, 42, 52, 53, 54, 55, 56, 326, 327, 329, 335], "schaul": [35, 60], "quan": [35, 60], "antonogl": [35, 60], "silver": [35, 60], "2015": [35, 60], "arxiv": [35, 60, 107, 129, 147, 165, 166, 167, 168, 169, 170, 173, 174, 175, 180, 186, 192, 194, 195, 197, 198, 200, 201, 207, 217, 221, 235, 236, 239, 240, 241, 243, 244, 245, 246, 247, 248, 251, 252, 255, 256, 265, 270, 278, 334], "ab": [35, 60, 129, 147, 151, 165, 170, 174, 175, 180, 186, 192, 194, 195, 197, 198, 200, 201, 207, 235, 236, 239, 240, 241, 244, 245, 246, 247, 248, 251, 252, 255, 334], "1511": [35, 60, 175], "05952": [35, 60], "expon": [35, 41, 60], "\u03b1": [35, 41, 60], "delta": [35, 41, 60, 176, 180, 204, 222, 226, 319, 322], "null": [35, 41, 60, 106], "max_siz": [35, 38, 41, 42, 57, 58, 59, 65, 68], "1_000": [35, 38, 41, 42, 335], "merg": [35, 38, 41, 42, 52, 53, 54, 55, 333], "mini": [35, 38, 41, 42, 52, 53, 54, 55, 332], "decid": [35, 38, 41, 42, 337], "meth": [35, 38, 41, 42, 250, 333], "incompat": [35, 38, 41, 42, 335], "drop_last": [35, 38, 41, 42, 64], "return_info": [35, 38, 41, 42, 52, 53, 54, 55, 335], "tensordictprioritizedreplaybuff": [35, 319, 337], "simplifi": [35, 333, 335], "manual_se": [35, 38, 41, 42, 55, 105, 114, 125, 133, 136, 140, 142, 187, 188, 196, 210, 217, 218, 219, 221, 229, 235, 236, 238, 248, 255, 332, 333, 337, 338], "_weight": [35, 41, 335, 337], "arrai": [35, 40, 116, 176, 177, 180, 181, 326, 335], "update_prior": [35, 60, 298, 323, 327, 335, 337], "36278465": 35, "tempfil": [35, 38, 41, 42, 45, 52, 53, 54, 55, 313, 326, 327, 335], "tqdm": [35, 38, 41, 42, 52, 53, 54, 55, 301, 326, 328, 329, 332, 333], "randomsampl": [35, 38, 41, 42, 52, 53, 54, 55, 319, 326], "td_error": [35, 38, 41, 42, 52, 53, 54, 55, 238, 239, 241, 242, 243, 248, 250, 253, 255, 257, 263, 326, 335, 337], "update_tensordict_prior": [35, 38, 41, 42, 52, 53, 54, 55, 326, 335, 337], "temporarydirectori": [35, 38, 41, 42, 45, 52, 53, 54, 55, 326, 327, 335], "tmpdir": [35, 38, 41, 42, 45, 52, 53, 54, 55, 326, 327], "rb_load": [35, 38, 41, 42, 52, 53, 54, 55], "cursor": [35, 38, 41, 42, 52, 53, 54, 55], "insert_transform": [35, 38, 41, 42, 52, 53, 54, 55], "insert": [35, 38, 41, 42, 52, 53, 54, 55, 62, 66, 67, 69, 146], "prompt_rindex": [36, 37, 40], "label": [36, 37, 40, 45, 326, 335], "os": [36, 45, 56, 327], "cpu_count": [36, 45, 56], "promptdatatldr": 36, "116722": 36, "prompt": [37, 40], "return_tensordict": [37, 43], "recip": [37, 74, 78, 92, 98, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 189, 190, 193, 194, 195, 197, 200, 201, 203, 208, 214, 215, 217, 218, 219, 221, 224, 229, 232], "text": [37, 40, 43, 53, 176, 177, 180, 181, 221, 328], "tensodict": [37, 43], "orign": [37, 43], "valid_sampl": 37, "identifi": 37, "eough": 37, "toknen": 37, "meet": 37, "criterion": 37, "autotoken": [37, 43, 45], "from_pretrain": [37, 40, 43], "gpt2": [37, 40, 43, 45, 165, 170, 197], "pad_token": [37, 43], "eos_token": 37, "enough": [37, 335], "inde": [37, 114, 328, 333], "roundrobinwrit": [38, 42, 52, 53, 54, 55, 319], "Not": 38, "ref_model": 40, "reward_model": [40, 231], "kl_coef": 40, "max_new_token": 40, "score_clip": 40, "kl_schedul": 40, "klcontrollerbas": 40, "num_step": 40, "causal": 40, "sentenc": 40, "frozen": [40, 123], "kl": [40, 123, 245, 249], "penalti": [40, 249], "strai": 40, "far": [40, 179, 205, 206, 333, 338], "calcul": [40, 133, 176, 241], "gpt2rewardmodel": 40, "get_dataload": [40, 319], "promptdata": [40, 319], "gpt2lmheadmodel": 40, "dl": 40, "block_siz": [40, 56], "tensorclass_typ": [40, 56], "openai_summarize_tldr": 40, "config_class": 40, "model_path": 40, "rollout_from_model": 40, "rollout_from_data": 40, "600": [40, 333, 335], "reward_kl": [40, 123], "reward_raw": 40, "sample_log_prob": [40, 211, 212, 213, 222, 226, 228, 252, 310, 328, 332, 337], "create_rollout_td": 40, "log_prob": [40, 171, 187, 188, 196, 206, 226], "log_ratio": 40, "replic": 40, "rindex": 40, "multipli": [40, 176, 180, 236, 237, 242, 249, 251, 252, 253, 255, 299, 326], "term": [40, 123, 180, 181, 191, 192, 234, 235, 242, 303, 327, 328, 332], "subtract": [40, 140], "ve": [40, 326, 329], "eo": 40, "limit": [40, 88, 107, 123, 326, 327, 329, 332, 333], "generation_config": 40, "generationconfig": 40, "ti": [40, 274, 275, 276, 277, 279, 280, 281, 282, 327], "log_probs_gen": 40, "logprobs_of_label": 40, "priority_kei": [41, 42, 239, 242, 243, 248, 250, 253, 255, 257, 263, 335, 337], "reduct": [41, 60], "prioritizedreplaybuff": [41, 319, 337], "min": [41, 60, 204, 205, 206, 215, 221, 236, 237, 242, 251, 253, 255, 327, 328, 332], "median": [41, 60, 222, 226], "include_info": [41, 42, 52, 53, 54, 55], "kw": [42, 62, 67], "int32": [42, 84, 157], "huggingfac": [43, 220], "co": [43, 116, 333], "doc": [43, 327, 332], "pad_trunc": 43, "am": 43, "worri": 43, "me": 43, "reassur": 43, "ok": 43, "tokenizer_fn": 45, "tensordicttoken": [45, 319], "pre_tokenization_hook": 45, "valid_s": 45, "tokenizer_class": 45, "tokenizer_model_nam": 45, "tokein": 45, "condit": [45, 140, 216, 217, 223, 224, 234, 326, 333, 335], "elementwis": 45, "vocabulari": 45, "loader": [45, 328], "185068": 45, "dataset_to_tensordict": 45, "data_dir": 45, "nestedkei": [45, 105, 106, 107, 108, 109, 110, 112, 114, 115, 116, 117, 119, 121, 122, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 142, 143, 144, 147, 151, 160, 161, 214, 215, 218, 219, 221, 226, 239, 263, 284], "valid_mask_kei": 45, "conver": 45, "undergon": 45, "preprocess": [45, 327], "batch_dimens": 45, "filder": 45, "randint": [45, 143, 335], "data_memmap": 45, "exclus": [48, 49, 119, 176, 178, 180, 182, 187, 188, 216, 217, 223, 224, 256, 257, 265, 266, 267, 268, 269, 317, 321], "recurse_through_entri": 49, "recurse_through_stack": 49, "consolid": 49, "from_env": 52, "use_truncated_as_don": 52, "direct_download": 52, "terminate_on_end": 52, "env_kwarg": [52, 53, 55, 315, 316, 326], "reconstruct": [52, 245, 326, 338], "recov": [52, 53, 55, 214, 219, 221, 227, 248, 331], "regard": [52, 53, 55, 173, 217, 235, 243, 252, 326, 328, 333], "get_dataset": 52, "qlearning_dataset": 52, "fewer": 52, "left": [52, 111, 112, 113, 117, 123, 129, 131, 137, 139, 142, 144, 147, 149, 218, 327, 328], "possess": 52, "unexpectedli": 52, "episod": [52, 55, 78, 133, 136, 140, 162, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 327, 332], "absent": [52, 74, 78, 92, 98], "traj_split": 52, "dataset_id": [52, 53, 55], "observationnorm": [52, 151, 317, 326, 327, 328, 329, 337], "maze2d": 52, "umaz": 52, "128": [52, 167, 170, 327, 329, 333, 334, 335], "loc": [52, 123, 125, 135, 179, 193, 205, 206, 211, 212, 213, 222, 226, 228, 235, 236, 248, 252, 253, 254, 255, 305, 310, 317, 321, 326, 327, 328, 329, 332, 337], "minari": [53, 55], "available_dataset": [53, 55], "currenrtli": 53, "minari_data": 53, "door": 53, "28": [53, 189, 327, 333], "39": [53, 327, 329, 333, 334], "door_body_po": 53, "qpo": 53, "30": [53, 124, 200, 201, 326, 327, 328, 332, 333], "qvel": 53, "dua": 54, "graff": 54, "2017": 54, "uci": 54, "archiv": 54, "ic": 54, "edu": 54, "ml": 54, "sklearn": 54, "adult_num": [54, 91], "adult_onehot": [54, 91], "mushroom_num": [54, 91], "mushroom_onehot": [54, 91], "covertyp": [54, 91], "shuttl": [54, 91], "magic": [54, 91], "roboset": 55, "h5": 55, "mmap": 55, "googl": [55, 70, 71, 328, 329, 332], "roboh": [55, 95], "excludetransform": [55, 137, 335], "fk1": 55, "v4": [55, 274, 275, 276, 277, 279, 280, 281, 282, 326, 328, 334], "expert": 55, "fk1_microopenrandom_v2d": 55, "concis": 55, "17": [55, 310, 326, 327, 328, 332, 333, 334, 335], "18": [55, 96, 97, 99, 100, 190, 327, 328, 329, 332, 333, 338], "15": [55, 74, 78, 92, 98, 215, 221, 244, 325, 326, 327, 328, 329, 332, 333, 335, 336], "19": [55, 66, 326, 327, 328, 329, 333, 334], "75": [55, 326, 327, 333, 334], "infinit": [56, 335], "three": [56, 321, 323, 328, 332, 333, 335, 338], "block": [56, 321, 329], "pairwisedataset": [56, 319], "256": [56, 170, 327, 328, 332, 333], "scratch_dir": [57, 326, 335], "mistak": [57, 58, 68], "myclass": [57, 58, 68], "foo": [57, 58, 68, 215, 335, 338], "bar": [57, 58, 68, 215, 294, 295, 297, 301, 323, 327], "attach": [57, 58, 59, 65, 68, 327], "entiti": [57, 58, 59, 65, 68], "auto": [58, 68, 150, 221, 236, 242, 251, 253, 255, 257, 322, 332], "zero_": [58, 68, 157], "max_capac": [60, 326, 335], "uniformli": [61, 250, 338], "roundrobin": [62, 67], "piec": [62, 67, 69, 326, 327, 328, 332, 333, 335], "consum": [64, 327, 328, 332, 335], "incomplet": 64, "unlik": [64, 243, 252, 327, 337], "fresh": 64, "caution": [64, 153, 338], "shuffl": [64, 332], "haven": [64, 334], "remain": [64, 113, 114, 123, 140, 192], "draw": [64, 218], "__len__": 65, "rank_kei": 66, "rank": [66, 162], "samplerwithoutreplac": [66, 319, 328, 332, 335], "get_insert_index": 66, "ant": [70, 71, 81, 334], "get_environ": 71, "87": [71, 326, 327, 333, 334], "acrobot": [71, 338], "fetch": [71, 123, 334, 335], "task_nam": 72, "cheetah": [72, 73, 326], "frame_skip": [72, 73, 77, 78, 83, 85, 86, 120, 294, 297, 304, 323, 326, 327, 328, 337], "dm_control": [73, 326, 331, 338], "continuousbox": [74, 78, 92, 98, 157, 328, 332, 333, 337, 338], "unboundedcontinuoustensorspec": [74, 78, 88, 92, 98, 105, 112, 115, 141, 157, 162, 186, 210, 225, 228, 230, 254, 319, 328, 329, 332, 333, 338], "sort": [74, 78, 92, 98, 221], "depth": [74, 78, 88, 92, 98, 162, 163, 164, 166, 167, 168, 169, 174, 175, 184, 186, 189, 190, 194, 195, 216, 321, 327, 331, 332], "another_act": [74, 78, 92, 98], "mutabl": [74, 78, 92, 98], "batch_lock": [74, 76, 78, 92, 98, 141, 145, 333], "immut": [74, 78, 92, 98, 131, 145], "done_keys_group": [74, 78, 92, 98], "outer": [74, 78, 92, 98, 323, 326, 327, 338], "another_don": [74, 78, 92, 98], "empty_cach": [74, 78, 92, 98, 145], "fake_tensordict": [74, 78, 92, 98, 327], "fake": [74, 78, 92, 98, 326, 327], "afterward": [74, 78, 92, 98, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 189, 190, 193, 194, 195, 197, 200, 201, 203, 208, 214, 215, 217, 218, 219, 221, 224, 229, 232, 338], "silent": [74, 78, 92, 98, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 189, 190, 193, 194, 195, 197, 200, 201, 203, 208, 214, 215, 217, 218, 219, 221, 224, 229, 232], "braxenv": [74, 78, 92, 98, 131, 319], "envnam": [74, 78, 92, 98], "renametransform": [74, 78, 92, 98], "pipeline_st": [74, 78, 92, 98], "attibut": [74, 78, 92, 98], "speak": [74, 78, 92, 98, 326], "rand_act": [74, 78, 87, 92, 93, 94, 98], "_step": [74, 78, 92, 98, 105, 112, 115, 119, 131], "reset_kei": [74, 78, 92, 98, 107, 136, 140, 141, 142], "multitask": [74, 78, 92, 98], "multiag": [74, 78, 87, 92, 93, 94, 98, 161, 190, 198, 207, 263], "another_reward": [74, 78, 92, 98], "callback": [74, 78, 92, 98, 332], "auto_reset": [74, 78, 92, 98, 333], "auto_cast_to_devic": [74, 78, 92, 98, 332], "break_when_any_don": [74, 78, 92, 98, 332], "return_contigu": [74, 78, 92, 98, 153, 331], "soon": [74, 78, 92, 93, 94, 98], "ndim": [74, 78, 92, 98], "concomitt": [74, 78, 92, 98], "workspac": [74, 78, 92, 98], "prevail": [74, 78, 92, 98, 136, 161], "cartpol": [74, 78, 92, 98, 107, 136, 140, 327, 329, 335, 338], "creator": [75, 306, 307, 315, 316, 317], "substitut": [75, 140, 151], "vecnorm": [75, 317], "env_creat": [75, 326], "test_env1": 75, "observation_count": [75, 338], "test_env2": 75, "sleep": [75, 338], "ps": 75, "p1": 75, "p2": 75, "9934": 75, "env_str": 76, "info_dict_read": 78, "set_info_dict_read": 78, "put": [78, 100, 151, 317, 321, 327, 328, 329, 333], "read_act": 78, "read_don": 78, "reader": [78, 327], "interrupt": [78, 271], "nonsens": 78, "fallback": 78, "broken": [78, 153], "read_ob": 78, "dictat": [78, 222, 226, 252, 326, 333], "read_reward": 78, "baseinfodictread": 78, "info_dict": 78, "hoc": 78, "dict_read": 78, "default_info_dict_read": 78, "my_info_kei": 78, "some_env": 78, "placehold": [80, 116, 145], "secur": 80, "isaacgym": [81, 82], "isaacgymwrapp": [81, 319], "isaacgymenv": [82, 319], "webpag": 82, "isaac": 82, "essenc": 82, "04": [82, 326, 327, 328, 333, 334], "snake": [83, 84], "6x6": [83, 84], "td1": [84, 235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 263, 326], "12x12": 84, "tsp50": 84, "tsp100": 84, "mo": [85, 86], "minecart": [85, 86], "mo_gym": 86, "qualnam": 87, "marl": [87, 101, 107, 142, 189, 332], "leverag": [87, 93, 94, 326, 332, 338], "neural": [87, 93, 94, 163, 164, 202, 225, 321, 327, 328, 329, 332, 333, 338], "group_map": [87, 93, 94, 100, 101], "constructiuon": [87, 93, 94], "premad": [87, 93, 94, 100, 263], "all_in_one_group": [87, 101], "agent_0": [87, 93, 94, 101], "agent_1": [87, 93, 94, 101], "agent_2": [87, 93, 94, 101], "agent_3": 87, "int8": [87, 93, 94], "one_group_per_ag": [87, 93, 94], "environn": 88, "constraint": [88, 328, 332], "mymbenv": [88, 162, 186], "world_model": [88, 162, 186, 245], "super": [88, 105, 112, 115, 162, 173, 186, 230, 236, 238, 242, 248, 253, 255, 257, 326, 333, 337], "hidden_observ": [88, 162, 186], "mlp": [88, 162, 163, 164, 166, 167, 168, 169, 178, 182, 183, 186, 190, 211, 216, 239, 241, 310, 321, 327, 331, 334, 337], "worldmodelwrapp": [88, 162, 186], "activation_class": [88, 162, 163, 164, 166, 167, 168, 169, 174, 175, 184, 186, 189, 190, 327, 332, 337], "relu": [88, 162, 170, 186, 193, 234], "activate_last_lay": [88, 162, 169, 184, 186], "run_type_check": 88, "less": [89, 208, 315, 316, 322, 328, 329, 335, 337], "readthedoc": 89, "en": 89, "python_interfac": 89, "task_id": 89, "106": [91, 333], "my_env_fun": [92, 98], "custom_attribute_list": [92, 98], "custom_attribut": [92, 98], "custom_method_list": [92, 98], "custom_method": [92, 98], "deploi": [92, 98], "slight": [92, 98, 327], "share_individual_td": [92, 98], "shared_memori": [92, 98], "policy_proof": [92, 98], "ll": [92, 98, 176, 177, 180, 181, 326, 327, 328, 329, 332, 338], "hidden": [92, 98, 174, 176, 177, 178, 180, 181, 182, 183, 194, 195, 200, 201, 211, 212, 213, 215, 225, 228, 237, 249, 252, 321, 329, 331, 337], "introduc": [92, 98, 176, 178, 180, 182, 221, 326], "drastic": [92, 335], "influenc": 92, "rule": [92, 112, 115, 226, 321, 328], "thumb": [92, 328], "suppos": [92, 297, 323, 338], "scenario": [92, 99, 100, 326, 332, 333], "myenv": [92, 112, 115], "update_kwarg": [92, 98], "pettingzoo": [93, 94], "pet": [93, 94], "zoo": [93, 94], "guid": [93, 94, 96, 97, 140, 320, 326, 332], "__": [93, 94], "aecenv": [93, 94], "use_mask": [93, 94], "dead": [93, 94], "compulsori": [93, 94], "adversary_0": [93, 94], "adversari": [93, 94], "marlgroupmaptyp": [93, 94, 100, 101, 319], "vectoris": [93, 94, 176, 177, 180, 181], "multiwalker_v9": 93, "return_st": [93, 94], "categorical_act": [93, 94, 96, 97, 100], "n_piston": [93, 94], "pistonball_v6": [93, 94], "piston": [93, 94], "piston_0": [93, 94], "piston_1": [93, 94], "piston_20": [93, 94], "aec": [93, 94], "tictactoe_v3": [93, 94], "player": [93, 94], "player_1": [93, 94], "player_2": [93, 94], "butterfli": 94, "parallel_env": [94, 326, 337, 338], "vikashplu": 95, "read_info": 95, "pars": [95, 335], "smacv2": [96, 97], "starcraft": [96, 97], "challeng": [96, 97, 333, 334], "v2": [96, 97, 260, 274, 275, 276, 277, 279, 280, 281, 282, 310, 329], "10gen_terran": [96, 97], "10gen_zerg": [96, 97], "10gen_protoss": [96, 97], "3m": [96, 97, 334], "8m": [96, 97, 334], "25m": [96, 97], "5m_vs_6m": [96, 97], "8m_vs_9m": [96, 97], "10m_vs_11m": [96, 97], "27m_vs_30m": [96, 97], "mmm": [96, 97], "mmm2": [96, 97], "2s3z": [96, 97], "3s5z": [96, 97], "3s5z_vs_3s6z": [96, 97], "3s_vs_3z": [96, 97], "3s_vs_4z": [96, 97], "3s_vs_5z": [96, 97], "1c3s5z": [96, 97], "2m_vs_1z": [96, 97], "corridor": [96, 97], "6h_vs_8z": [96, 97], "2s_vs_1sc": [96, 97], "so_many_banel": [96, 97], "bane_vs_ban": [96, 97], "2c_vs_64zg": [96, 97], "old": [96, 97, 249, 338], "smac": [96, 97], "map_nam": [96, 97], "176": [96, 97, 333], "battle_won": [96, 97], "dead_al": [96, 97], "dead_enemi": [96, 97], "episode_limit": [96, 97], "322": [96, 97, 326, 333], "Or": [96, 97, 189], "procedur": [96, 97], "distribution_config": [96, 97], "n_unit": [96, 97], "n_enemi": [96, 97], "team_gen": [96, 97], "dist_typ": [96, 97], "weighted_team": [96, 97], "unit_typ": [96, 97], "marin": [96, 97], "maraud": [96, 97], "medivac": [96, 97], "exception_unit_typ": [96, 97], "start_posit": [96, 97], "surrounded_and_reflect": [96, 97], "map_x": [96, 97], "map_i": [96, 97], "capability_config": [96, 97], "88": [96, 97, 326, 327, 333], "131": [96, 97, 333], "starcraft2env": 97, "flock": [99, 100], "continuous_act": [99, 100, 332], "agent_collision_rew": [99, 100], "agent_distance_rew": [99, 100], "agent_nam": [100, 101], "agent_names_to_indices_map": 100, "unbatched_action_spec": [100, 332], "unbatched_observation_spec": 100, "unbatched_reward_spec": 100, "het_spec": 100, "het_specs_map": 100, "ca": 101, "environment4": 101, "get_group_map": 101, "sumbodul": 102, "model_bas": [103, 162, 186], "adapt": [105, 249, 326, 333], "masker": 105, "binarydiscretetensorspec": [105, 239, 242, 263, 319], "maskedenv": 105, "ones_lik": 105, "scatter": 105, "unsqueez": [105, 107, 108, 143, 146, 183, 326, 329, 332, 333], "_set_se": [105, 112, 115, 333], "transform_reward_spec": [106, 110, 111, 112, 113, 117, 123, 131, 134, 135, 137, 139, 144, 146], "padding_valu": [107, 187, 188], "as_invers": 107, "account": [107, 187, 188, 321, 327, 329, 335, 338], "movement": 107, "veloc": [107, 332, 333, 338], "propos": [107, 116, 185, 247, 256, 310, 321, 329, 335], "pdf": [107, 165, 166, 167, 168, 169, 173, 197, 217, 221, 243, 253, 256, 265, 270, 278, 310], "1312": [107, 327], "5602": 107, "constant": [107, 125, 140, 323, 326, 328, 329, 338], "unsqueezetransform": [107, 333, 335], "consumpt": 107, "followin": 107, "pictur": 107, "pixels_trsf": [107, 335], "grayscal": [107, 327, 329, 335, 338], "data_exclud": [107, 335], "transform_observation_spec": [107, 108, 109, 110, 111, 112, 113, 116, 117, 119, 121, 122, 123, 125, 127, 131, 132, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 150, 333], "del_kei": [108, 147, 331, 333], "unsqueeze_if_oor": 108, "observation_posit": 108, "observation_veloc": 108, "delet": 108, "key1": [108, 292, 300], "key2": [108, 292, 300], "crop": [109, 130, 284], "center": [109, 284], "width": [109, 132], "height": [109, 132], "squar": [109, 179, 205, 206, 284], "out_keys_inv": [110, 112, 115, 125, 126, 127, 131, 144, 333], "scalar": [110, 134, 167, 169, 191, 192, 214, 218, 219, 221, 232, 235, 236, 237, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 263, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 321, 327, 333], "permit": [110, 119, 146], "rewardsc": [111, 145, 326, 327, 329], "rewardclip": 111, "transformed_env": [111, 144, 145], "transform_env_devic": [111, 113, 144], "transform_input_spec": [111, 112, 113, 114, 125, 127, 131, 136, 139, 140, 141, 144, 146, 148], "transform_output_spec": [111, 112, 113, 117, 123, 131, 137, 139, 144], "untouch": [111, 112, 113, 117, 123, 131, 137, 139, 144], "transformfull_done_spec": [111, 112, 113, 117, 123, 131, 137, 139, 144], "dtype_in": 112, "dtype_out": 112, "scan": [112, 115, 227, 228], "resp": [112, 115], "not_transform": [112, 115], "constructedw": [112, 115], "orig_devic": 113, "unspecifi": 113, "transform_done_spec": [113, 144], "num_actions_effect": 114, "max_act": 114, "include_forward": 114, "dimension": [114, 178, 182, 265, 270, 278, 332], "num_act": [114, 242], "action_out": 114, "_call": [114, 119, 333], "eol_kei": 116, "life": 116, "lives_kei": 116, "eol_attribut": 116, "unwrap": 116, "al": [116, 127, 162, 338], "breakout": 116, "v5": [116, 127, 338], "210": [116, 127, 333, 338], "160": [116, 127, 327, 333, 335, 338], "eol_transform": 116, "eol": 116, "dqnloss": [116, 235, 236, 238, 241, 242, 243, 244, 247, 248, 250, 252, 253, 254, 255, 256, 257, 258, 263, 308, 319, 322, 327, 329], "action_spac": [116, 173, 199, 216, 217, 223, 224, 235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 263, 329], "register_kei": 116, "loss_or_advantag": 116, "lossmodul": [116, 301, 312, 313, 319], "valueestimatorbas": [116, 250, 319], "excluded_kei": 117, "finit": [118, 335], "first_dim": 119, "last_dim": 119, "allow_positive_dim": [119, 146], "th": [119, 146, 176, 180, 333], "frameskip": 119, "repeatedli": [120, 328, 332], "init_kei": 122, "is_init": [122, 178, 182, 221, 329], "tracker": 122, "coef": 123, "pi_curr": 123, "pi_0": 123, "overfit": 123, "fine": [123, 334], "probabilist": [123, 222, 319, 328, 337], "get_dist": [123, 226, 227], "mod": [123, 178, 182, 229, 329], "normalparamextractor": [123, 321, 328, 332], "probabilisticactor": [123, 211, 212, 213, 215, 235, 236, 240, 242, 248, 251, 252, 253, 254, 255, 257, 321, 326, 328, 332], "tanhnorm": [123, 211, 212, 213, 222, 228, 235, 236, 248, 252, 253, 254, 255, 257, 319, 328, 332, 337], "n_ob": [123, 235, 236, 238, 239, 241, 242, 248, 252, 253, 254, 255, 257], "n_act": [123, 235, 236, 238, 239, 241, 242, 248, 252, 253, 254, 255, 257], "return_log_prob": [123, 211, 212, 213, 222, 226, 228, 254, 321, 328, 332, 337], "apply_": 123, "copy_": [123, 326], "formulat": 123, "diverg": [123, 178, 182, 222, 226, 245, 249], "noop": [124, 337], "trial": 124, "op": [124, 150, 214, 218, 219, 303], "randomli": [124, 125, 141, 218, 222, 226, 332, 333, 335], "standard_norm": [125, 135, 326, 327, 329], "affin": [125, 135], "layer": [125, 151, 163, 164, 166, 167, 174, 176, 177, 178, 180, 181, 182, 184, 189, 190, 191, 192, 194, 195, 202, 203, 209, 220, 229, 321, 327, 328, 329, 334], "normal": [125, 151, 163, 164, 179, 184, 187, 188, 193, 205, 206, 214, 222, 226, 237, 249, 252, 297, 299, 317, 321, 323, 329, 332, 338], "set_default_tensor_typ": 125, "doubletensor": 125, "isclos": 125, "next_ob": [125, 265, 266, 267, 268, 337], "rubric": [125, 228], "init_stat": [125, 326, 327, 328, 329], "3752e": 125, "01": [125, 221, 232, 237, 249, 252, 325, 326, 327, 329, 332, 333, 334, 336], "5087e": 125, "03": [125, 325, 326, 327, 332, 333, 334, 336], "9294e": 125, "9636": 125, "5608": 125, "6408": 125, "num_it": [125, 327, 328], "reduce_dim": [125, 326, 327, 328, 329], "cat_dim": [125, 326, 327, 328, 329], "keep_dim": [125, 327, 329], "statist": [125, 151, 254, 317, 326, 327, 328, 338], "approach": [125, 326, 328, 338], "gaussian": [125, 141, 162, 186, 191, 192, 197, 214, 328], "empir": [125, 162, 186, 222, 226, 326, 328, 332], "3d": [125, 163], "third": [125, 217, 332], "reorder": 127, "in_keys_in": 127, "pong": [127, 338], "channel": [127, 189, 194, 195, 327], "r3m": [129, 334], "resnet": [129, 147, 149], "visual": [129, 147, 149, 328, 333], "embed": [129, 147, 148, 149, 198, 210, 211, 212, 213, 225, 230, 334], "ego4d": [129, 147, 149], "univers": [129, 147, 149], "suraj": [129, 147], "nair": [129, 147], "aravind": [129, 147], "rajeswaran": [129, 147], "vikash": [129, 147, 149], "kumar": [129, 147, 149], "chelsea": [129, 147], "finn": [129, 147], "abhinav": [129, 147], "gupta": [129, 147], "2203": [129, 147, 186, 334], "12601": [129, 147, 334], "_init": [129, 147, 326], "snippet": [129, 147, 326], "resnet50": [129, 149, 334], "model_nam": [129, 147, 149, 287], "resnet34": 129, "resnet18": 129, "r3m_vec": [129, 334], "feed": [129, 149, 250, 321, 326, 332, 335], "244": [129, 149, 333], "stack_imag": [129, 149], "tread": [129, 149], "separet": [129, 149], "hub": [129, 149, 334], "resnet50_weight": [129, 149], "imagenet1k_v1": [129, 149], "download_path": [129, 149], "tensor_pixels_kei": [129, 149], "dest": [129, 147, 149, 225], "sub_seq_len": 130, "sample_dim": [130, 326], "primarili": 130, "hesit": 130, "request": 130, "robust": 130, "mix": [130, 198, 207, 263, 326, 332], "improp": 130, "create_copi": 131, "stuff": 131, "newnam": 131, "interpol": [132, 327, 329], "bilinear": [132, 329], "truncated_kei": [133, 139], "r2g": 133, "99": [133, 151, 186, 246, 259, 264, 271, 313, 326, 327, 328, 333, 337], "reward_to_go": 133, "bernoulli_": 133, "9010": 133, "9404": [133, 271], "9701": [133, 271], "9900": [133, 271], "0000": [133, 142, 218, 219, 229, 271, 328, 329, 333, 337], "crash": 133, "clamp_min": 134, "clamp_max": 134, "clip_min": 134, "clip_max": 134, "episode_": 136, "reward1": 136, "reward2": 136, "episode_reward": [136, 332], "keep_reward": 137, "keep_don": 137, "squeeze_dim": 138, "step_count_kei": 139, "update_don": 139, "adaptec": 139, "accordingli": [139, 140, 180, 223, 329], "completet": 139, "recognis": 139, "accompani": 139, "target_return": 140, "chosen": [140, 141, 198, 199, 207, 224, 310, 321], "primer": [141, 329], "default_valu": [141, 329], "unit": [141, 162, 174, 176, 177, 194, 195, 200, 201, 328], "transfomedenv": 141, "mykei": 141, "__unless": 141, "exists__": 141, "pool": 142, "increas": [142, 221, 332], "10th": 142, "0216": 142, "1149": 142, "1990": 142, "2749": 142, "3281": 142, "9290": 142, "3702": 142, "8978": 142, "from_int": 143, "255": [143, 333, 335], "ri": 143, "principl": 144, "cattransform": 144, "notabl": 144, "rewardsum": [144, 332], "cache_spec": 145, "set_missing_toler": 145, "keyerror": 145, "unsqueeze_dim": [146, 333], "danger": 146, "vc1": 147, "vc1_vec": 147, "small": [147, 326, 328, 332, 338], "untrain": 147, "make_noload_model": 147, "naiv": 147, "vip": [148, 149, 334], "toward": 149, "implicit": [149, 248, 335], "jason": 149, "ma": 149, "shagun": 149, "sodhani": 149, "dinesh": 149, "jayaraman": 149, "osbert": 149, "bastani": 149, "ami": 149, "zhang": 149, "vip_vec": 149, "final_nam": 150, "sb3": 150, "terminal_obs_read": 150, "truli": [150, 337], "till": 150, "22": [150, 326, 327, 328, 329, 332, 333], "did": [150, 271, 327, 328, 335, 338], "nan": 150, "shared_td": 151, "decai": [151, 214, 218, 219, 256, 299, 326, 327, 329, 338], "9999": [151, 333], "0001": [151, 174, 193, 328, 333], "fly": [151, 249, 322, 328, 333, 335, 338], "to_observation_norm": 151, "underflow": [151, 299], "build_td_for_shared_vecnorm": 151, "memmori": 151, "queue": [151, 335], "td_share": 151, "v": [151, 176, 177, 180, 181, 211, 248, 255, 321, 326, 327], "state_dim": [152, 165, 170, 197, 200, 201, 215], "action_dim": [152, 165, 166, 168, 170, 197, 215, 326, 331], "gsde": [152, 253, 317], "func": 152, "gsdemodul": 152, "check_dtyp": 153, "short": [153, 180, 181, 327, 328, 332], "discrep": [153, 235, 237, 238, 239, 249, 252, 254, 263], "imposs": 153, "probabilistictdmodul": [158, 159, 184, 222, 226, 264, 297], "next_tensordict": 160, "keep_oth": [160, 333], "exclude_reward": 160, "exclude_don": 160, "exclude_act": 160, "next_": 160, "funtion": 160, "write_full_fals": 161, "leav": [161, 326], "_terminated_or_trunc": 161, "entropi": [162, 235, 236, 237, 242, 248, 249, 251, 252, 253, 255, 257, 332], "botev": 162, "et": 162, "2013": 162, "cem": 162, "plan": [162, 185, 186], "varianc": [162, 179, 193, 205, 206, 322, 326, 328, 332], "k": [162, 176, 177, 180, 181], "repeat": [162, 328, 332, 333], "maximis": [162, 166, 168, 186, 321, 326, 327, 328, 332], "horizon": [162, 186, 328], "modelbasedenv": [162, 186], "planning_horizon": [162, 186], "optim_step": [162, 186, 327], "mpc": [162, 185, 186], "num_candid": [162, 186], "candid": [162, 186], "top_k": [162, 186], "modelbasedenvbas": [162, 185, 186, 319], "safemodul": [162, 185, 211, 213, 226, 235, 236, 242, 248, 252, 253, 254, 255, 257, 306, 307, 313, 319, 337], "num_cel": [163, 164, 166, 167, 168, 169, 174, 175, 178, 182, 184, 189, 190, 211, 327, 328, 329, 332, 337], "elu": [163, 164, 166, 167, 168, 169, 174, 175, 189, 327, 337], "activation_kwarg": [163, 164, 184], "norm_class": [163, 164, 166, 167, 184], "norm_kwarg": [163, 164, 184], "bias_last_lay": [163, 164, 166, 167, 168, 169, 175, 184], "aggregator_class": [163, 164, 166, 167, 327, 329, 337], "squashdim": [163, 164, 166, 189, 337], "aggregator_kwarg": [163, 164, 166, 167, 327, 329], "squeeze_output": [163, 164, 166, 167, 327, 329], "convolut": [163, 164, 166, 167, 189, 202], "produc": [163, 164, 184, 190, 196, 211, 213, 215, 284, 328, 329, 335, 338], "cell": [163, 164, 176, 177, 178, 180, 181, 182, 184, 189, 190, 328], "kernel": [163, 164, 175, 183, 189], "cnet": [163, 164], "conv3d": 163, "34": [163, 164, 184, 325, 327, 333, 336], "35": [163, 164, 184, 327, 328, 329, 333, 334], "rectangular": [163, 164], "transformer_config": [165, 197, 215], "decisiontransform": [165, 197], "dtconfig": [165, 170, 197], "2202": [165, 170, 197, 251], "05607": [165, 170, 197, 251], "return_to_go": [165, 170, 197, 215], "conv_net_kwarg": [166, 167], "mlp_net_kwarg": [166, 167, 168], "use_avg_pool": [166, 167], "WITH": [166, 167, 168, 169, 221, 256], "1509": [166, 167, 168, 169, 186, 221, 239, 247, 256, 333], "02971": [166, 167, 168, 169, 221, 256], "convnet": [166, 189, 329, 337], "ndims_in": 166, "avgpool": [166, 167], "adaptiveavgpool2d": [167, 327, 329], "400": [168, 169, 332, 333, 335], "mlp_net_kwargs_net1": 169, "mlp_net_kwargs_net2": 169, "decion": 170, "desdescrib": 170, "n_embd": 170, "n_layer": [170, 176, 180], "n_head": 170, "n_inner": 170, "n_posit": 170, "resid_pdrop": 170, "attn_pdrop": 170, "gpt2config": 170, "atol": [171, 204], "06": [171, 204, 326, 327, 328, 329, 333, 334], "rtol": [171, 204], "batch_shap": [171, 204], "event_shap": [171, 204], "absolut": [171, 204, 326], "densiti": [171, 187, 188, 196, 206], "mass": [171, 187, 188, 196, 206, 333], "rsampl": [171, 188, 196, 226], "sample_shap": [171, 187, 188, 196], "dqnet": 172, "atom": 172, "softmax": [172, 188, 196, 216, 217], "var_num": [173, 199, 216, 217, 224], "action_value_kei": [173, 199, 216, 217, 223, 224, 250, 263], "action_mask_kei": [173, 199, 216, 217, 218, 219, 223, 224], "perspect": [173, 217, 243, 328], "1707": [173, 217, 243, 252], "06887": [173, 217, 243], "mult": [173, 190, 199, 216, 217, 223, 224], "tensordict_modul": [173, 176, 177, 180, 181, 199, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 236, 238, 242, 248, 252, 253, 254, 255, 257, 321], "nbin": [173, 216, 321], "customdistributionalqv": 173, "log_softmax": [173, 216], "from_modul": [173, 222, 225, 228, 230], "one_hot": [173, 188, 199], "qvalue_actor": [173, 199, 216, 223, 321], "to_modul": [173, 222, 225, 228, 230], "std_bia": 174, "std_min_val": 174, "belief": [174, 194, 200, 201], "1912": [174, 244, 245, 246], "01603": [174, 244, 245, 246], "softplu": [174, 193, 232, 233, 234], "out_features_valu": 175, "cnn_kwarg": [175, 327], "mlp_kwarg": [175, 183, 327], "duel": 175, "cnn": [175, 189, 327, 337], "06581": 175, "512": [175, 327, 333, 335], "input_s": [176, 177, 178, 180, 181, 182, 183, 329], "hidden_s": [176, 177, 178, 180, 181, 182, 183, 329], "num_lay": [176, 178, 180, 182, 194, 195], "batch_first": [176, 178, 180, 182, 329], "bidirect": [176, 180, 329], "cudnn": [176, 177, 180, 181, 329], "vmap": [176, 177, 180, 181, 208, 225, 228, 337], "rnn": [176, 177, 180, 181, 329], "device_count": [176, 177, 180, 181, 326, 327, 329, 334, 338], "els": [176, 177, 180, 181, 194, 321, 323, 326, 327, 328, 329, 332, 333, 334], "n_in": [176, 177, 180, 181], "n_out": [176, 177, 180, 181], "h0": [176, 177, 180, 181], "h1": [176, 177, 180, 181], "call_gru": [176, 177], "h_out": [176, 177, 180, 181], "batched_cal": [176, 177, 180, 181], "gate": [176, 177, 180], "r_t": 176, "sigma": [176, 177, 179, 180, 181, 197, 205, 206, 214, 221, 328], "w_": [176, 177, 180, 181], "ir": [176, 177], "x_t": [176, 180], "b_": [176, 177, 180, 181], "hr": [176, 177, 180], "h_": [176, 177, 180], "z_t": 176, "iz": [176, 177], "hz": [176, 177], "n_t": 176, "odot": [176, 177, 180, 181], "hn": [176, 177, 180], "h_t": [176, 180], "sigmoid": [176, 177, 180, 181], "hadamard": [176, 177, 180, 181], "multilay": [176, 180], "_t": [176, 180, 332, 333], "ge": [176, 180], "bernoulli": [176, 180], "b_ih": [176, 177, 180, 181, 182], "b_hh": [176, 177, 180, 181, 182], "seq": [176, 178, 180, 182, 329, 331], "h_0": [176, 180, 181], "unbatch": [176, 180], "pack": [176, 180, 328, 338], "pack_padded_sequ": [176, 180], "pack_sequ": [176, 180], "num": [176, 180], "_layer": [176, 180], "_size": [176, 177, 180, 181], "h_n": [176, 180], "packedsequ": [176, 180], "weight_ih_l": [176, 180], "learnabl": [176, 177, 180, 181], "w_ir": 176, "w_iz": 176, "w_in": 176, "num_direct": [176, 180], "weight_hh_l": [176, 180], "w_hr": 176, "w_hz": 176, "w_hn": 176, "bias_ih_l": [176, 180], "b_ir": 176, "b_iz": 176, "b_in": 176, "bias_hh_l": [176, 180], "b_hr": 176, "b_hz": 176, "b_hn": 176, "bias": [176, 177, 180, 181, 232, 322, 326], "mathcal": [176, 177, 180, 181], "sqrt": [176, 177, 180, 181, 221], "frac": [176, 177, 180, 181, 328], "seq_len": [176, 180], "subtli": 176, "matrix": [176, 180, 191, 192], "contrast": [176, 247, 335], "hx": [176, 177, 180, 181], "gru": [177, 178], "lstmcell": [177, 182], "gru_cel": 177, "z": 177, "weight_ih": [177, 181], "weight_hh": [177, 181], "bias_ih": [177, 181], "bias_hh": [177, 181], "rocm": [177, 181], "embedd": [178, 182, 183], "grucel": [178, 225], "proj_siz": [178, 180], "python_bas": [178, 182], "recurrent_st": [178, 329], "custom_kei": [178, 182], "recurrent_mod": [178, 182], "set_recurrent_mod": [178, 182, 329], "gru_modul": 178, "rs": [178, 326], "gru_module_train": 178, "policy_train": [178, 182], "traj_td": [178, 182], "policy_infer": [178, 182], "td_inf": [178, 182], "assert_clos": [178, 182], "upscal": [179, 205, 206], "tanh_loc": [179, 205, 206], "event_dim": [179, 204, 205], "ultim": [179, 205, 206], "poor": [179, 205, 206], "explos": [179, 205, 206], "switch": [179, 206], "formula": [179, 205, 206, 235, 237, 249, 252, 322, 328], "c0": [180, 181], "c1": [180, 181], "call_lstm": [180, 181], "c_out": [180, 181], "i_t": 180, "ii": [180, 181], "hi": [180, 181], "f_t": 180, "hf": [180, 181], "g_t": 180, "ig": [180, 181], "hg": [180, 181], "o_t": 180, "ho": [180, 181], "c_t": 180, "c_": 180, "forget": 180, "consequ": 180, "1402": 180, "1128": 180, "c_0": [180, 181], "proj": 180, "c_n": 180, "w_ii": 180, "w_if": 180, "w_ig": 180, "w_io": 180, "w_hi": 180, "w_hf": 180, "w_hg": 180, "w_ho": 180, "b_ii": 180, "b_if": 180, "b_ig": 180, "b_io": 180, "b_hi": 180, "b_hf": 180, "b_hg": 180, "b_ho": 180, "weight_hr_l": 180, "_revers": 180, "analog": 180, "cn": 180, "lstm_cell": 181, "h_1": 181, "c_1": 181, "time_step": [181, 183], "cx": 181, "trust": 182, "correspont": 182, "recurrent_state_h": [182, 329], "recurrent_state_c": [182, 329], "triplet": [182, 223, 224], "lstm_modul": 182, "rs_h": 182, "rs_c": 182, "hidden0": 182, "hidden1": 182, "lstm_kwarg": 183, "next_observ": [183, 235, 236, 238, 239, 241, 242, 248, 252, 253, 254, 255, 257, 331], "2d": [183, 332], "hidden0_in": 183, "hidden1_in": 183, "hidden0_out": 183, "hidden1_out": 183, "single_bias_last_lay": 184, "layer_class": 184, "layer_kwarg": 184, "perceptron": 184, "seamless": 184, "lazylinear": [184, 321, 328, 333, 334, 337], "42": [184, 235, 236, 238, 248, 255, 326, 327, 333], "noisylinear": [184, 191, 319, 327], "noisylazylinear": [184, 319], "At": [185, 218, 327, 328, 329, 331, 333, 334], "mpcplanner": 185, "tensordict_out": [185, 338], "mppi": 186, "covari": 186, "william": [186, 254], "aldrich": 186, "theodor": 186, "01149": 186, "hansen": 186, "wang": 186, "su": 186, "04955": 186, "valueoper": [186, 211, 212, 213, 235, 236, 237, 238, 242, 248, 249, 252, 253, 254, 255, 257, 313, 321, 326, 328], "tdlambdaestim": [186, 319, 326], "value_net": [186, 239, 241, 254, 265, 266, 267, 268, 328], "adv": 186, "lmbda": [186, 259, 265, 268, 270, 276, 277, 278, 281, 282, 322, 326, 328, 332], "95": [186, 259, 326, 327, 328, 329, 333], "value_network": [186, 238, 239, 241, 243, 248, 255, 265, 266, 267, 268, 322, 326, 328], "temperatur": [186, 236, 248], "neg_inf": [187, 188], "inf": [187, 188], "www": [187, 188], "api_doc": [187, 188], "tf_agent": [187, 188], "event": [187, 188, 196, 274, 275, 276, 277, 279, 280, 281, 282, 335], "unnorm": [187, 188, 196], "sparse_mask": [187, 188], "dens": [187, 188], "0831": [187, 188], "1203": [187, 188], "0928": [187, 188], "1972": [187, 188], "grad_method": [188, 196], "reparamgradientstrategi": [188, 196], "passthrough": [188, 196], "proxi": [188, 196, 322], "relaxedonehot": [188, 196], "zeros_lik": [188, 333], "sample_non_valid": 188, "centralis": [189, 190, 332], "share_param": [189, 190, 332], "basi": [189, 335], "homogen": [189, 190, 332], "agent_network": [189, 190], "modulelist": [189, 190, 310, 337], "lazyconv2d": [189, 337], "2592": [189, 327], "decentralis": [189, 332], "n_agent_input": [190, 332], "n_agent_output": [190, 332], "toech": 190, "centalis": 190, "shown": [190, 321, 331, 332, 335], "std_init": [191, 192], "initialize_paramet": 191, "isol": [191, 250], "1706": [192, 207], "10295v3": 192, "induc": 192, "aid": 192, "scale_map": 193, "biased_softplus_1": 193, "scale_lb": [193, 200, 201], "exp": [193, 234], "module_norm": 193, "decod": 194, "1803": [194, 195, 198], "10122": [194, 195], "rnn_hidden": 194, "latent": 195, "excacli": 196, "inres": 197, "mu": [197, 221, 328], "state_shap": [198, 263], "mixing_embed_dim": [198, 263], "qmix": [198, 332], "mixer": [198, 207, 263], "monoton": 198, "hyper": 198, "11485": 198, "qmixerloss": [198, 207], "qmix_vdn": [198, 207], "eventu": [198, 329, 333], "vdn": [198, 207], "greedi": [199, 217, 218, 219, 224, 327, 329], "hidden_dim": [200, 201], "posterior": [200, 245], "rssm": [200, 201, 245], "1811": [200, 201], "04551": [200, 201], "obs_embed": 200, "rnn_hidden_dim": 201, "dream": 201, "tanhtransform": 205, "decomposit": 207, "05296": 207, "hide": [208, 328, 332], "satisfi": [208, 321], "tensordictmodulebas": [208, 216, 223, 329], "vmap_dim": 208, "lam": 208, "sample_in": 208, "sample_in_td": 208, "vm": 208, "translat": [210, 222], "character": [210, 216, 222, 223, 225, 335], "overflow": [210, 216, 217, 222, 223, 224, 225, 226], "td_modul": [210, 211, 212, 213, 222, 225, 226, 228, 230, 337], "3635": 210, "0340": 210, "1476": 210, "3911": [210, 333], "1664": [210, 327, 333], "5455": 210, "2247": 210, "4583": 210, "2916": 210, "2160": 210, "5337": 210, "5193": 210, "grad_fn": [210, 218, 219, 337], "addmmbackward0": 210, "actorvalueoper": [211, 321], "get_policy_oper": [211, 212, 213, 237, 249, 252, 321], "standalon": [211, 212, 213], "tdmodul": [211, 212, 213, 313], "get_critic_oper": 211, "common_oper": [211, 213], "policy_oper": [211, 212, 213], "value_oper": [211, 212, 213], "normalparamwrapp": [211, 212, 213, 222, 228, 235, 236, 242, 248, 252, 253, 254, 255, 257, 319, 337], "module_hidden": [211, 213], "td_module_hidden": [211, 213], "module_act": [211, 213], "td_module_act": [211, 212, 213], "module_valu": [211, 212, 213], "td_module_valu": [211, 212, 213], "state_action_valu": [211, 230, 236, 255, 264, 310, 313, 321, 326, 337], "td_clone": [211, 212, 213], "tensordictmodulewrapp": [211, 306, 307, 313], "get_policy_head": [211, 212, 213], "safesequenti": [211, 212, 213, 263], "head": [211, 213, 237, 249, 252], "get_value_head": [211, 212, 213], "get_value_oper": [211, 212, 213, 237, 249, 252], "action_modul": 212, "state_valu": [212, 213, 230, 237, 249, 252, 253, 255, 265, 266, 267, 268, 270, 272, 274, 276, 278, 279, 281, 321, 326, 328, 332], "qualiti": [213, 321], "actorcriticoper": [213, 237, 249, 252, 321], "embeddig": 213, "refet": 213, "actorcriticwrapp": [213, 321, 326], "po": [214, 219], "sigma_init": 214, "epsilon": [214, 218, 219, 221, 256, 299, 327, 328, 329], "sigma_end": 214, "annealing_num_step": [214, 218, 219, 221, 326, 327, 329], "captur": [214, 218, 219, 221], "omiss": [214, 218, 219, 221], "ommit": [214, 218, 219, 221, 335], "inferec": 215, "set_tensor_kei": 215, "dt_inference_wrapp": 215, "baz": 215, "inference_context": 215, "obs_dim": 215, "tanhdelta": [215, 319, 326], "dtactor": 215, "actor_modul": [215, 337], "dist_class": 215, "dist_kwarg": 215, "distribution_kwarg": [215, 222, 226, 328, 332], "inference_actor": 215, "sequence_length": 215, "mask_context": 215, "out_act": 215, "qvaluemodul": [216, 223, 263, 329], "distributionaldqnnet": 216, "make_log_softmax": 216, "my_action_valu": [217, 224], "chanc": 217, "thid": 217, "threshold": [218, 236, 237, 328], "eps_init": [218, 219, 221, 327, 329], "eps_end": [218, 219, 221, 327], "explorative_polici": [218, 219, 221], "9055": [218, 219, 333], "9277": [218, 219], "6295": [218, 219], "2532": [218, 219], "addbackward0": [218, 219], "lmheadmodel": 220, "extract": [220, 326, 328], "actor_head": [220, 237, 249, 252], "base_model": 220, "lm_head": 220, "ornstein": 221, "uhlenbeck": 221, "ou": [221, 326], "correl": 221, "noise_t": 221, "noise_": 221, "theta": [221, 328, 333], "sigma_t": 221, "sigma_": 221, "anneal": 221, "ou_prev_nois": 221, "ou_step": 221, "x0": 221, "sigma_min": 221, "n_steps_ann": 221, "is_init_kei": 221, "_ou_prev_nois": 221, "_ou_step": 221, "default_interaction_typ": [222, 226], "interaction_typ": [222, 226], "set_interaction_typ": [222, 226], "cache_dist": [222, 226], "n_empirical_estim": [222, 226], "compound": 222, "compositedistribut": 222, "categ": 222, "distribution_map": 222, "chose": 224, "functionalmodul": 225, "functionalmodulewithbuff": 225, "td_fmodul": 225, "td_function": 225, "td_state": 225, "ensembl": [225, 253], "params_repeat": 225, "td_vmap": [225, 228], "random_sampl": [225, 226], "suppli": 226, "fist": 226, "log_prob_kei": [226, 332], "probabilistictensordictsequenti": [227, 235, 237, 249, 252, 254, 306, 307, 337], "partial_toler": [227, 228, 331], "who": [227, 228], "AND": [227, 228], "tensordictsequenci": 228, "tensordictsequ": 228, "safeprobabilisticmodul": [228, 321], "spec1": 228, "net1": 228, "module1": 228, "td_module1": 228, "spec2": 228, "module2": 228, "td_module2": 228, "clamp": [229, 245, 301, 333], "boundari": [229, 328, 332], "resolut": 229, "simplest": [229, 326, 328, 329, 332, 335, 338], "9944": 229, "9991": 229, "3020": 229, "2299": [229, 333], "5418": 229, "2989": 229, "6849": 229, "3169": 229, "2690": 229, "9649": [229, 333], "5686": 229, "8602": 229, "0315": 229, "8455": [229, 333], "6027": 229, "4746": 229, "7843": 229, "7782": 229, "2111": 229, "5115": 229, "4687": 229, "5760": 229, "custommodul": 230, "cat": [230, 236, 238, 248, 253, 255, 257, 337], "imaginari": 231, "imagin": 231, "transition_model": 231, "get_reward_oper": 231, "get_transition_model_oper": 231, "min_val": [232, 234], "_bia": 232, "invert": [233, 328], "surject": 234, "expln": 234, "biased_softplu": [234, 319], "beggin": 234, "biased_softplus_": 234, "syntax": [234, 326], "met": [234, 333], "1602": 235, "01783v2": 235, "entropy_bonu": [235, 237, 249, 252, 328], "favour": [235, 237, 249, 252], "samples_mc_entropi": [235, 237, 249, 251, 252], "mont": [235, 237, 249, 252, 326], "carlo": [235, 237, 249, 252, 326], "entropy_coef": [235, 237, 249, 252, 328, 332], "critic_coef": [235, 237, 249, 252, 328], "loss_critic_typ": [235, 237, 249, 252, 254, 328], "l1": [235, 237, 238, 239, 242, 249, 252, 253, 254, 257, 260, 263, 321, 326], "l2": [235, 237, 238, 239, 240, 241, 242, 245, 246, 249, 252, 253, 254, 257, 260, 263, 326], "smooth_l1": [235, 236, 237, 238, 239, 242, 248, 249, 252, 253, 254, 255, 257, 260, 263, 328], "separate_loss": [235, 237, 238, 242, 248, 249, 252, 253, 254, 255, 257], "propag": [235, 237, 238, 242, 248, 249, 252, 253, 254, 255, 257, 265, 266, 267, 268, 328, 332], "advantage_kei": [235, 237, 249, 252, 254, 265, 266, 267, 268], "value_target_kei": [235, 237, 249, 252, 254, 265, 266, 267, 268, 328], "value_target": [235, 237, 249, 252, 254, 265, 266, 267, 268, 328, 332], "loss_crit": [235, 252, 328, 332], "loss_entropi": [235, 252, 328, 332], "loss_object": [235, 252, 328, 332], "recur": [235, 236, 238, 239, 241, 242, 248, 252, 253, 254, 255, 257, 265, 266, 267, 268, 269], "next_reward": [235, 236, 238, 239, 241, 242, 248, 252, 253, 254, 255, 257, 265, 266, 267, 268], "next_don": [235, 236, 238, 239, 241, 242, 248, 252, 253, 254, 255, 257, 265, 266, 267, 268], "next_termin": [235, 236, 238, 239, 241, 242, 248, 252, 253, 254, 255, 257, 265, 266, 267, 268], "loss_obj": 235, "sacloss": [235, 247, 256, 319], "select_out_kei": [235, 236, 238, 242, 248, 252, 253, 255, 257], "essenti": [235, 236, 237, 242, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 257, 263, 327, 333, 335], "make_value_estim": [235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 258, 263, 322, 326, 327, 332], "value_typ": [235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 259, 263, 326], "valueestim": [235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 259, 263, 319, 322, 326, 332], "hyperparam": [235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 263, 326], "enum": [235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 259, 263, 326], "default_value_estim": [235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 263, 326], "refin": [235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 263], "default_value_kwarg": [235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 263, 319, 326], "dqn_loss": [235, 236, 238, 239, 241, 242, 243, 244, 248, 250, 252, 253, 254, 255, 257, 258, 263], "conserv": [236, 241], "2006": [236, 241, 333], "04779": [236, 241], "actor_network": [236, 238, 240, 242, 248, 251, 253, 255, 257, 326], "qvalue_network": [236, 242, 248, 253, 255, 257], "loss_funct": [236, 238, 239, 240, 241, 242, 248, 253, 255, 257, 260, 263, 326], "alpha_init": [236, 242, 251, 253, 255], "min_alpha": [236, 242, 251, 253, 255], "max_alpha": [236, 242, 251, 253, 255], "fixed_alpha": [236, 242, 251, 253, 255], "target_entropi": [236, 242, 251, 253, 255], "prod": [236, 251, 255], "n_action": [236, 239, 241, 251, 255], "delay_actor": [236, 238, 255, 257], "delay_qvalu": [236, 242, 253, 255, 257], "min_q_weight": 236, "max_q_backup": 236, "backup": 236, "deterministic_backup": 236, "num_random": 236, "with_lagrang": 236, "lagrang": 236, "lagrange_thresh": 236, "valueclass": [236, 238, 242, 248, 253, 255, 257], "qvalu": [236, 242, 248, 253, 255, 257, 310], "loss_actor": [236, 238, 242, 248, 253, 254, 255, 257, 296, 326, 337], "loss_alpha": [236, 242, 253, 255], "loss_alpha_prim": 236, "loss_qvalu": [236, 242, 248, 253, 255, 257], "clip_epsilon": [237, 328, 332], "normalize_advantag": [237, 249, 252, 332], "value_kei": [237, 249, 252, 265, 266, 267, 268, 326], "somemodul": [237, 249, 252], "someactor": [237, 249, 252], "value_head": [237, 249, 252], "somevalu": [237, 249, 252], "loss_modul": [237, 247, 249, 250, 252, 256, 301, 312, 313, 322, 323, 326, 327, 328, 332, 335], "ppoloss": [237, 249, 319], "delay_valu": [238, 239, 241, 243, 254, 255, 263, 327, 329], "loss_valu": [238, 248, 254, 255, 326, 328, 332, 337], "pred_valu": [238, 257, 326, 337], "pred_value_max": [238, 326, 337], "target_valu": [238, 253, 257, 264, 322, 326, 337], "target_value_max": [238, 326, 337], "qvalueactor": [239, 241, 263, 321, 327, 329], "double_dqn": 239, "06461": [239, 247], "mult_one_hot": [239, 242, 263], "loss_val": [239, 241, 322, 326, 328, 329, 332, 335], "2106": 240, "01345": 240, "distanc": [241, 249, 260, 264, 265, 332], "loss_cql": 241, "dcql_loss": 241, "ste": 242, "num_qvalue_net": [242, 248, 253, 255, 257], "target_entropy_weight": 242, "onehotcategor": [242, 319], "disctount": 243, "distributionalqvalueactor": [243, 321], "input_tensordict": [243, 326], "actor_model": 244, "value_model": [244, 246], "model_based_env": 244, "dreamerenv": [244, 319], "imagination_horizon": 244, "unrol": [244, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282], "discount_loss": [244, 246], "lambda_kl": 245, "lambda_reco": 245, "lambda_reward": 245, "reco_loss": 245, "reward_loss": 245, "free_nat": 245, "nat": 245, "delayed_clamp": 245, "global_averag": 245, "value_loss": 246, "fake_data": 246, "ddpgloss": [247, 256, 313, 319, 326, 337], "td3loss": [247, 256, 319], "value_network_update_interv": 247, "2110": 248, "06169": 248, "expectil": 248, "tau": [248, 256, 326, 327], "antmaz": 248, "sticht": 248, "loss_value_diff": 248, "diff": 248, "old_polici": 249, "new_polici": 249, "apart": [249, 332], "dtarg": 249, "samples_mc_kl": 249, "analyt": 249, "decrement": 249, "loss_": [250, 296, 322, 326], "equip": [250, 329], "gh": 250, "_acceptedkei": 250, "dataclass": [250, 310], "_forward_value_estimator_kei": 250, "alter": [250, 321], "value_estim": [250, 265, 266, 267, 268, 269, 322, 326, 332], "myloss": 250, "action2": 250, "convert_to_funct": [250, 326], "expand_dim": 250, "create_target_param": [250, 326], "compare_against": [250, 326], "_param": 250, "expans": 250, "resampl": 250, "_target_param": 250, "blend": 250, "upcom": [250, 274, 275, 276, 277, 279, 280, 281, 282, 326], "proxim": [252, 328, 332], "optimis": [252, 297, 328, 332], "flavour": [252, 332, 337], "clipppoloss": [252, 319, 328, 332], "klpenppoloss": [252, 319], "regularis": 252, "06347": 252, "gae": [252, 319, 322, 326, 328, 332], "ppo_loss": 252, "tdlambda": [252, 259, 322, 326], "base_lay": 252, "randn_lik": 252, "samplelogprob": 252, "openreview": [253, 310], "ay8zfzm0tdd": [253, 310], "sub_sample_len": 253, "subsampl": [253, 292, 323], "action_log_prob_actor": 253, "state_action_value_actor": [253, 257], "connectionist": 254, "1992": 254, "doi": 254, "1007": 254, "bf00992696": 254, "actor_net": [254, 326, 328], "1801": 255, "01290": 255, "applic": [255, 263, 333], "1812": 255, "05905": 255, "redqloss": [256, 319], "math": 256, "theta_t": [256, 333], "theta_": [256, 333], "polyak": 256, "policy_nois": 257, "noise_clip": 257, "next_state_valu": [257, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 319], "td0": [258, 326], "strict_shap": 260, "view_a": 260, "qmixer": [263, 319], "local_valu": 263, "visibl": [263, 332], "dafault": 263, "acceptedkei": 263, "global_valu": 263, "penultim": 263, "local_value_network": 263, "mixer_network": 263, "suggest": [263, 332], "value_modul": [263, 328, 337], "qnet": [263, 326], "next_val_kei": 264, "pred_next_v": 264, "usus": 264, "mse": 264, "q_valu": 264, "n_steps_to_next": 264, "value_next_st": 264, "1506": [265, 270, 278], "02438": [265, 270, 278], "exponenti": [265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 299], "average_ga": [265, 328], "skip_exist": [265, 266, 267, 268], "advang": 265, "gradient_mod": 265, "value_error": [265, 266, 267, 268, 269], "sign": 265, "target_param": [265, 266, 267, 268, 269, 326, 332], "98": [265, 266, 267, 268, 327, 333, 334], "94": [265, 268, 327, 333], "unpack": [265, 266, 267, 268], "tensor_kei": [265, 266, 267, 268, 269], "next_valu": [265, 266, 267, 268, 269], "aka": [266, 327], "average_reward": [266, 267, 268], "tdestim": [266, 267, 269], "infti": 267, "valuefunctionbas": 269, "time_dim": [270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282], "old_stat": [270, 272, 274, 276, 278, 279, 281], "new_stat": [270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282], "rolling_gamma": [274, 275, 276, 277, 279, 280, 281, 282], "g1": [274, 275, 276, 277, 279, 280, 281, 282], "g2": [274, 275, 276, 277, 279, 280, 281, 282], "g3": [274, 275, 276, 277, 279, 280, 281, 282], "g4": [274, 275, 276, 277, 279, 280, 281, 282], "v3": [274, 275, 276, 277, 279, 280, 281, 282], "out_file_bas": 283, "skip_reset": 283, "interv": [283, 284, 293, 303, 327, 333], "center_crop": 284, "make_grid": 284, "Will": 284, "grid": 284, "exp_nam": [285, 286, 289, 290, 291, 313, 327], "log_dir": [285, 286, 288, 290, 327], "templat": 285, "csv": [286, 288, 327], "minim": [286, 335], "dependeci": 286, "experiment_nam": [287, 288], "uuid": [287, 327, 338], "date": 287, "logger_typ": 288, "logger_nam": 288, "tensorboard": [288, 290, 337], "wandb": [288, 291, 337], "mlflow": [288, 289], "wandb_kwarg": 288, "mlflow_kwarg": 288, "tracking_uri": 289, "uri": 289, "datastor": 289, "tb_log": 290, "tensoarboard": 290, "sub_traj_len": 292, "min_sub_traj_len": 292, "register_op": [292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 323, 327], "process_optim_batch": [292, 298, 299, 323], "td_out": [292, 300], "_process_optim_batch_hook": [292, 323], "batch_subsampl": 292, "clear_cuda": 293, "pre_optim_step": [293, 323], "counter": [294, 323], "log_pbar": [294, 295, 297, 299, 323, 327], "progress": [294, 295, 297, 301, 323, 327, 329, 338], "count_fram": 294, "pre_steps_log": [294, 295, 323], "count_frames_log": 294, "lognam": 295, "r_train": [295, 327], "log_reward": [295, 327], "loss_compon": 296, "appl": 296, "omit": [296, 328, 333, 335], "optimizer_hook": 296, "record_interv": [297, 326, 327], "record_fram": [297, 304, 326, 327], "policy_explor": [297, 313, 326, 327], "log_kei": [297, 327], "suffix": 297, "underestim": 297, "set_exploration_typ": [297, 319, 328, 329, 337], "r_evalu": [297, 326], "flatten_tensordict": [298, 327], "max_dim": 298, "rb_trainer": 298, "batch_process": [298, 299, 300, 323], "post_loss": [298, 323], "999": [299, 327], "jitter": 299, "finfo": 299, "default_dtyp": 299, "get_default_dtyp": 299, "reward_norm": 299, "update_reward_stat": 299, "normalize_reward": 299, "make_train": [300, 319], "_process_batch_hook": [300, 323], "select_kei": [300, 323], "versatil": 301, "optim_steps_per_batch": [301, 323, 327], "epoch": [301, 328, 332], "clip_grad_norm": 301, "clip_norm": 301, "progress_bar": 301, "save_trainer_interv": 301, "log_interv": [301, 327], "save_trainer_fil": [301, 323], "datacollectorbas": [303, 306, 307, 313, 319], "update_weights_interv": [303, 327], "sit": [303, 327], "update_weight": 303, "post_step": [303, 323], "cfg": [304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 317], "dictconfig": [304, 305, 306, 307, 310, 311, 312, 313, 314, 317], "divid": [304, 321, 326, 332, 333], "unknowingli": 304, "annealing_fram": [304, 326], "init_env_step": [304, 305, 326], "proof_environ": [305, 310, 326], "sta": 305, "ot": 305, "actor_model_explor": [306, 307, 326], "make_env_kwarg": [306, 307], "targetnetupdat": [308, 309, 312, 313], "redqloss_deprec": 309, "actor_net_kwarg": 310, "qvalue_net_kwarg": 310, "observation_kei": 310, "dummi": [310, 326, 338], "parser_env_arg": 310, "parser_model_args_continu": 310, "cattensor": [310, 326, 331, 333, 338], "hydra": 310, "config_stor": 310, "configstor": 310, "halfcheetah": [310, 326], "config_field": 310, "config_cl": 310, "redqmodelconfig": 310, "envconfig": 310, "make_dataclass": 310, "cls_name": 310, "cs": 310, "config_path": 310, "config_nam": 310, "replayargsconfig": 311, "target_net_updat": [313, 326, 327], "constitu": 313, "learnt": [313, 326, 328], "tensorboardlogg": [313, 319], "egreedywrapp": [313, 327, 329], "env_proof": 313, "obs_spec": 313, "net_valu": 313, "dir": [313, 323, 327], "gettempdir": 313, "argpars": [314, 317], "namespac": [314, 317], "parser": [314, 317], "transformed_env_constructor": [314, 319], "num_env_per_collector": [315, 316], "video_tag": 317, "norm_obs_onli": 317, "use_env_cr": 317, "custom_env_mak": 317, "custom_env": 317, "return_transformed_env": 317, "action_dim_gsd": 317, "state_dim_gsd": 317, "obs_norm_state_dict": 317, "wheter": 317, "maker": 317, "asyncdatacollector": 319, "distributedsyncdatacollector": 319, "submitit_delayed_launch": 319, "raycollector": 319, "tensordictmaxvaluewrit": 319, "d4rlexperiencereplai": 319, "minariexperiencereplai": 319, "openmlexperiencereplai": 319, "robosetexperiencereplai": 319, "unboundeddiscretetensorspec": [319, 338], "lazystackedtensorspec": 319, "lazystackedcompositespec": 319, "prompttensordicttoken": 319, "rolloutfrommodel": 319, "tokenizeddatasetload": 319, "create_infinite_iter": 319, "consolidate_spec": 319, "check_no_exclusive_kei": 319, "contains_lazy_spec": 319, "check_marl_group": 319, "tensordictrecord": 319, "videorecord": [319, 328], "get_available_librari": 319, "set_exploration_mod": 319, "make_composite_from_td": [319, 333], "terminated_or_trunc": 319, "braxwrapp": 319, "dmcontrolenv": [319, 326, 331, 338], "dmcontrolwrapp": [319, 338], "jumanjienv": 319, "jumanjiwrapp": 319, "mogymenv": 319, "mogymwrapp": 319, "multithreadedenvwrapp": 319, "openmlenv": 319, "pettingzooenv": 319, "robohiveenv": 319, "smacv2env": 319, "smacv2wrapp": 319, "vmaswrapp": 319, "qvaluehook": 319, "distributionalqvaluehook": 319, "reset_nois": 319, "cemplann": 319, "mpcplannerbas": 319, "mppiplann": 319, "independentnorm": 319, "truncatednorm": 319, "maskedonehotcategor": 319, "inv_softplu": 319, "vmapmodul": 319, "distributionaldqnloss": [319, 327], "discretesacloss": 319, "iqlloss": 319, "cqlloss": 319, "discretecqlloss": 319, "dtloss": 319, "onlinedtloss": 319, "a2closs": 319, "reinforceloss": 319, "dreameractorloss": 319, "dreamermodelloss": 319, "dreamervalueloss": 319, "td0estim": [319, 326], "td1estim": [319, 326], "td0_return_estim": 319, "td0_advantage_estim": 319, "td1_return_estim": 319, "vec_td1_return_estim": 319, "td1_advantage_estim": 319, "vec_td1_advantage_estim": 319, "td_lambda_return_estim": 319, "vec_td_lambda_return_estim": 319, "td_lambda_advantage_estim": 319, "vec_td_lambda_advantage_estim": 319, "generalized_advantage_estim": 319, "vec_generalized_advantage_estim": 319, "reward2go": 319, "distance_loss": [319, 326], "hold_out_net": 319, "hold_out_param": [319, 326], "softupd": [319, 326, 327, 329], "hardupd": [319, 326], "batchsubsampl": [319, 323], "clearcudacach": 319, "countframeslog": 319, "logreward": [319, 323, 327], "optimizerhook": [319, 327], "replaybuffertrain": [319, 323, 327], "rewardnorm": 319, "selectkei": [319, 323], "trainerhookbas": [319, 323, 327], "updateweight": [319, 323, 327], "make_collector_offpolici": 319, "make_collector_onpolici": 319, "make_dqn_loss": 319, "make_redq_loss": 319, "make_redq_model": 319, "make_replay_buff": [319, 326], "make_target_updat": 319, "parallel_env_constructor": [319, 326], "sync_async_collector": 319, "sync_sync_collector": 319, "correct_for_frame_skip": 319, "get_stats_random_rollout": 319, "csvlogger": [319, 327], "mlflowlogg": 319, "wandblogg": 319, "get_logg": 319, "generate_exp_nam": 319, "journei": 320, "textbook": 320, "highlight": 320, "ever": [320, 332], "bump": 320, "think": [320, 328, 332, 338], "benefit": [320, 332, 335], "pr": 320, "ground": [321, 326, 333], "categori": [321, 323], "recycl": [321, 335], "impos": 321, "violat": 321, "noisier": 321, "Their": [321, 332], "sd": 321, "prob_modul": 321, "pick": [321, 326, 327], "tabl": [321, 327], "customari": 321, "hopefulli": [321, 327], "functional_modul": 321, "make_funct": [321, 337], "mathbb": [321, 327], "rightarrow": [321, 327], "soften": 321, "backbon": [321, 329, 331, 337], "make_actor": 321, "make_valu": 321, "shared_param": 321, "make_common": 321, "reusabl": [322, 326, 335], "swappabl": [322, 326], "characterist": [322, 326, 333], "trainabl": [322, 326, 334], "whatev": [322, 326], "smth": [322, 326], "metric": [322, 326], "nutshel": [322, 326], "barto": [322, 332], "chapter": 322, "significantli": [322, 326, 327, 332], "next_stat": 322, "value_net_loss": 322, "pow": [322, 326], "therebi": 322, "room": 322, "convers": 322, "signifi": [322, 332], "underperform": 322, "thin": 322, "intric": 322, "believ": 323, "scheme": [323, 338], "substenti": 323, "_pre_steps_log_hook": 323, "_pre_optim_hook": 323, "sub_batch": 323, "_post_loss_hook": 323, "_post_optim_hook": 323, "post_optim": [323, 327], "_post_optim_log": 323, "post_optim_log": 323, "_post_steps_hook": 323, "_post_steps_log_hook": 323, "post_steps_log": 323, "comment": [323, 327, 337], "extens": [323, 335], "reserv": 323, "logginghook": 323, "logging_hook": 323, "save_dict": 323, "some_valu": 323, "torchsnapshot": 323, "ckpt_backend": 323, "pt": [323, 334], "filepath": 323, "save_train": 323, "load_from_fil": 323, "25": [325, 326, 327, 333, 336], "744": [325, 336], "galleri": [325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338], "mem": [325, 336], "mb": [325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338], "torchrl_demo": [325, 336, 337], "024": [325, 336, 337], "torchrl_env": [325, 336, 338], "191": [325, 333, 336, 338], "77": [325, 327, 333, 336, 338], "dqn_with_rnn": [325, 329, 336], "280": [325, 329, 333, 336], "1970": [325, 333, 336], "02": [325, 326, 327, 328, 329, 333, 334, 336], "804": [325, 333, 336], "coding_dqn": [325, 327, 336], "989": [325, 327, 336], "966": [325, 336], "rb_tutori": [325, 335, 336], "31": [325, 326, 327, 333, 334, 335, 336], "551": [325, 333, 335, 336], "475": [325, 333, 336], "multiagent_ppo": [325, 332, 336], "914": [325, 326, 332, 333, 336], "coding_ddpg": [325, 326, 336], "53": [325, 326, 327, 332, 333, 334, 335, 336], "421": [325, 326, 333, 336], "coding_ppo": [325, 328, 336], "249": [325, 328, 333, 336], "pretrained_model": [325, 334, 336], "00": [325, 326, 327, 328, 329, 332, 333, 334, 336], "52": [325, 327, 333, 334, 336], "406": [325, 333, 334, 336], "2158": [325, 336], "multi_task": [325, 331, 336], "916": [325, 331, 336], "author": [326, 327, 328, 329, 332, 333, 335], "vincent": [326, 327, 328, 329, 333, 335], "moen": [326, 327, 328, 329, 333, 335], "assembl": 326, "focus": 326, "straightforward": [326, 327, 335], "overview": [326, 328, 332, 337], "transpar": [326, 329], "understood": 326, "sota": [326, 327, 337], "illustr": [326, 327, 335], "loss_dict": 326, "modal": 326, "oblivi": [326, 328, 335], "elementari": 326, "didact": 326, "dilut": 326, "pessimist": [326, 327, 328], "target_actor_network_param": 326, "actor_in_kei": 326, "actor_crit": 326, "noth": [326, 328], "compromis": 326, "hp": 326, "hasattr": 326, "_value_estim": 326, "elif": [326, 327], "notimplementederror": 326, "unknown": 326, "_loss_actor": 326, "td_copi": 326, "actor_network_param": 326, "value_network_param": 326, "_loss_valu": 326, "pred_val": 326, "target_value_network_param": 326, "smooth": [326, 327], "loss_funt": 326, "glue": 326, "_forward": 326, "ndimens": 326, "remaind": 326, "focu": [326, 327, 328], "pixels_onli": [326, 327, 337, 338], "env_librari": 326, "env_task": 326, "env_arg": 326, "friendli": 326, "torchr": 326, "rescal": 326, "presum": 326, "make_transformed_env": 326, "reward_sc": 326, "double_to_float_list": 326, "double_to_float_inv_list": 326, "marker": 326, "env_per_collector": 326, "transform_state_dict": 326, "make_t_env": 326, "adjust": [326, 332, 333], "seem": [326, 329], "cheat": 326, "10m": 326, "cautiou": 326, "magnitud": 326, "thousand": [326, 329], "get_env_stat": 326, "proof_env": 326, "5000": [326, 327, 328], "maxim": [326, 333], "recal": [326, 328], "ddpgmlpactor": 326, "ddpgmlpqnet": 326, "materi": 326, "ornsteinuhlenbeckprocesswrapp": 326, "make_ddpg_actor": 326, "q_net": 326, "moduless": 326, "sugges": 326, "tight": 326, "10_000": [326, 328, 335], "traj_len": [326, 329], "make_record": 326, "recorder_obj": 326, "flavor": 326, "circular": 326, "buffer_s": [326, 327], "random_crop_len": 326, "prb": 326, "buffer_scratch_dir": 326, "temporari": 326, "dirrectori": 326, "trajecotri": 326, "sampel": 326, "dataflow": 326, "ceil_div": 326, "utd": [326, 329], "update_to_data": 326, "realiz": 326, "_must_": 326, "001": [326, 333], "outdat": 326, "trick": [326, 327], "despit": 326, "adam": [326, 327, 328, 329, 332, 333], "optimizer_actor": 326, "lr": [326, 327, 328, 329, 332, 333], "weight_decai": [326, 327], "optimizer_valu": 326, "total_collection_step": 326, "pretti": [326, 335], "rewards_ev": 326, "collected_fram": 326, "pbar": [326, 328, 329, 332, 333], "r0": 326, "numel": [326, 328, 329, 334, 335], "current_fram": 326, "sampled_tensordict": 326, "gn1": 326, "clip_grad_norm_": [326, 328, 332, 333], "gn2": 326, "gn": [326, 333], "td_record": 326, "rn": 326, "set_descript": [326, 328, 329, 332, 333], "2f": 326, "800": [326, 327], "2666": 326, "22it": [326, 327, 333], "1600": [326, 327], "1005": 326, "15it": [326, 327], "3200": [326, 327], "2113": 326, "35it": [326, 327], "48": [326, 327, 333, 334, 335], "4800": [326, 327, 333], "2988": 326, "80it": [326, 329, 333], "70": [326, 327, 328, 332, 333, 334], "186": [326, 333], "86": [326, 327, 333, 334], "538": [326, 333], "54": [326, 327, 333, 334], "56": [326, 327, 333, 334], "5600": 326, "6400": [326, 337], "1413": 326, "06it": [326, 327, 328, 333], "07": [326, 327, 332, 333, 334], "58": [326, 327, 333, 334, 335], "41": [326, 327, 333, 335], "233": [326, 333], "478": [326, 333], "83": [326, 327, 332, 333, 334], "45": [326, 327, 332, 333, 334], "05": [326, 327, 333, 334], "72": [326, 327, 333], "7200": 326, "46it": [326, 327], "61": [326, 327, 332, 333, 334], "96": [326, 327, 333, 334], "238": [326, 333], "92": [326, 327, 333, 334], "80": [326, 327, 328, 332, 333, 334], "8000": [326, 328], "684": 326, "90it": [326, 327], "59": [326, 327, 333, 334], "235": [326, 333], "8800": 326, "573": [326, 333], "93": [326, 327, 333, 334], "79": [326, 327, 333, 334], "67": [326, 327, 331, 333, 334], "262": [326, 333], "36": [326, 327, 328, 329, 333], "9600": 326, "426": [326, 333], "29it": [326, 327], "89": [326, 327, 333, 334, 335], "10400it": 326, "413": [326, 333], "61it": [326, 327, 328, 333], "169": [326, 333], "plot": [326, 328, 329, 332, 333], "mention": [326, 329, 335, 338], "matplotlib": [326, 328, 329, 332, 333, 335, 338], "pyplot": [326, 328, 329, 332, 333, 335, 338], "plt": [326, 328, 329, 332, 333, 335, 338], "zip": [326, 330], "legend": 326, "xlabel": [326, 329, 332, 333], "ylabel": [326, 332], "tight_layout": 326, "concret": [326, 328], "takeawai": [326, 327], "minut": [326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "jupyt": [326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338], "ipynb": [326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338], "sphinx": [326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338], "customis": [327, 332], "road": 327, "aspect": 327, "highest": 327, "prerequisit": [327, 329], "familiar": [327, 332, 338], "lookup": 327, "amort": [327, 328], "conjunct": 327, "cart": 327, "pole": 327, "un": 327, "actuat": 327, "frictionless": 327, "upright": 327, "duelingcnndqnet": 327, "is_notebook": 327, "shell": 327, "get_ipython": 327, "__class__": 327, "zmqinteractiveshel": 327, "qtconsol": 327, "terminalinteractiveshel": 327, "ipython": [327, 332, 333], "nameerror": 327, "umbrella": 327, "misplac": 327, "misus": 327, "orchestr": 327, "everyth": [327, 329], "five": [327, 328], "64x64": 327, "motion": [327, 333], "obs_norm_sd": 327, "simpler": 327, "get_norm_stat": 327, "test_env": 327, "make_model": 327, "dummy_env": 327, "output_s": [327, 329], "init_bia": 327, "actor_explor": 327, "eps_greedy_v": 327, "eps_greedy_val_env": 327, "get_replay_buff": 327, "n_optim": 327, "themselv": 327, "simplic": [327, 328, 334, 335], "get_collector": 327, "data_collector": 327, "bunch": 327, "concept": [327, 335], "power": 327, "ubiquit": 327, "get_loss_modul": 327, "target_updat": 327, "995": [327, 333], "sensit": 327, "variat": 327, "2e": [327, 333], "wd": 327, "upd": 327, "harder": [327, 337], "5_000": 327, "500000": 327, "100000": 327, "005": 327, "mandatori": [327, 328, 332, 333], "fairer": 327, "budget": [327, 328], "dqn_exp_": 327, "uuid1": [327, 338], "9895": 327, "0737": 327, "tmp": [327, 335], "tmpvej8kfo": 327, "dqn_exp_356c0a84": 327, "9b44": 327, "11ee": [327, 338], "9298": [327, 338], "0242ac110002": [327, 338], "registr": 327, "cumbersom": 327, "buffer_hook": 327, "weight_updat": 327, "descript": [327, 328], "aliv": 327, "total_reward": 327, "25it": 327, "4045": 327, "9346": [327, 333], "64it": [327, 333], "4224": 327, "24it": [327, 328], "3772": 327, "03it": 327, "3951": 327, "49it": [327, 333], "3983": 327, "192": [327, 333, 335], "09": [327, 332, 333], "23it": [327, 333], "4526": 327, "224": [327, 333], "49": [327, 333, 334], "81it": [327, 333], "4497": 327, "57": [327, 328, 333, 334], "68it": [327, 333], "288": [327, 333], "85it": [327, 333], "320": [327, 333, 338], "71": [327, 332, 333, 334], "12it": 327, "352": [327, 333], "39it": [327, 333], "4134": 327, "384": [327, 333], "78": [327, 333, 334, 335], "05it": [327, 328, 333], "4345": 327, "416": [327, 333], "28it": 327, "4948": 327, "448": [327, 333], "480": [327, 333, 334], "85": [327, 333], "86it": 327, "51": [327, 333, 334, 335], "4586": 327, "544": [327, 333], "576": [327, 333], "02it": [327, 333], "608": [327, 333], "84it": [327, 333], "640": 327, "672": 327, "4797": 327, "704": 327, "92it": 327, "736": 327, "33it": [327, 333], "3893": 327, "768": 327, "47": [327, 329, 333], "66it": [327, 333], "65it": [327, 333], "832": 327, "11it": 327, "864": 327, "69it": 327, "896": 327, "70it": [327, 328, 333], "928": 327, "34it": [327, 328, 333], "960": 327, "71it": [327, 333], "4074": [327, 333], "992": [327, 333], "47it": [327, 333], "4434": 327, "97it": 327, "1056": 327, "1088": 327, "43": [327, 333, 334], "18it": [327, 333], "1120": [327, 328], "87it": [327, 329], "1152": 327, "1184": 327, "53it": [327, 333], "1216": 327, "1248": 327, "90": [327, 328, 332, 333, 335], "10it": [327, 333], "1280": 327, "40": [327, 328, 332, 333], "99it": 327, "1344": 327, "4645": 327, "1376": 327, "1408": 327, "1440": 327, "38it": [327, 328], "1472": 327, "36it": [327, 329], "1504": 327, "82it": 327, "1536": 327, "20it": [327, 333], "1568": 327, "4254": [327, 333], "04it": 327, "1632": 327, "63it": [327, 328, 333], "00it": 327, "1696": 327, "91it": 327, "1728": 327, "37": [327, 333, 334], "32it": [327, 333], "1760": 327, "4524": 327, "1792": 327, "17it": [327, 333], "1824": 327, "1856": 327, "1888": 327, "1920": 327, "1952": 327, "1984": 327, "2016": 327, "95it": 327, "2048": [327, 334], "76it": [327, 333], "2080": 327, "30it": 327, "2112": [327, 333], "08it": 327, "4676": 327, "2144": [327, 328], "84": [327, 329, 333], "2176": 327, "2208": 327, "2240": 327, "2272": 327, "2304": 327, "07it": [327, 333], "2336": 327, "62it": [327, 329, 333], "2368": 327, "2400": 327, "2432": 327, "98it": 327, "2464": 327, "74it": 327, "4375": [327, 333], "2496": 327, "2528": [327, 333], "51it": [327, 333], "2560": 327, "77it": 327, "2624": 327, "44it": 327, "2656": [327, 333], "37it": [327, 328], "2688": 327, "59it": [327, 333], "2720": [327, 333], "55": [327, 333, 334, 335], "2752": 327, "2784": 327, "2816": 327, "19it": 327, "2848": 327, "42it": [327, 333], "2880": 327, "57it": [327, 333], "2912": 327, "60it": [327, 333], "2944": [327, 333], "60": [327, 328, 332, 333, 334, 337], "2976": [327, 333], "3008": 327, "3040": 327, "3072": 327, "62": [327, 332, 333, 334], "3104": 327, "83it": 327, "63": [327, 332, 333, 334], "3136": 327, "79it": [327, 333], "3168": 327, "96it": 327, "65": [327, 333, 334], "3232": [327, 333], "2857": 327, "3264": 327, "66": [327, 333, 334, 335], "3296": 327, "3328": 327, "27it": 327, "3360": 327, "68": [327, 333], "3392": 327, "54it": [327, 333], "3424": 327, "69": [327, 333, 334], "3456": [327, 333], "3488": 327, "3520": 327, "3552": 327, "76": [327, 333, 334, 335], "3584": 327, "3616": 327, "93it": 327, "73": [327, 333], "3648": 327, "74": [327, 333, 334], "3680": 327, "3712": 327, "55it": [327, 333], "3744": 327, "3776": 327, "3808": 327, "3840": 327, "3872": 327, "58it": [327, 333], "3904": 327, "3936": 327, "3968": 327, "4000": [327, 328], "31it": 327, "4032": 327, "4064": 327, "82": [327, 333], "4096": 327, "48it": [327, 333], "4128": [327, 333], "4160": 327, "40it": 327, "4192": 327, "4256": [327, 333], "4288": [327, 333], "89it": 327, "4320": 327, "4352": 327, "4384": 327, "4416": 327, "4448": 327, "4480": 327, "4512": 327, "52it": [327, 333], "91": [327, 328, 333, 335], "4544": 327, "4576": 327, "4608": 327, "4640": 327, "4672": [327, 333], "16it": 327, "4704": 327, "4736": 327, "4768": 327, "97": [327, 333], "4832": 327, "4864": 327, "4896": 327, "4928": 327, "73it": 327, "4960": 327, "4992": 327, "88it": 327, "5024it": 327, "print_csv_files_in_fold": 327, "folder_path": 327, "csv_file": 327, "output_str": 327, "dirpath": 327, "walk": [327, 331], "endswith": 327, "strip": 327, "45859628915786743": 327, "4948333501815796": 327, "44965070486068726": 327, "23498058319091797": 327, "2632768154144287": 327, "19346225261688232": 327, "21796147525310516": 327, "2144242376089096": 327, "3144398331642151": 327, "3098433315753937": 327, "35966089367866516": 327, "31390029191970825": 327, "grad_norm_0": 327, "9590888023376465": 327, "439685344696045": 327, "3174026012420654": 327, "1765050888061523": 327, "1305181980133057": 327, "5655062198638916": 327, "340502977371216": 327, "2583680152893066": 327, "514200448989868": 327, "10000000894069672": 327, "285713195800781": 327, "qvaluenetwork": 327, "worst": 327, "accuraci": 327, "fanci": 327, "967": 327, "demonstr": [328, 332, 333, 338], "talk": 328, "repetit": 328, "six": 328, "sophist": [328, 332], "invent": 328, "theta_k": 328, "pi_": 328, "exceed": 328, "discourag": [328, 333], "indispens": 328, "analyz": 328, "lingua": 328, "franca": 328, "defaultdict": [328, 333], "has_cuda": [328, 332, 338], "3e": [328, 329, 332], "max_grad_norm": [328, 332], "ourselv": [328, 338], "benefici": 328, "errat": 328, "hamper": [328, 335], "reactiv": 328, "xy": 328, "sub_batch_s": 328, "num_epoch": [328, 332], "entropy_ep": [328, 332], "generalist": 328, "interchang": [328, 334, 335], "panel": 328, "charact": 328, "inverteddoublependulum": 328, "transmit": 328, "stai": 328, "supplementari": [328, 338], "told": 328, "stringent": [328, 332], "confid": [328, 332], "ran": 328, "f_": 328, "mu_": 328, "difficulti": [328, 338], "brought": [328, 329], "d_ob": 328, "d_action": 328, "policy_modul": [328, 332], "That": 328, "said": 328, "briefli": [328, 332], "refil": [328, 332], "capac": 328, "conveni": [328, 332, 333], "easiest": [328, 332], "mathemat": [328, 332], "tradeoff": [328, 332], "advantage_modul": 328, "lr_schedul": [328, 333], "cosineannealinglr": [328, 333], "eval_str": 328, "tensordict_data": [328, 332], "data_view": [328, 332], "subdata": [328, 332], "cum_reward_str": 328, "4f": [328, 329, 333], "stepcount_str": 328, "param_group": 328, "lr_str": 328, "eval_rollout": 328, "nice": 328, "446": [328, 333], "7765": 328, "0899": 328, "0003": [328, 333], "447": [328, 333], "3000": 328, "450": [328, 333], "1489": 328, "452": [328, 333], "1802": 328, "0002": [328, 333], "454": [328, 333], "6000": 328, "456": [328, 333], "2300": 328, "7000": 328, "445": [328, 333], "2262": 328, "2470": [328, 338], "9000": 328, "2444": 328, "2551": 328, "cap": [328, 335], "figsiz": [328, 333], "subplot": [328, 333, 338], "titl": [328, 329, 332, 333], "bit": [328, 329, 332, 335], "lstmmodul": 329, "84x84": 329, "accessori": 329, "stamp": 329, "tensordictprim": 329, "assist": 329, "emb": 329, "n_cell": 329, "customiz": 329, "almost": 329, "wouldn": 329, "make_tensordict_prim": 329, "interpolationmod": 329, "qval": 329, "stoch_polici": 329, "opportun": 329, "coupl": [329, 333, 335], "uniniti": 329, "again": [329, 332, 334, 335, 338], "redund": 329, "strongli": 329, "million": 329, "sake": [329, 334, 335], "20_000": [329, 333], "longest": 329, "npai": 329, "action_spread": 329, "1000000": 329, "112": [329, 333], "0011": [329, 333], "117": [329, 333], "0008": [329, 333], "150": [329, 333], "154": [329, 333], "0010": [329, 333], "171": [329, 333], "0007": [329, 333], "1971": 329, "tutorials_python": 330, "tutorials_jupyt": 330, "humanoid": 331, "env1_obs_kei": 331, "observation_stand": 331, "env2_obs_kei": 331, "observation_walk": 331, "tdreset1": 331, "tdreset2": 331, "tdreset": 331, "policy_common": 331, "policy_stand": 331, "policy_walk": 331, "But": 331, "exclusive_field": [331, 337], "stack_dim": [331, 337], "env1_mak": 331, "env2_mak": 331, "_single_task": 331, "td_rollout": 331, "matteo": 332, "bettini": 332, "maddpg": 332, "navig": 332, "lidar": 332, "sensor": 332, "collis": 332, "tie": 332, "mappo": 332, "ippo": 332, "phase": [332, 335], "mathbf": 332, "pi": [332, 333], "fed": [332, 335], "approxim": [332, 338], "literatur": 332, "overcom": 332, "stationari": 332, "concurr": 332, "analys": 332, "gui": 332, "visualis": 332, "multiagentmlp": 332, "divic": 332, "vmas_devic": 332, "6_000": 332, "team": [332, 337], "n_iter": 332, "minibatch_s": 332, "generalis": 332, "furthermor": 332, "simd": 332, "parallelis": 332, "warp": 332, "todai": 332, "circl": 332, "surround": 332, "dot": [332, 333], "collid": 332, "drag": 332, "elast": 332, "acceler": 332, "penalis": 332, "num_vmas_env": 332, "scenario_nam": 332, "four": [332, 333], "environmnet": 332, "final_rew": 332, "agent_collis": 332, "stress": 332, "paramount": 332, "n_rollout_step": 332, "evolut": 332, "yourself": 332, "utilis": 332, "n_actions_per_ag": 332, "n_obs_per_ag": 332, "share_parameters_polici": 332, "policy_net": 332, "denot": 332, "carefulli": [332, 338], "grant": 332, "converg": 332, "cooper": 332, "share_parameters_crit": 332, "critic_net": 332, "fantast": 332, "minibatch": 332, "desc": 332, "episode_reward_mean": 332, "episode_reward_mean_list": 332, "get_item_shap": 332, "critic_param": 332, "target_critic_param": 332, "refresh": 332, "3641679584980011": 332, "4940122067928314": 332, "0600677728652954": 332, "4344534873962402": 332, "1100871562957764": 332, "304917335510254": 332, "6943857669830322": 332, "871443748474121": 332, "8500826358795166": 332, "759843587875366": 332, "xvfb": 332, "pyvirtualdisplai": 332, "1400": [332, 333], "900": 332, "pil": 332, "rendering_callback": 332, "fromarrai": 332, "rgb_arrai": [332, 333], "gif": 332, "save_al": 332, "append_imag": 332, "profici": 332, "master": 332, "freeli": 333, "codebas": 333, "touch": 333, "undertaken": 333, "broader": 333, "wider": 333, "algebra": 333, "acquaint": 333, "avenu": 333, "_apply_to_composit": 333, "default_x": 333, "default_i": 333, "torqu": 333, "upward": 333, "angular": 333, "sin": 333, "rad": 333, "sec": 333, "gravit": 333, "angl": 333, "deleg": 333, "new_th": 333, "new_thdot": 333, "thdot": 333, "g_forc": 333, "max_torqu": 333, "angle_norm": 333, "max_spe": 333, "albeit": 333, "gen_param": 333, "high_th": 333, "high_thdot": 333, "low_th": 333, "low_thdot": 333, "rng": 333, "lazili": 333, "organ": [333, 335], "trivial": 333, "neither": 333, "shortcut": [333, 338], "irrelev": 333, "_make_spec": 333, "td_param": 333, "pseudo": 333, "render_mod": 333, "render_fp": 333, "random_": 333, "_make_step": 333, "staticmethod": 333, "complic": [333, 335, 338], "showcas": 333, "skeleton": 333, "_apply_transform": [333, 338], "_inv_apply_transform": [333, 338], "subset": [333, 334], "unitari": 333, "sine": 333, "cosin": 333, "sintransform": 333, "tensordict_reset": 333, "costransform": 333, "t_sin": 333, "t_co": 333, "cat_transform": 333, "mdp": 333, "simple_rollout": 333, "unexplor": 333, "recreat": 333, "init_td": 333, "traj_return": 333, "last_reward": 333, "is_ipython": 333, "inlin": 333, "get_backend": 333, "ion": 333, "gcf": 333, "clear_output": 333, "625": 333, "0488": 333, "0748": 333, "519": 333, "0499": 333, "4472": 333, "073": 333, "0685": 333, "0408": 333, "552": 333, "72it": 333, "5154": 333, "9086": 333, "527": 333, "9385": 333, "155": 333, "78it": 333, "2568": 333, "4981": 333, "223": 333, "8929": 333, "4491": 333, "581": 333, "3233": 333, "0664": 333, "596": 333, "1021": 333, "5263": 333, "9579": 333, "5807": 333, "8075": 333, "212": 333, "2009": 333, "5525": 333, "2894": 333, "0115": 333, "0977": 333, "1845": 333, "1830": 333, "4858": 333, "2863": 333, "0297": 333, "464": 333, "4617": 333, "5997": 333, "904": 333, "1647": 333, "0777": 333, "901": 333, "4709": 333, "6813": 333, "8317": 333, "3221": 333, "5554": 333, "276": 333, "3353": 333, "701": 333, "8570": 333, "6656": 333, "463": 333, "7779": 333, "6911": 333, "875": 333, "0796": 333, "7082": 333, "308": 333, "0421": 333, "1496": 333, "5037": 333, "1755": 333, "5029": 333, "9454": 333, "665": 333, "9330": 333, "2118": 333, "444": 333, "0995": 333, "6294": 333, "3146": 333, "2909": 333, "461": 333, "9720": 333, "1298": 333, "9923": 333, "0345": 333, "3438": 333, "3688": 333, "424": 333, "6953": 333, "5233": 333, "411": 333, "8011": 333, "5329": 333, "2677": 333, "6969": 333, "7010": 333, "376": 333, "9352": 333, "7707": 333, "6178": 333, "5646": 333, "348": 333, "7304": 333, "9407": 333, "942": 333, "3882": 333, "7604": 333, "3507": 333, "8928": 333, "258": 333, "6978": 333, "4641": 333, "549": 333, "6047": 333, "5005": 333, "4136": 333, "2993": 333, "3222": 333, "4046": 333, "7314": 333, "275": 333, "6331": 333, "9318": 333, "961": 333, "8331": 333, "1604": 333, "4099": 333, "4761": 333, "125": 333, "4262": 333, "6363": 333, "382": 333, "3593": 333, "7377": 333, "2847": 333, "3443": 333, "867": 333, "3592": 333, "4760": 333, "441": 333, "9950": 333, "8021": 333, "3528": 333, "1214": 333, "708": 333, "4023": 333, "3583": 333, "041": 333, "3801": 333, "0310": 333, "120": [333, 335], "4244": 333, "2039": 333, "4850": 333, "8748": 333, "706": 333, "4897": 333, "9210": 333, "8964": 333, "0832": 333, "3934": 333, "8971": 333, "2933": 333, "3377": 333, "6996": 333, "2274": 333, "8916": 333, "098": 333, "2660": 333, "9110": 333, "4503": 333, "6956": 333, "9172": 333, "4026": 333, "946": 333, "9229": 333, "5205": 333, "294": 333, "8872": 333, "6637": 333, "019": 333, "9281": 333, "2082": 333, "724": 333, "8561": 333, "6574": 333, "357": 333, "4138": 333, "5230": 333, "385": 333, "4065": 333, "5642": 333, "921": 333, "9786": 333, "4129": 333, "5831": 333, "266": 333, "7723": 333, "4152": 333, "0898": 333, "389": 333, "5155": 333, "5376": 333, "5616": 333, "4094": 333, "283": 333, "5333": 333, "4803": 333, "895": 333, "6566": 333, "2588": 333, "662": 333, "4732": 333, "7503": 333, "068": 333, "0714": 333, "3370": 333, "059": 333, "8612": 333, "1915": 333, "3855": 333, "0349": 333, "9644": 333, "4538": 333, "0392": 333, "4080": 333, "1648": 333, "9599": 333, "143": 333, "4284": 333, "5946": 333, "2590": 333, "9181": 333, "4621": 333, "9075": 333, "674": 333, "1772": 333, "9444": 333, "351": 333, "9391": 333, "5595": 333, "8673": 333, "6240": 333, "5919": 333, "0018": 333, "1071": 333, "9127": 333, "251": 333, "9799": 333, "3131": 333, "9612": 333, "9705": 333, "8741": 333, "2230": 333, "0972": 333, "0337": 333, "0350": 333, "0654": 333, "102": [333, 335], "2441": 333, "4596": 333, "362": 333, "103": 333, "4362": 333, "104": 333, "4041": 333, "6907": 333, "105": 333, "4664": 333, "2760": 333, "0299": 333, "9712": 333, "349": 333, "107": 333, "3332": 333, "4479": 333, "772": 333, "108": 333, "4357": 333, "9591": 333, "543": 333, "109": 333, "6216": 333, "1353": 333, "692": 333, "110": 333, "6261": 333, "7086": 333, "496": 333, "111": 333, "7758": 333, "9818": 333, "7772": 333, "5055": 333, "113": 333, "5840": 333, "3180": 333, "2083": 333, "115": 333, "5275": 333, "6873": 333, "116": 333, "4107": 333, "1624": 333, "6372": 333, "2571": 333, "118": 333, "4039": 333, "4428": 333, "119": 333, "4728": 333, "5628": 333, "6767": 333, "2466": 333, "522": 333, "121": [333, 338], "5873": 333, "5072": 333, "122": [333, 335, 338], "6548": 333, "3766": 333, "123": 333, "5134": 333, "1955": 333, "124": [333, 335], "2481": 333, "0591": 333, "4500": 333, "3368": 333, "126": 333, "9708": 333, "7059": 333, "127": [333, 335], "3031": 333, "2534": 333, "843": 333, "3327": 333, "6193": 333, "129": 333, "4831": 333, "1172": 333, "2593": 333, "4219": 333, "962": 333, "8380": 333, "899": 333, "132": 333, "2721": 333, "9048": 333, "166": 333, "133": 333, "2419": 333, "5248": 333, "134": 333, "2139": 333, "4278": 333, "135": 333, "0690": 333, "5140": 333, "136": 333, "1140": 333, "7402": 333, "137": [333, 335], "5356": 333, "1636": 333, "138": 333, "0671": 333, "8798": 333, "139": [333, 335], "8918": 333, "3298": 333, "307": 333, "140": [333, 335], "1779": 333, "141": 333, "1771": 333, "3624": 333, "936": 333, "142": 333, "1683": 333, "4810": 333, "9373": 333, "4435": 333, "144": 333, "4396": 333, "8092": 333, "145": 333, "2572": 333, "146": 333, "4212": 333, "0260": 333, "147": 333, "0939": 333, "6478": 333, "605": 333, "148": 333, "6606": 333, "7289": 333, "149": 333, "9300": 333, "7193": 333, "563": 333, "1166": 333, "8514": 333, "151": 333, "9108": 333, "0672": 333, "292": 333, "152": 333, "8591": 333, "3768": 333, "153": 333, "9976": 333, "0576": 333, "0067": 333, "935": 333, "4199": 333, "1722": 333, "156": 333, "8310": 333, "3466": 333, "157": 333, "8631": 333, "2492": 333, "158": 333, "8763": 333, "1277": 333, "159": 333, "5562": 333, "7446": 333, "1082": 333, "9830": 333, "161": 333, "0946": 333, "5229": 333, "162": 333, "4574": 333, "6900": 333, "163": [333, 334], "2229": 333, "0318": 333, "482": 333, "164": 333, "0543": 333, "0817": 333, "761": 333, "165": 333, "2809": 333, "5118": 333, "366": 333, "1142": 333, "5635": 333, "167": 333, "1949": 333, "2327": [333, 338], "982": 333, "168": 333, "0967": 333, "0387": 333, "457": 333, "0782": 333, "2150": 333, "170": 333, "5222": 333, "3725": 333, "9288": 333, "9837": 333, "172": 333, "1416": 333, "1099": 333, "173": 333, "8620": 333, "8475": 333, "174": 333, "1807": 333, "175": 333, "41it": 333, "1148": 333, "0645": 333, "45it": 333, "2751": 333, "8313": 333, "177": 333, "50it": 333, "9286": 333, "9770": 333, "178": 333, "5735": 333, "2837": 333, "179": 333, "56it": 333, "2926": 333, "9489": 333, "180": 333, "1507": 333, "181": 333, "8724": 333, "3567": 333, "182": 333, "3574": 333, "6140": 333, "183": 333, "7895": 333, "2518": 333, "184": 333, "6146": 333, "185": 333, "8776": 333, "7358": 333, "3722": 333, "8428": 333, "187": 333, "7955": 333, "188": 333, "0092": 333, "7106": 333, "829": 333, "189": 333, "2264": 333, "6919": 333, "190": 333, "1438": 333, "1362": 333, "0618": 333, "8217": 333, "9420": 333, "6765": 333, "193": 333, "7745": 333, "0709": 333, "194": 333, "9478": 333, "6867": 333, "195": 333, "6507": 333, "6225": 333, "196": 333, "2244": 333, "2195": 333, "197": 333, "5385": 333, "9263": 333, "198": 333, "1878": 333, "2374": 333, "199": 333, "8054": 333, "3504": 333, "557": 333, "0766": 333, "6825": 333, "201": 333, "2011": 333, "8393": 333, "202": 333, "0803": 333, "7815": 333, "203": 333, "8363": 333, "2460": 333, "204": 333, "8643": 333, "2191": 333, "593": 333, "205": 333, "0773": 333, "1343": 333, "206": 333, "8657": 333, "207": 333, "9304": 333, "7584": 333, "208": 333, "8752": 333, "2307": 333, "209": 333, "5250": 333, "4869": 333, "7837": 333, "5762": 333, "211": 333, "6661": 333, "8600": 333, "2502": 333, "1752": 333, "213": 333, "3075": 333, "8871": 333, "214": 333, "9406": 333, "8090": 333, "215": 333, "6291": 333, "8923": 333, "876": 333, "216": 333, "9504": 333, "21e": 333, "217": 333, "7431": 333, "7880": 333, "218": 333, "4463": 333, "5432": 333, "219": 333, "3793": 333, "3313": 333, "220": 333, "8843": 333, "0369": 333, "065": 333, "221": 333, "4828": 333, "8391": 333, "222": 333, "6265": 333, "2913": 333, "947": 333, "5541": 333, "1252": 333, "7342": 333, "2396": 333, "225": 333, "5936": 333, "1924": 333, "226": 333, "9975": 333, "2045": 333, "227": 333, "8367": 333, "9540": 333, "228": 333, "7259": 333, "6743": 333, "229": 333, "4827": 333, "7528": 333, "230": 333, "7361": 333, "8756": 333, "231": 333, "7646": 333, "1116": 333, "232": 333, "5426": 333, "8385": 333, "5662": 333, "8585": 333, "234": 333, "8234": 333, "7930": 333, "2648": 333, "9309": 333, "236": 333, "6817": 333, "237": 333, "0943": 333, "1533": 333, "3045": 333, "0483": 333, "239": 333, "240": [333, 337, 338], "6415": 333, "0201": 333, "241": 333, "4437": 333, "4365": 333, "242": 333, "0358": 333, "4943": 333, "243": 333, "1272": 333, "5003": 333, "1180": 333, "2637": 333, "245": 333, "7197": 333, "0873": 333, "246": 333, "2917": 333, "247": 333, "0160": 333, "0738": 333, "248": 333, "3689": 333, "0120": 333, "5570": 333, "0475": 333, "250": 333, "4423": 333, "2220": 333, "6803": 333, "252": 333, "1465": 333, "7214": 333, "253": 333, "8801": 333, "7034": 333, "254": 333, "9136": 333, "4076": 333, "7589": 333, "5013": 333, "8150": 333, "2241": 333, "257": 333, "0753": 333, "8081": 333, "1951": 333, "8314": 333, "259": 333, "0038": 333, "260": 333, "0889": 333, "4616": 333, "261": 333, "0655": 333, "8333": 333, "9476": 333, "263": 333, "7554": 333, "3798": 333, "264": 333, "3717": 333, "3947": 333, "529": 333, "265": 333, "3060": 333, "6495": 333, "7467": 333, "8889": 333, "267": 333, "8457": 333, "591": 333, "268": 333, "7137": 333, "0536": 333, "771": 333, "269": 333, "1651": 333, "388": 333, "270": 333, "8246": 333, "5709": 333, "281": 333, "271": 333, "7502": 333, "0521": 333, "032": 333, "272": 333, "5475": 333, "7253": 333, "273": 333, "2856": 333, "7130": 333, "274": 333, "2778": 333, "4122": 333, "8368": 333, "1841": 333, "9622": 333, "1603": 333, "003e": 333, "277": 333, "0247": 333, "346": 333, "278": 333, "2238": 333, "6418": 333, "279": 333, "0626": 333, "2538": 333, "0149": 333, "7380": 333, "2167": 333, "8911": 333, "282": 333, "8725": 333, "1983": 333, "8142": 333, "3709": 333, "284": 333, "4989": 333, "285": 333, "6464": 333, "6210": 333, "286": 333, "9726": 333, "0820": 333, "287": 333, "6975": 333, "9091": 333, "4926": 333, "4791": 333, "289": 333, "0905": 333, "3500": 333, "290": 333, "2287": 333, "291": 333, "9918": 333, "5543": 333, "9245": 333, "6444": 333, "631": 333, "293": 333, "0448": 333, "4769": 333, "8566": 333, "7208": 333, "295": 333, "0966": 333, "296": 333, "5303": 333, "1537": 333, "023": 333, "297": 333, "2682": 333, "564": 333, "298": 333, "4318": 333, "5063": 333, "299": 333, "7475": 333, "4190": 333, "8186": 333, "5077": 333, "301": 333, "1883": 333, "5291": 333, "472": 333, "302": 333, "1256": 333, "3998": 333, "303": 333, "3622": 333, "0930": 333, "626": 333, "304": 333, "9500": 333, "0075": 333, "5664": 333, "305": 333, "5697": 333, "3024": 333, "306": 333, "3117": 333, "0052": 333, "006": 333, "0981": 333, "9312": 333, "3873": 333, "309": 333, "0411": 333, "2650": 333, "310": 333, "1656": 333, "0228": 333, "004": 333, "311": 333, "1196": [333, 338], "2478": 333, "312": 333, "7353": 333, "0812": 333, "313": 333, "3022": 333, "758": 333, "314": 333, "1406": 333, "4626": 333, "315": 333, "2156": 333, "851": 333, "316": 333, "1953": 333, "3774": 333, "317": 333, "6385": 333, "9917": 333, "318": 333, "2764": 333, "905": 333, "319": 333, "6391": 333, "9317": 333, "9748": 333, "2679": 333, "321": 333, "8495": 333, "5125": 333, "8177": 333, "6602": 333, "323": 333, "0704": 333, "5776": 333, "324": 333, "9833": [333, 337], "1339": 333, "402": 333, "325": 333, "1238": 333, "326": 333, "9299": 333, "0227": 333, "327": 333, "7727": 333, "1607": 333, "336": 333, "328": 333, "3958": 333, "3223": 333, "763": 333, "329": 333, "4742": 333, "1797": 333, "330": 333, "0144": 333, "0085": 333, "791": 333, "331": 333, "8284": 333, "0428": 333, "332": 333, "0098": 333, "7365": 333, "333": 333, "4566": 333, "0781": 333, "086": 333, "334": 333, "3355": 333, "0230": 333, "335": 333, "0423": 333, "076": 333, "3711": 333, "1335": 333, "6855": 333, "337": 333, "0304": 333, "0023": 333, "8459": 333, "338": 333, "9998": 333, "4399": 333, "339": 333, "2303": 333, "1346": 333, "340": 333, "2915": 333, "7116": 333, "341": 333, "5560": 333, "0487": 333, "342": 333, "5119": 333, "061": 333, "343": 333, "3305": 333, "3705": 333, "957": 333, "344": 333, "6068": 333, "345": 333, "5731": 333, "3897": 333, "0376": 333, "347": 333, "0434": 333, "012": 333, "1300": 333, "1215": 333, "0968": 333, "0885": 333, "350": 333, "1348": 333, "0073": 333, "5052": 333, "4184": 333, "2817": 333, "8887": 333, "353": 333, "4779": 333, "1009": 333, "354": 333, "0604": 333, "599": 333, "355": 333, "4486": 333, "1176": 333, "656": 333, "356": 333, "2436": 333, "0668": 333, "8849": 333, "0012": 333, "358": 333, "7511": 333, "8804": 333, "359": 333, "8870": 333, "6728": 333, "360": 333, "8841": 333, "5508": 333, "361": 333, "5242": 333, "0268": 333, "0013": 333, "6185": 333, "363": 333, "1378": 333, "0204": 333, "364": 333, "0355": 333, "685": 333, "365": 333, "4884": 333, "0231": 333, "0770": 333, "0014": 333, "6793": 333, "367": 333, "9834": 333, "863": 333, "368": 333, "6709": 333, "462": 333, "369": 333, "5199": 333, "9790": 333, "370": 333, "9401": 333, "7802": 333, "371": 333, "6723": 333, "372": 333, "2678": 333, "6201": 333, "373": 333, "2184": 333, "7385": 333, "374": 333, "6344": 333, "617": 333, "375": 333, "9945": 333, "0772": 333, "567": 333, "7576": 333, "0398": 333, "377": 333, "3396": 333, "0022": 333, "094": 333, "378": 333, "3073": 333, "4018": 333, "379": 333, "1869": 333, "380": 333, "0481": 333, "1117": 333, "381": 333, "6823": 333, "981": 333, "8305": 333, "0210": 333, "383": 333, "4908": 333, "0272": 333, "3267": 333, "0111": 333, "7965": 333, "21it": 333, "1796": 333, "0039": 333, "5396": 333, "386": 333, "3757": 333, "0490": 333, "387": 333, "1394": 333, "4187": 333, "2986": 333, "7954": 333, "1274": 333, "0063": 333, "813": 333, "390": 333, "8706": 333, "0114": 333, "391": 333, "6922": 333, "0004": 333, "2423": 333, "392": 333, "9115": 333, "2602": 333, "393": 333, "2449": 333, "0783": 333, "394": 333, "0631": 333, "0057": 333, "7444": 333, "395": 333, "3339": 333, "0167": 333, "396": 333, "4806": 333, "397": 333, "4171": 333, "067": 333, "398": 333, "2618": 333, "5809": 333, "399": 333, "0054": 333, "3364": 333, "8733": 333, "0184": 333, "401": 333, "9137": 333, "0113": 333, "025": 333, "0386": 333, "0625": 333, "403": 333, "1332": 333, "0582": 333, "7816": 333, "404": 333, "8341": 333, "0941": 333, "854": 333, "405": 333, "8615": 333, "588": 333, "3849": 333, "008": 333, "407": 333, "9395": 333, "0765": 333, "055": 333, "408": 333, "2685": 333, "2235": 333, "688": 333, "409": 333, "3052": 333, "4249": 333, "410": 333, "6806": 333, "6383": 333, "3721": 333, "9981": 333, "412": 333, "1862": 333, "822": 333, "9811": 333, "0171": 333, "013": 333, "414": 333, "0252": 333, "0049": 333, "6205": 333, "415": 333, "1108": 333, "4921": 333, "9142": 333, "8130": 333, "417": 333, "1725": 333, "0036": 333, "3196": 333, "418": 333, "7795": 333, "0242": 333, "799": 333, "419": 333, "7737": 333, "0138": 333, "420": 333, "1462": 333, "0053": 333, "9226": 333, "6139": 333, "422": 333, "9889": 333, "0403": 333, "423": 333, "6194": 333, "0032": 333, "3989": 333, "0104": 333, "425": 333, "9960": 333, "0009": 333, "6009": 333, "2697": 333, "0914": 333, "427": 333, "1114": 333, "428": 333, "9862": 333, "1932": 333, "429": 333, "0637": 333, "0623": 333, "082": 333, "430": 333, "9906": 333, "2031": 333, "431": 333, "9948": 333, "0895": 333, "432": 333, "0256": 333, "433": 333, "4231": 333, "0449": 333, "644": 333, "434": 333, "1039": 333, "1973": 333, "435": 333, "4561": 333, "1225": 333, "436": 333, "0211": 333, "2125": 333, "437": 333, "3866": 333, "0050": 333, "7202": 333, "438": 333, "6388": 333, "0072": 333, "439": 333, "1187": 333, "0015": 333, "5116": 333, "440": 333, "0432": 333, "0025": 333, "7809": 333, "1925": 333, "0103": 333, "442": 333, "9570": 333, "443": 333, "0871": 333, "5601": 333, "0165": 333, "0047": 333, "6061": 333, "2746": 333, "0027": 333, "7887": 333, "1835": 333, "0035": 333, "855": 333, "8420": 333, "548": 333, "2653": 333, "0126": 333, "9736": 333, "449": 333, "0594": 333, "0119": 333, "6196": 333, "4509": 333, "0373": 333, "451": 333, "0620": 333, "6898": 333, "3235": 333, "687": 333, "453": 333, "5879": 333, "8406": 333, "0694": 333, "455": 333, "8259": 333, "0235": 333, "8500": 333, "0024": 333, "4054": 333, "458": 333, "2027": 333, "0894": 333, "459": 333, "5966": 333, "460": 333, "6942": 333, "0016": 333, "6703": 333, "0145": 333, "8124": 333, "0218": 333, "9196": 333, "0188": 333, "8986": 333, "0884": 333, "0084": 333, "5624": 333, "465": 333, "8862": 333, "0006": 333, "5384": 333, "466": 333, "5837": 333, "467": 333, "8954": 333, "0101": 333, "6751": 333, "468": 333, "8063": 333, "0122": 333, "9635": 333, "469": 333, "0692": 333, "4216": 333, "470": 333, "1227": 333, "0586": 333, "162e": 333, "471": 333, "9690": 333, "0074": 333, "4166": 333, "6324": 333, "473": 333, "0778": 333, "474": 333, "8548": 333, "0017": 333, "4408": 333, "8125": 333, "1515": 333, "476": [333, 335], "2733": 333, "0044": 333, "2836": 333, "477": 333, "7497": 333, "7681": 333, "8547": 333, "0105": 333, "7212": 333, "479": 333, "9848": 333, "0019": 333, "6498": 333, "1987": 333, "5473": 333, "481": 333, "8991": 333, "0033": 333, "6091": 333, "9189": 333, "5771": 333, "483": 333, "6781": 333, "7542": 333, "484": 333, "5959": 333, "0064": 333, "4295": 333, "485": 333, "2547": 333, "486": 333, "0636": 333, "547": 333, "487": 333, "0065": 333, "488": 333, "1694": 333, "0083": 333, "5759": 333, "489": 333, "0493": 333, "0021": 333, "7805": 333, "490": 333, "0950": 333, "497": 333, "491": 333, "9717": 333, "3672": 333, "492": 333, "0207": 333, "493": 333, "8266": 333, "0069": 333, "5365": 333, "494": 333, "2623": 333, "5078": 333, "495": 333, "4545": 333, "09636": 333, "8754": 333, "498": 333, "0031": 333, "8269": 333, "499": 333, "4082": 333, "6642": 333, "2284": 333, "501": 333, "9130": 333, "502": 333, "503": 333, "7624": 333, "0056": 333, "3858": 333, "504": 333, "0890": 333, "0042": 333, "505": 333, "7505": 333, "2157": 333, "506": 333, "8394": 333, "3413": 333, "507": 333, "9609": 333, "0041": 333, "6905": 333, "508": 333, "8467": 333, "4409": 333, "509": 333, "510": 333, "8128": 333, "3559": 333, "511": 333, "1479": 333, "0264": 333, "1589": 333, "566": 333, "513": 333, "2756": 333, "0046": 333, "5266": 333, "514": 333, "9873": 333, "0112": 333, "9314": 333, "515": 333, "3791": 333, "0721": 333, "516": 333, "4580": 333, "0758": 333, "6114": 333, "517": 333, "2431": 333, "518": 333, "1958": 333, "5553": 333, "8924": 333, "0097": 333, "520": 333, "3737": 333, "0234": 333, "521": 333, "9125": 333, "4623": 333, "3230": 333, "0589": 333, "3784": 333, "523": 333, "9482": 333, "0051": 333, "524": 333, "1979": 333, "0045": 333, "6401": 333, "525": 333, "1588": 333, "0048": 333, "6255": 333, "526": 333, "6084": 333, "3477": 333, "1475": 333, "0209": 333, "528": 333, "43it": 333, "7611": 333, "1040": 333, "0099": 333, "0173": 333, "643": 333, "530": 333, "8189": 333, "4358": 333, "531": 333, "9897": 333, "532": 333, "1548": 333, "9751": 333, "533": 333, "6362": 333, "7495": 333, "534": 333, "1749": 333, "9513": 333, "535": 333, "7708": 333, "0371": 333, "536": 333, "2649": 333, "0437": 333, "537": 333, "5491": 333, "0276": 333, "6426": 333, "7294": 333, "078e": 333, "539": 333, "9928": 333, "540": 333, "7937": 333, "0124": 333, "9664": 333, "541": 333, "3342": 333, "542": 333, "2046": 333, "5496": 333, "0956": 333, "0059": 333, "545": 333, "9028": 333, "5843": 333, "546": 333, "0674": 333, "0178": 333, "797": 333, "2815": 333, "0599": 333, "1587": 333, "9276": 333, "8228": 333, "6164": 333, "6850": 333, "9167": 333, "3092": 333, "0670": 333, "9177": 333, "553": 333, "1599": 333, "0043": 333, "554": 333, "6367": 333, "555": 333, "3657": 333, "556": 333, "6694": 333, "2622": 333, "0372": 333, "4841": 333, "558": 333, "2707": 333, "0058": 333, "757": 333, "559": 333, "2267": 333, "5415": 333, "560": 333, "4556": 333, "0163": 333, "561": 333, "1839": 333, "0809": 333, "6262": 333, "562": 333, "0278": 333, "1112": 333, "6155": 333, "565": 333, "1427": 333, "3582": 333, "624": 333, "7870": 333, "9490": 333, "0439": 333, "8796": 333, "568": 333, "8026": 333, "612": 333, "569": 333, "3147": 333, "8486": 333, "570": 333, "7917": 333, "0129": 333, "571": 333, "9553": 333, "0020": 333, "6871": 333, "572": 333, "3132": 333, "0159": 333, "8646": 333, "5320": 333, "0269": 333, "574": 333, "2955": 333, "0245": 333, "575": 333, "3347": 333, "0179": 333, "9718": 333, "1629": 333, "577": 333, "4164": 333, "0070": 333, "4335": 333, "578": 333, "579": 333, "3049": 333, "9063": 333, "580": 333, "8785": 333, "3295": 333, "5184": 333, "0546": 333, "582": 333, "4589": 333, "583": 333, "4697": 333, "2476": 333, "584": 333, "2397": 333, "585": 333, "4953": 333, "1775": 333, "586": 333, "2258": 333, "0110": 333, "7671": 333, "587": 333, "3981": 333, "8590": 333, "589": 333, "9820": 333, "4221": 333, "590": 333, "1293": 333, "0116": 333, "868": 333, "1675": 333, "5931": 333, "592": 333, "2910": 333, "5219": 333, "2124": 333, "1730": 333, "737": 333, "594": 333, "2914": 333, "0206": 333, "595": 333, "0172": 333, "3982": 333, "0945": 333, "0121": 333, "4789": 333, "597": 333, "3805": 333, "598": 333, "3310": 333, "5065": 333, "6028": 333, "6316": 333, "6724": 333, "6523": 333, "601": 333, "0136": 333, "4298": 333, "602": 333, "3524": 333, "2629": 333, "603": 333, "2635": 333, "7839": 333, "604": 333, "6041": 333, "8027": 333, "4170": 333, "4675": 333, "606": 333, "3153": 333, "9316": 333, "607": 333, "0649": 333, "9722": 333, "7989": 333, "0329": 333, "609": 333, "1976": 333, "6852": 333, "610": 333, "4793": 333, "1255": 333, "611": 333, "4581": 333, "0394": 333, "2047": 333, "0326": 333, "613": 333, "8967": 333, "8619": 333, "614": 333, "5906": 333, "6491": 333, "615": 333, "6634": 333, "4394": 333, "616": 333, "0624": 333, "0061": 333, "5676": 333, "3259": 333, "0131": 333, "7733": 333, "618": 333, "7515": 333, "0189": 333, "5575": 333, "619": 333, "9313": 333, "6286": 333, "620": 333, "4325": 333, "7832": 333, "621": 333, "1134": 333, "622": 333, "4572": 333, "0500": 333, "5838": 333, "623": 333, "3818": 333, "8623": 333, "1253": 333, "6622": 333, "subject": 333, "saw": [333, 335], "explain": 334, "semat": 334, "r3mtransform": 334, "embodi": 334, "ai": 334, "env_transform": [334, 338], "s3": 334, "amazonaw": 334, "r3m_50": 334, "374m": 334, "8mb": 334, "1mb": 334, "2m": 334, "9m": 334, "7mb": 334, "5mb": 334, "0m": 334, "0mb": 334, "6m": 334, "9mb": 334, "2mb": 334, "4m": 334, "115m": 334, "130m": 334, "139m": 334, "3mb": 334, "147m": 334, "162m": 334, "170m": 334, "179m": 334, "186m": 334, "6mb": 334, "195m": 334, "202m": 334, "212m": 334, "218m": 334, "229m": 334, "246m": 334, "261m": 334, "4mb": 334, "267m": 334, "277m": 334, "283m": 334, "293m": 334, "300m": 334, "311m": 334, "326m": 334, "333m": 334, "342m": 334, "348m": 334, "360m": 334, "367m": 334, "373m": 334, "wiser": 334, "conclud": 334, "_storag": [334, 335], "2159": 334, "supervis": [335, 338], "pull": 335, "temporarili": 335, "ram": [335, 338], "batteri": 335, "dataliststorag": 335, "datalazytensorstorag": 335, "tensordidct": 335, "datalazymemmapstorag": 335, "buffer_list": 335, "lowest": 335, "medium": 335, "buffer_lazytensor": 335, "buffer_lazymemmap": 335, "tempdir": 335, "tmpd3_y2k51": 335, "fullest": 335, "convini": 335, "mydata": 335, "background": 335, "question": [335, 337], "_i": 335, "artifici": 335, "0892946e": 335, "she": 335, "augment": 335, "proport": 335, "hist": 335, "barcontain": 335, "artist": 335, "revert": 335, "expens": 335, "reappear": 335, "unfold": 335, "problemat": 335, "window": 335, "4th": 335, "demo": 337, "icml": 337, "vmoen": 337, "fb": 337, "invest": 337, "platform": 337, "media": 337, "predominantli": 337, "tensordict1": 337, "tensordict2": 337, "tensordict_sampl": 337, "_sampler": 337, "_sum_tre": 337, "modulenotfounderror": 337, "28791671991348267": 337, "gym_env": 337, "noopresetenv": [337, 338], "backbone_modul": 337, "params_expand": 337, "tensordict_exp": 337, "base_modul": 337, "0137": 337, "1524": 337, "0641": 337, "viewbackward0": 337, "asstridedbackward0": 337, "8728": 337, "1334": 337, "3494": 337, "6887": 337, "6402": 337, "_safetanhbackward": 337, "1132": 337, "1762": 337, "3430": 337, "2668": 337, "2918": 337, "6239": 337, "roughli": 337, "tensordicts_prealloc": 337, "tensordicts_stack": 337, "tensordict_rollout": [337, 338], "disclaim": 337, "concatmodul": 337, "loss_td": 337, "year": 337, "roadmap": 337, "compris": 337, "contributor": 337, "curiou": 337, "nascent": 337, "unsupervis": 338, "rom": 338, "licens": 338, "pygam": 338, "unifi": 338, "_build_env": 338, "adventur": 338, "airraid": 338, "alien": 338, "amidar": 338, "assault": 338, "3386": 338, "deserv": 338, "__episode__": 338, "__trajectory__": 338, "void": 338, "reproduct": 338, "tensordict_tprim": 338, "imshow": 338, "axesimag": 338, "0x7f5d364efe20": 338, "inconsist": 338, "0x7f5d8e595580": 338, "swingup": 338, "wrapper1": 338, "wrapper2": 338, "obviou": 338, "truth": 338, "env0": 338, "env_transformed_bi": 338, "stanc": 338, "transformeddistribut": 338, "base_dist": 338, "concat": 338, "mofidi": 338, "transformedenviron": 338, "moderet": 338, "computation": 338, "legitim": 338, "incom": 338, "amongst": 338, "wor": 338, "convention": 338, "scope": 338, "markovian": 338, "3288080526": 338, "constain": 338, "bar_": 338, "get_someth": 338, "bar_740d4948": 338, "9b43": 338, "aargh": 338, "foo_list": 338, "batched_env": 338, "_dispatch_caller_parallel": 338, "0x7f4f18489f40": 338, "bar_7b413e9a": 338, "8fe2": 338, "bar_7b415966": 338, "a48a": 338, "bar_7b37ccf2": 338, "a507": 338, "parallen": 338, "particularili": 338, "evolv": 338, "steadi": 338, "approx": 338, "0283": 338, "3728": 338, "1879": 338, "1478": 338, "1065": 338, "2098": 338, "_extra_st": 338, "observation_ssq": 338, "observation_sum": 338, "2025": 338, "2069": 338, "1439": 338, "dispach": 338, "absor": 338}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"], [11, 1, 1, "", "reset"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "RandomPolicy"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "BinaryDiscreteTensorSpec"], [25, 0, 1, "", "BoundedTensorSpec"], [26, 0, 1, "", "CompositeSpec"], [27, 0, 1, "", "DiscreteTensorSpec"], [28, 0, 1, "", "LazyStackedCompositeSpec"], [29, 0, 1, "", "LazyStackedTensorSpec"], [30, 0, 1, "", "MultiDiscreteTensorSpec"], [31, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [32, 0, 1, "", "MultiStep"], [33, 0, 1, "", "OneHotDiscreteTensorSpec"], [34, 0, 1, "", "PairwiseDataset"], [35, 0, 1, "", "PrioritizedReplayBuffer"], [36, 0, 1, "", "PromptData"], [37, 0, 1, "", "PromptTensorDictTokenizer"], [38, 0, 1, "", "ReplayBuffer"], [39, 0, 1, "", "RewardData"], [40, 0, 1, "", "RolloutFromModel"], [41, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [42, 0, 1, "", "TensorDictReplayBuffer"], [43, 0, 1, "", "TensorDictTokenizer"], [44, 0, 1, "", "TensorSpec"], [45, 0, 1, "", "TokenizedDatasetLoader"], [46, 0, 1, "", "UnboundedContinuousTensorSpec"], [47, 0, 1, "", "UnboundedDiscreteTensorSpec"], [48, 0, 1, "", "check_no_exclusive_keys"], [49, 0, 1, "", "consolidate_spec"], [50, 0, 1, "", "contains_lazy_spec"], [51, 0, 1, "", "create_infinite_iterator"], [56, 0, 1, "", "get_dataloader"]], "torchrl.data.BinaryDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "to_one_hot"], [24, 1, 1, "", "to_one_hot_spec"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "empty"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_empty"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "items"], [26, 1, 1, "", "keys"], [26, 1, 1, "", "lock_"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unlock_"], [26, 1, 1, "", "values"], [26, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "to_one_hot"], [27, 1, 1, "", "to_one_hot_spec"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "empty"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_empty"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "items"], [28, 1, 1, "", "keys"], [28, 1, 1, "", "lock_"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unlock_"], [28, 1, 1, "", "values"], [28, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to_categorical"], [31, 1, 1, "", "to_categorical_spec"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[32, 1, 1, "", "add_module"], [32, 1, 1, "", "apply"], [32, 1, 1, "", "bfloat16"], [32, 1, 1, "", "buffers"], [32, 1, 1, "", "children"], [32, 1, 1, "", "compile"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 1, 1, "", "double"], [32, 1, 1, "", "eval"], [32, 1, 1, "", "extra_repr"], [32, 1, 1, "", "float"], [32, 1, 1, "", "forward"], [32, 1, 1, "", "get_buffer"], [32, 1, 1, "", "get_extra_state"], [32, 1, 1, "", "get_parameter"], [32, 1, 1, "", "get_submodule"], [32, 1, 1, "", "half"], [32, 1, 1, "", "ipu"], [32, 1, 1, "", "load_state_dict"], [32, 1, 1, "", "modules"], [32, 1, 1, "", "named_buffers"], [32, 1, 1, "", "named_children"], [32, 1, 1, "", "named_modules"], [32, 1, 1, "", "named_parameters"], [32, 1, 1, "", "parameters"], [32, 1, 1, "", "register_backward_hook"], [32, 1, 1, "", "register_buffer"], [32, 1, 1, "", "register_forward_hook"], [32, 1, 1, "", "register_forward_pre_hook"], [32, 1, 1, "", "register_full_backward_hook"], [32, 1, 1, "", "register_full_backward_pre_hook"], [32, 1, 1, "", "register_load_state_dict_post_hook"], [32, 1, 1, "", "register_module"], [32, 1, 1, "", "register_parameter"], [32, 1, 1, "", "register_state_dict_pre_hook"], [32, 1, 1, "", "requires_grad_"], [32, 1, 1, "", "set_extra_state"], [32, 1, 1, "", "share_memory"], [32, 1, 1, "", "state_dict"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_empty"], [32, 1, 1, "", "train"], [32, 1, 1, "", "type"], [32, 1, 1, "", "xpu"], [32, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[34, 3, 1, "", "batch_size"], [34, 3, 1, "", "device"], [34, 1, 1, "", "from_dataset"], [34, 1, 1, "", "from_dict"], [34, 1, 1, "", "from_tensordict"], [34, 1, 1, "", "get"], [34, 1, 1, "", "load_state_dict"], [34, 1, 1, "", "memmap"], [34, 1, 1, "", "memmap_"], [34, 1, 1, "", "memmap_like"], [34, 1, 1, "", "set"], [34, 1, 1, "", "state_dict"], [34, 1, 1, "", "to_tensordict"], [34, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[35, 1, 1, "", "add"], [35, 1, 1, "", "append_transform"], [35, 1, 1, "", "dumps"], [35, 1, 1, "", "empty"], [35, 1, 1, "", "extend"], [35, 1, 1, "", "insert_transform"], [35, 1, 1, "", "loads"], [35, 1, 1, "", "sample"]], "torchrl.data.PromptData": [[36, 3, 1, "", "batch_size"], [36, 3, 1, "", "device"], [36, 1, 1, "", "from_dataset"], [36, 1, 1, "", "from_dict"], [36, 1, 1, "", "from_tensordict"], [36, 1, 1, "", "get"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "memmap"], [36, 1, 1, "", "memmap_"], [36, 1, 1, "", "memmap_like"], [36, 1, 1, "", "set"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to_tensordict"], [36, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[38, 1, 1, "", "add"], [38, 1, 1, "", "append_transform"], [38, 1, 1, "", "dumps"], [38, 1, 1, "", "empty"], [38, 1, 1, "", "extend"], [38, 1, 1, "", "insert_transform"], [38, 1, 1, "", "loads"], [38, 1, 1, "", "sample"]], "torchrl.data.RewardData": [[39, 3, 1, "", "batch_size"], [39, 3, 1, "", "device"], [39, 1, 1, "", "from_dict"], [39, 1, 1, "", "from_tensordict"], [39, 1, 1, "", "get"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "memmap"], [39, 1, 1, "", "memmap_"], [39, 1, 1, "", "memmap_like"], [39, 1, 1, "", "set"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to_tensordict"], [39, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[40, 1, 1, "", "create_rollout_td"], [40, 1, 1, "", "generate"], [40, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "dumps"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "loads"], [41, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "append_transform"], [42, 1, 1, "", "dumps"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert_transform"], [42, 1, 1, "", "loads"], [42, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[45, 1, 1, "", "dataset_to_tensordict"], [45, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "zero"]], "torchrl.data.datasets": [[52, 0, 1, "", "D4RLExperienceReplay"], [53, 0, 1, "", "MinariExperienceReplay"], [54, 0, 1, "", "OpenMLExperienceReplay"], [55, 0, 1, "", "RobosetExperienceReplay"]], "torchrl.data.datasets.D4RLExperienceReplay": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 1, 1, "", "dumps"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "loads"], [52, 1, 1, "", "sample"]], "torchrl.data.datasets.MinariExperienceReplay": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 1, 1, "", "dumps"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "loads"], [53, 1, 1, "", "sample"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[54, 1, 1, "", "add"], [54, 1, 1, "", "append_transform"], [54, 1, 1, "", "dumps"], [54, 1, 1, "", "empty"], [54, 1, 1, "", "extend"], [54, 1, 1, "", "insert_transform"], [54, 1, 1, "", "loads"], [54, 1, 1, "", "sample"]], "torchrl.data.datasets.RobosetExperienceReplay": [[55, 1, 1, "", "add"], [55, 1, 1, "", "append_transform"], [55, 1, 1, "", "dumps"], [55, 1, 1, "", "empty"], [55, 1, 1, "", "extend"], [55, 1, 1, "", "insert_transform"], [55, 1, 1, "", "loads"], [55, 1, 1, "", "sample"]], "torchrl.data.replay_buffers": [[57, 0, 1, "", "LazyMemmapStorage"], [58, 0, 1, "", "LazyTensorStorage"], [59, 0, 1, "", "ListStorage"], [60, 0, 1, "", "PrioritizedSampler"], [61, 0, 1, "", "RandomSampler"], [62, 0, 1, "", "RoundRobinWriter"], [63, 0, 1, "", "Sampler"], [64, 0, 1, "", "SamplerWithoutReplacement"], [65, 0, 1, "", "Storage"], [66, 0, 1, "", "TensorDictMaxValueWriter"], [67, 0, 1, "", "TensorDictRoundRobinWriter"], [68, 0, 1, "", "TensorStorage"], [69, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[57, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[58, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[59, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[60, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[62, 1, 1, "", "add"], [62, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[65, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[66, 1, 1, "", "add"], [66, 1, 1, "", "extend"], [66, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[67, 1, 1, "", "add"], [67, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[68, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[69, 1, 1, "", "add"], [69, 1, 1, "", "extend"]], "torchrl.envs": [[70, 2, 1, "", "BraxEnv"], [71, 2, 1, "", "BraxWrapper"], [72, 2, 1, "", "DMControlEnv"], [73, 2, 1, "", "DMControlWrapper"], [74, 0, 1, "", "EnvBase"], [75, 0, 1, "", "EnvCreator"], [76, 0, 1, "", "EnvMetaData"], [77, 2, 1, "", "GymEnv"], [78, 0, 1, "", "GymLikeEnv"], [79, 2, 1, "", "GymWrapper"], [80, 2, 1, "", "HabitatEnv"], [81, 2, 1, "", "IsaacGymEnv"], [82, 2, 1, "", "IsaacGymWrapper"], [83, 2, 1, "", "JumanjiEnv"], [84, 2, 1, "", "JumanjiWrapper"], [85, 2, 1, "", "MOGymEnv"], [86, 2, 1, "", "MOGymWrapper"], [87, 2, 1, "", "MarlGroupMapType"], [88, 2, 1, "", "ModelBasedEnvBase"], [89, 2, 1, "", "MultiThreadedEnv"], [90, 2, 1, "", "MultiThreadedEnvWrapper"], [91, 2, 1, "", "OpenMLEnv"], [92, 0, 1, "", "ParallelEnv"], [93, 2, 1, "", "PettingZooEnv"], [94, 2, 1, "", "PettingZooWrapper"], [95, 2, 1, "", "RoboHiveEnv"], [96, 2, 1, "", "SMACv2Env"], [97, 2, 1, "", "SMACv2Wrapper"], [98, 0, 1, "", "SerialEnv"], [99, 2, 1, "", "VmasEnv"], [100, 2, 1, "", "VmasWrapper"], [101, 2, 1, "", "check_marl_grouping"], [102, 2, 1, "", "gym_backend"], [88, 1, 1, "", "rand_step"], [88, 1, 1, "", "reset"], [88, 1, 1, "", "rollout"], [104, 2, 1, "", "set_gym_backend"], [88, 1, 1, "", "set_seed"], [88, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[74, 3, 1, "", "action_key"], [74, 3, 1, "", "action_keys"], [74, 3, 1, "", "action_spec"], [74, 1, 1, "", "add_module"], [74, 1, 1, "", "apply"], [74, 3, 1, "", "batch_locked"], [74, 1, 1, "", "bfloat16"], [74, 1, 1, "", "buffers"], [74, 1, 1, "", "children"], [74, 1, 1, "", "compile"], [74, 1, 1, "", "cpu"], [74, 1, 1, "", "cuda"], [74, 3, 1, "", "done_key"], [74, 3, 1, "", "done_keys"], [74, 3, 1, "", "done_keys_groups"], [74, 3, 1, "", "done_spec"], [74, 1, 1, "", "double"], [74, 1, 1, "", "empty_cache"], [74, 1, 1, "", "eval"], [74, 1, 1, "", "extra_repr"], [74, 1, 1, "", "fake_tensordict"], [74, 1, 1, "", "float"], [74, 1, 1, "", "forward"], [74, 3, 1, "", "full_action_spec"], [74, 3, 1, "", "full_done_spec"], [74, 3, 1, "", "full_reward_spec"], [74, 3, 1, "", "full_state_spec"], [74, 1, 1, "", "get_buffer"], [74, 1, 1, "", "get_extra_state"], [74, 1, 1, "", "get_parameter"], [74, 1, 1, "", "get_submodule"], [74, 1, 1, "", "half"], [74, 3, 1, "", "input_spec"], [74, 1, 1, "", "ipu"], [74, 1, 1, "", "load_state_dict"], [74, 1, 1, "", "modules"], [74, 1, 1, "", "named_buffers"], [74, 1, 1, "", "named_children"], [74, 1, 1, "", "named_modules"], [74, 1, 1, "", "named_parameters"], [74, 3, 1, "", "observation_spec"], [74, 3, 1, "", "output_spec"], [74, 1, 1, "", "parameters"], [74, 1, 1, "", "rand_action"], [74, 1, 1, "id0", "rand_step"], [74, 1, 1, "", "register_backward_hook"], [74, 1, 1, "", "register_buffer"], [74, 1, 1, "", "register_forward_hook"], [74, 1, 1, "", "register_forward_pre_hook"], [74, 1, 1, "", "register_full_backward_hook"], [74, 1, 1, "", "register_full_backward_pre_hook"], [74, 1, 1, "", "register_load_state_dict_post_hook"], [74, 1, 1, "", "register_module"], [74, 1, 1, "", "register_parameter"], [74, 1, 1, "", "register_state_dict_pre_hook"], [74, 1, 1, "", "requires_grad_"], [74, 1, 1, "id1", "reset"], [74, 3, 1, "", "reset_keys"], [74, 3, 1, "", "reward_key"], [74, 3, 1, "", "reward_keys"], [74, 3, 1, "", "reward_spec"], [74, 1, 1, "id2", "rollout"], [74, 1, 1, "", "set_extra_state"], [74, 1, 1, "id3", "set_seed"], [74, 1, 1, "", "share_memory"], [74, 3, 1, "", "specs"], [74, 1, 1, "", "state_dict"], [74, 3, 1, "", "state_spec"], [74, 1, 1, "id4", "step"], [74, 1, 1, "", "step_and_maybe_reset"], [74, 1, 1, "", "to"], [74, 1, 1, "", "to_empty"], [74, 1, 1, "", "train"], [74, 1, 1, "", "type"], [74, 1, 1, "", "xpu"], [74, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[78, 3, 1, "", "action_key"], [78, 3, 1, "", "action_keys"], [78, 3, 1, "", "action_spec"], [78, 1, 1, "", "add_module"], [78, 1, 1, "", "apply"], [78, 3, 1, "", "batch_locked"], [78, 1, 1, "", "bfloat16"], [78, 1, 1, "", "buffers"], [78, 1, 1, "", "children"], [78, 1, 1, "", "close"], [78, 1, 1, "", "compile"], [78, 1, 1, "", "cpu"], [78, 1, 1, "", "cuda"], [78, 3, 1, "", "done_key"], [78, 3, 1, "", "done_keys"], [78, 3, 1, "", "done_keys_groups"], [78, 3, 1, "", "done_spec"], [78, 1, 1, "", "double"], [78, 1, 1, "", "empty_cache"], [78, 1, 1, "", "eval"], [78, 1, 1, "", "extra_repr"], [78, 1, 1, "", "fake_tensordict"], [78, 1, 1, "", "float"], [78, 1, 1, "", "forward"], [78, 3, 1, "", "full_action_spec"], [78, 3, 1, "", "full_done_spec"], [78, 3, 1, "", "full_reward_spec"], [78, 3, 1, "", "full_state_spec"], [78, 1, 1, "", "get_buffer"], [78, 1, 1, "", "get_extra_state"], [78, 1, 1, "", "get_parameter"], [78, 1, 1, "", "get_submodule"], [78, 1, 1, "", "half"], [78, 3, 1, "", "input_spec"], [78, 1, 1, "", "ipu"], [78, 1, 1, "", "load_state_dict"], [78, 1, 1, "", "modules"], [78, 1, 1, "", "named_buffers"], [78, 1, 1, "", "named_children"], [78, 1, 1, "", "named_modules"], [78, 1, 1, "", "named_parameters"], [78, 3, 1, "", "observation_spec"], [78, 3, 1, "", "output_spec"], [78, 1, 1, "", "parameters"], [78, 1, 1, "", "rand_action"], [78, 1, 1, "", "rand_step"], [78, 1, 1, "", "read_action"], [78, 1, 1, "", "read_done"], [78, 1, 1, "", "read_obs"], [78, 1, 1, "", "read_reward"], [78, 1, 1, "", "register_backward_hook"], [78, 1, 1, "", "register_buffer"], [78, 1, 1, "", "register_forward_hook"], [78, 1, 1, "", "register_forward_pre_hook"], [78, 1, 1, "", "register_full_backward_hook"], [78, 1, 1, "", "register_full_backward_pre_hook"], [78, 1, 1, "", "register_load_state_dict_post_hook"], [78, 1, 1, "", "register_module"], [78, 1, 1, "", "register_parameter"], [78, 1, 1, "", "register_state_dict_pre_hook"], [78, 1, 1, "", "requires_grad_"], [78, 1, 1, "", "reset"], [78, 3, 1, "", "reset_keys"], [78, 3, 1, "", "reward_key"], [78, 3, 1, "", "reward_keys"], [78, 3, 1, "", "reward_spec"], [78, 1, 1, "", "rollout"], [78, 1, 1, "", "set_extra_state"], [78, 1, 1, "", "set_info_dict_reader"], [78, 1, 1, "", "set_seed"], [78, 1, 1, "", "share_memory"], [78, 3, 1, "", "specs"], [78, 1, 1, "", "state_dict"], [78, 3, 1, "", "state_spec"], [78, 1, 1, "", "step"], [78, 1, 1, "", "step_and_maybe_reset"], [78, 1, 1, "", "to"], [78, 1, 1, "", "to_empty"], [78, 1, 1, "", "train"], [78, 1, 1, "", "type"], [78, 1, 1, "", "xpu"], [78, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[92, 3, 1, "", "action_key"], [92, 3, 1, "", "action_keys"], [92, 3, 1, "", "action_spec"], [92, 1, 1, "", "add_module"], [92, 1, 1, "", "apply"], [92, 3, 1, "", "batch_locked"], [92, 1, 1, "", "bfloat16"], [92, 1, 1, "", "buffers"], [92, 1, 1, "", "children"], [92, 1, 1, "", "compile"], [92, 1, 1, "", "cpu"], [92, 1, 1, "", "cuda"], [92, 3, 1, "", "done_key"], [92, 3, 1, "", "done_keys"], [92, 3, 1, "", "done_keys_groups"], [92, 3, 1, "", "done_spec"], [92, 1, 1, "", "double"], [92, 1, 1, "", "empty_cache"], [92, 1, 1, "", "eval"], [92, 1, 1, "", "extra_repr"], [92, 1, 1, "", "fake_tensordict"], [92, 1, 1, "", "float"], [92, 1, 1, "", "forward"], [92, 3, 1, "", "full_action_spec"], [92, 3, 1, "", "full_done_spec"], [92, 3, 1, "", "full_reward_spec"], [92, 3, 1, "", "full_state_spec"], [92, 1, 1, "", "get_buffer"], [92, 1, 1, "", "get_extra_state"], [92, 1, 1, "", "get_parameter"], [92, 1, 1, "", "get_submodule"], [92, 1, 1, "", "half"], [92, 3, 1, "", "input_spec"], [92, 1, 1, "", "ipu"], [92, 1, 1, "", "load_state_dict"], [92, 1, 1, "", "modules"], [92, 1, 1, "", "named_buffers"], [92, 1, 1, "", "named_children"], [92, 1, 1, "", "named_modules"], [92, 1, 1, "", "named_parameters"], [92, 3, 1, "", "observation_spec"], [92, 3, 1, "", "output_spec"], [92, 1, 1, "", "parameters"], [92, 1, 1, "", "rand_action"], [92, 1, 1, "", "rand_step"], [92, 1, 1, "", "register_backward_hook"], [92, 1, 1, "", "register_buffer"], [92, 1, 1, "", "register_forward_hook"], [92, 1, 1, "", "register_forward_pre_hook"], [92, 1, 1, "", "register_full_backward_hook"], [92, 1, 1, "", "register_full_backward_pre_hook"], [92, 1, 1, "", "register_load_state_dict_post_hook"], [92, 1, 1, "", "register_module"], [92, 1, 1, "", "register_parameter"], [92, 1, 1, "", "register_state_dict_pre_hook"], [92, 1, 1, "", "requires_grad_"], [92, 1, 1, "", "reset"], [92, 3, 1, "", "reset_keys"], [92, 3, 1, "", "reward_key"], [92, 3, 1, "", "reward_keys"], [92, 3, 1, "", "reward_spec"], [92, 1, 1, "", "rollout"], [92, 1, 1, "", "set_extra_state"], [92, 1, 1, "", "set_seed"], [92, 1, 1, "", "share_memory"], [92, 3, 1, "", "specs"], [92, 1, 1, "", "state_dict"], [92, 3, 1, "", "state_spec"], [92, 1, 1, "", "step"], [92, 1, 1, "", "step_and_maybe_reset"], [92, 1, 1, "", "to"], [92, 1, 1, "", "to_empty"], [92, 1, 1, "", "train"], [92, 1, 1, "", "type"], [92, 1, 1, "", "update_kwargs"], [92, 1, 1, "", "xpu"], [92, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[98, 3, 1, "", "action_key"], [98, 3, 1, "", "action_keys"], [98, 3, 1, "", "action_spec"], [98, 1, 1, "", "add_module"], [98, 1, 1, "", "apply"], [98, 3, 1, "", "batch_locked"], [98, 1, 1, "", "bfloat16"], [98, 1, 1, "", "buffers"], [98, 1, 1, "", "children"], [98, 1, 1, "", "compile"], [98, 1, 1, "", "cpu"], [98, 1, 1, "", "cuda"], [98, 3, 1, "", "done_key"], [98, 3, 1, "", "done_keys"], [98, 3, 1, "", "done_keys_groups"], [98, 3, 1, "", "done_spec"], [98, 1, 1, "", "double"], [98, 1, 1, "", "empty_cache"], [98, 1, 1, "", "eval"], [98, 1, 1, "", "extra_repr"], [98, 1, 1, "", "fake_tensordict"], [98, 1, 1, "", "float"], [98, 1, 1, "", "forward"], [98, 3, 1, "", "full_action_spec"], [98, 3, 1, "", "full_done_spec"], [98, 3, 1, "", "full_reward_spec"], [98, 3, 1, "", "full_state_spec"], [98, 1, 1, "", "get_buffer"], [98, 1, 1, "", "get_extra_state"], [98, 1, 1, "", "get_parameter"], [98, 1, 1, "", "get_submodule"], [98, 1, 1, "", "half"], [98, 3, 1, "", "input_spec"], [98, 1, 1, "", "ipu"], [98, 1, 1, "", "load_state_dict"], [98, 1, 1, "", "modules"], [98, 1, 1, "", "named_buffers"], [98, 1, 1, "", "named_children"], [98, 1, 1, "", "named_modules"], [98, 1, 1, "", "named_parameters"], [98, 3, 1, "", "observation_spec"], [98, 3, 1, "", "output_spec"], [98, 1, 1, "", "parameters"], [98, 1, 1, "", "rand_action"], [98, 1, 1, "", "rand_step"], [98, 1, 1, "", "register_backward_hook"], [98, 1, 1, "", "register_buffer"], [98, 1, 1, "", "register_forward_hook"], [98, 1, 1, "", "register_forward_pre_hook"], [98, 1, 1, "", "register_full_backward_hook"], [98, 1, 1, "", "register_full_backward_pre_hook"], [98, 1, 1, "", "register_load_state_dict_post_hook"], [98, 1, 1, "", "register_module"], [98, 1, 1, "", "register_parameter"], [98, 1, 1, "", "register_state_dict_pre_hook"], [98, 1, 1, "", "requires_grad_"], [98, 1, 1, "", "reset"], [98, 3, 1, "", "reset_keys"], [98, 3, 1, "", "reward_key"], [98, 3, 1, "", "reward_keys"], [98, 3, 1, "", "reward_spec"], [98, 1, 1, "", "rollout"], [98, 1, 1, "", "set_extra_state"], [98, 1, 1, "", "set_seed"], [98, 1, 1, "", "share_memory"], [98, 3, 1, "", "specs"], [98, 1, 1, "", "state_dict"], [98, 3, 1, "", "state_spec"], [98, 1, 1, "", "step"], [98, 1, 1, "", "step_and_maybe_reset"], [98, 1, 1, "", "to"], [98, 1, 1, "", "to_empty"], [98, 1, 1, "", "train"], [98, 1, 1, "", "type"], [98, 1, 1, "", "update_kwargs"], [98, 1, 1, "", "xpu"], [98, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[103, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[105, 0, 1, "", "ActionMask"], [106, 0, 1, "", "BinarizeReward"], [107, 0, 1, "", "CatFrames"], [108, 0, 1, "", "CatTensors"], [109, 0, 1, "", "CenterCrop"], [110, 0, 1, "", "ClipTransform"], [111, 0, 1, "", "Compose"], [112, 0, 1, "", "DTypeCastTransform"], [113, 0, 1, "", "DeviceCastTransform"], [114, 0, 1, "", "DiscreteActionProjection"], [115, 0, 1, "", "DoubleToFloat"], [116, 0, 1, "", "EndOfLifeTransform"], [117, 0, 1, "", "ExcludeTransform"], [118, 0, 1, "", "FiniteTensorDictCheck"], [119, 0, 1, "", "FlattenObservation"], [120, 0, 1, "", "FrameSkipTransform"], [121, 0, 1, "", "GrayScale"], [122, 0, 1, "", "InitTracker"], [123, 0, 1, "", "KLRewardTransform"], [124, 0, 1, "", "NoopResetEnv"], [125, 0, 1, "", "ObservationNorm"], [126, 0, 1, "", "ObservationTransform"], [127, 0, 1, "", "PermuteTransform"], [128, 0, 1, "", "PinMemoryTransform"], [129, 0, 1, "", "R3MTransform"], [130, 0, 1, "", "RandomCropTensorDict"], [131, 0, 1, "", "RenameTransform"], [132, 0, 1, "", "Resize"], [133, 0, 1, "", "Reward2GoTransform"], [134, 0, 1, "", "RewardClipping"], [135, 0, 1, "", "RewardScaling"], [136, 0, 1, "", "RewardSum"], [137, 0, 1, "", "SelectTransform"], [138, 0, 1, "", "SqueezeTransform"], [139, 0, 1, "", "StepCounter"], [140, 0, 1, "", "TargetReturn"], [141, 0, 1, "", "TensorDictPrimer"], [142, 0, 1, "", "TimeMaxPool"], [143, 0, 1, "", "ToTensorImage"], [144, 0, 1, "", "Transform"], [145, 0, 1, "", "TransformedEnv"], [146, 0, 1, "", "UnsqueezeTransform"], [147, 0, 1, "", "VC1Transform"], [148, 0, 1, "", "VIPRewardTransform"], [149, 0, 1, "", "VIPTransform"], [150, 0, 1, "", "VecGymEnvTransform"], [151, 0, 1, "", "VecNorm"], [152, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionMask": [[105, 1, 1, "", "forward"]], "torchrl.envs.transforms.BinarizeReward": [[106, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[107, 1, 1, "", "forward"], [107, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[108, 1, 1, "", "forward"], [108, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[109, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[110, 1, 1, "", "transform_observation_spec"], [110, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[111, 1, 1, "", "forward"], [111, 1, 1, "", "to"], [111, 1, 1, "", "transform_env_device"], [111, 1, 1, "", "transform_input_spec"], [111, 1, 1, "", "transform_observation_spec"], [111, 1, 1, "", "transform_output_spec"], [111, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[112, 1, 1, "", "forward"], [112, 1, 1, "", "transform_input_spec"], [112, 1, 1, "", "transform_observation_spec"], [112, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[113, 1, 1, "", "forward"], [113, 1, 1, "", "transform_done_spec"], [113, 1, 1, "", "transform_env_device"], [113, 1, 1, "", "transform_input_spec"], [113, 1, 1, "", "transform_observation_spec"], [113, 1, 1, "", "transform_output_spec"], [113, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[114, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[116, 1, 1, "", "forward"], [116, 1, 1, "", "register_keys"], [116, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[117, 1, 1, "", "forward"], [117, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[118, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[119, 1, 1, "", "forward"], [119, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[120, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[121, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[122, 1, 1, "", "forward"], [122, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[123, 1, 1, "", "forward"], [123, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[125, 1, 1, "", "init_stats"], [125, 1, 1, "", "transform_input_spec"], [125, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[127, 1, 1, "", "transform_input_spec"], [127, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[128, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[129, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[130, 1, 1, "", "forward"]], "torchrl.envs.transforms.RenameTransform": [[131, 1, 1, "", "forward"], [131, 1, 1, "", "transform_input_spec"], [131, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[132, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[133, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[134, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[135, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[136, 1, 1, "", "forward"], [136, 1, 1, "", "transform_input_spec"], [136, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[137, 1, 1, "", "forward"], [137, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.StepCounter": [[139, 1, 1, "", "forward"], [139, 1, 1, "", "transform_input_spec"], [139, 1, 1, "", "transform_observation_spec"], [139, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[140, 1, 1, "", "forward"], [140, 1, 1, "", "transform_input_spec"], [140, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[141, 1, 1, "", "forward"], [141, 1, 1, "", "to"], [141, 1, 1, "", "transform_input_spec"], [141, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[142, 1, 1, "", "forward"], [142, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[143, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[144, 3, 1, "", "container"], [144, 1, 1, "", "forward"], [144, 3, 1, "", "parent"], [144, 1, 1, "", "to"], [144, 1, 1, "", "transform_done_spec"], [144, 1, 1, "", "transform_env_device"], [144, 1, 1, "", "transform_input_spec"], [144, 1, 1, "", "transform_observation_spec"], [144, 1, 1, "", "transform_output_spec"], [144, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[145, 3, 1, "", "batch_locked"], [145, 1, 1, "", "empty_cache"], [145, 1, 1, "", "eval"], [145, 3, 1, "", "input_spec"], [145, 1, 1, "", "load_state_dict"], [145, 3, 1, "", "output_spec"], [145, 1, 1, "", "set_missing_tolerance"], [145, 1, 1, "", "set_seed"], [145, 1, 1, "", "state_dict"], [145, 1, 1, "", "to"], [145, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[146, 1, 1, "", "transform_input_spec"], [146, 1, 1, "", "transform_observation_spec"], [146, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[147, 1, 1, "", "forward"], [147, 1, 1, "", "make_noload_model"], [147, 1, 1, "", "to"], [147, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[148, 1, 1, "", "forward"], [148, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[149, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[150, 1, 1, "", "forward"], [150, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[151, 1, 1, "", "build_td_for_shared_vecnorm"], [151, 1, 1, "", "forward"], [151, 1, 1, "", "get_extra_state"], [151, 1, 1, "", "set_extra_state"], [151, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[153, 2, 1, "", "check_env_specs"], [154, 2, 1, "", "exploration_mode"], [155, 2, 1, "", "exploration_type"], [156, 2, 1, "", "get_available_libraries"], [157, 2, 1, "", "make_composite_from_td"], [158, 2, 1, "", "set_exploration_mode"], [159, 2, 1, "", "set_exploration_type"], [160, 2, 1, "", "step_mdp"], [161, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[162, 0, 1, "", "CEMPlanner"], [163, 0, 1, "", "Conv3dNet"], [164, 0, 1, "", "ConvNet"], [165, 0, 1, "", "DTActor"], [166, 0, 1, "", "DdpgCnnActor"], [167, 0, 1, "", "DdpgCnnQNet"], [168, 0, 1, "", "DdpgMlpActor"], [169, 0, 1, "", "DdpgMlpQNet"], [170, 0, 1, "", "DecisionTransformer"], [171, 0, 1, "", "Delta"], [172, 0, 1, "", "DistributionalDQNnet"], [173, 0, 1, "", "DistributionalQValueHook"], [174, 0, 1, "", "DreamerActor"], [175, 0, 1, "", "DuelingCnnDQNet"], [176, 0, 1, "", "GRU"], [177, 0, 1, "", "GRUCell"], [178, 0, 1, "", "GRUModule"], [179, 0, 1, "", "IndependentNormal"], [180, 0, 1, "", "LSTM"], [181, 0, 1, "", "LSTMCell"], [182, 0, 1, "", "LSTMModule"], [183, 0, 1, "", "LSTMNet"], [184, 0, 1, "", "MLP"], [185, 0, 1, "", "MPCPlannerBase"], [186, 0, 1, "", "MPPIPlanner"], [187, 0, 1, "", "MaskedCategorical"], [188, 0, 1, "", "MaskedOneHotCategorical"], [189, 0, 1, "", "MultiAgentConvNet"], [190, 0, 1, "", "MultiAgentMLP"], [191, 0, 1, "", "NoisyLazyLinear"], [192, 0, 1, "", "NoisyLinear"], [193, 0, 1, "", "NormalParamWrapper"], [194, 0, 1, "", "ObsDecoder"], [195, 0, 1, "", "ObsEncoder"], [196, 0, 1, "", "OneHotCategorical"], [197, 0, 1, "", "OnlineDTActor"], [198, 0, 1, "", "QMixer"], [199, 0, 1, "", "QValueHook"], [200, 0, 1, "", "RSSMPosterior"], [201, 0, 1, "", "RSSMPrior"], [202, 0, 1, "", "Squeeze2dLayer"], [203, 0, 1, "", "SqueezeLayer"], [204, 0, 1, "", "TanhDelta"], [205, 0, 1, "", "TanhNormal"], [206, 0, 1, "", "TruncatedNormal"], [207, 0, 1, "", "VDNMixer"], [208, 0, 1, "", "VmapModule"], [209, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[162, 1, 1, "", "planning"]], "torchrl.modules.Conv3dNet": [[163, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[164, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[165, 1, 1, "", "default_config"], [165, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[166, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[167, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[168, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[169, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[170, 0, 1, "", "DTConfig"], [170, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[171, 1, 1, "", "log_prob"], [171, 3, 1, "", "mean"], [171, 3, 1, "", "mode"], [171, 1, 1, "", "rsample"], [171, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[172, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[174, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[175, 1, 1, "", "forward"]], "torchrl.modules.GRU": [[176, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[177, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[178, 1, 1, "", "forward"], [178, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[179, 3, 1, "", "mode"]], "torchrl.modules.LSTM": [[180, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[181, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[182, 1, 1, "", "forward"], [182, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.LSTMNet": [[183, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[184, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[185, 1, 1, "", "forward"], [185, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[186, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[187, 1, 1, "", "log_prob"], [187, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[188, 1, 1, "", "log_prob"], [188, 1, 1, "", "rsample"], [188, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentConvNet": [[189, 1, 1, "", "forward"]], "torchrl.modules.MultiAgentMLP": [[190, 1, 1, "", "forward"]], "torchrl.modules.NoisyLazyLinear": [[191, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[193, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[194, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[195, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[196, 1, 1, "", "log_prob"], [196, 3, 1, "", "mode"], [196, 1, 1, "", "rsample"], [196, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[197, 1, 1, "", "default_config"], [197, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[198, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[200, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[201, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[203, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[204, 3, 1, "", "mean"], [204, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[205, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[206, 1, 1, "", "log_prob"], [206, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[207, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[208, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[210, 0, 1, "", "Actor"], [211, 0, 1, "", "ActorCriticOperator"], [212, 0, 1, "", "ActorCriticWrapper"], [213, 0, 1, "", "ActorValueOperator"], [214, 0, 1, "", "AdditiveGaussianWrapper"], [215, 0, 1, "", "DecisionTransformerInferenceWrapper"], [216, 0, 1, "", "DistributionalQValueActor"], [217, 0, 1, "", "DistributionalQValueModule"], [218, 0, 1, "", "EGreedyModule"], [219, 0, 1, "", "EGreedyWrapper"], [220, 0, 1, "", "LMHeadActorValueOperator"], [221, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [222, 0, 1, "", "ProbabilisticActor"], [223, 0, 1, "", "QValueActor"], [224, 0, 1, "", "QValueModule"], [225, 0, 1, "", "SafeModule"], [226, 0, 1, "", "SafeProbabilisticModule"], [227, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [228, 0, 1, "", "SafeSequential"], [229, 0, 1, "", "TanhModule"], [230, 0, 1, "", "ValueOperator"], [231, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[211, 1, 1, "", "get_critic_operator"], [211, 1, 1, "", "get_policy_head"], [211, 1, 1, "", "get_value_head"], [211, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[212, 1, 1, "", "get_policy_head"], [212, 1, 1, "", "get_policy_operator"], [212, 1, 1, "", "get_value_head"], [212, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[213, 1, 1, "", "get_policy_head"], [213, 1, 1, "", "get_policy_operator"], [213, 1, 1, "", "get_value_head"], [213, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[214, 1, 1, "", "forward"], [214, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[215, 1, 1, "", "forward"], [215, 1, 1, "", "mask_context"], [215, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[217, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[218, 1, 1, "", "forward"], [218, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.EGreedyWrapper": [[219, 1, 1, "", "forward"], [219, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[221, 1, 1, "", "forward"], [221, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[224, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[225, 1, 1, "", "random"], [225, 1, 1, "", "random_sample"], [225, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[226, 1, 1, "", "random"], [226, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[229, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[231, 1, 1, "", "get_reward_operator"], [231, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[232, 0, 1, "", "biased_softplus"], [233, 0, 1, "", "inv_softplus"], [234, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[232, 1, 1, "", "forward"]], "torchrl.objectives": [[235, 0, 1, "", "A2CLoss"], [236, 0, 1, "", "CQLLoss"], [237, 0, 1, "", "ClipPPOLoss"], [238, 0, 1, "", "DDPGLoss"], [239, 0, 1, "", "DQNLoss"], [240, 0, 1, "", "DTLoss"], [241, 0, 1, "", "DiscreteCQLLoss"], [242, 0, 1, "", "DiscreteSACLoss"], [243, 0, 1, "", "DistributionalDQNLoss"], [244, 0, 1, "", "DreamerActorLoss"], [245, 0, 1, "", "DreamerModelLoss"], [246, 0, 1, "", "DreamerValueLoss"], [247, 0, 1, "", "HardUpdate"], [248, 0, 1, "", "IQLLoss"], [249, 0, 1, "", "KLPENPPOLoss"], [250, 0, 1, "", "LossModule"], [251, 0, 1, "", "OnlineDTLoss"], [252, 0, 1, "", "PPOLoss"], [253, 0, 1, "", "REDQLoss"], [254, 0, 1, "", "ReinforceLoss"], [255, 0, 1, "", "SACLoss"], [256, 0, 1, "", "SoftUpdate"], [257, 0, 1, "", "TD3Loss"], [258, 0, 1, "", "ValueEstimators"], [259, 0, 1, "", "default_value_kwargs"], [260, 0, 1, "", "distance_loss"], [261, 0, 1, "", "hold_out_net"], [262, 0, 1, "", "hold_out_params"], [264, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[235, 1, 1, "", "forward"], [235, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[236, 1, 1, "", "forward"], [236, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[237, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[238, 1, 1, "", "forward"], [238, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[239, 1, 1, "", "forward"], [239, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[240, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[241, 1, 1, "", "forward"], [241, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteSACLoss": [[242, 1, 1, "", "forward"], [242, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[243, 1, 1, "", "forward"], [243, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[244, 1, 1, "", "forward"], [244, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[245, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[246, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[248, 1, 1, "", "forward"], [248, 1, 1, "", "loss_value_diff"], [248, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[249, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[250, 1, 1, "", "convert_to_functional"], [250, 1, 1, "", "forward"], [250, 1, 1, "", "make_value_estimator"], [250, 1, 1, "", "named_parameters"], [250, 1, 1, "", "parameters"], [250, 1, 1, "", "set_keys"], [250, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[251, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[252, 1, 1, "", "forward"], [252, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[253, 1, 1, "", "forward"], [253, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[254, 1, 1, "", "forward"], [254, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[255, 1, 1, "", "forward"], [255, 1, 1, "", "load_state_dict"], [255, 1, 1, "", "make_value_estimator"], [255, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3Loss": [[257, 1, 1, "", "forward"], [257, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[263, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[263, 1, 1, "", "forward"], [263, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[265, 0, 1, "", "GAE"], [266, 0, 1, "", "TD0Estimator"], [267, 0, 1, "", "TD1Estimator"], [268, 0, 1, "", "TDLambdaEstimator"], [269, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[265, 1, 1, "", "forward"], [265, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[266, 1, 1, "", "forward"], [266, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[267, 1, 1, "", "forward"], [267, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[268, 1, 1, "", "forward"], [268, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[269, 1, 1, "", "forward"], [269, 1, 1, "", "set_keys"], [269, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[270, 0, 1, "", "generalized_advantage_estimate"], [271, 0, 1, "", "reward2go"], [272, 0, 1, "", "td0_advantage_estimate"], [273, 0, 1, "", "td0_return_estimate"], [274, 0, 1, "", "td1_advantage_estimate"], [275, 0, 1, "", "td1_return_estimate"], [276, 0, 1, "", "td_lambda_advantage_estimate"], [277, 0, 1, "", "td_lambda_return_estimate"], [278, 0, 1, "", "vec_generalized_advantage_estimate"], [279, 0, 1, "", "vec_td1_advantage_estimate"], [280, 0, 1, "", "vec_td1_return_estimate"], [281, 0, 1, "", "vec_td_lambda_advantage_estimate"], [282, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[283, 2, 1, "", "TensorDictRecorder"], [284, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[285, 2, 1, "", "Logger"], [287, 2, 1, "", "generate_exp_name"], [288, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[286, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[289, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[290, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[291, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[292, 0, 1, "", "BatchSubSampler"], [293, 0, 1, "", "ClearCudaCache"], [294, 0, 1, "", "CountFramesLog"], [295, 0, 1, "", "LogReward"], [296, 0, 1, "", "OptimizerHook"], [297, 0, 1, "", "Recorder"], [298, 0, 1, "", "ReplayBufferTrainer"], [299, 0, 1, "", "RewardNormalizer"], [300, 0, 1, "", "SelectKeys"], [301, 0, 1, "", "Trainer"], [302, 0, 1, "", "TrainerHookBase"], [303, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[292, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[293, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[294, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[295, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[296, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[297, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[298, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[299, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[300, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[302, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[303, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[304, 2, 1, "", "correct_for_frame_skip"], [305, 2, 1, "", "get_stats_random_rollout"], [306, 2, 1, "", "make_collector_offpolicy"], [307, 2, 1, "", "make_collector_onpolicy"], [308, 2, 1, "", "make_dqn_loss"], [309, 2, 1, "", "make_redq_loss"], [310, 2, 1, "", "make_redq_model"], [311, 2, 1, "", "make_replay_buffer"], [312, 2, 1, "", "make_target_updater"], [313, 2, 1, "", "make_trainer"], [314, 2, 1, "", "parallel_env_constructor"], [315, 2, 1, "", "sync_async_collector"], [316, 2, 1, "", "sync_sync_collector"], [317, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 321, 322, 323, 324, 326, 327, 328, 332, 333, 337, 338], "tutori": [0, 328, 332], "basic": [0, 335], "intermedi": [0, 8], "advanc": 0, "refer": [0, 319], "knowledg": [0, 320], "base": [0, 7, 320], "indic": 0, "tabl": 0, "collector": [1, 326, 327, 328, 329, 332, 337], "packag": [1, 2, 3, 321, 322, 323, 324], "singl": [1, 4], "node": 1, "data": [1, 2, 4, 326, 327, 328, 332, 337], "distribut": [1, 321], "helper": [1, 3], "function": [1, 4, 322, 327, 328, 332, 337], "replai": [2, 326, 327, 328, 329, 332, 335, 337], "buffer": [2, 326, 327, 328, 329, 332, 335, 337], "compos": [2, 111], "share": 2, "across": 2, "process": 2, "store": [2, 327], "trajectori": 2, "checkpoint": [2, 323], "dataset": 2, "tensorspec": [2, 44], "reinforc": [2, 322, 328, 332], "learn": [2, 4, 328, 332], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 321, 322, 323], "env": [3, 333, 337, 338], "vector": [3, 337], "multi": [3, 321, 322, 331, 332], "agent": [3, 4, 321, 322, 332], "environ": [3, 4, 6, 7, 326, 327, 328, 329, 331, 332, 333, 337, 338], "transform": [3, 144, 326, 328, 332, 333, 335, 337, 338], "clone": [3, 7], "mask": 3, "action": [3, 4, 329, 333], "record": [3, 297, 323, 326], "domain": [3, 321], "specif": [3, 321, 331], "librari": [3, 337], "thing": [4, 326, 333], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 337], "gener": [4, 321], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 326, 333], "algorithm": [4, 321], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 326, 327], "return": [4, 322], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "polici": [4, 326, 328, 329, 331, 332, 333], "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 337], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 331], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 326, 327, 328], "standard": 4, "explor": [4, 321, 326, 327], "valu": [4, 321, 322, 326, 328, 329], "loss": [4, 326, 327, 328, 329, 332], "earli": 4, "train": [4, 8, 322, 326, 328, 329, 332, 333], "roughli": 4, "uniformli": 4, "random": [4, 332], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "episod": 4, "remain": 4, "constant": [4, 327], "increas": 4, "an": [4, 328, 329, 333], "dynam": [4, 335], "can": 4, "low": 4, "forward": [4, 326], "model": [4, 321, 326, 327, 329, 334, 337], "also": 4, "us": [4, 6, 9, 329, 334, 335, 337], "offlin": 4, "observ": [4, 326], "space": 4, "effect": [4, 333], "dramat": 4, "dure": [4, 7], "high": 4, "dimension": 4, "work": [5, 6, 7], "gym": [5, 338], "what": 5, "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "instal": [6, 7, 337], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": 7, "render": [7, 332, 338], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 326], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 333], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "randompolici": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "binarydiscretetensorspec": 24, "boundedtensorspec": 25, "compositespec": 26, "discretetensorspec": 27, "lazystackedcompositespec": 28, "lazystackedtensorspec": 29, "multidiscretetensorspec": 30, "multionehotdiscretetensorspec": 31, "multistep": 32, "onehotdiscretetensorspec": 33, "pairwisedataset": 34, "prioritizedreplaybuff": 35, "promptdata": 36, "prompttensordicttoken": 37, "replaybuff": 38, "rewarddata": 39, "rolloutfrommodel": 40, "tensordictprioritizedreplaybuff": 41, "tensordictreplaybuff": 42, "tensordicttoken": 43, "tokenizeddatasetload": 45, "unboundedcontinuoustensorspec": 46, "unboundeddiscretetensorspec": 47, "check_no_exclusive_kei": 48, "consolidate_spec": 49, "contains_lazy_spec": 50, "create_infinite_iter": 51, "d4rlexperiencereplai": 52, "minariexperiencereplai": 53, "openmlexperiencereplai": 54, "robosetexperiencereplai": 55, "get_dataload": 56, "lazymemmapstorag": 57, "lazytensorstorag": 58, "liststorag": 59, "prioritizedsampl": 60, "randomsampl": 61, "roundrobinwrit": 62, "sampler": 63, "samplerwithoutreplac": 64, "storag": [65, 326, 335], "tensordictmaxvaluewrit": 66, "tensordictroundrobinwrit": 67, "tensorstorag": 68, "writer": 69, "braxenv": 70, "braxwrapp": 71, "dmcontrolenv": 72, "dmcontrolwrapp": 73, "envbas": [74, 333], "envcreat": 75, "envmetadata": 76, "gymenv": 77, "gymlikeenv": 78, "gymwrapp": 79, "habitatenv": 80, "isaacgymenv": 81, "isaacgymwrapp": 82, "jumanjienv": 83, "jumanjiwrapp": 84, "mogymenv": 85, "mogymwrapp": 86, "marlgroupmaptyp": 87, "modelbasedenvbas": 88, "multithreadedenv": 89, "multithreadedenvwrapp": 90, "openmlenv": 91, "parallelenv": 92, "pettingzooenv": 93, "pettingzoowrapp": 94, "robohiveenv": 95, "smacv2env": 96, "smacv2wrapp": 97, "serialenv": 98, "vmasenv": 99, "vmaswrapp": 100, "check_marl_group": 101, "gym_backend": 102, "dreamerenv": 103, "set_gym_backend": 104, "actionmask": 105, "binarizereward": 106, "catfram": [107, 335], "cattensor": 108, "centercrop": 109, "cliptransform": 110, "dtypecasttransform": 112, "devicecasttransform": 113, "discreteactionproject": 114, "doubletofloat": 115, "endoflifetransform": 116, "excludetransform": 117, "finitetensordictcheck": 118, "flattenobserv": 119, "frameskiptransform": 120, "grayscal": 121, "inittrack": 122, "klrewardtransform": 123, "noopresetenv": 124, "observationnorm": 125, "observationtransform": 126, "permutetransform": 127, "pinmemorytransform": 128, "r3mtransform": 129, "randomcroptensordict": 130, "renametransform": 131, "resiz": 132, "reward2gotransform": 133, "rewardclip": 134, "rewardsc": 135, "rewardsum": 136, "selecttransform": 137, "squeezetransform": 138, "stepcount": 139, "targetreturn": 140, "tensordictprim": 141, "timemaxpool": 142, "totensorimag": 143, "transformedenv": 145, "unsqueezetransform": 146, "vc1transform": 147, "viprewardtransform": 148, "viptransform": 149, "vecgymenvtransform": 150, "vecnorm": [151, 338], "gsdenois": 152, "check_env_spec": 153, "exploration_mod": 154, "exploration_typ": 155, "get_available_librari": 156, "make_composite_from_td": 157, "set_exploration_mod": 158, "set_exploration_typ": 159, "step_mdp": 160, "terminated_or_trunc": 161, "cemplann": 162, "conv3dnet": 163, "convnet": 164, "dtactor": 165, "ddpgcnnactor": 166, "ddpgcnnqnet": 167, "ddpgmlpactor": 168, "ddpgmlpqnet": 169, "decisiontransform": 170, "delta": 171, "distributionaldqnnet": 172, "distributionalqvaluehook": 173, "dreameractor": 174, "duelingcnndqnet": 175, "gru": 176, "grucel": 177, "grumodul": 178, "independentnorm": 179, "lstm": [180, 329], "lstmcell": 181, "lstmmodul": 182, "lstmnet": 183, "mlp": [184, 329], "mpcplannerbas": 185, "mppiplann": 186, "maskedcategor": 187, "maskedonehotcategor": 188, "multiagentconvnet": 189, "multiagentmlp": 190, "noisylazylinear": 191, "noisylinear": 192, "normalparamwrapp": 193, "obsdecod": 194, "obsencod": 195, "onehotcategor": 196, "onlinedtactor": 197, "qmixer": [198, 322], "qvaluehook": 199, "rssmposterior": 200, "rssmprior": 201, "squeeze2dlay": 202, "squeezelay": 203, "tanhdelta": 204, "tanhnorm": 205, "truncatednorm": 206, "vdnmixer": 207, "vmapmodul": 208, "reset_nois": 209, "actor": [210, 321, 326], "actorcriticoper": 211, "actorcriticwrapp": 212, "actorvalueoper": 213, "additivegaussianwrapp": 214, "decisiontransformerinferencewrapp": 215, "distributionalqvalueactor": 216, "distributionalqvaluemodul": 217, "egreedymodul": 218, "egreedywrapp": 219, "lmheadactorvalueoper": 220, "ornsteinuhlenbeckprocesswrapp": 221, "probabilisticactor": 222, "qvalueactor": 223, "qvaluemodul": 224, "safemodul": [225, 321], "safeprobabilisticmodul": 226, "safeprobabilistictensordictsequenti": 227, "safesequenti": 228, "tanhmodul": 229, "valueoper": 230, "worldmodelwrapp": 231, "biased_softplu": 232, "inv_softplu": 233, "map": 234, "a2closs": 235, "cqlloss": 236, "clipppoloss": 237, "ddpgloss": 238, "dqnloss": 239, "dtloss": 240, "discretecqlloss": 241, "discretesacloss": 242, "distributionaldqnloss": 243, "dreameractorloss": 244, "dreamermodelloss": 245, "dreamervalueloss": 246, "hardupd": 247, "iqlloss": 248, "klpenppoloss": 249, "lossmodul": [250, 326], "onlinedtloss": 251, "ppoloss": 252, "redqloss": 253, "reinforceloss": 254, "sacloss": 255, "softupd": 256, "td3loss": 257, "valueestim": 258, "default_value_kwarg": 259, "distance_loss": 260, "hold_out_net": 261, "hold_out_param": 262, "qmixerloss": 263, "next_state_valu": 264, "gae": 265, "td0estim": 266, "td1estim": 267, "tdlambdaestim": 268, "valueestimatorbas": 269, "generalized_advantage_estim": 270, "reward2go": 271, "td0_advantage_estim": 272, "td0_return_estim": 273, "td1_advantage_estim": 274, "td1_return_estim": 275, "td_lambda_advantage_estim": 276, "td_lambda_return_estim": 277, "vec_generalized_advantage_estim": 278, "vec_td1_advantage_estim": 279, "vec_td1_return_estim": 280, "vec_td_lambda_advantage_estim": 281, "vec_td_lambda_return_estim": 282, "tensordictrecord": 283, "videorecord": 284, "logger": [285, 323], "csvlogger": 286, "generate_exp_nam": 287, "get_logg": 288, "mlflowlogg": 289, "tensorboardlogg": 290, "wandblogg": 291, "batchsubsampl": 292, "clearcudacach": 293, "countframeslog": 294, "logreward": 295, "optimizerhook": 296, "replaybuffertrain": 298, "rewardnorm": 299, "selectkei": 300, "trainer": [301, 323, 327], "trainerhookbas": 302, "updateweight": 303, "correct_for_frame_skip": 304, "get_stats_random_rollout": 305, "make_collector_offpolici": 306, "make_collector_onpolici": 307, "make_dqn_loss": 308, "make_redq_loss": 309, "make_redq_model": 310, "make_replay_buff": 311, "make_target_updat": 312, "make_train": 313, "parallel_env_constructor": 314, "sync_async_collector": 315, "sync_sync_collector": 316, "transformed_env_constructor": 317, "readm": [318, 330], "tuto": [318, 330], "api": 319, "contribut": [320, 337], "content": 320, "modul": [321, 326, 329, 337], "tensordict": [321, 335, 337], "wrapper": 321, "probabilist": 321, "q": [321, 327, 329], "oper": 321, "join": 321, "hook": [321, 323, 327], "regular": 321, "planner": 321, "object": [322, 326, 337], "dqn": [322, 327, 329], "ddpg": [322, 326], "sac": 322, "redq": 322, "iql": 322, "cql": 322, "dt": 322, "td3": 322, "ppo": [322, 328, 332], "a2c": 322, "dreamer": 322, "builder": 323, "_util": 324, "comput": [325, 327, 333, 336], "time": [325, 326, 336], "code": [326, 333], "setup": [326, 329], "The": 326, "__init__": 326, "method": 326, "estim": 326, "put": 326, "togeth": [326, 333], "call": 326, "parallel": [326, 331, 338], "execut": [326, 331, 333], "stat": 326, "build": [326, 327, 335], "evalu": 326, "batch": [326, 333, 335], "size": [326, 335], "construct": 326, "target": [326, 327], "network": [326, 327, 328, 329, 332], "updat": 326, "experi": [326, 333], "result": [326, 328, 332], "conclus": [326, 327, 328, 329, 332, 333, 335], "A": [327, 335], "exampl": [327, 335], "deep": 327, "collect": [327, 328], "paramet": [327, 328], "hyperparamet": [327, 328, 332], "regist": 327, "possibl": 327, "improv": 327, "defin": [328, 332], "loop": [328, 329, 332, 333], "next": [328, 332], "step": [328, 332, 338], "recurr": 329, "overview": 329, "convolut": 329, "select": 329, "further": 329, "read": 329, "divers": 331, "rollout": [331, 332, 333, 338], "critic": 332, "pendulum": 333, "write": 333, "_step": 333, "reset": [333, 338], "simul": 333, "_reset": 333, "metadata": 333, "_spec": 333, "spec": [333, 338], "shape": 333, "seed": [333, 338], "wrap": 333, "class": [333, 337], "test": 333, "our": 333, "custom": [333, 335], "simpl": 333, "pretrain": 334, "vanilla": 335, "integr": 335, "tensorclass": 335, "sampl": 335, "iter": 335, "over": 335, "fix": 335, "priorit": 335, "save": 335, "raw": 335, "imag": 335, "more": 335, "complex": 335, "introduct": 337, "config": 337, "tensordictmodul": 337, "sequenc": 337, "program": 337, "ensembl": 337, "meta": 337, "special": 337, "state": 337, "frame_skip": 338, "deepmind": 338, "control": 338, "devic": 338, "run": 338, "close": 338, "access": 338, "attribut": 338, "kwarg": 338}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})