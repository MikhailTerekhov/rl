Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.MinariExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MOGymEnv", "reference/generated/torchrl.envs.MOGymWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.Conv3dNet", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.GRU", "reference/generated/torchrl.modules.GRUCell", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTM", "reference/generated/torchrl.modules.LSTMCell", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteCQLLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "sg_execution_times", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.MinariExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MOGymEnv.rst", "reference/generated/torchrl.envs.MOGymWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecGymEnvTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.Conv3dNet.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.GRU.rst", "reference/generated/torchrl.modules.GRUCell.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTM.rst", "reference/generated/torchrl.modules.LSTMCell.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteCQLLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "sg_execution_times.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "D4RLExperienceReplay", "MinariExperienceReplay", "OpenMLExperienceReplay", "get_dataloader", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "RandomSampler", "RoundRobinWriter", "Sampler", "SamplerWithoutReplacement", "Storage", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MOGymEnv", "MOGymWrapper", "MarlGroupMapType", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerEnv", "set_gym_backend", "ActionMask", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecGymEnvTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "CEMPlanner", "Conv3dNet", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "GRU", "GRUCell", "GRUModule", "IndependentNormal", "LSTM", "LSTMCell", "LSTMModule", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "EGreedyWrapper", "LMHeadActorValueOperator", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteCQLLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "Computation times", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "README Tutos", "Task-specific policy in multi-task environments", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 41, 42, 44, 46, 47, 51, 52, 53, 54, 56, 57, 58, 61, 64, 65, 66, 67, 68, 71, 73, 74, 77, 87, 88, 90, 91, 92, 93, 97, 100, 104, 106, 108, 111, 113, 114, 117, 123, 124, 128, 129, 130, 132, 139, 140, 141, 142, 143, 144, 146, 149, 150, 152, 162, 163, 165, 166, 167, 168, 175, 177, 179, 181, 182, 183, 184, 188, 189, 190, 194, 201, 202, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 225, 226, 230, 233, 234, 235, 236, 238, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 262, 264, 265, 266, 267, 268, 283, 286, 295, 296, 300, 301, 304, 313, 314, 315, 316, 319, 320, 321, 325, 326, 330, 331, 333, 334, 336, 337], "open": [0, 5, 7, 11, 326, 331, 336], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337], "reinforc": [0, 3, 9, 106, 165, 166, 167, 168, 172, 216, 220, 234, 235, 239, 240, 242, 246, 247, 253, 254, 255, 318, 324, 326, 329, 332, 335, 336], "learn": [0, 3, 7, 8, 9, 18, 32, 54, 106, 165, 166, 167, 168, 172, 185, 191, 216, 220, 234, 235, 239, 240, 242, 246, 247, 252, 253, 254, 255, 318, 320, 321, 324, 325, 326, 328, 329, 330, 332, 334, 335, 336, 337], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 16, 17, 87, 139, 191, 209, 221, 229, 234, 249, 251, 291, 319, 320, 321, 322, 325, 326, 327, 331, 333, 334, 337], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 18, 19, 20, 37, 43, 81, 88, 155, 318, 319, 320, 323, 325, 326, 327, 331, 332, 337], "pytorch": [0, 1, 2, 3, 53, 142, 175, 179, 190, 191, 300, 319, 322, 325, 327, 328, 331, 332, 333, 336, 337], "It": [0, 2, 3, 4, 7, 32, 37, 40, 41, 43, 45, 52, 53, 73, 77, 79, 87, 88, 91, 92, 93, 97, 115, 122, 124, 129, 139, 144, 149, 152, 165, 167, 173, 188, 189, 197, 199, 200, 206, 207, 216, 217, 220, 223, 225, 234, 235, 236, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 255, 256, 262, 263, 264, 296, 309, 319, 320, 321, 325, 326, 328, 331, 332, 333, 334, 336, 337], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 30, 31, 32, 33, 35, 38, 41, 42, 45, 49, 52, 53, 54, 55, 56, 60, 65, 73, 77, 87, 91, 92, 93, 97, 106, 107, 108, 109, 111, 114, 118, 123, 124, 126, 128, 129, 132, 135, 136, 139, 140, 141, 144, 146, 148, 149, 150, 160, 162, 163, 169, 172, 175, 176, 177, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 207, 209, 213, 216, 217, 218, 220, 221, 222, 223, 228, 234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 287, 291, 297, 304, 309, 312, 319, 320, 321, 322, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "python": [0, 3, 5, 6, 7, 10, 21, 103, 175, 176, 177, 179, 180, 181, 186, 187, 322, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337], "first": [0, 1, 3, 4, 5, 7, 8, 18, 20, 21, 26, 28, 52, 53, 56, 57, 67, 77, 106, 107, 118, 124, 128, 129, 142, 144, 146, 175, 177, 179, 181, 183, 188, 189, 190, 194, 209, 214, 215, 216, 221, 222, 224, 225, 236, 244, 248, 249, 251, 282, 299, 320, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "low": [0, 25, 73, 77, 91, 97, 109, 113, 156, 216, 221, 228, 325, 326, 327, 331, 332, 336, 337], "high": [0, 9, 25, 41, 73, 77, 91, 97, 109, 113, 123, 156, 216, 221, 228, 264, 269, 277, 325, 326, 327, 331, 332, 334, 336, 337], "level": [0, 3, 4, 22, 26, 28, 106, 138, 248, 325, 326, 336], "abstract": [0, 3, 8, 24, 25, 26, 27, 28, 29, 30, 44, 46, 47, 68, 73, 125, 184, 268, 292, 301, 322, 327, 332, 336], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 23, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 48, 52, 53, 54, 55, 56, 57, 58, 64, 67, 73, 74, 77, 86, 87, 90, 91, 92, 93, 94, 97, 99, 106, 109, 110, 111, 113, 114, 115, 117, 118, 122, 123, 126, 128, 132, 135, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 156, 160, 161, 168, 170, 175, 176, 177, 179, 180, 181, 182, 184, 186, 187, 188, 191, 195, 197, 200, 214, 215, 217, 220, 221, 222, 224, 225, 226, 227, 228, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 259, 262, 263, 264, 265, 266, 267, 268, 297, 312, 316, 320, 321, 322, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "intend": [0, 7, 13, 14, 16, 17, 18, 19, 20, 21, 45, 113, 207, 249, 320, 336], "effici": [0, 1, 2, 4, 8, 175, 191, 320, 325, 326, 327, 328, 330, 331, 333, 334, 336], "modular": [0, 227, 334, 336], "document": [0, 5, 7, 18, 19, 21, 32, 73, 77, 91, 97, 144, 326, 328, 336], "properli": [0, 73, 77, 91, 97, 327, 331, 332, 336], "test": [0, 3, 5, 146, 152, 177, 181, 182, 296, 312, 327, 328, 336], "The": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 64, 65, 73, 77, 81, 91, 92, 93, 97, 106, 110, 111, 114, 115, 116, 124, 126, 128, 132, 134, 135, 136, 138, 139, 140, 143, 144, 146, 148, 149, 159, 160, 161, 165, 166, 167, 168, 169, 172, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 191, 192, 198, 199, 200, 209, 210, 214, 215, 216, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 262, 263, 264, 265, 266, 267, 268, 270, 285, 288, 289, 290, 291, 295, 312, 314, 315, 320, 321, 322, 326, 327, 328, 331, 332, 333, 334, 336, 337], "code": [0, 3, 5, 7, 8, 73, 77, 91, 97, 128, 144, 146, 175, 176, 177, 179, 180, 181, 227, 324, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337], "aim": [0, 3, 7, 28, 29, 128, 146, 148, 183, 303, 319, 320, 321, 325, 326, 336], "support": [0, 1, 3, 18, 20, 26, 54, 55, 56, 57, 64, 67, 88, 90, 92, 106, 115, 124, 140, 141, 143, 155, 172, 207, 215, 216, 221, 224, 227, 242, 264, 265, 266, 267, 288, 320, 322, 327, 328, 331, 332, 334, 336], "research": [0, 7, 9, 336], "most": [0, 3, 7, 8, 32, 113, 149, 325, 327, 332, 336, 337], "written": [0, 3, 34, 36, 39, 45, 52, 56, 73, 77, 91, 97, 106, 115, 122, 135, 138, 141, 149, 159, 160, 209, 220, 221, 224, 225, 229, 234, 236, 248, 251, 253, 263, 282, 283, 320, 321, 322, 325, 328, 330, 332, 336], "highli": [0, 2, 336, 337], "wai": [0, 2, 3, 4, 53, 81, 128, 130, 148, 149, 179, 251, 264, 265, 266, 267, 320, 325, 326, 327, 330, 331, 332, 333, 334, 336, 337], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 59, 63, 73, 74, 77, 81, 86, 91, 92, 93, 95, 96, 97, 99, 103, 104, 106, 109, 110, 111, 113, 114, 115, 123, 124, 128, 129, 132, 135, 138, 139, 140, 143, 144, 146, 148, 150, 160, 161, 175, 177, 178, 179, 181, 184, 185, 188, 189, 191, 192, 205, 207, 209, 213, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 262, 263, 264, 265, 266, 267, 268, 296, 309, 314, 315, 316, 319, 320, 321, 322, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "easili": [0, 3, 7, 73, 77, 91, 97, 309, 321, 325, 326, 327, 331, 336, 337], "swap": [0, 3, 149, 327, 333, 336], "compon": [0, 2, 3, 35, 38, 41, 42, 52, 53, 54, 56, 57, 58, 64, 67, 172, 198, 215, 216, 223, 234, 235, 236, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 262, 295, 300, 325, 326, 327, 328, 330, 331, 332, 333, 336], "transform": [0, 1, 2, 4, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 40, 41, 42, 43, 52, 53, 54, 73, 74, 77, 91, 92, 93, 97, 99, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 164, 165, 169, 172, 173, 196, 197, 198, 206, 214, 219, 228, 231, 233, 239, 250, 283, 297, 309, 316, 318, 324, 326, 328, 329, 333, 335], "them": [0, 2, 3, 7, 9, 21, 32, 35, 37, 38, 41, 42, 52, 53, 54, 73, 74, 77, 81, 86, 91, 92, 93, 97, 99, 111, 114, 144, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 188, 189, 192, 193, 194, 196, 199, 200, 202, 206, 207, 213, 214, 216, 217, 218, 220, 223, 228, 231, 248, 254, 283, 325, 326, 328, 330, 331, 332, 333, 334, 336, 337], "write": [0, 3, 8, 23, 32, 37, 45, 77, 109, 126, 127, 135, 138, 160, 209, 224, 225, 227, 229, 235, 237, 238, 240, 241, 247, 252, 254, 256, 263, 268, 283, 320, 322, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337], "new": [0, 2, 3, 4, 8, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 47, 59, 63, 73, 77, 88, 91, 95, 96, 97, 135, 143, 150, 159, 160, 175, 177, 181, 220, 224, 225, 230, 234, 235, 236, 238, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 262, 325, 327, 328, 331, 332, 336, 337], "ones": [0, 2, 15, 26, 32, 35, 41, 42, 73, 77, 91, 97, 107, 110, 111, 112, 114, 124, 128, 132, 140, 143, 144, 146, 148, 186, 187, 207, 224, 234, 235, 237, 247, 251, 252, 254, 256, 270, 325, 327, 331, 332, 334, 336, 337], "littl": [0, 3, 43, 327, 328, 334, 336, 337], "effort": [0, 3, 332, 334, 336], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 56, 57, 58, 63, 64, 65, 67, 73, 77, 79, 86, 87, 91, 92, 93, 97, 99, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 124, 128, 129, 130, 132, 135, 136, 138, 140, 141, 143, 144, 146, 147, 148, 149, 150, 152, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 202, 205, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 230, 231, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 262, 264, 265, 266, 267, 268, 282, 291, 293, 296, 297, 300, 302, 303, 304, 309, 312, 316, 319, 320, 321, 322, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "repo": [0, 6, 52, 106, 141, 146, 319, 331, 336], "attempt": [0, 213, 218, 220, 238, 247, 262, 336], "align": [0, 175, 179, 336], "exist": [0, 3, 4, 11, 18, 21, 32, 45, 73, 77, 91, 97, 107, 112, 144, 254, 304, 316, 331, 336, 337], "ecosystem": [0, 336], "ha": [0, 2, 3, 4, 5, 7, 8, 10, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 44, 46, 47, 73, 74, 77, 81, 91, 97, 99, 106, 138, 139, 140, 141, 144, 175, 177, 179, 181, 188, 213, 216, 218, 220, 225, 248, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "dataset": [0, 34, 35, 36, 37, 38, 40, 41, 42, 45, 52, 53, 54, 55, 90, 150, 318, 325, 326, 333, 334, 336, 337], "pillar": [0, 336], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 104, 106, 107, 111, 112, 113, 114, 119, 123, 124, 128, 129, 135, 138, 139, 140, 141, 143, 144, 146, 149, 150, 152, 161, 177, 181, 182, 184, 185, 213, 220, 240, 243, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 291, 293, 296, 303, 304, 305, 306, 309, 312, 313, 314, 315, 316, 318, 319, 320, 324, 329, 333, 334, 335], "model": [0, 1, 3, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 73, 77, 87, 91, 97, 111, 128, 140, 146, 148, 151, 162, 163, 164, 169, 177, 181, 183, 184, 185, 189, 196, 197, 206, 210, 211, 212, 219, 224, 230, 234, 235, 236, 238, 239, 240, 243, 244, 245, 247, 248, 249, 251, 252, 254, 262, 300, 305, 306, 307, 308, 309, 318, 319, 322, 324, 327, 329, 331, 332, 334, 335, 337], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 75, 77, 87, 90, 91, 92, 93, 97, 104, 106, 111, 112, 114, 116, 122, 124, 132, 138, 149, 152, 156, 160, 161, 172, 177, 181, 182, 185, 188, 189, 198, 207, 209, 215, 217, 218, 220, 221, 222, 224, 227, 228, 229, 234, 235, 237, 238, 240, 241, 247, 251, 252, 253, 254, 256, 262, 264, 265, 266, 267, 268, 291, 297, 300, 302, 305, 312, 314, 315, 316, 318, 320, 321, 322, 328, 332, 333, 334, 337], "util": [0, 3, 17, 23, 32, 40, 73, 77, 91, 92, 93, 97, 100, 128, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 169, 175, 179, 231, 232, 233, 249, 312, 318, 323, 325, 327, 331, 332, 336, 337], "e": [0, 1, 3, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 33, 56, 57, 67, 73, 74, 77, 91, 97, 107, 110, 118, 124, 128, 135, 140, 143, 144, 146, 148, 152, 175, 177, 178, 179, 181, 185, 189, 192, 198, 204, 205, 214, 216, 221, 223, 224, 225, 254, 263, 264, 265, 266, 267, 291, 303, 315, 320, 325, 326, 327, 331, 333, 336, 337], "g": [0, 1, 3, 7, 8, 10, 11, 32, 33, 73, 74, 77, 91, 97, 107, 110, 118, 124, 128, 135, 140, 143, 144, 146, 148, 152, 175, 177, 178, 179, 180, 181, 185, 189, 204, 205, 214, 221, 224, 225, 254, 263, 273, 274, 275, 276, 278, 279, 280, 281, 315, 320, 325, 326, 327, 331, 332, 333, 336, 337], "collector": [0, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 106, 132, 138, 220, 297, 300, 302, 305, 306, 312, 314, 315, 318, 322, 334, 337], "contain": [0, 3, 7, 12, 13, 14, 16, 17, 19, 20, 26, 28, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 50, 52, 53, 54, 59, 61, 64, 66, 68, 73, 77, 87, 91, 97, 110, 111, 114, 128, 140, 143, 144, 146, 148, 149, 150, 159, 160, 161, 162, 163, 175, 176, 179, 180, 183, 185, 189, 209, 215, 216, 221, 223, 224, 229, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 262, 263, 264, 265, 266, 267, 268, 270, 287, 291, 303, 309, 312, 313, 314, 315, 316, 320, 321, 322, 325, 326, 327, 328, 331, 332, 333, 334, 336, 337], "etc": [0, 3, 7, 8, 11, 32, 46, 47, 73, 77, 91, 97, 122, 144, 183, 189, 325, 326, 327, 334, 336, 337], "have": [0, 1, 3, 5, 6, 7, 8, 9, 13, 14, 17, 18, 20, 21, 26, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 54, 63, 64, 73, 77, 91, 92, 93, 97, 106, 111, 114, 115, 122, 123, 124, 138, 143, 144, 150, 152, 160, 162, 163, 182, 183, 188, 189, 207, 226, 227, 234, 236, 248, 251, 259, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 291, 300, 320, 321, 322, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "few": [0, 2, 8, 291, 327, 328, 331, 334, 336, 337], "depend": [0, 1, 2, 3, 4, 7, 8, 34, 36, 111, 114, 229, 251, 320, 325, 327, 328, 331, 332, 336, 337], "possibl": [0, 2, 3, 4, 27, 29, 32, 33, 34, 36, 39, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 162, 163, 175, 176, 179, 180, 224, 296, 300, 320, 325, 327, 328, 331, 332, 334, 336, 337], "standard": [0, 3, 124, 134, 150, 161, 173, 185, 190, 191, 213, 214, 256, 264, 265, 266, 267, 325, 326, 331, 334, 336], "numpi": [0, 11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 91, 97, 142, 300, 332, 334, 336, 337], "common": [0, 2, 3, 4, 21, 77, 104, 210, 211, 212, 219, 234, 235, 236, 241, 247, 248, 251, 252, 253, 254, 256, 312, 319, 320, 322, 325, 327, 330, 331, 332, 333, 336, 337], "openai": [0, 7, 76, 78, 94, 327, 332, 336, 337], "gym": [0, 1, 3, 4, 8, 11, 13, 14, 16, 17, 21, 22, 73, 74, 76, 77, 78, 81, 91, 94, 97, 101, 103, 106, 109, 115, 121, 122, 124, 126, 130, 132, 135, 140, 143, 149, 150, 309, 312, 319, 325, 326, 327, 328, 332, 333, 334, 336], "onli": [0, 1, 3, 4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 44, 46, 47, 52, 56, 57, 67, 73, 77, 81, 88, 91, 92, 93, 97, 106, 107, 109, 110, 111, 113, 114, 118, 124, 128, 129, 132, 138, 139, 140, 141, 143, 144, 146, 148, 150, 179, 181, 182, 188, 189, 209, 214, 215, 221, 222, 224, 225, 226, 227, 234, 236, 237, 241, 247, 248, 249, 251, 252, 253, 254, 255, 256, 264, 265, 266, 267, 268, 304, 322, 325, 326, 327, 328, 330, 331, 332, 334, 336, 337], "option": [0, 1, 3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 59, 60, 63, 67, 71, 73, 74, 77, 87, 90, 91, 92, 93, 94, 97, 99, 104, 106, 107, 108, 109, 111, 113, 114, 115, 118, 119, 121, 122, 123, 124, 128, 129, 130, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 152, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 203, 204, 205, 207, 209, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 262, 263, 264, 265, 266, 267, 268, 270, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 285, 288, 291, 293, 294, 295, 296, 297, 298, 300, 304, 305, 306, 307, 308, 309, 311, 312, 314, 315, 316, 320, 328, 331, 332, 334, 336], "On": [0, 3, 7, 18, 19, 20, 21, 176, 180, 320, 326, 331], "end": [0, 3, 13, 14, 32, 35, 38, 41, 42, 52, 53, 54, 63, 73, 77, 91, 97, 115, 126, 138, 139, 144, 162, 163, 175, 176, 179, 180, 184, 254, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "come": [0, 1, 3, 8, 77, 86, 91, 97, 111, 114, 209, 210, 211, 212, 221, 229, 325, 326, 327, 328, 331, 334, 336, 337], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 32, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 56, 57, 63, 64, 67, 73, 75, 77, 87, 91, 92, 93, 97, 103, 104, 106, 107, 110, 111, 114, 121, 122, 128, 132, 138, 139, 140, 141, 143, 144, 146, 148, 150, 152, 157, 158, 160, 175, 177, 179, 181, 184, 188, 189, 213, 214, 224, 249, 251, 254, 268, 291, 296, 297, 306, 316, 319, 320, 321, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "re": [0, 3, 8, 32, 63, 73, 77, 91, 97, 181, 186, 187, 221, 225, 322, 325, 327, 328, 330, 332, 336, 337], "usabl": [0, 322, 328, 336], "function": [0, 3, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 45, 46, 47, 49, 56, 57, 58, 64, 67, 73, 74, 77, 91, 97, 103, 111, 114, 144, 150, 152, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 186, 187, 188, 189, 192, 193, 194, 195, 196, 199, 200, 202, 205, 207, 210, 211, 212, 213, 214, 216, 217, 218, 220, 221, 223, 224, 225, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 248, 249, 251, 252, 253, 254, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 309, 312, 318, 320, 325, 328, 330, 332, 334, 337], "cost": [0, 2, 27, 325, 326, 331, 332, 334], "return": [0, 2, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 55, 61, 65, 66, 68, 71, 73, 74, 77, 87, 90, 91, 92, 93, 97, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 124, 126, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 154, 155, 159, 160, 161, 164, 165, 166, 167, 168, 170, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 192, 195, 196, 197, 199, 200, 203, 204, 205, 206, 209, 210, 211, 212, 214, 221, 223, 224, 225, 229, 230, 231, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 259, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 287, 300, 303, 305, 309, 312, 313, 314, 315, 316, 318, 320, 322, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "process": [0, 1, 3, 4, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 43, 45, 73, 74, 77, 81, 86, 88, 91, 92, 93, 97, 111, 114, 150, 188, 189, 216, 220, 223, 318, 322, 325, 326, 328, 331, 332, 333, 334, 336, 337], "good": [0, 1, 4, 9, 325, 327, 328, 331, 336, 337], "runtim": [0, 3, 32, 73, 77, 91, 97, 332], "perform": [0, 3, 4, 8, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 73, 77, 91, 97, 100, 111, 114, 123, 144, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 188, 189, 192, 193, 194, 196, 199, 200, 202, 207, 213, 214, 216, 217, 218, 220, 223, 228, 231, 244, 251, 254, 296, 300, 321, 325, 326, 327, 328, 330, 331, 332, 337], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 32, 35, 38, 40, 41, 42, 52, 53, 54, 73, 77, 86, 91, 92, 93, 95, 96, 97, 138, 150, 210, 211, 212, 220, 241, 249, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 320, 321, 325, 326, 327, 328, 331, 332, 333, 334, 336, 337], "read": [0, 2, 3, 7, 17, 23, 37, 40, 56, 57, 58, 64, 67, 73, 77, 91, 97, 104, 106, 107, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 122, 126, 127, 129, 130, 132, 135, 136, 138, 139, 140, 141, 143, 146, 147, 149, 150, 160, 195, 209, 210, 211, 212, 215, 221, 224, 225, 227, 229, 230, 234, 235, 236, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 262, 264, 265, 266, 267, 268, 283, 296, 300, 309, 320, 325, 326, 327, 330, 331, 332, 333, 337], "more": [0, 2, 3, 4, 6, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 54, 73, 77, 80, 81, 91, 92, 93, 97, 99, 142, 146, 151, 172, 179, 183, 190, 192, 209, 213, 215, 216, 224, 229, 234, 242, 249, 251, 264, 269, 277, 295, 319, 321, 322, 325, 326, 327, 328, 330, 331, 332, 333, 337], "about": [0, 3, 5, 7, 9, 18, 19, 20, 43, 321, 325, 326, 327, 331, 332, 336, 337], "philosophi": [0, 9], "capabl": [0, 1, 7, 9, 322, 325, 330, 333, 337], "beyond": 0, "api": [0, 2, 3, 5, 92, 93, 94, 128, 148, 321, 322, 331, 332, 336, 337], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 48, 50, 73, 74, 77, 87, 91, 97, 100, 106, 107, 117, 122, 129, 152, 177, 181, 209, 215, 216, 221, 222, 223, 224, 225, 320, 321, 326, 327, 328, 330, 331, 332, 333, 334, 337], "paper": [0, 128, 146, 148, 175, 197, 206, 240, 246, 309, 325, 327, 331], "ppo": [0, 4, 8, 221, 225, 236, 248, 251, 318, 320, 324, 325, 326, 329, 335], "pendulum": [0, 3, 13, 14, 16, 17, 21, 22, 73, 74, 76, 77, 78, 88, 91, 97, 106, 109, 110, 116, 121, 122, 124, 130, 132, 138, 140, 141, 143, 144, 150, 177, 181, 312, 320, 324, 326, 327, 329, 335, 336, 337], "your": [0, 2, 3, 7, 8, 10, 18, 32, 73, 77, 81, 86, 91, 92, 93, 97, 150, 316, 319, 320, 321, 324, 326, 327, 328, 329, 331, 334, 335, 336], "introduct": [0, 321, 324, 329, 331, 335, 337], "multi": [0, 7, 9, 28, 29, 32, 73, 77, 91, 95, 96, 97, 175, 177, 179, 181, 182, 183, 188, 189, 262, 264, 265, 266, 267, 318, 324, 325, 326, 327, 328, 329, 332, 335, 336], "agent": [0, 9, 28, 29, 86, 92, 93, 95, 96, 98, 99, 100, 138, 139, 186, 187, 188, 189, 191, 197, 206, 262, 318, 324, 329, 332, 335], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 40, 52, 53, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 177, 181, 184, 185, 224, 249, 282, 304, 305, 306, 309, 312, 314, 315, 316, 318, 320, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 59, 60, 67, 71, 73, 74, 77, 87, 90, 91, 92, 93, 94, 95, 96, 97, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 121, 122, 124, 128, 129, 130, 132, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 148, 150, 152, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 172, 173, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 187, 188, 189, 191, 192, 195, 196, 197, 198, 204, 205, 206, 207, 209, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 277, 286, 287, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 310, 312, 316, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 335, 337], "pretrain": [0, 324, 329, 335], "recurr": [0, 175, 176, 177, 179, 181, 200, 324, 326, 329, 334, 335], "dqn": [0, 115, 172, 215, 216, 234, 235, 237, 238, 240, 241, 242, 243, 246, 247, 249, 251, 252, 253, 254, 255, 256, 262, 307, 318, 320, 324, 329, 335], "train": [0, 1, 3, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 34, 36, 40, 45, 55, 73, 77, 91, 92, 93, 97, 111, 119, 128, 139, 144, 146, 148, 152, 165, 167, 177, 181, 213, 217, 218, 220, 234, 235, 236, 237, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 262, 264, 300, 302, 312, 318, 322, 324, 326, 329, 333, 334, 335, 337], "polici": [0, 1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 73, 77, 87, 91, 97, 113, 122, 139, 157, 158, 172, 177, 181, 188, 189, 191, 198, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 228, 234, 235, 236, 237, 241, 247, 248, 250, 251, 252, 253, 254, 256, 296, 302, 305, 306, 312, 314, 315, 320, 321, 322, 324, 326, 329, 333, 334, 335, 336, 337], "replai": [0, 8, 13, 14, 16, 35, 38, 41, 42, 52, 53, 54, 59, 60, 61, 62, 64, 65, 66, 106, 113, 129, 132, 140, 235, 237, 238, 240, 241, 247, 252, 254, 256, 297, 300, 310, 312, 318, 322, 324, 329, 332, 333, 335], "buffer": [0, 1, 3, 4, 8, 13, 14, 16, 32, 35, 38, 41, 42, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 73, 77, 87, 91, 97, 106, 110, 113, 128, 129, 132, 140, 143, 144, 146, 148, 224, 227, 235, 237, 238, 240, 241, 247, 252, 254, 256, 297, 300, 310, 312, 318, 322, 324, 329, 332, 333, 335, 337], "task": [0, 3, 9, 28, 29, 40, 45, 71, 77, 80, 91, 92, 93, 94, 97, 128, 138, 146, 148, 247, 324, 325, 326, 327, 328, 329, 331, 332, 335, 336, 337], "specif": [0, 2, 5, 8, 41, 42, 77, 169, 214, 300, 318, 321, 322, 324, 327, 328, 329, 331, 334, 335], "object": [0, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 56, 57, 58, 64, 67, 73, 77, 91, 97, 111, 114, 115, 124, 128, 143, 144, 146, 150, 185, 197, 206, 209, 210, 221, 224, 225, 226, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 304, 305, 306, 311, 312, 316, 318, 320, 322, 324, 326, 327, 328, 329, 331, 332, 334, 335, 337], "ddpg": [0, 165, 166, 167, 168, 237, 246, 255, 318, 320, 324, 326, 329, 335], "loss": [0, 3, 8, 36, 115, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 262, 263, 264, 295, 300, 307, 308, 309, 312, 321, 322, 324, 329, 332, 334, 335, 336], "trainer": [0, 234, 235, 236, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 262, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 324, 325, 329, 335], "A": [0, 1, 2, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 75, 77, 79, 80, 91, 94, 97, 109, 113, 119, 122, 128, 129, 130, 140, 143, 144, 146, 147, 149, 150, 151, 152, 159, 161, 162, 163, 172, 175, 176, 177, 179, 180, 181, 183, 185, 186, 187, 189, 191, 192, 207, 213, 214, 215, 216, 217, 218, 221, 222, 225, 227, 228, 231, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 259, 262, 264, 265, 266, 267, 268, 270, 284, 285, 288, 293, 300, 302, 309, 312, 321, 324, 325, 327, 329, 331, 332, 335, 337], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 65, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 82, 83, 84, 85, 87, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 124, 126, 128, 130, 132, 135, 138, 139, 140, 141, 142, 143, 144, 146, 148, 150, 156, 159, 160, 161, 162, 163, 164, 169, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 188, 189, 192, 195, 196, 197, 198, 206, 207, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 227, 228, 229, 234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 257, 258, 262, 264, 265, 266, 267, 270, 291, 292, 293, 294, 295, 297, 298, 299, 302, 309, 312, 320, 321, 322, 324, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337], "packag": [0, 6, 7, 10, 103, 318, 319, 337], "singl": [0, 3, 13, 14, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 54, 65, 73, 77, 91, 97, 106, 107, 128, 132, 148, 162, 163, 175, 176, 177, 179, 180, 181, 182, 183, 189, 223, 227, 236, 238, 240, 241, 242, 248, 251, 252, 256, 264, 265, 266, 267, 273, 274, 275, 276, 278, 279, 280, 281, 309, 316, 318, 325, 326, 327, 328, 330, 331, 332, 333, 334], "node": [0, 2, 18, 19, 20, 21, 22, 309, 318], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 92, 93, 122, 124, 161, 170, 171, 172, 173, 178, 185, 186, 187, 192, 195, 196, 199, 200, 203, 204, 205, 213, 214, 215, 216, 221, 225, 226, 234, 235, 236, 241, 242, 247, 248, 251, 252, 253, 254, 256, 318, 322, 326, 327, 331, 332, 336, 337], "helper": [0, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 325, 326, 328, 332], "compos": [0, 3, 32, 35, 38, 41, 42, 52, 53, 54, 60, 61, 62, 65, 66, 73, 77, 91, 97, 106, 143, 144, 150, 219, 244, 254, 309, 318, 325, 326, 327, 328, 330, 331, 334, 336, 337], "tensorspec": [0, 3, 15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 46, 47, 48, 49, 50, 73, 77, 87, 91, 97, 99, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 120, 121, 122, 124, 126, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 160, 200, 209, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 228, 235, 238, 241, 252, 254, 256, 262, 318, 332], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 63, 64, 65, 67, 73, 74, 77, 86, 87, 91, 92, 93, 95, 96, 97, 99, 100, 103, 104, 106, 107, 109, 111, 112, 113, 114, 115, 116, 121, 122, 124, 126, 128, 129, 130, 132, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 156, 159, 160, 161, 165, 166, 167, 168, 169, 172, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 187, 188, 189, 190, 192, 195, 196, 197, 198, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 234, 235, 236, 237, 238, 240, 241, 242, 243, 247, 248, 249, 251, 252, 253, 254, 256, 258, 262, 263, 264, 265, 266, 267, 270, 282, 283, 291, 297, 300, 303, 304, 309, 310, 312, 313, 316, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337], "human": [0, 53, 318, 332], "feedback": [0, 318, 336], "rlhf": [0, 40, 45, 55, 122, 318, 320], "envbas": [0, 3, 13, 14, 16, 17, 18, 19, 20, 21, 74, 77, 91, 97, 104, 111, 114, 123, 130, 143, 144, 150, 152, 161, 184, 185, 296, 304, 305, 306, 309, 312, 314, 315, 316, 318], "gymlikeenv": [0, 318], "envmetadata": [0, 318], "vector": [0, 1, 8, 24, 27, 33, 86, 92, 93, 99, 113, 149, 165, 167, 175, 176, 179, 180, 183, 264, 267, 277, 278, 279, 280, 281, 318, 325, 326, 328, 330, 331, 332, 333, 337], "mask": [0, 1, 4, 23, 27, 30, 31, 33, 92, 93, 104, 129, 172, 186, 187, 198, 214, 215, 216, 217, 218, 222, 223, 297, 318, 326, 328, 337], "action": [0, 2, 8, 9, 13, 14, 15, 16, 17, 21, 27, 33, 40, 44, 53, 70, 73, 77, 83, 86, 87, 91, 92, 93, 95, 96, 97, 98, 99, 104, 109, 111, 113, 114, 115, 116, 119, 122, 123, 126, 130, 132, 136, 138, 144, 149, 156, 159, 161, 164, 165, 166, 167, 168, 169, 171, 172, 173, 177, 181, 183, 184, 185, 186, 187, 188, 196, 197, 198, 200, 203, 204, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 228, 229, 234, 235, 237, 238, 240, 241, 247, 249, 251, 252, 253, 254, 256, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 309, 312, 316, 318, 320, 321, 322, 325, 326, 327, 330, 331, 333, 334, 336, 337], "record": [0, 32, 73, 77, 91, 97, 122, 251, 282, 283, 284, 285, 286, 287, 288, 289, 290, 312, 318, 326, 327], "domain": [0, 2, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 73, 77, 91, 97, 113, 140, 156, 209, 215, 216, 221, 222, 223, 224, 225, 226, 227, 318, 327, 328, 331, 332, 336, 337], "modul": [0, 2, 3, 4, 8, 11, 32, 40, 65, 73, 77, 86, 87, 91, 97, 103, 110, 113, 115, 122, 128, 129, 139, 140, 143, 144, 146, 148, 150, 151, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 260, 262, 264, 265, 266, 267, 268, 300, 307, 308, 312, 318, 321, 322, 326, 327, 330, 331, 332, 333, 334], "tensordict": [0, 1, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 56, 57, 59, 65, 66, 67, 70, 73, 74, 75, 77, 83, 86, 87, 90, 91, 92, 93, 95, 96, 97, 98, 99, 104, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 126, 127, 128, 129, 130, 132, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 159, 160, 161, 171, 172, 177, 181, 182, 184, 185, 197, 198, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 256, 262, 263, 264, 265, 266, 267, 268, 282, 291, 295, 296, 297, 299, 300, 309, 318, 321, 322, 325, 326, 327, 328, 330, 331, 332, 333, 337], "actor": [0, 3, 4, 15, 21, 122, 161, 164, 165, 167, 172, 173, 185, 196, 198, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 262, 309, 318, 321, 326, 327, 328, 331, 333, 336], "explor": [0, 1, 151, 191, 209, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 234, 296, 305, 306, 312, 318, 327, 328, 331, 332], "valu": [0, 1, 3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 55, 73, 77, 86, 91, 97, 103, 105, 106, 107, 109, 111, 113, 114, 115, 123, 124, 128, 129, 132, 133, 135, 140, 141, 143, 144, 148, 150, 156, 160, 165, 166, 167, 168, 170, 172, 173, 174, 177, 178, 181, 183, 185, 186, 187, 188, 189, 190, 191, 192, 195, 197, 198, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 291, 293, 294, 295, 296, 297, 300, 309, 312, 318, 322, 326, 330, 331, 332, 334, 336, 337], "gener": [0, 1, 2, 3, 7, 8, 9, 16, 35, 38, 40, 62, 63, 73, 74, 77, 87, 91, 92, 93, 95, 96, 97, 110, 111, 112, 116, 122, 124, 130, 135, 136, 138, 143, 149, 160, 170, 186, 187, 195, 209, 221, 225, 229, 230, 252, 258, 264, 269, 277, 286, 300, 318, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337], "hook": [0, 32, 73, 77, 91, 97, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 188, 189, 192, 193, 194, 196, 198, 199, 200, 202, 207, 213, 214, 216, 217, 218, 220, 223, 228, 231, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 318], "planner": [0, 161, 185, 318], "sac": [0, 241, 252, 254, 318], "redq": [0, 252, 308, 309, 318], "iql": [0, 247, 318, 331], "cql": [0, 235, 240, 318], "dt": [0, 220, 318, 332], "td3": [0, 256, 318], "a2c": [0, 234, 318], "dreamer": [0, 102, 173, 243, 244, 245, 318, 320], "checkpoint": [0, 318, 333], "builder": [0, 318, 326, 337], "logger": [0, 283, 285, 286, 287, 288, 289, 290, 294, 300, 312, 316, 318, 326], "_util": [0, 3, 11, 318], "implement_for": [0, 3, 318], "contribut": 0, "thing": [0, 3, 7, 8, 319, 327, 328, 331, 334, 337], "consid": [0, 1, 3, 8, 20, 32, 34, 36, 39, 56, 57, 67, 73, 77, 91, 97, 113, 150, 170, 188, 203, 319, 325, 332, 334], "when": [0, 1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 54, 56, 57, 58, 60, 63, 64, 67, 73, 74, 77, 86, 88, 90, 91, 92, 93, 97, 104, 106, 110, 111, 113, 114, 122, 123, 124, 128, 129, 135, 140, 143, 144, 146, 148, 149, 150, 157, 158, 161, 172, 175, 176, 179, 180, 183, 184, 185, 186, 187, 190, 198, 204, 221, 224, 225, 227, 231, 236, 238, 242, 248, 251, 254, 257, 262, 263, 264, 265, 266, 267, 282, 283, 297, 316, 319, 320, 322, 325, 326, 327, 328, 331, 332, 333, 334, 337], "debug": [0, 6, 8, 40, 319, 337], "work": [0, 2, 3, 4, 8, 11, 32, 34, 36, 38, 39, 73, 77, 81, 91, 97, 107, 122, 128, 146, 149, 150, 162, 163, 183, 216, 223, 228, 236, 248, 251, 300, 319, 320, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "habitat": [0, 3, 79, 319, 333], "lab": [0, 3, 71, 72, 319], "mujoco": [0, 6, 8, 94, 319, 327, 328], "error": [0, 1, 3, 7, 10, 11, 29, 32, 73, 77, 91, 97, 100, 129, 152, 319, 325, 327, 331, 337], "solut": [0, 3, 6, 7, 9, 21, 319, 320, 322, 336], "resourc": [0, 1, 21, 319, 325, 327, 331], "version": [0, 1, 3, 6, 11, 32, 34, 36, 40, 73, 77, 91, 92, 97, 99, 149, 212, 249, 254, 264, 267, 319, 320, 325, 327, 328, 331, 332, 333, 337], "issu": [0, 4, 5, 8, 53, 56, 57, 67, 81, 106, 129, 141, 209, 215, 216, 221, 222, 223, 224, 225, 319, 336], "index": [0, 3, 7, 8, 10, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 56, 57, 59, 61, 65, 66, 67, 68, 73, 77, 91, 97, 99, 106, 113, 159, 186, 187, 330, 331, 334, 336], "search": [0, 160, 326], "page": [0, 7], "somewhat": [1, 321, 337], "equival": [1, 3, 17, 24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 52, 53, 55, 73, 77, 91, 97, 112, 115, 144, 172, 179, 198, 215, 216, 222, 223, 251, 297, 336, 337], "dataload": [1, 55, 63, 326, 327, 334], "except": [1, 2, 3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 73, 77, 91, 97, 106, 117, 132, 139, 140, 141, 175, 177, 179, 181, 195, 213, 217, 218, 220, 320, 326, 334, 336, 337], "1": [1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 65, 70, 73, 74, 77, 83, 86, 87, 90, 91, 92, 93, 95, 96, 97, 98, 99, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 119, 122, 124, 126, 128, 129, 130, 132, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 148, 150, 156, 159, 161, 162, 163, 164, 165, 166, 168, 169, 172, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 199, 200, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 224, 227, 228, 229, 231, 234, 235, 236, 237, 238, 240, 241, 244, 247, 248, 250, 251, 252, 253, 254, 255, 256, 262, 263, 264, 265, 266, 267, 270, 272, 273, 274, 278, 279, 281, 291, 296, 297, 298, 309, 312, 316, 319, 320, 321, 322, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337], "thei": [1, 2, 3, 4, 8, 9, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 73, 77, 86, 91, 92, 93, 97, 99, 117, 122, 128, 136, 143, 144, 148, 181, 182, 234, 235, 236, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 262, 297, 300, 320, 321, 322, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "collect": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 35, 38, 41, 42, 52, 53, 54, 91, 94, 97, 106, 124, 128, 148, 152, 220, 235, 237, 240, 241, 252, 254, 256, 291, 297, 300, 302, 303, 304, 312, 322, 325, 328, 331, 332, 333, 334, 336, 337], "over": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 42, 43, 45, 51, 65, 73, 77, 91, 97, 113, 124, 135, 141, 159, 207, 227, 242, 244, 249, 270, 303, 322, 325, 326, 327, 331, 332, 337], "non": [1, 3, 8, 21, 32, 34, 35, 36, 38, 39, 41, 42, 73, 77, 91, 92, 93, 97, 105, 110, 118, 128, 140, 143, 144, 145, 146, 148, 159, 175, 177, 179, 181, 188, 224, 225, 234, 235, 237, 238, 240, 241, 242, 243, 244, 247, 249, 251, 252, 253, 254, 256, 262, 264, 265, 266, 267, 320, 325, 328, 331, 332, 334, 337], "static": [1, 11, 40, 45, 150, 247, 332, 334], "2": [1, 3, 8, 9, 10, 11, 13, 14, 16, 21, 22, 26, 28, 30, 31, 32, 35, 36, 37, 38, 41, 42, 43, 45, 55, 73, 74, 77, 86, 90, 91, 92, 93, 95, 96, 97, 98, 99, 107, 110, 111, 112, 113, 114, 122, 124, 126, 128, 132, 135, 138, 139, 140, 143, 144, 146, 148, 150, 156, 160, 162, 163, 164, 165, 166, 167, 169, 172, 174, 175, 176, 177, 179, 180, 181, 182, 183, 186, 187, 188, 189, 192, 196, 207, 214, 215, 216, 217, 218, 220, 224, 228, 229, 234, 235, 236, 237, 241, 247, 248, 251, 252, 253, 254, 256, 263, 264, 265, 266, 267, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 291, 320, 321, 324, 325, 326, 327, 328, 330, 331, 332, 334, 335, 336, 337], "like": [1, 2, 3, 4, 7, 21, 26, 28, 32, 35, 38, 41, 42, 45, 73, 77, 79, 86, 91, 92, 93, 97, 115, 142, 152, 175, 179, 189, 219, 252, 321, 325, 327, 328, 331, 332, 333, 334, 337], "being": [1, 2, 3, 7, 8, 17, 18, 20, 21, 32, 55, 73, 77, 91, 97, 111, 113, 114, 123, 130, 144, 157, 158, 177, 181, 217, 220, 236, 248, 251, 254, 283, 297, 302, 314, 315, 316, 320, 325, 326, 327, 328, 331, 332, 334], "s": [1, 2, 3, 6, 7, 8, 32, 35, 38, 41, 42, 52, 53, 54, 73, 77, 81, 88, 91, 92, 93, 97, 106, 110, 128, 138, 140, 142, 143, 144, 146, 148, 150, 152, 162, 163, 177, 181, 187, 188, 189, 191, 197, 206, 210, 212, 213, 216, 217, 221, 224, 225, 228, 235, 247, 249, 254, 264, 265, 266, 267, 268, 309, 320, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "accept": [1, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 55, 73, 77, 87, 91, 97, 106, 110, 118, 128, 135, 140, 143, 144, 145, 146, 148, 207, 224, 225, 226, 254, 322, 327, 337], "two": [1, 2, 3, 4, 8, 10, 32, 40, 63, 73, 77, 91, 97, 124, 128, 148, 168, 175, 177, 179, 181, 201, 225, 248, 259, 296, 300, 309, 321, 325, 326, 327, 328, 330, 331, 332, 334, 336, 337], "main": [1, 2, 3, 5, 20, 22, 74, 225, 300, 320, 321, 325, 326, 330, 337], "argument": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 53, 55, 63, 73, 77, 88, 91, 92, 97, 109, 110, 128, 136, 138, 140, 143, 144, 146, 148, 159, 162, 163, 175, 177, 179, 181, 183, 186, 187, 188, 189, 190, 207, 209, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 228, 229, 234, 235, 236, 237, 238, 239, 240, 241, 246, 247, 248, 250, 251, 252, 253, 254, 256, 258, 262, 264, 265, 266, 267, 268, 272, 282, 293, 303, 309, 312, 313, 316, 325, 326, 327, 328, 331, 332, 334, 337], "list": [1, 6, 7, 8, 9, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 49, 52, 53, 54, 58, 63, 64, 73, 77, 87, 91, 92, 93, 97, 99, 100, 109, 111, 114, 122, 124, 126, 128, 135, 144, 146, 148, 150, 159, 171, 177, 181, 183, 186, 187, 193, 198, 216, 222, 223, 225, 227, 228, 229, 249, 254, 261, 264, 267, 282, 296, 297, 314, 315, 320, 325, 327, 330, 332, 333, 334, 336, 337], "constructor": [1, 16, 18, 19, 20, 21, 38, 45, 143, 234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 262, 264, 265, 266, 267, 268, 309, 313, 316, 320, 325, 326, 327, 331, 334], "iter": [1, 11, 13, 14, 16, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 51, 52, 53, 54, 55, 73, 77, 91, 97, 116, 124, 136, 162, 163, 183, 188, 189, 202, 209, 215, 221, 222, 224, 226, 227, 229, 249, 261, 296, 299, 300, 309, 321, 322, 325, 327, 328, 331, 332], "execut": [1, 3, 6, 7, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 41, 42, 52, 53, 54, 73, 74, 77, 81, 87, 88, 91, 97, 104, 144, 175, 177, 179, 181, 217, 226, 227, 304, 316, 320, 322, 324, 326, 327, 328, 331, 334, 335, 337], "step": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 70, 73, 74, 77, 83, 87, 91, 92, 93, 97, 104, 118, 121, 124, 138, 139, 140, 141, 144, 149, 159, 160, 161, 173, 175, 177, 179, 181, 182, 184, 185, 213, 217, 218, 220, 221, 225, 234, 243, 251, 263, 264, 265, 266, 267, 270, 271, 272, 282, 291, 296, 300, 322, 325, 326, 328, 330, 332, 333, 334, 336], "queri": [1, 3, 13, 14, 16, 17, 32, 34, 36, 39, 73, 77, 91, 97, 128, 143, 146, 150, 227, 325, 332, 336], "defin": [1, 2, 11, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 73, 77, 91, 97, 129, 139, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 188, 189, 192, 193, 194, 196, 199, 200, 202, 207, 213, 214, 216, 217, 218, 220, 223, 228, 231, 238, 240, 249, 264, 265, 266, 267, 268, 282, 313, 325, 326, 328, 332, 334, 337], "number": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 67, 73, 77, 87, 88, 90, 91, 92, 93, 97, 106, 113, 119, 123, 124, 134, 138, 141, 150, 161, 162, 163, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 188, 189, 192, 193, 194, 197, 199, 200, 203, 204, 205, 206, 209, 213, 214, 217, 218, 220, 221, 224, 225, 229, 233, 235, 241, 243, 247, 248, 250, 252, 254, 256, 291, 293, 296, 300, 302, 303, 304, 314, 315, 316, 320, 325, 326, 327, 328, 331, 332, 333, 337], "befor": [1, 2, 3, 4, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 54, 63, 73, 77, 91, 97, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 126, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 175, 177, 181, 183, 190, 191, 234, 235, 236, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 262, 265, 266, 267, 297, 325, 327, 328, 331, 332, 334, 337], "deliv": [1, 16, 18, 19, 20, 325, 326, 336], "stack": [1, 3, 7, 8, 18, 20, 21, 28, 29, 50, 73, 77, 86, 91, 92, 93, 97, 150, 175, 177, 179, 180, 181, 226, 227, 282, 291, 320, 326, 330, 332, 336], "user": [1, 2, 3, 5, 8, 21, 32, 52, 53, 73, 77, 91, 97, 139, 144, 169, 182, 251, 254, 313, 321, 322, 325, 326, 332, 336, 337], "reset": [1, 3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 52, 53, 54, 70, 73, 74, 77, 83, 86, 87, 88, 90, 91, 92, 93, 97, 106, 115, 118, 121, 123, 128, 135, 138, 139, 140, 141, 143, 146, 149, 150, 152, 160, 175, 177, 181, 208, 220, 282, 309, 325, 326, 327, 328, 330, 331, 336], "whenev": [1, 2, 3, 32, 35, 38, 41, 42, 103, 121, 144, 149, 249, 264, 265, 266, 267, 302, 320], "reach": [1, 13, 14, 16, 17, 18, 19, 20, 21, 22, 40, 63, 73, 77, 91, 97, 138, 213, 217, 218, 220, 325, 327, 331, 336, 337], "done": [1, 3, 4, 7, 8, 13, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 52, 53, 70, 73, 74, 77, 83, 86, 87, 90, 91, 92, 93, 95, 96, 97, 98, 99, 104, 106, 111, 112, 114, 115, 116, 123, 124, 126, 130, 132, 134, 136, 138, 140, 141, 143, 144, 150, 159, 160, 161, 175, 177, 181, 185, 234, 235, 237, 238, 240, 241, 247, 251, 252, 253, 254, 256, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 309, 321, 325, 327, 328, 330, 331, 332, 333, 334, 336, 337], "state": [1, 2, 3, 4, 13, 14, 16, 17, 32, 35, 38, 40, 41, 42, 52, 53, 54, 70, 73, 77, 83, 87, 91, 92, 93, 95, 96, 97, 106, 107, 109, 115, 124, 130, 138, 139, 143, 144, 150, 159, 160, 161, 164, 169, 173, 175, 176, 177, 179, 180, 181, 182, 183, 185, 193, 196, 197, 199, 200, 206, 210, 224, 230, 234, 236, 240, 248, 249, 251, 252, 253, 254, 262, 263, 264, 265, 266, 267, 268, 316, 320, 321, 325, 326, 327, 328, 331, 332, 337], "after": [1, 3, 8, 13, 14, 18, 20, 21, 26, 32, 40, 73, 77, 81, 91, 97, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 120, 121, 122, 123, 124, 126, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 159, 175, 177, 181, 190, 213, 215, 217, 218, 222, 244, 254, 326, 327, 328, 331, 332, 333, 334, 337], "predefin": [1, 326, 327, 328, 334], "becaus": [1, 3, 4, 7, 40, 73, 77, 91, 97, 115, 122, 138, 143, 149, 168, 182, 189, 209, 215, 216, 221, 222, 223, 224, 225, 325, 326, 328, 330, 331, 332, 334, 337], "potenti": [1, 2, 332, 334], "comput": [1, 3, 4, 8, 13, 16, 21, 27, 32, 40, 73, 77, 91, 97, 124, 144, 147, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 192, 193, 194, 195, 196, 199, 200, 202, 204, 205, 207, 210, 213, 214, 216, 217, 218, 220, 221, 223, 225, 228, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 304, 321, 325, 327, 328, 330, 331, 333, 334], "heavi": [1, 8, 334], "crucial": [1, 213, 217, 218, 220, 247, 249, 325, 326, 327, 328, 331, 332, 337], "configur": [1, 8, 13, 14, 16, 17, 21, 22, 40, 122, 164, 169, 196, 249, 251, 309, 320, 325, 326, 327, 331, 332], "hyperparamet": [1, 234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 262, 325, 332, 334], "appropri": [1, 3, 4, 7, 13, 14, 16, 17, 61, 65, 66, 68, 91, 97, 115, 313, 316, 325, 334], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 67, 71, 72, 73, 74, 77, 87, 88, 90, 91, 92, 93, 94, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 312, 313, 314, 315, 316, 320, 321, 325, 328, 331, 332, 333, 336], "take": [1, 3, 8, 23, 40, 73, 77, 91, 97, 109, 138, 141, 143, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 188, 189, 192, 193, 194, 196, 199, 200, 202, 207, 213, 214, 216, 217, 218, 219, 220, 221, 223, 228, 231, 233, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 291, 302, 320, 322, 325, 326, 327, 331, 332, 334, 337], "consider": [1, 3, 8, 326, 331, 334], "whether": [1, 2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 46, 47, 52, 53, 54, 73, 77, 87, 91, 92, 93, 94, 97, 99, 111, 114, 139, 144, 160, 162, 163, 177, 181, 183, 229, 235, 236, 237, 238, 240, 241, 242, 248, 249, 251, 252, 254, 256, 262, 264, 267, 325, 326, 327, 331, 332, 337], "should": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 64, 65, 73, 77, 86, 87, 91, 92, 93, 94, 97, 106, 109, 110, 111, 112, 115, 116, 118, 122, 124, 129, 130, 132, 135, 136, 138, 139, 141, 143, 144, 149, 150, 152, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 188, 189, 192, 193, 194, 196, 199, 200, 202, 207, 213, 214, 216, 217, 218, 220, 221, 223, 224, 225, 228, 231, 241, 246, 248, 249, 251, 252, 255, 263, 264, 265, 266, 267, 268, 283, 295, 296, 297, 300, 312, 314, 315, 316, 320, 322, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "occur": [1, 8, 14, 28, 29, 107, 124, 129, 149, 160, 209, 215, 216, 221, 222, 223, 224, 225, 244, 334, 337], "serial": [1, 2, 3, 32, 73, 77, 91, 97, 150], "optim": [1, 2, 8, 32, 40, 73, 77, 91, 97, 144, 161, 185, 190, 191, 235, 249, 250, 251, 254, 295, 300, 312, 321, 322, 327, 328, 331, 332], "parallel": [1, 3, 8, 17, 92, 93, 149, 152, 234, 313, 314, 315, 316, 326, 327, 331], "syncdatacollector": [1, 13, 14, 17, 18, 19, 20, 21, 106, 132, 312, 315, 318, 327, 328, 331, 334], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 73, 74, 75, 77, 79, 86, 87, 91, 92, 93, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 314, 315, 316, 320, 321, 322, 325, 326, 327, 328, 331, 334, 337], "worker": [1, 2, 13, 14, 16, 17, 18, 19, 20, 21, 22, 36, 45, 55, 74, 88, 91, 97, 150, 314, 315, 316, 325, 327, 336, 337], "multisyncdatacollector": [1, 18, 19, 20, 21, 315, 318, 327, 336], "split": [1, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 45, 52, 53, 55, 86, 92, 93, 175, 179, 234, 235, 236, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 262, 320, 322, 327, 334, 336], "workload": 1, "across": [1, 3, 8, 18, 19, 20, 21, 35, 38, 41, 42, 81, 150, 188, 220, 302, 318, 320, 325, 331, 332], "aggreg": [1, 3, 160, 162, 163, 165, 166, 227], "result": [1, 3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 41, 42, 52, 53, 54, 63, 73, 74, 77, 91, 97, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 120, 121, 122, 123, 124, 126, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 152, 159, 160, 175, 177, 179, 181, 183, 188, 198, 214, 216, 217, 223, 234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 262, 264, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 302, 320, 326, 328, 332, 333, 336, 337], "final": [1, 3, 4, 21, 34, 36, 39, 40, 149, 175, 177, 179, 181, 188, 213, 217, 218, 219, 220, 226, 264, 296, 320, 325, 326, 327, 331, 332, 337], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 314, 318, 325, 326, 327, 336], "sever": [1, 8, 30, 32, 45, 73, 77, 91, 97, 107, 109, 144, 251, 325, 327, 334, 337], "batch": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 54, 55, 56, 57, 60, 63, 65, 67, 73, 77, 87, 88, 90, 91, 97, 106, 118, 124, 126, 129, 132, 140, 144, 145, 149, 150, 160, 170, 171, 175, 176, 177, 179, 180, 181, 182, 186, 187, 188, 189, 190, 195, 197, 203, 207, 220, 224, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 291, 294, 297, 298, 299, 300, 302, 314, 315, 316, 322, 326, 327, 328, 330, 331, 333, 336, 337], "gather": [1, 3, 18, 20, 21, 45, 55, 56, 57, 67, 129, 187, 195, 263, 304, 319, 325, 326, 327, 328, 331, 332, 334, 337], "continu": [1, 9, 25, 46, 73, 77, 91, 92, 93, 97, 156, 165, 166, 167, 168, 220, 227, 234, 235, 241, 247, 251, 252, 253, 254, 255, 256, 264, 269, 277, 320, 325, 327, 328, 331, 332, 334, 336, 337], "concomitantli": 1, "network": [1, 4, 8, 32, 73, 77, 86, 91, 92, 93, 97, 162, 163, 165, 166, 167, 168, 171, 173, 174, 179, 183, 188, 189, 191, 193, 194, 197, 199, 200, 201, 206, 210, 211, 212, 214, 224, 228, 235, 236, 237, 238, 240, 241, 242, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 260, 262, 264, 265, 266, 267, 268, 311, 312, 320, 321, 322, 330, 332, 337], "impli": [1, 337], "weight": [1, 4, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 40, 73, 77, 91, 95, 96, 97, 110, 128, 140, 143, 144, 146, 148, 175, 176, 177, 179, 180, 181, 188, 191, 224, 234, 235, 236, 241, 244, 254, 302, 311, 320, 322, 325, 326, 327, 328, 330, 332, 334, 336], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 20, 21, 28, 29, 32, 52, 53, 73, 77, 91, 97, 122, 124, 136, 144, 145, 150, 152, 183, 188, 321, 322, 325, 326, 327, 328, 331, 332, 333, 334, 336, 337], "slightli": [1, 320, 321, 328, 332, 333, 334, 337], "lag": [1, 13, 14, 16, 17, 325, 326, 327], "therefor": [1, 3, 7, 73, 77, 91, 97, 132, 251, 262, 337], "although": [1, 8, 73, 77, 91, 97, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 188, 189, 192, 193, 194, 196, 199, 200, 202, 207, 213, 214, 216, 217, 218, 220, 223, 228, 231, 322, 325, 326, 334], "fastest": 1, "price": 1, "suitabl": [1, 2], "where": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 65, 67, 73, 77, 86, 87, 90, 91, 92, 93, 97, 104, 106, 115, 122, 128, 132, 135, 138, 139, 141, 143, 145, 148, 149, 159, 160, 175, 176, 179, 180, 186, 187, 188, 213, 217, 218, 220, 221, 224, 225, 233, 234, 235, 236, 241, 242, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 321, 322, 325, 326, 327, 330, 331, 332, 334, 337], "asynchron": [1, 9, 14, 21, 32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224, 234, 314, 326, 327], "off": [1, 2, 4, 178, 205, 215, 254, 296, 305, 320, 322, 325, 326, 327, 331, 333, 337], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 16, 17, 18, 20, 21, 32, 52, 53, 73, 77, 91, 92, 93, 97, 111, 114, 118, 124, 139, 144, 149, 172, 175, 177, 179, 181, 189, 190, 210, 212, 214, 216, 222, 234, 242, 247, 251, 296, 320, 322, 325, 326, 327, 328, 331, 332, 333, 334, 337], "remot": [1, 2, 18, 19, 20, 21, 91, 97, 337], "rollout": [1, 3, 13, 14, 16, 21, 23, 40, 73, 77, 80, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 104, 106, 109, 111, 114, 115, 116, 122, 126, 130, 135, 136, 138, 139, 141, 152, 161, 177, 181, 185, 220, 234, 304, 320, 325, 327, 328, 333, 334, 336], "necessari": [1, 4, 6, 8, 13, 14, 16, 17, 136, 252, 264, 265, 266, 267, 268, 321, 325, 327], "synchronis": [1, 74, 331], "either": [1, 5, 22, 32, 40, 55, 73, 77, 91, 97, 138, 139, 230, 256, 287, 322, 325, 326, 328, 333, 334, 336, 337], "update_policy_weights_": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 325, 331, 336], "update_at_each_batch": [1, 13, 14, 17, 325], "true": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 63, 71, 72, 73, 74, 75, 77, 87, 91, 92, 93, 94, 95, 96, 97, 98, 99, 104, 106, 107, 110, 113, 118, 121, 122, 123, 124, 128, 129, 130, 134, 136, 138, 140, 142, 143, 144, 145, 146, 148, 150, 152, 156, 159, 160, 161, 162, 163, 165, 166, 167, 168, 174, 175, 176, 177, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 204, 205, 209, 210, 211, 212, 213, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 234, 235, 236, 237, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 256, 259, 264, 265, 266, 267, 270, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 293, 294, 296, 297, 300, 316, 320, 321, 322, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "second": [1, 3, 8, 175, 177, 179, 181, 216, 236, 248, 251, 254, 299, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 55, 56, 57, 67, 70, 73, 75, 77, 80, 81, 83, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 110, 111, 112, 114, 115, 116, 122, 126, 127, 128, 130, 132, 136, 138, 140, 142, 143, 144, 146, 148, 156, 159, 161, 162, 163, 164, 165, 166, 167, 168, 172, 174, 175, 176, 177, 179, 180, 181, 182, 183, 185, 188, 189, 190, 191, 196, 197, 198, 206, 209, 210, 211, 212, 214, 215, 216, 220, 221, 222, 223, 224, 227, 229, 234, 235, 237, 238, 240, 241, 247, 251, 252, 253, 254, 256, 262, 264, 265, 266, 267, 297, 302, 309, 310, 320, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336], "oper": [1, 3, 4, 7, 8, 13, 14, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 45, 46, 47, 73, 77, 91, 97, 118, 122, 143, 171, 172, 176, 180, 192, 210, 211, 212, 215, 216, 219, 224, 230, 234, 236, 237, 238, 242, 248, 251, 253, 262, 263, 264, 265, 266, 267, 300, 309, 318, 322, 325, 326, 327, 328, 330, 331, 332, 337], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 43, 44, 45, 52, 72, 73, 74, 77, 87, 91, 97, 106, 124, 140, 143, 150, 156, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 188, 189, 192, 193, 194, 196, 199, 200, 202, 207, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 231, 238, 241, 249, 262, 264, 265, 266, 267, 283, 287, 296, 304, 305, 306, 309, 312, 314, 315, 320, 321, 322, 325, 327, 328, 332, 334, 337], "cpu": [1, 3, 8, 10, 13, 14, 16, 18, 19, 20, 21, 24, 26, 28, 32, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 53, 55, 56, 57, 67, 70, 73, 77, 83, 86, 87, 90, 91, 92, 93, 95, 96, 97, 98, 99, 110, 111, 112, 114, 115, 116, 126, 128, 130, 132, 136, 138, 140, 143, 144, 146, 148, 156, 159, 161, 175, 176, 177, 179, 180, 181, 185, 190, 191, 197, 198, 206, 209, 210, 211, 212, 214, 215, 216, 221, 222, 223, 224, 227, 229, 234, 235, 237, 238, 240, 241, 247, 251, 252, 253, 254, 256, 262, 297, 309, 320, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "slower": 1, "than": [1, 2, 3, 4, 8, 13, 14, 16, 17, 52, 73, 77, 81, 91, 97, 130, 168, 177, 179, 181, 183, 192, 207, 209, 213, 215, 224, 229, 249, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 319, 321, 325, 326, 327, 331, 332, 334, 336, 337], "one": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 33, 35, 37, 38, 40, 41, 42, 52, 53, 54, 59, 61, 64, 66, 68, 73, 74, 77, 81, 86, 90, 91, 92, 93, 97, 99, 104, 106, 109, 111, 112, 113, 114, 123, 124, 128, 132, 135, 137, 139, 140, 141, 143, 144, 145, 148, 150, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 188, 189, 192, 193, 194, 195, 196, 198, 199, 200, 202, 207, 209, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 228, 229, 231, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 247, 248, 249, 251, 252, 253, 254, 255, 256, 262, 264, 265, 266, 267, 271, 272, 293, 295, 296, 300, 304, 309, 316, 319, 320, 321, 322, 325, 326, 327, 328, 330, 331, 332, 333, 334, 337], "cuda": [1, 3, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 73, 77, 80, 81, 91, 97, 110, 122, 127, 128, 140, 143, 144, 146, 148, 175, 176, 179, 180, 224, 240, 292, 325, 326, 327, 328, 331, 333, 337], "multipl": [1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 27, 43, 91, 97, 107, 109, 113, 123, 132, 135, 138, 143, 150, 175, 179, 181, 182, 188, 190, 191, 209, 215, 221, 222, 224, 225, 228, 236, 241, 248, 251, 252, 256, 270, 309, 316, 320, 322, 325, 326, 327, 331, 332, 334, 336], "infer": [1, 91, 97, 106, 150, 177, 181, 190, 214, 240, 325, 327, 334], "run": [1, 3, 4, 5, 6, 7, 8, 10, 13, 14, 17, 21, 32, 71, 72, 73, 77, 87, 91, 97, 123, 124, 144, 150, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 188, 189, 192, 193, 194, 196, 199, 200, 202, 207, 213, 214, 216, 217, 218, 220, 223, 226, 227, 228, 231, 254, 296, 314, 315, 316, 319, 322, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336], "dispatch": [1, 18, 19, 20, 21, 207], "avail": [1, 3, 4, 6, 21, 63, 81, 91, 92, 93, 122, 172, 198, 221, 225, 249, 314, 315, 320, 325, 326, 327, 328, 331, 332, 334, 337], "speed": [1, 2, 4, 8, 27, 91, 97, 321, 325, 326, 327, 328, 331, 332, 334], "up": [1, 2, 3, 8, 9, 13, 14, 16, 27, 40, 52, 53, 91, 97, 141, 143, 251, 319, 320, 321, 325, 326, 327, 328, 331, 332, 334, 337], "avoid": [1, 32, 56, 57, 67, 73, 77, 91, 97, 103, 144, 150, 209, 224, 229, 236, 248, 251, 254, 303, 327, 331], "oom": [1, 56, 57, 67], "choic": [1, 2, 52, 53, 91, 192, 320, 321, 325, 326, 331], "size": [1, 2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 60, 63, 64, 65, 67, 70, 73, 75, 77, 83, 86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98, 99, 107, 111, 114, 115, 116, 118, 126, 128, 130, 132, 136, 137, 138, 140, 142, 143, 144, 145, 148, 150, 156, 159, 161, 162, 163, 164, 169, 170, 172, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 192, 195, 196, 197, 198, 199, 200, 203, 206, 207, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 227, 229, 234, 235, 237, 238, 240, 241, 247, 249, 251, 252, 253, 254, 256, 262, 263, 264, 265, 266, 267, 268, 283, 291, 297, 309, 320, 326, 327, 328, 330, 331, 332, 333, 336, 337], "pass": [1, 3, 4, 13, 14, 16, 18, 19, 20, 21, 22, 26, 32, 35, 38, 40, 41, 42, 45, 53, 56, 57, 65, 67, 73, 74, 75, 77, 86, 88, 91, 92, 93, 97, 111, 114, 130, 143, 145, 150, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 188, 189, 190, 192, 193, 194, 196, 197, 199, 200, 202, 206, 207, 209, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 231, 236, 248, 249, 251, 264, 265, 266, 267, 268, 297, 314, 315, 316, 320, 325, 326, 327, 328, 330, 331, 332, 334, 337], "ie": [1, 3, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 45, 46, 47, 59, 73, 77, 81, 90, 91, 97, 106, 118, 145, 150, 160, 177, 181, 214, 234, 236, 237, 241, 247, 248, 251, 252, 253, 254, 256, 264, 265, 266, 267, 320, 321, 326, 327, 331, 334], "store": [1, 3, 8, 13, 14, 16, 17, 20, 26, 32, 34, 36, 37, 39, 41, 42, 43, 45, 55, 56, 57, 58, 59, 67, 73, 77, 91, 97, 149, 150, 161, 182, 185, 234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 262, 309, 318, 322, 325, 327, 328, 331, 333, 334, 337], "while": [1, 3, 7, 8, 32, 73, 77, 91, 97, 132, 144, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 188, 189, 192, 193, 194, 196, 199, 200, 202, 207, 213, 214, 216, 217, 218, 220, 223, 228, 231, 247, 248, 251, 254, 320, 325, 327, 328, 331, 332, 333, 334, 336], "wait": [1, 20, 21, 22, 328, 332], "also": [1, 2, 3, 8, 9, 11, 32, 34, 36, 39, 41, 53, 55, 56, 57, 67, 73, 77, 91, 92, 93, 97, 103, 106, 113, 124, 130, 132, 135, 136, 138, 140, 144, 175, 179, 200, 221, 226, 227, 228, 234, 235, 237, 238, 240, 241, 247, 251, 254, 264, 271, 272, 320, 322, 325, 326, 327, 328, 330, 331, 332, 334, 337], "impact": [1, 111, 114, 326, 328, 331], "memori": [1, 2, 3, 8, 21, 27, 32, 34, 36, 39, 45, 52, 53, 56, 73, 74, 77, 81, 91, 97, 106, 110, 128, 140, 143, 144, 146, 148, 150, 179, 180, 224, 316, 322, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "manag": [1, 8, 260, 261, 264, 265, 266, 267, 296], "kei": [1, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 65, 73, 77, 91, 97, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 127, 128, 129, 130, 132, 135, 136, 138, 139, 140, 141, 143, 144, 146, 147, 148, 149, 150, 159, 160, 161, 171, 172, 177, 181, 184, 185, 198, 209, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 262, 263, 264, 265, 266, 267, 268, 283, 294, 295, 296, 298, 299, 300, 304, 309, 321, 322, 325, 327, 328, 330, 331, 332, 334, 336, 337], "control": [1, 3, 5, 8, 16, 71, 72, 86, 92, 93, 113, 159, 165, 166, 167, 168, 177, 181, 184, 185, 200, 207, 220, 224, 225, 226, 234, 236, 248, 251, 255, 264, 269, 277, 320, 322, 325, 326, 327, 331, 332, 334], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 40, 41, 42, 44, 45, 46, 47, 52, 53, 55, 63, 73, 77, 81, 88, 91, 94, 97, 106, 107, 111, 114, 119, 122, 123, 124, 128, 129, 138, 140, 141, 143, 144, 146, 152, 175, 176, 178, 179, 180, 181, 186, 187, 188, 205, 210, 211, 212, 214, 221, 224, 225, 227, 234, 235, 236, 238, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 259, 262, 264, 265, 266, 267, 291, 295, 309, 320, 321, 322, 325, 326, 327, 328, 330, 331, 332, 333, 334, 337], "storing_devic": [1, 13, 14, 16, 17, 18, 19, 20, 21, 325, 326, 331, 336], "dure": [1, 3, 13, 14, 16, 17, 18, 19, 20, 36, 40, 45, 52, 54, 55, 73, 77, 91, 92, 93, 97, 106, 109, 111, 114, 119, 126, 144, 177, 181, 296, 300, 321, 325, 326, 327, 328, 331, 332, 334, 337], "heurist": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 220, 325, 337], "usual": [1, 3, 4, 6, 7, 8, 52, 73, 77, 91, 97, 191, 251, 264, 265, 266, 267, 268, 282, 309, 319, 320, 322, 325, 326, 327, 328, 331, 334, 337], "same": [1, 2, 3, 4, 11, 13, 14, 16, 18, 19, 20, 21, 28, 29, 32, 34, 36, 39, 43, 45, 52, 63, 73, 74, 77, 86, 91, 92, 93, 97, 106, 111, 113, 114, 119, 123, 124, 143, 144, 150, 162, 163, 176, 177, 180, 181, 183, 186, 187, 188, 189, 214, 220, 228, 254, 325, 326, 327, 330, 331, 333, 334, 337], "storag": [1, 2, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 56, 57, 58, 63, 65, 67, 73, 75, 77, 91, 97, 106, 111, 114, 132, 318, 322, 326, 327, 328, 331, 333], "default": [1, 2, 3, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 59, 67, 71, 73, 77, 90, 91, 92, 93, 94, 97, 99, 104, 106, 107, 111, 113, 114, 115, 118, 122, 123, 124, 126, 128, 129, 132, 134, 136, 138, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 152, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 199, 200, 202, 203, 204, 205, 209, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 228, 229, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 258, 259, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 309, 312, 316, 322, 325, 326, 327, 328, 333, 334, 336, 337], "behaviour": [1, 3, 21, 77, 107, 111, 114, 124, 129, 139, 159, 177, 178, 181, 205, 296, 320, 326, 334], "besid": 1, "those": [1, 2, 3, 5, 7, 26, 28, 91, 97, 106, 111, 114, 124, 140, 141, 181, 221, 225, 226, 227, 302, 314, 315, 320, 325, 326, 331, 332, 337], "choos": [1, 86, 177, 181, 251, 320, 321, 325, 326, 327, 331, 334], "follow": [1, 2, 3, 6, 7, 8, 32, 34, 36, 37, 39, 40, 52, 54, 73, 77, 87, 90, 91, 92, 93, 95, 96, 97, 99, 122, 128, 146, 162, 163, 175, 177, 179, 181, 183, 216, 222, 223, 233, 234, 235, 236, 237, 241, 247, 248, 251, 252, 253, 254, 256, 300, 309, 320, 321, 322, 325, 326, 327, 328, 330, 331, 332, 334, 336, 337], "max_frames_per_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 303, 325, 327, 336], "frame": [1, 2, 13, 14, 16, 17, 18, 19, 20, 21, 32, 106, 119, 213, 217, 218, 220, 282, 283, 293, 296, 300, 303, 304, 325, 326, 327, 328, 331, 334, 336, 337], "call": [1, 2, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 52, 53, 54, 55, 56, 57, 58, 60, 63, 64, 67, 73, 77, 90, 91, 97, 106, 109, 110, 113, 118, 121, 122, 124, 126, 127, 128, 135, 140, 143, 144, 146, 148, 149, 150, 152, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 185, 188, 189, 190, 192, 193, 194, 196, 199, 200, 202, 207, 213, 214, 216, 217, 218, 220, 223, 224, 225, 227, 228, 231, 236, 248, 251, 254, 263, 264, 265, 266, 267, 282, 296, 322, 326, 327, 328, 331, 332, 334, 337], "frames_per_batch": [1, 13, 14, 16, 17, 18, 19, 20, 21, 106, 132, 303, 325, 326, 327, 328, 331, 334, 336], "each": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 30, 31, 32, 40, 41, 52, 73, 74, 77, 91, 92, 93, 97, 99, 128, 132, 135, 138, 139, 140, 141, 148, 150, 172, 175, 176, 177, 179, 181, 188, 189, 193, 197, 198, 206, 213, 215, 216, 217, 223, 227, 270, 273, 274, 275, 276, 278, 279, 280, 281, 296, 297, 314, 315, 320, 325, 326, 327, 328, 331, 332, 333, 334, 336, 337], "init_random_fram": [1, 13, 14, 16, 17, 18, 19, 20, 21, 303, 325, 326], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 44, 46, 47, 60, 73, 77, 87, 91, 97, 113, 123, 124, 140, 152, 175, 177, 179, 181, 217, 221, 224, 225, 235, 252, 296, 304, 320, 325, 326, 327, 328, 332, 333, 334, 336, 337], "rand_step": [1, 3, 69, 71, 72, 73, 74, 76, 77, 78, 82, 84, 85, 87, 88, 91, 97, 121, 140, 150, 332, 336, 337], "reset_at_each_it": [1, 13, 14, 16, 17, 18, 19, 20, 21, 325], "split_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 52, 53, 325, 326, 327], "trajectori": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 32, 41, 52, 53, 59, 65, 73, 77, 91, 97, 129, 138, 143, 161, 181, 185, 220, 251, 264, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 291, 318, 321, 325, 326, 327, 328, 332, 334, 336, 337], "pad": [1, 3, 23, 37, 43, 52, 53, 106, 162, 163, 165, 166, 181, 182, 186, 187, 188, 297], "along": [1, 3, 23, 28, 29, 34, 36, 39, 40, 45, 52, 53, 57, 67, 106, 107, 124, 126, 129, 135, 142, 181, 183, 186, 187, 191, 215, 221, 224, 225, 249, 320, 325, 326, 328, 331, 332, 334], "point": [1, 3, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 54, 59, 61, 65, 66, 68, 73, 77, 91, 97, 106, 110, 128, 139, 140, 142, 143, 144, 146, 148, 184, 224, 233, 242, 300, 319, 326, 327, 330, 331, 332, 334, 337], "boolean": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 77, 129, 138, 160, 186, 187, 213, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 322, 328], "repres": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 41, 53, 73, 77, 91, 97, 99, 119, 129, 150, 172, 186, 187, 198, 215, 216, 222, 223, 225, 259, 264, 297, 325, 327, 328, 331], "valid": [1, 3, 23, 34, 36, 37, 45, 55, 100, 129, 144, 162, 163, 183, 186, 187, 213, 220, 248, 264, 265, 266, 267, 297, 322, 337], "exploration_typ": [1, 13, 14, 16, 18, 19, 20, 21, 296, 318, 325, 326], "strategi": [1, 16, 86, 187, 195, 217, 320, 322, 325, 326, 331, 334], "reset_when_don": [1, 13, 14, 16, 18, 19, 20, 21], "These": [1, 2, 7, 32, 40, 73, 77, 91, 97, 128, 148, 320, 321, 325, 327, 331, 332, 334, 337], "tool": [1, 2, 3, 5, 328, 332, 334, 337], "backend": [1, 3, 7, 11, 18, 19, 21, 22, 91, 101, 103, 322, 325, 327, 328, 332], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 318], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 318], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "torch": [1, 2, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 59, 63, 65, 67, 70, 73, 74, 77, 83, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 104, 107, 110, 111, 112, 113, 114, 115, 116, 122, 124, 126, 128, 130, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 148, 150, 156, 159, 160, 161, 162, 163, 164, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 203, 204, 205, 206, 207, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 232, 234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 291, 298, 299, 309, 312, 320, 321, 322, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "multiprocess": [1, 2, 3, 18, 19, 20, 74, 75, 150, 326, 327, 332, 337], "synchron": [1, 13, 19, 21, 88, 314, 315, 326, 327], "mode": [1, 6, 13, 14, 16, 18, 19, 20, 21, 32, 73, 77, 88, 91, 97, 111, 114, 139, 144, 150, 153, 157, 158, 170, 177, 178, 181, 195, 203, 204, 205, 221, 225, 249, 296, 325, 326, 328, 331, 336, 337], "find": [1, 4, 6, 7, 18, 19, 20, 35, 37, 43, 179, 213, 220, 294, 298, 325, 326, 331], "dedic": [1, 2, 3, 18, 19, 20, 21, 210, 211, 212, 320, 325, 330, 331], "folder": [1, 2, 326], "sub": [1, 2, 3, 13, 14, 18, 19, 20, 21, 73, 77, 91, 97, 129, 226, 227, 291, 300, 320, 325, 326, 327, 330, 336, 337], "all": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 44, 46, 47, 49, 73, 74, 77, 87, 91, 92, 93, 97, 99, 100, 106, 109, 110, 111, 112, 114, 117, 122, 123, 124, 128, 135, 140, 141, 143, 144, 146, 148, 150, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 188, 189, 192, 193, 194, 196, 199, 200, 202, 207, 213, 214, 216, 217, 218, 220, 223, 224, 225, 227, 228, 231, 244, 249, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 295, 300, 303, 314, 315, 316, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 336, 337], "variou": [1, 3, 13, 14, 16, 17, 177, 181, 234, 235, 236, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 257, 262, 314, 315, 325, 326, 327, 331, 337], "machin": [1, 7, 18, 19, 20, 32, 54, 81, 331], "One": [1, 2, 4, 8, 31, 33, 45, 106, 132, 146, 195, 213, 224, 228, 255, 259, 287, 325, 326, 334, 337], "wonder": 1, "why": [1, 3, 332, 337], "parallelenv": [1, 2, 3, 13, 14, 16, 17, 20, 73, 77, 88, 92, 93, 97, 313, 318, 325, 326, 327, 330, 336, 337], "instead": [1, 4, 7, 8, 11, 27, 32, 73, 77, 91, 97, 118, 140, 144, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 188, 189, 192, 193, 194, 196, 199, 200, 202, 207, 213, 214, 216, 217, 218, 220, 223, 228, 231, 234, 235, 236, 238, 241, 242, 247, 248, 251, 252, 253, 254, 262, 264, 268, 272, 316, 320, 332, 334, 337], "In": [1, 3, 4, 5, 7, 8, 10, 11, 17, 21, 22, 32, 52, 53, 73, 77, 91, 92, 93, 97, 110, 111, 112, 114, 128, 132, 136, 139, 140, 142, 143, 144, 146, 148, 149, 175, 178, 179, 183, 188, 200, 204, 205, 224, 227, 233, 234, 235, 237, 238, 240, 241, 247, 249, 251, 252, 253, 254, 256, 302, 314, 315, 316, 320, 321, 325, 326, 327, 328, 330, 331, 332, 333, 334, 337], "lower": [1, 2, 3, 17, 21, 25, 109, 150, 199, 200, 228, 327, 332], "io": [1, 88, 179, 180], "footprint": [1, 2, 334], "need": [1, 2, 3, 4, 7, 8, 10, 11, 18, 19, 20, 21, 32, 34, 36, 64, 73, 77, 81, 86, 91, 92, 93, 97, 106, 109, 118, 128, 130, 141, 144, 148, 150, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 188, 189, 190, 192, 193, 194, 196, 199, 200, 202, 207, 213, 214, 216, 217, 218, 220, 222, 223, 224, 228, 231, 233, 241, 252, 253, 254, 256, 263, 268, 283, 300, 316, 320, 321, 325, 326, 327, 328, 331, 332, 334, 336, 337], "commun": [1, 2, 3, 319, 327, 337], "yet": [1, 333], "spec": [1, 2, 3, 15, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 48, 49, 50, 52, 73, 75, 77, 87, 91, 97, 99, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 124, 126, 128, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 152, 156, 160, 172, 198, 200, 209, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 234, 235, 237, 238, 240, 241, 247, 251, 252, 253, 254, 256, 262, 309, 320, 325, 326, 327, 328, 330, 331, 336], "plai": [1, 3, 92, 93, 106, 326, 327, 334, 337], "role": [1, 3, 326, 337], "opposit": 1, "direct": [1, 32, 73, 77, 91, 97, 175, 179, 249, 326], "sinc": [1, 2, 3, 4, 5, 7, 32, 35, 38, 41, 42, 73, 77, 91, 92, 93, 97, 159, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 188, 189, 192, 193, 194, 196, 199, 200, 202, 207, 213, 214, 215, 216, 217, 218, 220, 222, 223, 228, 231, 325, 326, 327, 328, 332, 333, 334, 336, 337], "faster": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 88, 264, 265, 266, 267, 328, 331], "share": [1, 3, 6, 8, 34, 36, 39, 56, 57, 58, 64, 67, 74, 91, 97, 150, 177, 181, 188, 189, 210, 211, 212, 234, 236, 237, 241, 247, 248, 251, 252, 253, 254, 256, 316, 318, 320, 327, 328, 330, 331, 336, 337], "among": [1, 3, 92, 93, 331], "achiev": [1, 3, 4, 32, 73, 77, 81, 91, 97, 139, 160, 297, 322, 325, 326, 327, 328, 331, 332, 337], "via": [1, 4, 7, 8, 35, 38, 41, 42, 52, 53, 54, 91, 128, 143, 148, 239, 249, 321, 322, 325, 326, 327, 328, 334, 337], "prohibit": [1, 3], "slow": [1, 3, 4], "compar": [1, 3, 296, 321, 325, 327, 331, 334, 337], "gpu": [1, 7, 8, 32, 56, 57, 67, 73, 77, 81, 91, 97, 325, 327, 328, 331, 337], "nativ": [1, 7, 9, 53, 73, 77, 91, 97, 106, 328, 334], "driver": [1, 7], "practic": [1, 3, 4, 5, 8, 178, 204, 205, 233, 319, 325, 326, 327, 328, 331, 333, 337], "mean": [1, 2, 3, 4, 7, 13, 14, 16, 18, 19, 20, 21, 41, 59, 77, 124, 150, 161, 170, 173, 175, 177, 179, 181, 182, 185, 203, 213, 221, 225, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 320, 321, 325, 326, 327, 331, 332, 334, 336, 337], "keyword": [1, 3, 13, 14, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 53, 55, 73, 77, 91, 97, 109, 110, 128, 136, 140, 143, 144, 146, 148, 177, 181, 186, 187, 209, 213, 214, 215, 217, 218, 220, 221, 222, 224, 225, 228, 234, 235, 236, 237, 238, 239, 240, 241, 246, 247, 248, 250, 251, 252, 253, 254, 256, 258, 262, 264, 265, 266, 267, 268, 272, 313, 325, 326, 327, 331, 334, 337], "build": [1, 3, 7, 23, 26, 32, 35, 38, 41, 42, 52, 53, 54, 73, 77, 91, 94, 97, 132, 150, 161, 177, 181, 185, 219, 221, 225, 300, 307, 308, 310, 311, 320, 322, 327, 328, 331, 332, 333, 336, 337], "given": [1, 2, 3, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 40, 41, 42, 44, 46, 47, 48, 49, 52, 53, 54, 73, 77, 87, 91, 97, 110, 113, 124, 128, 140, 143, 144, 146, 148, 159, 161, 172, 173, 175, 179, 185, 198, 202, 209, 215, 216, 217, 220, 223, 224, 225, 226, 227, 229, 233, 237, 238, 240, 263, 264, 265, 266, 267, 268, 270, 292, 296, 312, 320, 322, 325, 326, 327, 331, 332, 337], "mani": [1, 3, 4, 38, 73, 234, 236, 241, 248, 251, 252, 256, 320, 325, 326, 327, 331, 332, 334, 337], "eg": [1, 2, 3, 11, 56, 57, 58, 64, 67, 73, 77, 81, 91, 97, 113, 138, 144, 188, 214], "gymnasium": [1, 3, 5, 11, 73, 77, 84, 85, 91, 97, 101, 103, 116, 136, 138, 149, 326, 327, 332, 336], "other": [1, 2, 3, 4, 7, 8, 21, 22, 32, 35, 38, 41, 42, 45, 52, 53, 56, 57, 58, 63, 64, 67, 73, 77, 87, 91, 97, 109, 112, 113, 136, 142, 146, 150, 175, 177, 181, 191, 192, 214, 216, 217, 223, 225, 234, 235, 236, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 262, 264, 297, 309, 314, 315, 320, 322, 325, 326, 327, 328, 331, 332, 333, 334, 336, 337], "warn": [1, 3, 213, 217, 218, 220, 326], "quickli": [1, 3, 326, 331, 337], "becom": [1, 3, 4, 21, 175, 179, 331, 337], "quit": [1, 3, 320, 325, 326, 327, 331, 337], "annoi": [1, 3], "By": [1, 2, 3, 33, 73, 77, 91, 92, 93, 97, 99, 207, 225, 249, 296, 316, 325, 333, 334, 337], "filter": [1, 3, 4, 45, 234, 235, 237, 241, 247, 251, 252, 254], "out": [1, 3, 4, 5, 9, 21, 32, 34, 36, 39, 45, 52, 73, 77, 91, 92, 93, 97, 140, 152, 175, 176, 179, 186, 187, 190, 191, 209, 214, 215, 216, 220, 221, 222, 223, 224, 225, 260, 261, 322, 325, 326, 327, 328, 331, 332, 334, 336, 337], "If": [1, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 63, 65, 67, 73, 74, 77, 81, 87, 91, 92, 93, 97, 99, 101, 106, 107, 108, 109, 111, 112, 113, 114, 116, 118, 122, 123, 124, 128, 129, 132, 135, 136, 139, 140, 141, 143, 144, 146, 148, 150, 159, 160, 162, 163, 175, 176, 177, 179, 180, 181, 182, 183, 186, 187, 188, 189, 207, 209, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 247, 248, 249, 251, 252, 253, 254, 256, 262, 263, 264, 265, 266, 267, 268, 278, 279, 280, 281, 287, 295, 297, 300, 302, 304, 309, 312, 316, 319, 325, 326, 327, 328, 330, 331, 332, 334, 336, 337], "still": [1, 3, 9, 213, 248, 249, 325, 326, 328, 330, 332, 334, 337], "wish": [1, 3, 103, 334], "see": [1, 3, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 54, 55, 73, 77, 80, 88, 91, 92, 93, 97, 99, 110, 128, 140, 142, 143, 144, 146, 148, 151, 162, 163, 175, 178, 179, 183, 189, 190, 197, 205, 206, 210, 212, 224, 225, 297, 325, 326, 327, 328, 331, 332, 334, 337], "displai": [1, 3, 7, 300, 322, 325, 326, 331, 332], "filter_warnings_subprocess": [1, 3], "fals": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 63, 67, 70, 71, 73, 74, 77, 83, 86, 87, 90, 91, 92, 93, 95, 96, 97, 98, 99, 104, 106, 107, 110, 111, 114, 115, 116, 118, 121, 122, 123, 124, 126, 128, 129, 130, 132, 134, 136, 138, 140, 142, 143, 144, 145, 146, 148, 150, 152, 159, 160, 161, 162, 163, 165, 172, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186, 187, 188, 189, 197, 198, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 234, 235, 236, 237, 238, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 256, 259, 262, 264, 265, 266, 267, 273, 274, 275, 276, 278, 279, 280, 281, 293, 294, 296, 297, 298, 300, 309, 316, 320, 322, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "central": [2, 188, 325, 326, 331, 334], "part": [2, 4, 8, 32, 40, 73, 77, 91, 97, 124, 132, 135, 177, 181, 229, 291, 316, 325, 327, 328, 332, 337], "algorithm": [2, 3, 8, 9, 13, 14, 87, 119, 234, 251, 252, 253, 254, 291, 305, 318, 321, 322, 325, 326, 327, 328, 331, 333, 334, 336], "implement": [2, 3, 9, 11, 16, 32, 64, 73, 77, 88, 91, 97, 110, 111, 112, 116, 122, 130, 136, 138, 143, 150, 162, 175, 176, 177, 178, 179, 180, 181, 203, 204, 205, 234, 235, 239, 240, 247, 249, 250, 251, 254, 309, 320, 322, 325, 326, 327, 328, 332, 336], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 26, 32, 34, 36, 39, 40, 42, 52, 63, 73, 74, 77, 81, 91, 97, 106, 122, 128, 130, 146, 149, 150, 161, 181, 182, 188, 189, 234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 262, 319, 320, 321, 322, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "give": [2, 3, 7, 41, 73, 77, 87, 91, 97, 106, 319, 321, 325, 326, 331, 332, 333, 336], "abil": [2, 249, 332, 334], "veri": [2, 3, 326, 332, 334, 336, 337], "influenti": 2, "sampl": [2, 4, 8, 9, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 57, 59, 60, 63, 65, 67, 73, 77, 87, 90, 91, 97, 106, 129, 132, 153, 154, 157, 158, 161, 170, 178, 185, 186, 187, 195, 196, 199, 204, 205, 209, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 234, 235, 236, 237, 238, 240, 248, 250, 251, 256, 291, 297, 300, 303, 320, 325, 326, 327, 328, 331, 333, 336, 337], "latenc": 2, "especi": [2, 3, 7, 8, 107], "larger": [2, 4, 247], "volum": 2, "lazymemmapstorag": [2, 35, 38, 41, 42, 52, 53, 54, 106, 318, 325, 326, 328, 333, 334], "advis": [2, 337], "due": [2, 3, 5, 333, 334, 337], "serialis": 2, "memmaptensor": 2, "well": [2, 3, 8, 17, 21, 32, 35, 37, 38, 41, 42, 64, 73, 77, 91, 97, 179, 199, 200, 249, 268, 325, 326, 328, 333, 334, 336, 337], "specifi": [2, 11, 13, 14, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 73, 77, 91, 92, 93, 97, 99, 111, 112, 114, 135, 137, 139, 145, 161, 179, 224, 225, 249, 255, 320, 325, 327, 328], "file": [2, 6, 7, 8, 52, 53, 282, 322, 324, 326, 334, 335], "locat": [2, 7, 45, 73, 77, 91, 97, 115, 124, 134, 178, 192, 204, 205, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 325, 326, 327, 331, 334], "improv": [2, 4, 119, 234, 321, 331, 334], "failur": [2, 4], "recoveri": 2, "liststorag": [2, 35, 38, 41, 42, 318, 334], "were": [2, 7, 91, 97, 327, 334], "found": [2, 3, 6, 7, 10, 21, 26, 32, 34, 36, 39, 45, 52, 53, 73, 77, 81, 91, 97, 104, 106, 132, 135, 141, 150, 160, 217, 218, 221, 225, 248, 249, 251, 325, 326, 328], "rough": 2, "benchmark": [2, 3, 9], "http": [2, 5, 6, 7, 10, 18, 19, 20, 35, 43, 54, 59, 81, 88, 92, 93, 94, 106, 128, 146, 164, 165, 166, 167, 168, 169, 172, 173, 174, 179, 185, 186, 187, 191, 193, 194, 196, 197, 199, 200, 206, 216, 220, 234, 235, 238, 239, 240, 242, 243, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 264, 269, 277, 309, 333, 336], "github": [2, 5, 6, 7, 10, 18, 19, 20, 53, 92, 93, 94, 146, 336], "com": [2, 5, 6, 7, 10, 18, 19, 20, 81, 92, 93, 94, 333, 336], "tree": [2, 73, 77, 91, 97], "type": [2, 3, 14, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 55, 73, 77, 86, 87, 91, 92, 93, 97, 110, 111, 112, 115, 116, 122, 128, 130, 136, 138, 140, 143, 144, 146, 148, 150, 154, 158, 162, 163, 183, 188, 189, 191, 197, 206, 213, 215, 221, 224, 225, 234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 258, 262, 270, 309, 314, 320, 325, 326, 327, 331, 332, 334, 337], "1x": 2, "lazytensorstorag": [2, 41, 42, 65, 132, 318, 327, 331, 334], "83x": 2, "3": [2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 17, 21, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 73, 77, 80, 86, 88, 90, 91, 92, 93, 95, 96, 97, 104, 106, 110, 113, 115, 116, 122, 124, 126, 128, 130, 132, 135, 136, 138, 139, 140, 142, 143, 144, 146, 148, 156, 161, 162, 163, 165, 166, 169, 172, 174, 175, 176, 177, 179, 180, 181, 182, 183, 185, 188, 189, 192, 195, 197, 207, 209, 210, 211, 212, 215, 216, 221, 223, 224, 227, 228, 229, 234, 235, 237, 238, 240, 241, 242, 243, 244, 247, 249, 251, 252, 253, 254, 256, 262, 264, 265, 266, 267, 270, 273, 274, 275, 276, 278, 279, 280, 281, 283, 299, 320, 322, 325, 326, 327, 328, 331, 332, 333, 334, 336, 337], "44x": 2, "between": [2, 3, 4, 5, 13, 14, 16, 17, 21, 32, 40, 63, 73, 77, 91, 97, 113, 123, 133, 144, 152, 162, 163, 175, 177, 181, 183, 188, 189, 216, 221, 225, 234, 236, 237, 240, 241, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 259, 264, 296, 300, 321, 325, 326, 328, 331, 332, 337], "long": [2, 3, 13, 14, 16, 17, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 44, 46, 47, 113, 179, 180, 328, 334], "sharabl": 2, "featur": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 33, 45, 53, 73, 77, 86, 91, 92, 93, 95, 96, 97, 106, 118, 122, 126, 140, 141, 145, 150, 162, 163, 173, 174, 175, 176, 177, 179, 180, 181, 183, 190, 191, 225, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 316, 320, 325, 326, 327, 328, 332, 334, 337], "allow": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 29, 32, 33, 73, 77, 91, 97, 130, 159, 183, 234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 257, 259, 262, 320, 322, 325, 327, 328, 331, 332, 334, 337], "popul": [2, 3, 35, 38, 41, 42, 52, 53, 54, 121, 140, 325, 327, 328, 332, 334], "collabor": 2, "rather": [2, 4, 130, 325, 326, 327, 331], "incur": 2, "some": [2, 3, 4, 7, 8, 9, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 44, 45, 46, 47, 52, 53, 56, 57, 65, 67, 73, 77, 91, 92, 93, 97, 99, 128, 144, 146, 152, 165, 177, 181, 202, 225, 226, 227, 291, 303, 320, 322, 325, 326, 327, 328, 331, 332, 334, 336, 337], "transmiss": 2, "overhead": [2, 91, 97], "includ": [2, 3, 4, 7, 9, 21, 32, 56, 57, 58, 64, 67, 73, 77, 87, 91, 97, 139, 144, 150, 249, 254, 303, 320, 322, 325, 326, 327, 328, 331, 332, 334, 337], "ani": [2, 3, 5, 8, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 56, 57, 58, 61, 63, 64, 65, 66, 67, 68, 73, 74, 77, 91, 92, 93, 97, 99, 104, 118, 128, 129, 132, 144, 146, 150, 152, 160, 162, 163, 169, 183, 191, 214, 224, 225, 226, 227, 234, 235, 237, 238, 240, 241, 247, 249, 251, 252, 253, 254, 256, 264, 288, 300, 319, 325, 326, 327, 331, 332, 334, 336, 337], "subclass": [2, 3, 73, 77, 91, 97, 143, 149, 152, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 188, 189, 192, 193, 194, 196, 199, 200, 202, 207, 213, 214, 216, 217, 218, 220, 223, 224, 225, 226, 228, 231, 249, 251, 326, 328, 332, 334], "tensorstorag": [2, 318], "instanti": [2, 3, 21, 34, 36, 39, 81, 143, 189, 325, 326, 331, 332, 334, 337], "content": [2, 8, 13, 14, 16, 26, 28, 35, 38, 41, 42, 63, 88, 162, 163, 183, 188, 189, 221, 249, 327, 332, 336], "map": [2, 3, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 73, 77, 86, 91, 92, 93, 95, 96, 97, 99, 100, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 124, 126, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 150, 156, 172, 192, 209, 210, 211, 212, 215, 221, 222, 224, 225, 227, 228, 229, 230, 254, 262, 296, 318, 320, 321, 325, 326, 327, 328, 333], "tensor": [2, 3, 8, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 59, 61, 65, 66, 67, 68, 70, 73, 74, 77, 83, 86, 87, 90, 91, 92, 93, 95, 96, 97, 98, 99, 104, 106, 107, 110, 111, 113, 114, 115, 116, 118, 121, 124, 126, 128, 129, 130, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 231, 232, 234, 235, 237, 238, 240, 241, 244, 245, 247, 249, 251, 252, 253, 254, 256, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 309, 320, 322, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "writer": [2, 38, 42, 52, 53, 54, 61, 65, 66, 318, 327], "tensordictroundrobinwrit": [2, 318], "current": [2, 3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 73, 77, 79, 88, 91, 97, 106, 129, 139, 140, 141, 143, 144, 153, 154, 159, 173, 182, 200, 220, 242, 254, 286, 322, 325, 326, 327, 328, 331, 332, 336, 337], "goe": [2, 4, 92, 93, 325, 327, 331, 337], "sampler": [2, 35, 38, 41, 42, 52, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 67, 129, 238, 242, 262, 318, 325, 327, 331, 334], "prioritizedsampl": [2, 35, 38, 41, 42, 52, 53, 54, 238, 242, 262, 318, 325, 334], "extend": [2, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 61, 65, 66, 68, 132, 297, 322, 325, 326, 327, 328, 331, 333, 334, 336], "access": [2, 3, 7, 8, 32, 35, 54, 73, 77, 91, 97, 128, 146, 316, 319, 325, 331, 332, 334], "show": [2, 32, 73, 77, 91, 97, 189, 320, 325, 327, 328, 331, 332, 334, 336], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 17, 21, 22, 35, 37, 38, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 59, 65, 67, 73, 74, 77, 85, 87, 91, 92, 93, 95, 96, 97, 100, 101, 103, 104, 106, 109, 115, 116, 121, 122, 124, 126, 128, 130, 132, 135, 136, 138, 139, 140, 141, 143, 148, 150, 156, 159, 160, 161, 172, 175, 176, 177, 179, 180, 181, 183, 185, 188, 189, 192, 197, 198, 206, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 227, 228, 229, 234, 235, 236, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 262, 264, 265, 266, 267, 293, 296, 309, 312, 320, 321, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "tensordictreplaybuff": [2, 35, 38, 41, 52, 53, 54, 65, 106, 297, 312, 318, 325, 326, 328, 334], "mp": [2, 18, 19, 20, 74, 150], "def": [2, 3, 11, 22, 32, 73, 74, 77, 87, 91, 97, 103, 104, 111, 114, 161, 172, 175, 176, 179, 180, 185, 221, 229, 235, 237, 241, 247, 249, 252, 254, 256, 322, 325, 326, 330, 331, 332, 336, 337], "rb": [2, 35, 38, 41, 42, 52, 53, 54, 65, 106, 132, 326, 328, 331, 333, 334, 336], "updat": [2, 3, 4, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 39, 40, 41, 59, 73, 77, 87, 91, 92, 93, 97, 104, 111, 113, 114, 138, 139, 144, 147, 150, 160, 161, 175, 177, 181, 185, 213, 217, 218, 220, 221, 222, 223, 224, 225, 234, 235, 237, 238, 240, 241, 242, 243, 246, 247, 249, 251, 252, 253, 254, 255, 256, 262, 264, 265, 266, 267, 268, 296, 300, 302, 305, 306, 311, 312, 322, 326, 327, 328, 331, 332, 334, 336, 337], "td": [2, 3, 15, 26, 35, 38, 41, 42, 52, 53, 54, 65, 69, 70, 71, 72, 76, 78, 82, 83, 84, 85, 104, 107, 111, 112, 113, 114, 121, 122, 124, 132, 135, 140, 142, 144, 150, 159, 161, 172, 177, 181, 184, 185, 197, 198, 206, 209, 210, 211, 212, 214, 215, 217, 218, 220, 221, 222, 224, 227, 229, 262, 265, 266, 267, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 291, 299, 309, 320, 321, 325, 328, 331, 332, 336, 337], "10": [2, 7, 22, 26, 35, 38, 40, 41, 42, 43, 45, 56, 57, 65, 67, 74, 87, 92, 93, 95, 96, 98, 99, 104, 106, 139, 141, 142, 161, 164, 169, 175, 176, 179, 180, 182, 185, 196, 207, 217, 218, 220, 221, 228, 235, 238, 240, 241, 251, 252, 253, 256, 262, 264, 265, 266, 267, 270, 291, 322, 325, 326, 327, 328, 331, 332, 334, 336, 337], "__name__": [2, 22, 74, 326], "__main__": [2, 22, 74], "21": [2, 92, 93, 326, 327, 330, 332, 333], "zero": [2, 3, 4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 45, 46, 47, 52, 57, 67, 73, 77, 91, 97, 107, 111, 113, 114, 124, 132, 156, 159, 161, 175, 176, 177, 179, 180, 181, 182, 186, 187, 189, 197, 206, 217, 218, 220, 223, 231, 234, 235, 237, 238, 240, 241, 247, 251, 252, 253, 254, 256, 262, 264, 265, 266, 267, 270, 328, 336], "proc": 2, "target": [2, 4, 8, 21, 32, 73, 74, 77, 91, 97, 139, 143, 224, 225, 234, 235, 236, 237, 238, 240, 241, 242, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 262, 263, 264, 265, 266, 267, 268, 303, 311, 312, 321, 322, 328, 332], "arg": [2, 12, 14, 26, 28, 32, 56, 57, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 104, 110, 128, 137, 140, 143, 144, 145, 147, 148, 161, 162, 163, 171, 177, 181, 183, 184, 185, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 256, 262, 264, 265, 266, 267, 268, 290, 293, 297, 300, 316, 326], "start": [2, 3, 4, 5, 13, 21, 45, 74, 86, 159, 295, 325, 326, 331, 332, 334, 337], "join": [2, 74, 318, 326, 327], "now": [2, 3, 7, 35, 106, 189, 325, 326, 327, 328, 330, 331, 333, 334, 337], "length": [2, 17, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 40, 43, 44, 45, 46, 47, 55, 73, 77, 91, 97, 129, 150, 161, 162, 163, 165, 167, 169, 171, 175, 179, 183, 185, 188, 189, 209, 224, 229, 291, 297, 325, 327, 328, 332, 334, 337], "20": [2, 45, 65, 73, 77, 81, 91, 97, 139, 175, 176, 179, 180, 214, 291, 325, 326, 327, 328, 331, 332, 334, 336, 337], "assert": [2, 3, 6, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 77, 80, 103, 106, 109, 111, 114, 122, 130, 150, 152, 156, 189, 192, 207, 264, 265, 266, 267, 291, 299, 330, 334, 337], "len": [2, 35, 38, 41, 42, 52, 53, 54, 56, 57, 67, 126, 162, 163, 183, 189, 325, 332, 333, 334, 336], "_data": [2, 332], "0": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 21, 22, 30, 31, 32, 33, 35, 38, 40, 41, 42, 49, 52, 53, 54, 55, 56, 57, 59, 67, 70, 73, 77, 80, 83, 87, 91, 94, 95, 96, 97, 104, 105, 106, 107, 109, 110, 112, 113, 122, 123, 124, 128, 132, 135, 139, 140, 141, 142, 143, 144, 146, 148, 149, 150, 152, 161, 162, 163, 165, 166, 168, 169, 173, 175, 177, 178, 179, 180, 181, 183, 185, 187, 188, 189, 190, 191, 192, 195, 199, 200, 203, 204, 205, 207, 209, 213, 214, 216, 217, 218, 220, 223, 224, 227, 228, 231, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 258, 262, 263, 264, 265, 266, 267, 270, 271, 272, 291, 298, 312, 316, 321, 322, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337], "too": [2, 7, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 44, 46, 47, 91, 97, 123, 140, 178, 204, 205, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 262, 264, 265, 266, 267, 326, 327, 332, 334, 337], "difficult": [2, 4], "element": [2, 13, 14, 16, 18, 19, 20, 21, 30, 31, 33, 35, 38, 41, 42, 52, 53, 54, 56, 57, 58, 59, 65, 67, 90, 106, 129, 139, 162, 163, 175, 176, 179, 209, 213, 215, 224, 225, 229, 291, 325, 327, 334, 337], "pai": [2, 8, 325, 328], "attent": [2, 8, 325, 328, 337], "alwai": [2, 3, 20, 26, 28, 32, 55, 73, 77, 91, 97, 122, 123, 242, 249, 320, 321, 326, 327, 328, 331, 332, 334], "lead": [2, 3, 4, 8, 10, 11, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 63, 140, 178, 197, 204, 205, 325, 328, 331, 332, 334, 336], "dimens": [2, 3, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 53, 56, 57, 65, 67, 73, 77, 91, 97, 99, 106, 107, 118, 124, 126, 129, 135, 137, 142, 145, 150, 162, 163, 164, 169, 177, 179, 181, 183, 186, 187, 188, 190, 191, 196, 197, 201, 202, 203, 204, 207, 215, 234, 235, 236, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 316, 320, 325, 326, 327, 328, 331, 332, 334], "word": [2, 3, 40, 52, 53, 249, 325, 332, 337], "creat": [2, 3, 4, 5, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 45, 55, 73, 74, 77, 81, 88, 91, 92, 97, 106, 128, 143, 144, 146, 149, 150, 156, 159, 162, 163, 165, 166, 167, 168, 169, 174, 177, 181, 183, 184, 188, 189, 214, 225, 238, 242, 252, 254, 262, 283, 297, 304, 305, 306, 312, 314, 315, 320, 325, 326, 327, 328, 331, 332, 333, 334, 336, 337], "1m": [2, 303, 325, 327, 328, 333], "multidimension": [2, 41, 59, 334], "doe": [2, 3, 18, 35, 41, 45, 52, 59, 64, 169, 175, 176, 177, 179, 180, 181, 190, 207, 214, 226, 227, 234, 236, 242, 248, 251, 263, 300, 320, 322, 325, 326, 327, 328, 332, 334, 337], "desir": [2, 3, 32, 73, 77, 91, 97, 110, 124, 126, 128, 129, 140, 143, 144, 146, 148, 157, 158, 162, 163, 183, 189, 209, 215, 216, 221, 222, 223, 224, 225, 320, 325, 331, 332], "diversifi": 2, "make": [2, 3, 4, 7, 32, 34, 36, 39, 40, 52, 53, 54, 64, 73, 77, 78, 81, 83, 85, 88, 91, 97, 116, 124, 128, 129, 132, 138, 146, 152, 175, 176, 179, 180, 188, 189, 190, 215, 225, 251, 264, 265, 266, 267, 297, 306, 316, 320, 321, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "do": [2, 3, 4, 7, 77, 99, 129, 149, 150, 159, 189, 190, 211, 264, 322, 325, 326, 327, 328, 330, 331, 332, 334, 336, 337], "custom": [2, 3, 5, 32, 73, 77, 91, 97, 146, 188, 189, 228, 242, 251, 257, 316, 320, 325, 326, 327, 328, 331], "name": [2, 3, 6, 7, 11, 16, 32, 34, 36, 39, 45, 52, 54, 55, 71, 73, 77, 86, 88, 91, 92, 93, 94, 97, 99, 100, 113, 116, 130, 135, 136, 138, 144, 146, 149, 160, 177, 181, 215, 222, 234, 235, 236, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 262, 268, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 309, 322, 325, 326, 327, 328, 331, 332, 337], "randomcroptensordict": [2, 325], "here": [2, 3, 4, 7, 8, 9, 10, 73, 77, 81, 91, 92, 93, 97, 106, 320, 321, 325, 326, 327, 328, 331, 332, 334, 336, 337], "how": [2, 3, 18, 19, 20, 32, 35, 41, 59, 73, 77, 91, 92, 93, 97, 99, 234, 236, 246, 248, 251, 300, 319, 320, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "requir": [2, 3, 4, 7, 8, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 52, 53, 73, 77, 81, 88, 91, 94, 97, 110, 128, 140, 143, 144, 146, 148, 183, 207, 224, 226, 227, 234, 235, 236, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 262, 320, 322, 325, 326, 327, 328, 331, 332, 334, 337], "our": [2, 3, 7, 8, 18, 106, 320, 325, 326, 327, 328, 330, 331, 333, 334, 336], "enjoi": [2, 3], "separ": [2, 4, 8, 13, 14, 17, 18, 20, 21, 23, 128, 148, 235, 237, 240, 241, 252, 254, 256, 325, 326, 331, 334, 337], "save": [2, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 73, 77, 91, 97, 149, 282, 300, 322, 331], "disk": [2, 35, 38, 41, 42, 52, 53, 54, 300, 322, 325, 326, 328, 334], "dump": [2, 35, 38, 41, 42, 52, 53, 54, 282], "load": [2, 6, 7, 13, 14, 16, 17, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 54, 72, 73, 77, 91, 97, 103, 150, 316, 322, 325, 334], "json": 2, "metadata": [2, 52, 327, 331, 337], "cannot": [2, 3, 4, 7, 22, 26, 27, 28, 31, 33, 73, 77, 81, 91, 97, 111, 114, 129, 135, 222, 326, 327, 328, 331, 332], "anticip": [2, 111, 114], "compli": [2, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "structur": [2, 3, 7, 35, 38, 40, 41, 42, 45, 65, 73, 77, 91, 97, 111, 114, 160, 188, 220, 264, 265, 266, 267, 268, 321, 325, 327, 328, 331, 332, 333, 334], "guarante": [2, 32, 56, 57, 58, 64, 67, 73, 77, 91, 97, 150, 336], "back": [2, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 44, 46, 47, 52, 149, 209, 215, 216, 221, 222, 223, 224, 225, 327, 331, 332, 334], "exact": [2, 3, 91, 179], "look": [2, 3, 5, 7, 8, 32, 73, 77, 86, 91, 92, 93, 97, 128, 129, 146, 221, 225, 226, 227, 321, 327, 328, 331, 332, 333, 334, 336, 337], "statu": [2, 3], "its": [2, 3, 4, 5, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 44, 46, 47, 49, 73, 77, 87, 91, 92, 93, 97, 100, 106, 115, 122, 138, 139, 143, 144, 149, 150, 162, 163, 186, 187, 188, 189, 213, 215, 221, 222, 225, 228, 234, 235, 236, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 256, 262, 300, 312, 322, 325, 326, 327, 328, 331, 332, 333, 334, 337], "prioriti": [2, 4, 35, 41, 42, 56, 57, 58, 59, 64, 67, 235, 237, 238, 240, 241, 242, 247, 252, 254, 256, 262, 322, 325, 326, 334], "max": [2, 23, 33, 36, 41, 45, 55, 59, 113, 141, 203, 204, 205, 214, 220, 235, 236, 241, 250, 252, 254, 325, 327, 328, 331], "heap": 2, "under": [2, 3, 4, 21, 32, 40, 52, 53, 73, 77, 91, 97, 209, 215, 216, 221, 222, 223, 224, 225, 249, 264, 265, 266, 267, 268, 321, 325, 326, 332, 337], "hood": [2, 21, 332], "just": [2, 3, 4, 11, 73, 77, 86, 91, 92, 93, 97, 109, 160, 189, 291, 320, 322, 325, 326, 327, 328, 331, 332, 334, 336, 337], "public": [2, 54, 128, 148], "method": [2, 3, 4, 11, 13, 14, 15, 16, 17, 21, 32, 35, 37, 38, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 59, 64, 67, 73, 77, 91, 97, 106, 110, 111, 112, 115, 116, 118, 122, 124, 128, 130, 131, 132, 136, 138, 140, 143, 144, 146, 148, 161, 182, 209, 210, 211, 212, 214, 215, 216, 217, 219, 221, 222, 223, 224, 225, 226, 234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 262, 268, 282, 313, 321, 322, 323, 326, 327, 328, 332, 334, 337], "don": [2, 3, 4, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 106, 326, 327, 334, 336, 337], "t": [2, 3, 4, 6, 7, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 44, 46, 47, 59, 63, 65, 73, 74, 77, 88, 91, 97, 106, 111, 114, 115, 128, 132, 139, 141, 148, 150, 159, 175, 179, 215, 220, 224, 255, 264, 265, 266, 267, 268, 270, 300, 302, 316, 319, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "assum": [2, 3, 6, 26, 33, 40, 41, 42, 52, 53, 77, 91, 97, 108, 118, 128, 129, 135, 140, 146, 148, 156, 177, 181, 182, 207, 228, 238, 242, 254, 262, 273, 274, 275, 276, 278, 279, 280, 281, 283, 325, 327, 328, 330, 332], "serializ": 2, "altern": [2, 4, 27, 88, 169, 186, 187, 188, 233, 325, 327, 331], "state_dict": [2, 13, 14, 16, 17, 21, 32, 34, 36, 39, 73, 77, 91, 97, 144, 150, 254, 316, 322, 325, 326, 337], "load_state_dict": [2, 13, 14, 16, 17, 21, 32, 34, 36, 39, 73, 77, 91, 97, 144, 150, 254, 322, 325], "drawback": 2, "struggl": 2, "big": [2, 327, 334, 337], "wrapper": [2, 3, 11, 15, 17, 34, 36, 39, 40, 41, 42, 69, 70, 71, 72, 76, 78, 79, 81, 82, 83, 84, 85, 87, 89, 92, 93, 94, 95, 96, 98, 99, 101, 149, 192, 207, 213, 214, 218, 220, 225, 230, 264, 288, 289, 290, 316, 318, 327, 328, 331, 333, 337], "around": [2, 5, 7, 15, 17, 41, 42, 87, 225, 264, 325, 326, 331, 337], "offlin": [2, 8, 13, 14, 16, 17, 18, 19, 20, 21, 106, 152, 235, 240, 247, 322, 333, 334, 336], "present": [2, 3, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 59, 63, 73, 77, 91, 97, 116, 132, 136, 159, 160, 164, 165, 166, 167, 168, 174, 179, 191, 196, 220, 224, 225, 226, 227, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 256, 262, 264, 265, 266, 267, 268, 316, 322, 325, 330, 331, 334, 336], "replaybuff": [2, 41, 42, 68, 106, 129, 132, 238, 242, 262, 310, 312, 318, 327, 331, 333, 334, 336], "promptli": 2, "virtual": [2, 3], "instal": [2, 3, 5, 10, 18, 19, 20, 52, 54, 92, 93, 95, 96, 300, 319, 327, 328, 331, 337], "respons": [2, 3, 8, 300, 337], "d4rl": [2, 52, 53], "clone": [2, 4, 8, 26, 28, 122, 210, 211, 212, 224, 247, 309, 318, 325, 332, 336], "repositori": [2, 7, 53, 54], "latest": [2, 3, 10, 88, 92, 93, 297, 327, 331, 332, 336], "wheel": [2, 327], "publish": 2, "pypi": [2, 336], "openml": [2, 54, 90], "scikit": [2, 54], "panda": [2, 54], "parent": [2, 3, 21, 26, 28, 44, 73, 106, 107, 110, 112, 115, 118, 119, 124, 128, 135, 138, 139, 140, 141, 143, 145, 146, 210, 249, 251, 268, 325, 332, 336, 337], "basic": [2, 87, 320, 327, 337], "properti": [2, 3, 32, 34, 36, 39, 73, 77, 87, 91, 97, 143, 144, 170, 178, 190, 195, 203, 204, 205, 249, 254, 332, 334], "observ": [2, 3, 8, 13, 14, 16, 17, 21, 32, 44, 52, 53, 70, 71, 72, 73, 74, 77, 83, 86, 87, 90, 91, 92, 93, 95, 96, 97, 98, 99, 106, 107, 108, 109, 110, 111, 112, 115, 116, 118, 120, 121, 122, 124, 125, 126, 130, 131, 132, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 159, 164, 165, 166, 167, 168, 169, 172, 177, 181, 182, 188, 193, 194, 196, 198, 199, 209, 210, 211, 212, 214, 215, 217, 218, 220, 221, 222, 229, 230, 234, 235, 236, 237, 238, 240, 241, 244, 247, 248, 251, 252, 253, 254, 256, 262, 264, 265, 266, 267, 268, 283, 309, 312, 320, 322, 326, 327, 328, 330, 331, 332, 334, 336, 337], "shape": [2, 3, 13, 14, 16, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 53, 55, 56, 57, 67, 73, 77, 86, 90, 91, 92, 93, 95, 96, 97, 98, 99, 107, 111, 114, 115, 116, 122, 124, 126, 130, 132, 136, 138, 140, 142, 150, 151, 152, 156, 159, 161, 164, 169, 170, 171, 175, 176, 177, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 192, 195, 196, 197, 198, 203, 206, 209, 210, 211, 212, 214, 215, 216, 221, 222, 223, 224, 227, 228, 229, 234, 235, 237, 238, 240, 241, 247, 251, 252, 253, 254, 256, 259, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 291, 297, 300, 312, 320, 325, 326, 327, 328, 330, 331, 333, 334, 336, 337], "dtype": [2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 53, 55, 56, 57, 59, 67, 70, 73, 77, 83, 86, 87, 90, 91, 92, 93, 95, 96, 97, 98, 99, 104, 110, 111, 112, 113, 114, 115, 116, 122, 124, 126, 128, 130, 132, 136, 138, 140, 142, 143, 144, 146, 148, 152, 156, 159, 160, 161, 172, 175, 176, 177, 179, 180, 181, 185, 190, 191, 197, 198, 206, 209, 210, 211, 212, 214, 215, 216, 220, 221, 222, 223, 224, 227, 229, 234, 235, 237, 238, 240, 241, 247, 251, 252, 253, 254, 256, 262, 264, 265, 266, 267, 270, 309, 320, 327, 328, 330, 331, 332, 333, 334, 336, 337], "match": [2, 3, 6, 8, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 73, 74, 77, 91, 97, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 120, 121, 122, 124, 126, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 162, 163, 170, 177, 181, 183, 188, 189, 203, 209, 214, 215, 221, 222, 224, 225, 228, 229, 235, 241, 248, 250, 252, 254, 297, 302, 320, 325, 327, 330, 331, 332, 334, 336, 337], "input": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 46, 47, 73, 77, 87, 90, 91, 92, 93, 94, 97, 99, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 126, 127, 128, 129, 130, 132, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 159, 160, 162, 163, 165, 166, 167, 168, 171, 172, 175, 176, 177, 179, 180, 181, 182, 183, 188, 189, 190, 191, 198, 199, 200, 201, 202, 207, 209, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 235, 236, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 294, 298, 303, 312, 320, 321, 322, 325, 326, 327, 328, 331, 332, 336, 337], "output": [2, 3, 4, 13, 14, 16, 17, 32, 35, 38, 41, 42, 52, 53, 54, 73, 77, 87, 90, 91, 92, 93, 94, 97, 99, 106, 109, 110, 111, 112, 114, 116, 122, 124, 128, 130, 135, 136, 138, 141, 143, 146, 148, 149, 152, 160, 162, 163, 164, 165, 166, 169, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 188, 189, 192, 198, 207, 209, 210, 213, 214, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 234, 235, 236, 237, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 262, 264, 265, 266, 267, 268, 283, 291, 320, 321, 325, 326, 327, 328, 330, 331, 332, 333, 336, 337], "send": [2, 3, 8, 336], "receiv": [2, 3, 32, 40, 73, 77, 91, 97, 143, 183, 270, 321, 325, 327, 330, 332], "spawn": [2, 3, 4, 18, 22, 81, 88, 331], "check_env_spec": [2, 3, 318, 327, 331, 332], "saniti": [2, 3, 7, 152, 327], "utmost": 2, "techniqu": [2, 8, 326, 334], "commonli": [2, 337], "emploi": [2, 191], "realm": 2, "languag": [2, 40], "scarc": 2, "address": [2, 334], "subdomain": 2, "within": [2, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 46, 47, 73, 77, 91, 97, 106, 111, 114, 115, 138, 149, 150, 160, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 188, 189, 192, 193, 194, 196, 199, 200, 202, 207, 213, 214, 216, 217, 218, 220, 223, 228, 231, 238, 242, 262, 320, 332, 336], "offer": [2, 3, 7, 320, 326, 332, 337], "facilit": [2, 3, 7, 127, 128, 146, 148, 210, 211, 212, 320, 325, 328, 332], "interact": [2, 4, 5, 7, 8, 13, 14, 16, 18, 19, 20, 21, 221, 225, 325, 327, 331, 332, 337], "extern": [2, 3, 111, 114, 337], "consist": [2, 3, 32, 35, 38, 41, 42, 73, 77, 91, 97, 122, 149, 163, 183, 325, 326, 327, 332, 333, 337], "token": [2, 36, 37, 40, 43, 45, 55], "format": [2, 17, 31, 32, 33, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224, 325, 326, 337], "manner": [2, 77, 128, 146, 320, 325, 326, 327, 330, 332, 334], "handl": [3, 21, 32, 73, 77, 91, 97, 149, 150, 181, 183, 300, 314, 315, 325, 326, 327, 331, 334], "differ": [3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 73, 77, 86, 91, 92, 93, 97, 106, 113, 124, 130, 144, 145, 172, 175, 176, 177, 179, 180, 181, 183, 185, 188, 189, 198, 247, 251, 259, 264, 265, 266, 270, 271, 272, 296, 300, 302, 314, 315, 320, 321, 322, 325, 326, 327, 330, 331, 332, 333, 334, 337], "dm": [3, 325, 337], "base": [3, 4, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 35, 38, 41, 42, 45, 62, 65, 66, 68, 81, 87, 88, 89, 91, 97, 132, 140, 146, 147, 188, 210, 219, 234, 235, 237, 238, 240, 241, 243, 247, 251, 252, 253, 254, 256, 300, 309, 320, 321, 322, 325, 326, 328, 331, 332, 334, 337], "goal": [3, 4, 139, 325, 326, 327, 328, 331, 332], "abl": [3, 86, 92, 93, 325, 327, 328, 330, 331, 332, 334, 336], "experi": [3, 35, 38, 41, 42, 52, 53, 54, 59, 152, 285, 286, 287, 288, 289, 290, 319, 326, 327, 331, 334], "even": [3, 4, 8, 14, 18, 20, 21, 56, 57, 58, 64, 67, 73, 74, 77, 81, 91, 97, 160, 325, 327, 331, 332, 337], "simul": [3, 5, 7, 8, 94, 99, 102, 161, 185, 320, 325, 327, 331], "box": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 16, 17, 21, 22, 73, 74, 77, 91, 92, 93, 95, 96, 97, 106, 109, 115, 121, 122, 124, 126, 130, 132, 135, 140, 143, 149, 150, 309, 312, 325, 326, 327, 328, 330, 331, 333, 334, 336, 337], "hope": 3, "imit": 3, "nn": [3, 13, 14, 16, 17, 21, 32, 40, 73, 77, 87, 91, 97, 110, 113, 115, 122, 128, 140, 143, 144, 146, 148, 161, 162, 163, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 185, 187, 188, 189, 192, 197, 198, 206, 209, 210, 211, 212, 214, 215, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 262, 264, 265, 266, 267, 309, 312, 320, 321, 325, 326, 327, 328, 330, 331, 332, 333, 336], "typic": [3, 4, 8, 32, 73, 77, 91, 97, 115, 139, 221, 235, 249, 251, 254, 320, 321, 322, 327, 331, 332], "organis": [3, 326], "arbitrari": [3, 33, 91, 97, 320, 325, 326, 332], "nest": [3, 26, 28, 32, 34, 36, 39, 48, 56, 57, 67, 73, 77, 91, 97, 106, 138, 141, 160, 264, 265, 266, 267, 268, 322, 326, 327, 331, 332, 334, 336], "attribut": [3, 4, 32, 45, 73, 77, 91, 97, 115, 128, 146, 177, 181, 225, 234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 262, 325, 328, 332], "batch_siz": [3, 8, 13, 14, 15, 16, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 57, 60, 65, 67, 70, 73, 75, 77, 80, 83, 86, 87, 90, 91, 92, 93, 95, 96, 97, 98, 99, 106, 111, 114, 115, 116, 126, 130, 132, 136, 138, 140, 143, 159, 160, 161, 169, 172, 177, 181, 185, 197, 198, 206, 207, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 227, 228, 229, 234, 235, 237, 238, 240, 241, 247, 251, 252, 253, 254, 256, 262, 291, 297, 309, 320, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "togeth": [3, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 40, 73, 77, 86, 91, 92, 93, 97, 106, 129, 175, 177, 179, 181, 206, 210, 211, 212, 230, 320, 326, 327, 328], "expect": [3, 4, 7, 26, 32, 38, 44, 45, 63, 73, 77, 87, 90, 91, 94, 97, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 118, 120, 121, 122, 124, 126, 128, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 152, 175, 176, 177, 179, 180, 181, 188, 189, 216, 220, 224, 227, 234, 235, 236, 237, 238, 240, 241, 247, 248, 249, 251, 252, 253, 254, 256, 262, 304, 319, 320, 321, 322, 325, 327, 328, 331, 332, 334, 337], "live": [3, 12, 13, 14, 16, 17, 19, 20, 32, 35, 38, 41, 42, 52, 53, 54, 73, 77, 87, 91, 97, 115], "actual": [3, 4, 7, 17, 52, 53, 73, 77, 91, 97, 149, 303, 321, 325, 327, 331, 332], "retriev": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 73, 77, 91, 97, 107, 112, 115, 124, 159, 161, 162, 185, 221, 225, 228, 234, 235, 236, 238, 248, 251, 252, 254, 256, 262, 264, 265, 266, 267, 309, 316, 322, 326, 327, 332, 337], "care": [3, 8, 73, 77, 91, 97, 143, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 188, 189, 192, 193, 194, 196, 199, 200, 202, 207, 213, 214, 216, 217, 218, 220, 223, 228, 231, 325, 327, 331, 332, 334], "below": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 55, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 162, 163, 175, 178, 179, 183, 189, 205, 224, 297, 325, 326, 327, 328, 332], "parametr": [3, 191, 225, 235, 247, 254, 325, 327], "hardwar": 3, "observation_spec": [3, 73, 77, 87, 91, 97, 104, 106, 107, 108, 109, 110, 111, 112, 114, 115, 118, 120, 121, 122, 124, 126, 128, 131, 135, 138, 139, 140, 141, 142, 143, 145, 146, 149, 161, 177, 181, 185, 304, 312, 325, 327, 330, 331, 332, 337], "compositespec": [3, 28, 49, 73, 75, 77, 87, 91, 97, 104, 111, 112, 113, 114, 116, 122, 130, 136, 138, 140, 143, 156, 160, 161, 185, 209, 213, 221, 227, 228, 318, 325, 327, 328, 331, 332, 337], "pair": [3, 32, 34, 36, 39, 52, 73, 77, 91, 97, 132, 140, 177, 210, 221, 225, 249, 264, 265, 266, 267, 268, 320, 321, 325, 326, 327, 330, 332, 337], "state_spec": [3, 73, 77, 87, 91, 97, 104, 161, 185, 327, 332, 337], "empti": [3, 26, 28, 35, 38, 41, 42, 52, 53, 54, 73, 77, 90, 91, 97, 128, 141, 144, 146, 148, 287, 325, 332], "action_spec": [3, 13, 14, 15, 16, 18, 19, 20, 70, 73, 77, 83, 87, 91, 92, 93, 97, 104, 106, 111, 114, 122, 132, 161, 172, 185, 198, 200, 209, 215, 221, 222, 235, 238, 240, 252, 254, 256, 312, 320, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "reward_spec": [3, 73, 77, 87, 91, 97, 104, 105, 109, 110, 111, 112, 114, 133, 134, 135, 143, 145, 161, 185, 327, 331, 332, 337], "reward": [3, 13, 14, 16, 32, 34, 39, 40, 44, 45, 53, 55, 65, 70, 73, 77, 83, 87, 90, 91, 95, 96, 97, 98, 99, 104, 105, 109, 110, 111, 112, 114, 115, 116, 122, 126, 130, 132, 133, 134, 135, 136, 138, 139, 143, 144, 145, 147, 148, 150, 156, 159, 161, 177, 185, 214, 230, 234, 235, 237, 238, 240, 241, 244, 247, 249, 251, 252, 253, 254, 256, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 293, 294, 296, 298, 316, 321, 322, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "done_spec": [3, 73, 77, 91, 97, 111, 112, 114, 115, 143, 160, 327, 331, 332, 337], "flag": [3, 8, 35, 38, 41, 42, 52, 53, 54, 99, 220, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 320, 331, 332, 333], "section": [3, 4, 175, 179, 326, 331], "termin": [3, 7, 32, 40, 52, 53, 73, 77, 91, 92, 93, 95, 96, 97, 98, 99, 115, 160, 161, 177, 181, 185, 226, 234, 235, 237, 238, 240, 241, 247, 251, 252, 253, 254, 256, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "input_spec": [3, 73, 77, 87, 91, 97, 110, 111, 112, 113, 124, 126, 130, 135, 136, 138, 139, 140, 143, 144, 145, 147, 332], "full_action_spec": [3, 73, 77, 91, 97, 161, 185, 331], "full_state_spec": [3, 73, 77, 91, 97, 161, 185], "lock": [3, 26, 28, 73, 77, 91, 97, 140, 150, 332], "modifi": [3, 7, 8, 26, 28, 32, 45, 73, 77, 91, 97, 110, 118, 122, 128, 140, 143, 144, 146, 148, 214, 220, 224, 303, 309, 325, 326, 327, 331, 332], "directli": [3, 4, 8, 73, 77, 87, 91, 97, 132, 149, 249, 316, 320, 327, 331, 332, 334], "output_spec": [3, 73, 77, 91, 97, 110, 111, 112, 116, 122, 130, 136, 138, 143, 144, 332], "full_observation_spec": [3, 73, 77, 91, 97, 161, 185], "full_reward_spec": [3, 73, 77, 91, 97, 331], "full_done_spec": [3, 73, 77, 91, 97, 160, 331], "importantli": [3, 221, 225], "4": [3, 7, 24, 26, 27, 28, 33, 34, 35, 36, 38, 39, 40, 41, 42, 52, 53, 54, 71, 72, 73, 76, 77, 82, 84, 85, 86, 87, 91, 95, 96, 97, 104, 106, 115, 132, 138, 139, 150, 161, 162, 163, 164, 165, 166, 169, 172, 173, 174, 175, 176, 179, 180, 182, 183, 185, 188, 189, 192, 193, 194, 195, 196, 197, 198, 206, 209, 210, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 227, 229, 234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 262, 282, 320, 324, 325, 326, 327, 328, 331, 332, 333, 334, 335, 336, 337], "action_s": 3, "help": [3, 4, 32, 73, 77, 91, 97, 115, 319, 321, 325, 326, 327, 328, 331], "prealloc": [3, 332], "With": [3, 86, 139, 322, 325, 326, 331, 334, 337], "necessarili": [3, 337], "0s": [3, 140, 328], "stateless": [3, 143, 249, 325, 332, 337], "step_and_maybe_reset": [3, 73, 77, 91, 97], "partial": [3, 73, 77, 91, 97, 106, 139, 140, 141, 300, 328], "next": [3, 4, 8, 13, 14, 16, 26, 28, 32, 35, 38, 40, 41, 42, 52, 53, 54, 55, 65, 70, 73, 74, 77, 83, 87, 91, 95, 96, 97, 98, 99, 106, 111, 114, 115, 116, 121, 122, 126, 130, 132, 135, 136, 138, 140, 149, 150, 156, 159, 161, 176, 177, 180, 181, 185, 200, 230, 234, 235, 237, 238, 240, 241, 242, 247, 251, 252, 253, 254, 256, 262, 263, 264, 265, 266, 267, 268, 294, 296, 298, 325, 326, 328, 330, 332, 333, 334, 336, 337], "step_mdp": [3, 177, 181, 318, 328, 332, 336, 337], "done_kei": [3, 73, 77, 91, 97, 115, 132, 138, 159, 331], "assign": [3, 4, 13, 14, 32, 34, 36, 39, 73, 77, 91, 97, 144, 237, 238, 240, 254, 327, 331, 334], "_reset": [3, 73, 77, 87, 91, 97, 104, 106, 111, 114, 160, 161, 185], "signal": [3, 17, 52, 53, 77, 106, 115, 138, 141, 160, 321, 325, 327, 331, 334, 337], "stop": [3, 16, 21, 40, 73, 77, 91, 97, 327, 331, 336, 337], "data_": [3, 73, 77, 91, 97], "i": [3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 35, 38, 42, 43, 56, 57, 59, 67, 73, 77, 91, 97, 128, 132, 135, 144, 148, 176, 180, 192, 198, 216, 221, 223, 224, 225, 264, 265, 266, 267, 291, 303, 325, 326, 327, 328, 331, 332, 334, 336, 337], "rang": [3, 4, 8, 11, 27, 35, 38, 40, 41, 42, 52, 53, 54, 56, 57, 65, 73, 74, 77, 91, 97, 132, 142, 150, 176, 180, 248, 256, 321, 322, 325, 327, 328, 331, 332, 334, 336], "n": [3, 6, 7, 24, 27, 32, 33, 40, 73, 77, 91, 97, 106, 113, 118, 145, 175, 176, 179, 185, 220, 225, 234, 241, 249, 263, 297, 320, 322, 326, 327, 328, 331, 334, 337], "append": [3, 8, 35, 38, 41, 42, 52, 53, 54, 73, 74, 77, 91, 97, 109, 132, 140, 149, 176, 177, 180, 181, 215, 222, 325, 326, 327, 328, 331, 332, 333, 334, 336], "set_se": [3, 13, 14, 16, 17, 21, 70, 73, 77, 83, 87, 91, 97, 124, 130, 135, 139, 141, 144, 332, 336, 337], "seed": [3, 13, 14, 16, 17, 21, 71, 73, 77, 87, 91, 92, 93, 97, 98, 99, 104, 111, 114, 144, 152, 300], "determinist": [3, 32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 164, 173, 193, 200, 209, 218, 224, 225, 228, 235, 320, 325, 326, 328, 332, 337], "preced": [3, 182, 328], "without": [3, 7, 9, 32, 40, 52, 73, 77, 91, 97, 99, 104, 111, 114, 142, 175, 176, 179, 180, 211, 212, 234, 235, 237, 238, 240, 241, 247, 251, 252, 253, 254, 256, 263, 264, 265, 266, 267, 268, 312, 319, 320, 325, 326, 327, 331, 332, 334, 337], "risk": [3, 129], "overlap": [3, 41], "consecut": [3, 63, 81, 181, 220, 328, 331, 337], "reproduc": [3, 106, 152, 325, 327, 331], "maximum": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 40, 43, 45, 55, 56, 57, 58, 67, 73, 77, 91, 97, 113, 133, 138, 139, 141, 203, 204, 205, 228, 235, 241, 247, 249, 250, 254, 297, 325, 326, 327, 328, 331, 334], "max_step": [3, 13, 73, 77, 87, 91, 97, 98, 99, 138, 331, 336, 337], "tensordictmodul": [3, 13, 14, 16, 17, 20, 21, 40, 87, 122, 172, 177, 181, 185, 197, 198, 206, 207, 210, 211, 212, 213, 214, 215, 218, 220, 221, 222, 223, 224, 226, 227, 228, 230, 235, 237, 241, 243, 244, 245, 247, 249, 252, 254, 256, 262, 263, 264, 265, 266, 267, 296, 312, 320, 325, 327, 328, 330, 331, 332, 333], "compat": [3, 7, 11, 18, 19, 32, 34, 36, 39, 52, 64, 73, 77, 79, 90, 91, 97, 106, 138, 146, 150, 175, 176, 177, 179, 180, 181, 222, 234, 235, 237, 238, 240, 241, 247, 249, 251, 252, 253, 254, 256, 259, 325, 328, 334, 336], "mark": [3, 16, 73, 77, 91, 97, 177, 181], "trail": [3, 150], "time": [3, 4, 7, 8, 13, 14, 16, 17, 18, 20, 21, 32, 35, 38, 40, 41, 42, 65, 73, 74, 77, 86, 90, 91, 92, 93, 97, 103, 107, 129, 135, 140, 141, 150, 159, 173, 175, 179, 181, 182, 220, 236, 241, 244, 248, 249, 251, 252, 256, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 300, 320, 321, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "treat": 3, "figur": [3, 325, 327, 328, 331, 332, 337], "summar": [3, 332], "brief": [3, 327], "entri": [3, 13, 14, 18, 19, 20, 21, 23, 26, 28, 32, 34, 36, 37, 39, 45, 49, 52, 54, 73, 77, 91, 97, 106, 108, 109, 111, 114, 115, 118, 121, 124, 126, 128, 130, 132, 135, 138, 139, 140, 148, 150, 159, 160, 177, 186, 187, 214, 215, 222, 223, 235, 254, 264, 265, 266, 267, 320, 325, 327, 328, 331, 332, 333, 334, 337], "deliveri": 3, "design": [3, 13, 14, 32, 33, 73, 77, 91, 97, 106, 129, 144, 214, 234, 235, 236, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 262, 325, 326, 327, 328, 330, 331, 332, 334, 337], "metaclass": 3, "ensur": [3, 32, 35, 41, 59, 63, 73, 77, 91, 97, 106, 128, 138, 146, 150, 215, 320, 326, 327, 332, 334], "everi": [3, 8, 17, 26, 28, 32, 33, 64, 73, 77, 91, 97, 138, 139, 150, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 188, 189, 192, 193, 194, 196, 199, 200, 202, 207, 213, 214, 216, 217, 218, 220, 223, 228, 231, 300, 322, 325, 326, 327, 328, 331, 332], "flank": [3, 328], "dual": 3, "strictli": [3, 8, 32, 73, 77, 91, 97, 144, 254, 325, 327], "refer": [3, 7, 8, 9, 21, 32, 40, 73, 77, 91, 97, 144, 150, 161, 172, 173, 185, 186, 187, 188, 193, 194, 199, 200, 216, 234, 242, 243, 244, 245, 251, 254, 264, 269, 277, 324, 325, 327, 331], "union": [3, 11, 13, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 59, 73, 77, 91, 97, 104, 113, 115, 121, 124, 128, 129, 132, 134, 146, 148, 150, 159, 162, 163, 165, 166, 167, 168, 170, 172, 174, 182, 183, 186, 187, 188, 189, 190, 191, 195, 197, 198, 203, 204, 205, 206, 224, 240, 241, 246, 252, 255, 277, 283, 294, 296, 297, 305, 306, 309, 310, 312, 313, 314, 315, 316], "interpret": [3, 326], "last": [3, 4, 11, 13, 14, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 46, 47, 52, 63, 73, 77, 91, 97, 118, 124, 129, 139, 141, 162, 163, 175, 177, 179, 181, 182, 183, 186, 187, 193, 201, 207, 213, 214, 217, 218, 225, 326, 327, 328, 331, 332, 333, 334, 336, 337], "indic": [3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 61, 63, 65, 66, 68, 73, 77, 91, 97, 106, 107, 138, 139, 140, 141, 144, 160, 162, 163, 183, 186, 187, 189, 220, 222, 223, 231, 234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 262, 304, 316, 319, 322, 327, 328, 332, 334, 337], "truncat": [3, 13, 14, 16, 18, 19, 20, 21, 37, 43, 45, 52, 53, 73, 77, 91, 92, 93, 97, 115, 116, 123, 132, 138, 160, 177, 181, 205, 270, 325, 327, 328, 330, 333, 334, 336, 337], "carri": [3, 21, 45, 73, 77, 91, 97, 140, 249, 326, 328, 331, 332, 334], "assess": [3, 100, 325], "split_trajectori": [3, 13, 14, 16, 17, 18, 19, 20, 21, 318], "slice": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 52], "adjac": [3, 23, 118], "reli": [3, 175, 176, 179, 180, 234, 321, 325, 327, 332, 337], "traj_id": [3, 13, 14, 16, 23, 132, 328, 334, 336], "junction": 3, "miss": [3, 4, 6, 7, 11, 26, 32, 73, 77, 91, 97, 144, 159, 226, 227, 254, 319, 325, 328], "context": [3, 5, 8, 32, 73, 74, 77, 90, 91, 97, 140, 145, 189, 190, 214, 260, 261, 264, 265, 266, 267, 269, 277, 296, 320, 321, 325, 326, 327, 331, 332, 333, 334], "through": [3, 4, 5, 8, 11, 16, 18, 20, 21, 26, 28, 81, 86, 91, 92, 93, 97, 111, 114, 129, 183, 197, 221, 225, 226, 227, 231, 264, 265, 266, 267, 320, 325, 326, 327, 330, 331, 332, 333, 334, 337], "inittrack": [3, 177, 181, 325, 328], "tutori": [3, 324, 325, 326, 328, 329, 330, 332, 333, 334, 335, 337], "inform": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 73, 74, 77, 80, 91, 97, 162, 163, 183, 189, 321, 322, 325, 326, 327, 328, 331, 332, 334], "scratch": [3, 8, 326, 332], "better": [3, 8, 9, 177, 181, 321, 327, 332], "intens": [3, 8], "gym3": 3, "envpool": [3, 88, 89], "interfac": [3, 80, 90, 183, 190, 320, 325, 327, 332, 334], "simultan": [3, 20, 91, 97, 332], "often": [3, 8, 246, 300, 325, 326, 332, 334, 337], "competit": [3, 331], "advantag": [3, 8, 174, 234, 236, 248, 251, 253, 264, 265, 266, 267, 268, 269, 271, 273, 275, 277, 278, 280, 321, 322, 325, 326, 327, 328, 331, 332, 337], "scale": [3, 4, 52, 106, 122, 124, 134, 139, 142, 173, 178, 192, 199, 200, 204, 205, 210, 211, 212, 221, 225, 227, 234, 235, 247, 251, 252, 253, 254, 298, 304, 309, 316, 320, 325, 326, 327, 328, 331, 336], "varieti": 3, "own": [3, 13, 14, 17, 22, 32, 73, 77, 91, 92, 93, 97, 326, 327, 331, 332], "As": [3, 4, 73, 77, 86, 91, 92, 93, 97, 132, 225, 264, 320, 325, 326, 327, 328, 331, 332, 333, 334, 336, 337], "inherit": [3, 184, 249, 322, 327, 331], "serialenv": [3, 73, 77, 91, 140, 318, 337], "Of": [3, 7, 319, 332, 337], "cours": [3, 4, 319, 327, 332, 337], "correspond": [3, 4, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 41, 44, 46, 47, 59, 73, 77, 87, 88, 91, 97, 128, 140, 144, 148, 150, 177, 179, 181, 186, 187, 217, 218, 220, 221, 225, 238, 241, 254, 262, 264, 265, 266, 267, 268, 325, 326, 327, 331, 332, 333], "count": [3, 74, 138, 220, 296, 300, 303, 325, 326, 327, 328, 334, 337], "make_env": [3, 99, 150, 305, 306, 325, 326, 337], "gymenv": [3, 5, 13, 14, 16, 17, 21, 22, 73, 74, 77, 79, 91, 97, 106, 109, 110, 115, 121, 122, 124, 126, 130, 132, 135, 139, 140, 141, 143, 144, 150, 177, 181, 309, 312, 318, 320, 325, 326, 327, 328, 333, 334, 336, 337], "v1": [3, 13, 14, 16, 17, 21, 22, 52, 53, 73, 74, 77, 88, 91, 97, 106, 109, 116, 121, 122, 124, 130, 132, 135, 138, 139, 140, 141, 143, 177, 181, 259, 273, 274, 275, 276, 278, 279, 280, 281, 320, 326, 328, 332, 334, 336, 337], "from_pixel": [3, 71, 72, 106, 309, 325, 326, 328, 333, 334, 336, 337], "9": [3, 7, 32, 35, 38, 41, 65, 86, 92, 93, 139, 150, 234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 257, 262, 321, 324, 325, 326, 327, 331, 332, 333, 334, 335], "81": [3, 325, 326, 332], "must": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 55, 56, 57, 58, 64, 67, 73, 74, 77, 91, 92, 93, 97, 106, 109, 115, 119, 122, 124, 126, 136, 139, 140, 141, 144, 145, 150, 162, 163, 172, 177, 181, 183, 186, 187, 188, 189, 198, 209, 215, 216, 221, 222, 223, 224, 225, 228, 229, 234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 255, 256, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 309, 325, 326, 327, 328, 330, 332, 334, 336], "print": [3, 6, 7, 13, 14, 16, 21, 22, 24, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 53, 55, 65, 69, 70, 71, 72, 73, 74, 76, 77, 78, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 95, 96, 97, 98, 99, 101, 103, 106, 107, 111, 112, 113, 114, 121, 124, 130, 132, 135, 138, 140, 141, 142, 150, 156, 159, 160, 162, 163, 169, 172, 177, 183, 186, 187, 188, 189, 192, 195, 198, 209, 210, 211, 212, 214, 215, 217, 218, 220, 222, 224, 227, 229, 249, 309, 312, 320, 322, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "simpli": [3, 6, 34, 36, 39, 45, 116, 136, 149, 249, 320, 321, 325, 327, 331, 337], "b": [3, 7, 8, 23, 26, 28, 34, 36, 39, 40, 41, 42, 65, 175, 176, 179, 180, 188, 189, 190, 191, 197, 206, 228, 264, 265, 266, 267, 268, 270, 283, 320, 326, 333, 334], "c": [3, 6, 7, 26, 34, 36, 39, 41, 42, 54, 124, 142, 179, 180, 326, 334], "d": [3, 35, 54, 55, 59, 175, 179, 221, 225, 336], "get": [3, 4, 6, 7, 8, 9, 34, 35, 36, 38, 39, 52, 56, 57, 64, 65, 67, 74, 91, 97, 104, 107, 111, 113, 114, 122, 124, 129, 139, 140, 142, 150, 209, 217, 218, 221, 222, 225, 264, 265, 266, 267, 268, 287, 320, 325, 326, 327, 328, 331, 332, 334, 336, 337], "forc": [3, 6, 7, 13, 14, 18, 20, 21, 53, 326, 331, 332], "privat": [3, 73, 77, 91, 97, 149, 332, 337], "distinct": [3, 330], "convent": [3, 99, 321, 325, 328, 331, 332], "absenc": 3, "total": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 30, 31, 33, 236, 248, 251, 291, 293, 296, 300, 303, 304, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337], "unless": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 63, 73, 77, 91, 97, 327], "wa": [3, 5, 7, 35, 38, 41, 42, 52, 53, 54, 73, 77, 91, 97, 144, 160, 179, 246, 255, 270, 321, 326, 327, 330, 334, 336], "abov": [3, 7, 32, 73, 77, 91, 97, 178, 204, 205, 233, 321, 322, 325, 327, 331, 332, 337], "detail": [3, 5, 6, 7, 32, 73, 77, 91, 92, 93, 97, 142, 144, 172, 175, 179, 216, 234, 242, 251, 319, 326, 330, 334], "deal": [3, 325, 327, 331, 334], "proper": [3, 4, 6, 7, 264, 265, 266, 267, 326, 327, 331, 334], "behav": [3, 79, 87, 175, 179, 195, 247, 333], "accord": [3, 13, 14, 16, 17, 18, 19, 20, 21, 40, 124, 134, 178, 190, 199, 204, 205, 262, 320, 332, 334], "develop": [3, 4, 7, 81, 325, 336], "inner": [3, 73, 77, 91, 97, 113, 322, 326, 327, 331, 337], "logic": 3, "nevertheless": [3, 327, 334], "kept": [3, 13, 14, 16, 17, 63, 113, 136, 143, 152, 159, 178, 204, 205], "mind": [3, 331], "desig": 3, "previou": [3, 4, 10, 32, 40, 41, 140, 160, 175, 179, 200, 214, 327, 328, 332, 337], "wherev": 3, "isn": [3, 8, 34, 36, 39, 115, 215, 224, 331], "expos": [3, 94, 111, 114, 226, 326], "modif": [3, 5, 26, 28, 32, 73, 77, 91, 97, 118, 160, 249, 327, 332], "lost": [3, 8, 149], "eras": [3, 73, 77, 91, 97, 144], "intern": [3, 323], "face": [3, 5, 8, 9, 337], "NOT": [3, 129], "outsid": [3, 16, 331, 332], "keep": [3, 4, 7, 8, 14, 42, 63, 65, 91, 97, 124, 128, 148, 150, 159, 220, 293, 300, 325, 326, 327, 328, 331, 332, 334, 336, 337], "right": [3, 6, 7, 40, 182, 326, 327, 331, 332, 337], "preliminari": 3, "warranti": 3, "affect": [3, 8, 32, 73, 77, 91, 97, 143, 144, 152, 264, 265, 266, 267], "assumpt": [3, 332, 334], "made": [3, 32, 56, 57, 58, 64, 67, 73, 77, 91, 97, 220, 238, 262, 325, 326, 328, 331, 333], "preclud": 3, "presenc": 3, "annihil": 3, "effect": [3, 26, 32, 73, 77, 91, 97, 106, 144, 300, 325, 334, 337], "reason": [3, 4, 8, 32, 73, 77, 91, 92, 93, 97, 128, 146, 181, 321, 325, 326, 327, 332, 334], "root": [3, 26, 28, 52, 53, 106, 141, 159, 178, 204, 205, 328, 331, 332, 333, 334, 337], "known": [3, 5, 7, 8, 271, 272, 325, 326], "advanc": [3, 21, 35, 38, 41, 42, 334], "explicitli": [3, 4, 326, 328, 331, 334], "place": [3, 13, 14, 16, 17, 26, 28, 32, 34, 36, 39, 56, 57, 67, 73, 74, 77, 91, 97, 110, 115, 128, 140, 143, 144, 146, 148, 149, 150, 160, 214, 224, 297, 302, 303, 326, 327, 331, 332, 334], "superse": 3, "pettingzoowrapp": [3, 318], "group": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 73, 77, 86, 91, 92, 93, 97, 99, 100, 320, 326, 327, 331], "associ": [3, 32, 73, 77, 91, 97, 199, 316, 325, 334], "environemtn": 3, "__not__": 3, "constrain": [3, 122, 177, 181, 251], "li": 3, "fact": [3, 7, 8, 325, 327, 331, 332, 333, 334, 337], "predict": [3, 32, 40, 173, 184, 185, 214, 230, 240, 242, 244, 245, 263, 320, 325, 326], "know": [3, 4, 9, 35, 38, 41, 42, 213, 252, 296, 325, 326, 327, 328, 331, 334], "meaning": 3, "could": [3, 4, 6, 326, 327, 331, 333, 337], "perfectli": [3, 322, 325, 332], "case": [3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 32, 35, 41, 53, 59, 73, 77, 91, 97, 111, 112, 114, 142, 144, 152, 181, 183, 189, 221, 224, 225, 227, 228, 233, 234, 235, 237, 238, 240, 241, 247, 251, 252, 253, 254, 256, 264, 265, 266, 267, 291, 302, 314, 315, 316, 320, 322, 325, 326, 327, 328, 331, 332, 334, 337], "meaningless": 3, "discard": [3, 45, 52, 53, 77, 146, 159, 282, 334, 337], "val": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 336], "agent0": 3, "agent1": 3, "overridden": [3, 73, 77, 91, 97, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 188, 189, 192, 193, 194, 196, 199, 200, 202, 207, 213, 214, 216, 217, 218, 220, 223, 228, 231, 328], "overrid": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 38, 44, 46, 47, 73, 77, 91, 97, 316, 320], "elimin": 3, "field": [3, 13, 14, 16, 17, 26, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 53, 56, 57, 67, 70, 73, 77, 83, 86, 87, 90, 91, 92, 93, 95, 96, 97, 98, 99, 111, 114, 115, 116, 126, 130, 132, 136, 138, 140, 144, 159, 161, 172, 177, 181, 185, 197, 198, 206, 209, 210, 211, 212, 214, 215, 216, 220, 221, 222, 223, 224, 227, 229, 234, 235, 237, 238, 240, 241, 247, 251, 252, 253, 254, 256, 262, 304, 309, 319, 320, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "bool": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 63, 70, 71, 72, 73, 74, 75, 77, 83, 86, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 104, 106, 107, 111, 113, 114, 115, 116, 118, 122, 123, 124, 126, 128, 130, 132, 134, 136, 138, 140, 142, 144, 145, 146, 148, 150, 152, 159, 160, 161, 162, 163, 165, 166, 175, 176, 177, 178, 179, 180, 181, 183, 185, 188, 189, 190, 191, 204, 205, 209, 215, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 256, 259, 262, 264, 265, 266, 267, 270, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 293, 294, 296, 297, 298, 300, 309, 316, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "pixel": [3, 7, 26, 106, 108, 115, 118, 120, 124, 126, 128, 131, 142, 146, 148, 165, 193, 194, 283, 309, 320, 325, 326, 328, 333, 334, 336, 337], "500": [3, 325, 326, 332, 336, 337], "uint8": [3, 47, 115, 126, 142, 326, 333, 334, 336, 337], "none": [3, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 67, 73, 74, 77, 86, 87, 91, 92, 93, 97, 98, 99, 101, 105, 106, 107, 108, 109, 110, 111, 112, 114, 118, 120, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 146, 148, 150, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 250, 251, 252, 253, 254, 255, 256, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 294, 295, 296, 297, 298, 299, 300, 304, 305, 306, 309, 312, 314, 315, 316, 320, 322, 325, 326, 327, 328, 331, 332, 334, 336, 337], "is_shar": [3, 13, 14, 16, 26, 34, 36, 37, 39, 40, 41, 42, 43, 45, 53, 55, 56, 57, 67, 70, 73, 77, 83, 86, 87, 90, 91, 92, 93, 95, 96, 97, 98, 99, 111, 114, 115, 116, 126, 130, 132, 136, 138, 140, 150, 159, 161, 172, 177, 181, 185, 197, 198, 206, 209, 210, 211, 212, 214, 215, 216, 220, 221, 222, 223, 224, 227, 229, 234, 235, 237, 238, 240, 241, 247, 251, 252, 253, 254, 256, 262, 309, 320, 327, 328, 330, 331, 332, 333, 334, 336, 337], "note": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 38, 39, 41, 42, 73, 77, 91, 97, 111, 114, 150, 160, 175, 177, 179, 181, 220, 221, 225, 325, 326, 330, 331, 337], "launch": [3, 13, 14, 18, 19, 20, 22, 91, 97], "bottleneck": [3, 8], "so": [3, 4, 6, 7, 10, 32, 40, 73, 77, 91, 97, 140, 150, 226, 227, 327, 328, 331, 332, 337], "onc": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 73, 77, 91, 97, 132, 144, 213, 218, 220, 298, 322, 326, 327, 328, 332, 334, 337], "great": [3, 7, 8, 336], "speedup": [3, 8, 337], "precis": [3, 111, 114, 159, 176, 180, 325, 327], "anoth": [3, 8, 34, 36, 39, 73, 77, 81, 91, 97, 111, 112, 114, 140, 143, 183, 234, 235, 236, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 262, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 320, 321, 325, 327, 328, 330, 331, 332, 337], "misspecifi": 3, "caus": [3, 7, 8, 56, 57, 67, 73, 77, 81, 91, 97, 129, 337], "breakag": 3, "rais": [3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 73, 77, 91, 97, 100, 106, 117, 123, 132, 139, 140, 141, 144, 152, 213, 217, 218, 220, 254, 325, 327, 331, 334], "mismatch": [3, 326], "mostli": [3, 17, 321, 334, 337], "purpos": [3, 7, 106, 175, 312, 325, 327, 328, 331, 333, 337], "want": [3, 6, 7, 8, 124, 234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 262, 320, 325, 326, 327, 328, 331, 332, 333, 334, 336, 337], "subprocess": [3, 13, 14, 74, 91, 97], "addit": [3, 4, 32, 52, 73, 77, 88, 91, 97, 110, 128, 140, 143, 144, 146, 148, 175, 213, 214, 224, 233, 249, 264, 321, 325, 326, 331, 334], "multithread": [3, 35, 38, 41, 42, 52, 53, 54, 55, 88, 89, 334], "multithreadedenv": [3, 318], "underneath": 3, "higher": [3, 4, 109, 228, 325, 326, 327, 334, 337], "restrict": [3, 326, 333, 334, 337], "flexibl": [3, 9, 88, 257, 321, 322, 334, 337], "cover": [3, 319, 327, 332, 336], "popular": [3, 320, 328, 331], "atari": [3, 4, 106, 337], "classic": [3, 87, 93, 326], "benchmark_batched_env": 3, "py": [3, 103, 197, 206, 322, 324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337], "pipelin": [3, 7, 320, 327], "seamlessli": [3, 332], "infrastructur": [3, 331], "view": [3, 8, 27, 32, 33, 73, 77, 91, 97, 104, 172, 175, 179, 183, 332, 334, 336, 337], "core": [3, 8, 309, 322, 328, 336], "decis": [3, 164, 196, 214, 239, 250, 328, 331, 334, 337], "act": [3, 4, 92, 93, 189, 235, 237, 247, 252, 254, 256, 328, 331], "world": [3, 5, 87, 230, 244, 331, 332, 337], "paradigm": [3, 17, 331], "decpodp": 3, "markov": [3, 337], "game": [3, 4, 5], "per": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 81, 91, 92, 93, 109, 135, 173, 188, 189, 217, 300, 314, 315, 325, 326, 327, 328, 331, 334, 336], "accommod": [3, 13, 14, 16, 17], "thank": [3, 325], "carrier": [3, 327, 328, 334], "particular": [3, 32, 45, 52, 73, 77, 91, 97, 144, 321, 322, 326, 328, 330, 331, 334], "thu": [3, 248, 331], "hand": [3, 7, 21, 331, 332], "let": [3, 6, 7, 32, 43, 73, 77, 91, 92, 93, 97, 106, 177, 181, 188, 189, 215, 296, 321, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "understand": [3, 8, 325, 326, 331], "go": [3, 7, 86, 129, 132, 214, 270, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "vma": [3, 98, 99, 331], "robot": [3, 5, 7, 128, 146, 148, 331], "what": [3, 8, 35, 44, 73, 77, 91, 97, 115, 140, 159, 222, 319, 320, 321, 326, 327, 328, 331, 332, 333, 334, 336, 337], "vmasenv": [3, 318, 331], "balanc": [3, 325, 326], "num_env": [3, 21, 80, 98, 99, 331], "n_agent": [3, 98, 99, 188, 189, 197, 206, 262, 331], "5": [3, 24, 26, 28, 35, 38, 41, 42, 74, 83, 88, 95, 96, 98, 99, 132, 138, 139, 161, 162, 163, 172, 173, 175, 178, 179, 182, 183, 185, 188, 189, 193, 198, 204, 205, 214, 215, 222, 228, 248, 251, 253, 256, 320, 325, 326, 331, 332, 334, 336, 337], "info": [3, 35, 38, 41, 42, 52, 53, 54, 73, 77, 91, 92, 93, 94, 95, 96, 97, 98, 99, 146, 149, 151, 331, 334], "ground_rew": 3, "pos_rew": [3, 331], "16": [3, 32, 73, 77, 91, 97, 106, 324, 325, 326, 328, 332, 334, 335, 336], "style": [3, 35, 38, 41, 42, 52, 53, 54], "relat": [3, 4, 10, 35, 118, 234, 235, 237, 238, 240, 241, 247, 251, 252, 253, 254, 256, 326, 332], "vari": [3, 92, 93, 129, 331], "creation": [3, 91, 97, 325, 337], "info_spec": 3, "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 33, 73, 77, 91, 97, 104, 160, 238, 241, 262, 318, 327, 331, 337], "you": [3, 5, 6, 7, 8, 9, 10, 32, 43, 73, 77, 81, 86, 91, 92, 93, 95, 96, 97, 103, 150, 179, 319, 320, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "simpl": [3, 9, 32, 33, 73, 77, 91, 97, 165, 225, 238, 240, 249, 253, 264, 320, 321, 325, 326, 327, 331, 337], "composit": [3, 26, 28, 73, 77, 91, 97, 327, 332], "prefix": [3, 23, 32, 34, 36, 39, 45, 73, 77, 91, 97, 144, 249, 254, 282, 328, 337], "exactli": [3, 32, 73, 77, 79, 91, 97, 144, 175, 179, 254, 325, 328, 331], "action_kei": [3, 15, 73, 77, 91, 97, 104, 113, 159, 161, 184, 185, 213, 217, 218, 220, 331], "reward_kei": [3, 73, 77, 91, 97, 159, 161, 185, 294, 298, 331], "automat": [3, 5, 56, 57, 67, 73, 77, 91, 92, 93, 97, 111, 114, 124, 149, 162, 209, 221, 320, 325, 327, 331, 332, 334, 336], "sure": [3, 4, 7, 54, 64, 81, 132, 215, 316, 320, 325, 327, 328, 331, 332, 334, 336, 337], "set_kei": [3, 115, 234, 235, 236, 238, 241, 242, 247, 248, 249, 251, 252, 253, 254, 262, 268, 331], "awai": [3, 327, 331], "eas": [3, 331], "leaf": [3, 26, 28, 73, 77, 91, 97, 138, 225], "would": [3, 32, 40, 73, 77, 91, 97, 175, 177, 179, 181, 183, 188, 322, 326, 327, 328, 332, 334, 337], "full": [3, 73, 77, 91, 97, 177, 181, 216, 291, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "raw": [3, 4, 40, 178, 204, 205, 326, 332], "torchvis": [3, 128, 148, 336, 337], "transformedenv": [3, 13, 73, 74, 77, 91, 97, 104, 106, 109, 110, 111, 114, 115, 116, 118, 121, 122, 123, 124, 126, 130, 132, 135, 136, 138, 139, 140, 141, 143, 150, 177, 181, 309, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "primit": [3, 4, 234, 235, 237, 238, 240, 241, 247, 251, 252, 253, 254, 256], "built": [3, 5, 7, 234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 257, 262, 310, 312, 313, 316, 325, 326, 327, 328, 334, 337], "base_env": [3, 73, 77, 91, 97, 104, 109, 111, 113, 114, 122, 126, 138, 140, 141, 325, 326, 327, 333, 336, 337], "totensorimag": [3, 106, 326, 328, 334, 336, 337], "in_kei": [3, 13, 14, 16, 17, 21, 52, 87, 105, 106, 107, 108, 109, 111, 113, 114, 118, 120, 122, 124, 125, 126, 128, 130, 131, 132, 133, 134, 135, 139, 141, 142, 143, 144, 146, 148, 150, 161, 171, 177, 181, 185, 197, 206, 207, 209, 210, 211, 212, 214, 215, 221, 222, 224, 225, 227, 228, 229, 234, 235, 236, 237, 238, 240, 241, 247, 248, 251, 252, 253, 254, 256, 262, 264, 265, 266, 267, 282, 283, 309, 312, 320, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "resiz": [3, 106, 326, 328, 334, 337], "64": [3, 106, 165, 166, 174, 177, 181, 189, 197, 262, 325, 326, 327, 328, 330, 332, 334, 336, 337], "appar": [3, 293], "bring": [3, 327, 337], "signific": [3, 5, 8, 327, 337], "kind": [3, 38, 44, 159, 334], "consult": 3, "interest": [3, 221, 225, 320, 326, 327, 331, 332, 337], "resize_par": 3, "out_kei": [3, 13, 14, 16, 17, 21, 87, 105, 106, 107, 108, 109, 111, 114, 118, 120, 122, 124, 125, 126, 128, 130, 131, 132, 133, 134, 135, 139, 141, 142, 143, 146, 148, 150, 161, 171, 172, 177, 181, 185, 197, 198, 206, 207, 209, 210, 211, 212, 214, 216, 221, 222, 223, 224, 225, 227, 228, 229, 234, 235, 236, 241, 247, 248, 251, 252, 253, 254, 262, 264, 265, 266, 267, 283, 296, 312, 320, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "easi": [3, 5, 54, 213, 217, 218, 220, 320, 321, 325, 326, 327, 331, 333, 334, 337], "graph": [3, 4, 8, 260, 261, 325, 332], "inv": [3, 109, 113, 126, 132, 332], "appli": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 43, 44, 46, 47, 52, 53, 54, 73, 77, 91, 97, 104, 106, 107, 110, 111, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 127, 129, 130, 132, 135, 136, 138, 139, 140, 141, 143, 144, 146, 147, 149, 150, 175, 179, 204, 215, 264, 295, 322, 325, 326, 327, 332, 336, 337], "revers": [3, 179], "order": [3, 16, 32, 33, 35, 38, 41, 42, 52, 53, 54, 63, 73, 77, 91, 97, 111, 114, 126, 144, 209, 215, 224, 226, 227, 229, 234, 235, 237, 241, 247, 251, 252, 253, 254, 256, 326, 331], "chain": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 110, 113, 162, 163, 227, 337], "taken": [3, 73, 77, 91, 97, 186, 187, 218, 321, 325, 327, 328, 331, 332], "invers": [3, 4, 35, 38, 41, 42, 52, 53, 54, 106, 111, 114, 124, 132, 232, 247, 332], "in_keys_inv": [3, 109, 111, 114, 124, 125, 126, 130, 132, 143, 325, 330, 332, 337], "append_transform": [3, 35, 38, 41, 42, 52, 53, 54, 128, 140, 146, 325, 328, 332, 336, 337], "doubletofloat": [3, 309, 325, 327, 330], "float32": [3, 13, 14, 16, 26, 34, 35, 36, 39, 40, 41, 42, 44, 45, 53, 56, 57, 59, 67, 70, 73, 77, 83, 87, 90, 91, 95, 96, 97, 98, 99, 111, 114, 115, 116, 124, 126, 130, 132, 136, 138, 140, 142, 156, 159, 161, 172, 177, 181, 185, 197, 198, 206, 209, 210, 211, 212, 214, 215, 220, 221, 222, 223, 224, 227, 229, 234, 235, 237, 238, 240, 241, 247, 251, 252, 253, 254, 256, 262, 309, 320, 327, 328, 330, 331, 332, 333, 334, 336, 337], "float64": [3, 32, 53, 73, 77, 91, 97, 110, 111, 114, 128, 140, 143, 144, 146, 148, 224, 330, 337], "regist": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 73, 77, 91, 97, 111, 114, 115, 144, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 188, 189, 192, 193, 194, 196, 199, 200, 202, 207, 213, 214, 216, 217, 218, 220, 223, 228, 231, 234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 262, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 322, 325, 327, 334], "manipul": [3, 4, 8, 128, 146], "third_transform": 3, "replac": [3, 6, 7, 26, 28, 32, 113, 115, 159, 217, 320, 334], "unexpect": [3, 32, 73, 77, 91, 97, 144, 254, 337], "behviour": 3, "fortun": [3, 328], "ident": [3, 13, 14, 16, 32, 91, 97, 115, 188, 189, 264, 265, 266, 267, 314, 315, 326, 331], "alreadi": [3, 8, 11, 32, 45, 73, 77, 91, 97, 140, 160, 225, 264, 265, 266, 267, 325, 327, 331], "chang": [3, 5, 7, 32, 35, 38, 41, 42, 56, 57, 58, 63, 64, 67, 73, 77, 91, 97, 110, 111, 112, 114, 116, 122, 130, 136, 138, 143, 144, 150, 179, 234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 262, 321, 325, 327, 328, 331, 332, 333, 334, 337], "happen": [3, 73, 77, 91, 97, 213, 326, 333, 337], "catfram": [3, 326], "hold": [3, 260, 261, 332, 334], "notic": [3, 106, 327, 332], "parenthood": 3, "henc": [3, 35, 129, 160, 188, 320, 325, 327, 331, 332], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 332], "discret": [3, 24, 27, 30, 31, 33, 47, 73, 77, 91, 92, 93, 97, 99, 113, 195, 198, 240, 241, 242, 320, 326, 327, 331, 337], "might": [3, 37, 287, 319, 325, 337], "throughout": [3, 234, 235, 236, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 262, 327, 337], "action_mask": [3, 92, 93, 95, 96, 104], "unavail": [3, 92, 93], "probabl": [3, 4, 8, 40, 170, 172, 175, 177, 179, 181, 183, 186, 187, 195, 205, 217, 221, 225, 320, 326, 336], "categor": [3, 27, 31, 33, 92, 93, 99, 104, 115, 172, 195, 198, 215, 216, 221, 222, 223, 238, 241, 262, 328], "probabilistictensordictmodul": [3, 122, 225, 226, 336], "tensordictsequenti": [3, 177, 181, 215, 217, 226, 320, 325, 328, 330, 333, 336], "maskedcategor": [3, 187, 318], "linear": [3, 13, 14, 16, 17, 21, 32, 73, 77, 87, 91, 97, 110, 122, 128, 140, 143, 144, 146, 148, 161, 162, 163, 172, 183, 185, 188, 189, 190, 191, 192, 198, 199, 200, 209, 210, 211, 212, 217, 218, 219, 220, 221, 222, 224, 227, 229, 234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 262, 264, 265, 266, 267, 312, 320, 326, 330, 333, 336], "in_feat": 3, "out_feat": 3, "logit": [3, 36, 40, 186, 187, 195, 216, 221, 241, 320], "dist": [3, 10, 186, 187, 195], "distribution_class": [3, 122, 210, 211, 212, 214, 221, 225, 227, 234, 235, 241, 247, 251, 252, 253, 254, 320, 325, 327, 331, 336], "wrap": [3, 5, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 53, 73, 77, 91, 92, 93, 97, 99, 152, 177, 181, 207, 210, 211, 212, 213, 218, 220, 222, 230, 262, 320, 325, 326, 327, 328, 331, 337], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 104, 129], "add": [3, 4, 6, 21, 32, 35, 38, 41, 42, 52, 53, 54, 61, 65, 66, 68, 73, 77, 91, 97, 106, 122, 177, 181, 190, 219, 234, 295, 327, 328, 331, 332, 334, 336], "enviorn": [3, 92, 93, 99, 331], "itself": [3, 32, 73, 77, 91, 97, 101, 249, 327], "log": [3, 4, 8, 40, 170, 171, 172, 186, 187, 195, 205, 215, 216, 221, 225, 234, 235, 236, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 262, 293, 294, 296, 300, 312, 320, 321, 322, 325, 326, 327, 331, 332, 336], "mission": 3, "irrespect": [3, 224, 225], "dmcontrol": [3, 325], "jumanji": [3, 82, 83], "natur": [3, 325, 328], "special": [3, 320, 325, 328, 337], "framework": [3, 4, 9, 22, 87, 175, 336, 337], "Its": [3, 32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 150, 224, 268], "success": [3, 53, 106, 143, 217, 326, 332, 334, 336], "been": [3, 5, 7, 8, 17, 18, 20, 21, 40, 63, 73, 77, 81, 91, 97, 122, 138, 139, 143, 175, 179, 213, 218, 220, 325, 326, 327, 328, 330, 331, 332, 334, 337], "foundat": [3, 5, 92, 93, 327, 331], "inspir": [3, 332], "howev": [3, 5, 7, 32, 73, 77, 91, 97, 106, 135, 139, 144, 254, 320, 325, 326, 327, 328, 332, 334, 337], "gone": [3, 4, 5], "sometim": [3, 328, 337], "hard": [3, 7, 246, 326, 337], "adopt": [3, 5, 325, 337], "prefer": [3, 17, 20, 35, 38, 41, 42, 129, 136, 251, 297, 320, 327, 331, 334], "moreov": 3, "maintain": [3, 5, 9, 332], "both": [3, 7, 32, 73, 74, 77, 91, 92, 93, 97, 106, 130, 144, 160, 162, 163, 177, 180, 181, 183, 188, 189, 210, 211, 212, 216, 223, 234, 236, 237, 241, 247, 248, 249, 251, 252, 253, 254, 256, 296, 320, 325, 327, 331, 332, 333, 334, 337], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 326, 327, 328, 331, 332, 334, 337], "decor": [3, 8, 11, 103, 249, 264, 265, 266, 267], "set_gym_backend": [3, 101, 318], "relev": [3, 40, 264, 265, 266, 267, 268, 332], "gym_backend": [3, 103, 318], "env1": [3, 330], "path": [3, 6, 7, 32, 34, 35, 36, 38, 41, 42, 45, 52, 53, 54, 55, 56, 73, 77, 91, 97, 103, 128, 148, 185, 300, 322, 326], "venv": 3, "python3": [3, 6, 7, 10], "site": [3, 6, 7, 103], "__init__": [3, 7, 87, 103, 104, 111, 114, 161, 172, 175, 179, 185, 229, 235, 237, 241, 247, 252, 254, 256, 322, 332, 337], "env2": [3, 330], "_env": [3, 6, 337], "classic_control": 3, "pendulumenv": [3, 332], "0x15147e190": 3, "0x1629916a0": 3, "further": [3, 5, 327], "tell": [3, 4, 7, 92, 93, 325, 328, 331], "mo_gymnasium": [3, 85, 101], "handi": 3, "side": [3, 4, 337], "v0": [3, 76, 77, 78, 82, 83, 84, 85, 110, 144, 150, 312], "26": [3, 326, 327, 328, 332, 333], "fun": [3, 11, 103, 327, 331], "reveal": 4, "bug": [4, 336], "curv": 4, "won": [4, 32, 73, 74, 77, 91, 97, 128, 148, 300, 316, 326, 327], "exploit": 4, "video": [4, 9, 283, 296, 316, 331], "cv": 4, "flip": 4, "imag": [4, 7, 71, 108, 128, 142, 148, 183, 325, 326, 331, 333, 337], "correspondingli": 4, "prescript": 4, "tune": [4, 122, 331, 333], "coeffici": [4, 40, 122, 331], "bonu": [4, 234, 236, 248, 251], "beta": [4, 35, 41, 59, 247, 248, 325, 326, 334, 336], "reduc": [4, 6, 27, 139, 326, 327], "downstream": [4, 325], "formul": [4, 331], "ob": [4, 8, 26, 28, 35, 38, 41, 42, 52, 53, 54, 65, 104, 111, 112, 114, 124, 142, 156, 159, 188, 189, 222, 229, 235, 237, 241, 247, 252, 254, 256, 264, 265, 266, 267, 326, 330, 332, 336, 337], "rate": [4, 150, 263, 326, 327, 331], "gradient": [4, 32, 73, 77, 91, 97, 144, 178, 187, 191, 195, 204, 205, 234, 236, 237, 241, 247, 248, 249, 251, 252, 253, 254, 256, 263, 264, 265, 266, 267, 300, 325, 327, 331, 332], "norm": [4, 8, 300, 325, 326, 327, 331, 332], "easier": [4, 320, 325], "behavior": [4, 32, 73, 77, 91, 97, 144, 247, 327, 328, 331, 332], "local": [4, 7, 10, 16, 21, 32, 73, 77, 91, 97, 144, 188, 189, 197, 206, 262, 288, 331], "optima": 4, "sens": [4, 332], "product": [4, 9, 175, 176, 179, 180, 314, 315], "sum": [4, 21, 31, 33, 65, 135, 186, 187, 206, 244, 263, 270, 321, 325, 326, 327, 328, 331, 332, 337], "track": [4, 13, 14, 16, 17, 18, 19, 20, 21, 42, 63, 135, 150, 220, 288, 293, 326, 328, 331, 332, 334], "stat": [4, 124, 304, 316, 326, 327], "w": [4, 106, 108, 131, 142, 175, 220, 283, 326, 328, 334], "r": [4, 32, 104, 109, 124, 176, 225, 233, 263, 320, 326, 332, 337], "yield": [4, 16, 21, 32, 73, 77, 91, 97, 249, 325], "insight": 4, "auxiliari": 4, "credit": 4, "futur": [4, 32, 73, 77, 91, 97, 128, 144, 148, 183, 234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 262, 319, 336], "past": [4, 326, 334], "spars": [4, 328], "ineffici": 4, "ad": [4, 13, 14, 16, 32, 35, 38, 41, 42, 49, 52, 53, 54, 59, 73, 77, 91, 97, 135, 144, 190, 191, 220, 234, 236, 238, 242, 248, 251, 254, 262, 326, 328, 334, 337], "intermedi": [4, 177, 181, 216, 325, 333], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 325], "discov": 4, "score": [4, 40], "undesir": 4, "though": [4, 73, 77, 91, 97, 183, 327, 331], "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 336], "individu": [4, 18, 19, 20, 21, 32, 45, 73, 77, 91, 97, 325, 331], "select": [4, 15, 35, 38, 41, 42, 52, 53, 54, 92, 93, 99, 104, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 127, 129, 130, 132, 135, 136, 138, 139, 140, 141, 143, 146, 147, 149, 150, 161, 177, 181, 215, 222, 299, 325, 334], "fall": [4, 52], "explicit": [4, 11, 45, 182, 334], "mechan": [4, 32, 73, 77, 91, 97, 144, 326, 332], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 34, 36, 39, 73, 77, 91, 97, 179, 247, 327, 331], "addition": 4, "timestep": [4, 40, 52, 132, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 331], "realli": 4, "larg": [4, 27, 111, 114, 146, 326, 327, 331, 334], "huge": [4, 189, 328], "std": [4, 124, 150, 192, 196, 213, 325, 337], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 324, 328, 329, 330, 333, 334, 335], "initi": [4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 40, 73, 77, 91, 97, 124, 128, 140, 143, 144, 146, 151, 161, 175, 176, 179, 180, 185, 190, 191, 213, 217, 218, 220, 234, 235, 237, 238, 240, 241, 242, 243, 247, 248, 249, 250, 251, 252, 253, 254, 256, 262, 309, 316, 326, 328, 332, 337], "estim": [4, 115, 122, 210, 211, 212, 234, 235, 236, 237, 238, 240, 241, 242, 243, 247, 248, 249, 250, 251, 252, 253, 254, 256, 257, 262, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 321, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "encount": [4, 319, 326, 332], "unseen": 4, "extrins": 4, "wrong": 4, "bonus": 4, "denser": 4, "prior": [4, 200, 244, 331], "freshli": 4, "doesn": [4, 11, 88, 111, 114], "drop": [4, 63, 159], "meant": [4, 87], "encourag": [4, 325, 326, 334], "measur": [4, 327], "novelti": 4, "revisit": 4, "previous": [4, 327, 337], "diminish": 4, "decreas": 4, "ideal": [4, 124, 332], "down": [4, 13, 14, 16, 17, 328], "anyth": 4, "try": [4, 7, 8, 9, 26, 28, 34, 36, 39, 326, 327, 328, 331, 332, 336, 337], "distil": 4, "nois": [4, 151, 191, 208, 220, 252, 256, 296, 316, 325], "exploratori": [4, 234, 236, 248, 251], "misalign": 4, "trade": 4, "unavoid": 4, "schedul": [4, 7, 40, 296, 327, 332], "divers": [4, 91, 97], "bootstrap": [4, 242, 265, 271, 272, 325, 328], "noisi": [4, 190, 191, 208, 320], "unstabl": [4, 178, 204, 205], "inher": 4, "stochast": [4, 122, 173, 191, 193, 200, 235, 239, 241, 247, 250, 252, 254, 320, 327, 331], "enemi": 4, "variabl": [4, 7, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 99, 175, 176, 177, 179, 180, 181, 185, 210, 211, 212, 249, 252, 322, 326], "pomdp": [4, 334], "loos": [4, 320, 326, 327], "nonexist": 4, "architectur": [4, 169, 331], "sequenc": [4, 13, 14, 16, 17, 26, 28, 30, 31, 35, 37, 38, 40, 43, 45, 55, 61, 65, 66, 68, 105, 106, 107, 108, 111, 113, 114, 118, 120, 124, 125, 129, 130, 131, 132, 133, 134, 135, 139, 141, 142, 143, 150, 162, 163, 170, 172, 175, 179, 183, 186, 187, 188, 189, 195, 198, 202, 214, 226, 227, 239, 282, 283, 295, 296, 297, 299, 300, 309, 320, 325, 327, 328, 330, 331, 337], "lstm": [4, 180, 181, 182, 192], "rel": [4, 140, 170, 203, 325, 326, 331, 334], "tend": 4, "stabl": [4, 9, 10], "compens": 4, "descent": [4, 191], "1000": [4, 38, 73, 77, 91, 97, 106, 150, 217, 220, 221, 225, 246, 325, 326, 327, 328, 333, 334], "minimum": [4, 91, 97, 133, 173, 192, 203, 204, 205, 228, 231, 233, 235, 241, 249, 250, 254, 291, 325, 327, 331], "manual": [4, 18, 20, 21, 325, 328, 334], "deviat": [4, 124, 150, 161, 173, 185, 190, 191, 213, 251, 256, 325, 331], "radic": 4, "begin": [4, 13, 14, 16, 18, 19, 20, 21, 175, 176, 179, 180], "stabil": [4, 119], "stage": [4, 325, 332], "never": 4, "prevent": [4, 26, 28, 178, 204, 205, 248, 251, 298, 334], "solv": [4, 9, 10, 319, 325, 326, 327, 331, 332, 334], "entir": [4, 188, 327, 332, 334], "submit": [4, 319, 336], "suffici": [4, 325], "recommend": [4, 7, 81, 331], "system": [4, 5, 327, 331, 332], "adequ": [4, 152, 327, 331], "infeas": 4, "allevi": [4, 320], "prune": 4, "fire": [4, 32, 73, 77, 91, 97], "certain": [4, 18, 20, 21, 32, 45, 73, 77, 91, 97, 103, 119, 138, 144, 176, 180, 217, 248, 320, 325, 326, 327, 331, 337], "illeg": 4, "move": [4, 21, 32, 73, 77, 91, 97, 110, 112, 128, 140, 143, 144, 146, 148, 150, 159, 183, 224, 298, 325, 326, 328, 336, 337], "chess": 4, "combin": [4, 143, 326, 334], "grasp": 4, "releas": [4, 7, 10, 32, 73, 77, 91, 97, 144, 254, 336], "top": [4, 65, 161, 185], "p": [4, 74, 95, 96], "wherein": 4, "cumul": [4, 135, 139, 161, 270, 327], "q": [4, 9, 73, 77, 91, 97, 165, 166, 167, 168, 171, 172, 174, 197, 198, 206, 212, 216, 222, 223, 235, 237, 238, 240, 241, 242, 246, 247, 252, 254, 256, 262, 309, 318, 325], "flow": [4, 325, 327, 331, 332, 334], "reparameter": [4, 170, 187, 195], "soft": [4, 246, 254, 255], "critic": [4, 8, 210, 219, 234, 236, 237, 241, 247, 248, 251, 252, 253, 254, 256, 325, 327], "clip": [4, 40, 109, 133, 236, 256, 300, 327, 331, 332], "oppos": [4, 45], "incorrect": 4, "thought": [4, 73, 77, 91, 97], "bound": [4, 17, 21, 25, 26, 32, 73, 77, 91, 97, 109, 123, 150, 199, 200, 209, 215, 216, 220, 221, 222, 223, 224, 225, 228, 256, 320, 325, 326, 327, 337], "region": 4, "squash": [4, 328, 336], "tanh": [4, 162, 163, 175, 176, 178, 179, 180, 183, 189, 203, 204, 205, 228, 327, 331, 332, 333, 336], "correct": [4, 122, 303, 327, 328], "prob": [4, 186, 187, 195, 327, 331], "rememb": 4, "remap": 4, "origin": [4, 8, 13, 14, 16, 17, 40, 81, 112, 113, 122, 128, 144, 148, 175, 221, 224, 225, 246, 249, 251, 309, 325, 330, 332, 337], "real": [5, 225, 321, 328, 332], "histor": 5, "ceas": 5, "fork": 5, "farama": [5, 84, 85, 92, 93, 327, 332], "usag": [5, 7, 52, 53, 106, 115, 177, 181, 235, 247, 254, 257, 320, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "bc": [5, 336], "break": [5, 13, 14, 16, 21, 32, 38, 42, 53, 55, 73, 77, 91, 97, 106, 132, 150, 326, 334, 336], "against": [5, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 73, 77, 91, 97, 152, 209, 215, 216, 221, 222, 223, 224, 225, 327, 331], "13": [5, 10, 11, 94, 149, 325, 326, 327, 332, 333, 334], "construct": [5, 32, 35, 38, 41, 42, 73, 77, 91, 92, 97, 111, 114, 152, 177, 181, 200, 225, 300, 320, 326, 327, 328, 332, 334, 337], "best": [5, 9, 81, 177, 181, 331, 334, 336], "gymwrapp": [5, 73, 77, 91, 97, 116, 136, 138, 149, 318, 327, 336], "feel": [5, 319, 336], "free": [5, 7, 111, 114, 234, 244, 251, 322, 327, 331, 336], "gladli": 5, "instruct": [6, 7, 10, 22, 52, 113, 115, 325, 326, 327, 328, 331, 334], "prepar": [6, 327], "conda": [6, 7, 319], "7": [6, 10, 27, 33, 35, 38, 41, 139, 161, 162, 163, 182, 183, 185, 188, 270, 325, 326, 327, 328, 331, 332, 334, 336], "cmake": 6, "14": [6, 11, 124, 324, 325, 326, 327, 328, 331, 332, 333, 334, 335], "activ": [6, 7, 9, 162, 163, 169, 173, 183, 188, 189, 236, 248, 251, 320, 332, 336], "sim": 6, "bullet": 6, "physic": [6, 7, 91, 94, 322, 325, 331, 332], "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 319], "withbullet": 6, "forg": [6, 7], "aihabitat": 6, "nightli": 6, "y": [6, 7, 90, 182, 188, 207, 325, 327, 331], "git": [6, 7, 10], "facebookresearch": 6, "subdirectori": 6, "verbos": 6, "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 49, 73, 77, 91, 97, 137, 249, 331, 337], "command": [6, 7, 10, 327, 331, 332, 337], "readm": [6, 7], "md": [6, 7], "habitatenv": [6, 318], "_has_habitat": 6, "available_env": [6, 69, 70, 71, 72, 73, 76, 77, 78, 82, 83, 84, 85, 91, 95, 96, 97, 337], "startswith": [6, 321, 325], "oserror": 6, "libllvmlit": 6, "ionstal": 6, "pointer": [6, 74, 249, 325], "env_nam": [6, 69, 71, 76, 82, 84, 88, 94, 325, 327, 337], "llvmlite": 6, "config": [6, 7, 128, 148, 164, 169, 196, 304, 305, 306, 309, 310, 313], "var": [6, 7, 32, 73, 77, 91, 97, 144, 249, 254], "ld_preload": [6, 7], "8": [6, 7, 38, 59, 70, 73, 77, 91, 97, 139, 162, 163, 165, 166, 174, 183, 210, 211, 212, 221, 224, 227, 247, 324, 325, 326, 331, 332, 333, 334, 335, 336], "bind": 6, "deactiv": [6, 7, 215], "importerror": [6, 7, 10], "usr": [6, 7, 10], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 32, 73, 77, 91, 97, 144, 249, 254, 334], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 326], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 52], "stand": [7, 330, 332], "joint": [7, 326], "dynam": [7, 247, 327, 332], "contact": [7, 37], "engin": [7, 94, 332], "biomechan": 7, "graphic": 7, "anim": [7, 331], "area": 7, "demand": [7, 337], "fast": [7, 9, 70, 130, 252, 325, 326, 327], "accur": [7, 52, 53, 326, 332, 334], "articul": 7, "recent": [7, 11, 149, 337], "acquir": [7, 327], "deepmind": [7, 8, 9, 71, 72, 115, 327], "whomev": 7, "licenc": 7, "incorpor": [7, 213, 217, 218, 220, 328, 332], "relianc": 7, "obsolet": 7, "seri": [7, 8, 33, 61, 65, 66, 68, 97, 123, 143, 283, 320, 321, 325, 326, 327, 331, 334, 337], "legaci": 7, "pro": [7, 319], "tip": [7, 319], "glfw": 7, "osmesa": 7, "egl": 7, "advic": [7, 337], "sudo": [7, 319], "enabl": [7, 8, 52, 56, 57, 67, 177, 181, 220, 296, 327, 331, 332, 334], "apt": [7, 331], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 56, 57, 58, 64, 67, 326, 328], "workflow": [7, 210, 211, 212], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "pre": [7, 22, 32, 45, 57, 73, 77, 91, 97, 128, 146, 148, 337], "binari": [7, 24, 27, 33, 105, 172, 198, 215, 216, 222, 223, 238, 241, 262], "setup": [7, 81], "mkdir": 7, "cd": 7, "tag": [7, 283, 288, 316], "earlier": [7, 325, 327, 328, 331, 334], "roboti": 7, "download": [7, 10, 52, 53, 81, 128, 148, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337], "html": [7, 88], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": [7, 13, 14, 91, 97], "obtain": [7, 40, 73, 77, 91, 97, 128, 139, 148, 161, 197, 297, 325, 327, 331], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 34, 36, 45, 55], "bin": [7, 172, 216, 320], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 168, 221, 225, 325, 327, 334], "nvidia": [7, 81], "older": [7, 11], "hack": [7, 325], "line": [7, 32, 73, 77, 91, 97, 326, 331], "adatp": 7, "script": [7, 152, 309, 312, 316, 320, 321, 322, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "unnot": [7, 129], "until": [7, 21, 141, 143, 327, 328, 331], "complet": [7, 9, 63, 77, 106, 138, 319, 321, 325, 327, 330], "mujoco_pi": 7, "trigger": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 326, 334], "troubleshoot": 7, "gl": 7, "h": [7, 106, 108, 131, 142, 175, 176, 177, 179, 180, 181, 185, 283, 326, 328, 334], "eglshim": 7, "fatal": 7, "No": 7, "directori": [7, 45, 52, 53, 56, 288, 322], "devel": 7, "ubuntu": [7, 81], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "38": [7, 325, 326, 328, 332], "disappear": [7, 326, 328, 330], "libstdc": 7, "6": [7, 13, 14, 16, 17, 38, 83, 95, 96, 124, 126, 139, 162, 163, 170, 176, 182, 183, 188, 189, 193, 203, 221, 229, 309, 324, 326, 331, 332, 333, 334, 335, 336, 337], "glibcxx_3": 7, "29": [7, 326, 332], "compil": [7, 32, 73, 77, 91, 97, 175, 176, 179, 180], "libosmesa": 7, "libgcc": 7, "Then": [7, 149, 327, 330], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 26, 28, 32, 73, 77, 91, 97, 123, 144, 254, 337], "job": [7, 18, 19, 20, 22], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 325, 326, 328, 332, 333], "114": [7, 332, 334], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 332], "offscreenopenglcontext": 7, "fail": [7, 22, 26, 28, 104, 152], "opengl": [7, 331], "global": [7, 32, 73, 77, 91, 92, 93, 97, 197, 206, 221, 225, 262, 322, 325, 331], "cuda_visible_devic": 7, "id": [7, 23, 40, 220, 252, 286, 309], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "onscreen": 7, "101": [7, 332], "correctli": [7, 32, 73, 77, 91, 97], "lgl": 7, "libegl": 7, "x11": [7, 331], "xlib": 7, "libx11": 7, "xorg": 7, "loop": [8, 13, 14, 16, 17, 77, 159, 213, 217, 218, 220, 251, 300, 322, 325, 326, 330, 334], "sketch": [8, 322], "_": [8, 35, 38, 41, 42, 52, 53, 54, 74, 81, 99, 107, 111, 113, 114, 122, 124, 130, 142, 150, 209, 224, 229, 233, 234, 235, 237, 241, 247, 251, 252, 254, 256, 264, 265, 266, 267, 325, 326, 327, 328, 331, 332, 334, 336], "n_training_step": 8, "datapoint": [8, 45, 334], "onlin": [8, 13, 17, 106, 169, 196, 234, 239, 250, 251, 291, 316, 327, 328, 331, 334], "n_data_per_train": 8, "no_grad": [8, 32, 73, 77, 91, 97, 122, 175, 176, 179, 180, 264, 265, 266, 267, 327, 328, 331], "replay_buff": [8, 35, 38, 41, 42, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 297, 312, 325, 326, 327, 331, 334], "loss_fn": [8, 328, 336], "backward": [8, 32, 73, 77, 91, 97, 150, 175, 176, 179, 180, 234, 235, 237, 241, 247, 251, 252, 253, 254, 256, 325, 327, 328, 331, 332], "zero_grad": [8, 32, 73, 77, 91, 97, 322, 325, 327, 328, 331, 332], "backpropag": [8, 234, 235, 236, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 262, 331, 332], "differenti": [8, 45, 122, 264, 265, 266, 267, 328, 331, 332], "denomin": 8, "artifact": 8, "numer": [8, 38, 150, 178, 204, 205, 209, 215, 216, 221, 222, 223, 224, 225, 298, 327, 334, 337], "misconcept": 8, "freed": 8, "appear": [8, 33, 332, 334], "compuat": 8, "twice": 8, "fix": [8, 140, 235, 250, 254, 326, 332, 337], "retain_graph": 8, "discuss": [8, 9, 331], "inplac": [8, 32, 34, 36, 39, 73, 77, 91, 97, 144, 254, 325], "accumul": 8, "onto": [8, 33, 156, 209, 213, 215, 216, 220, 221, 222, 223, 224, 225, 328, 332], "exclud": [8, 52, 106, 116, 159, 197, 331, 334], "forward": [8, 32, 73, 77, 91, 97, 104, 106, 107, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 127, 128, 129, 130, 132, 135, 136, 138, 139, 140, 141, 143, 146, 147, 149, 150, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 188, 189, 190, 192, 193, 194, 196, 197, 199, 200, 202, 206, 207, 213, 214, 216, 217, 218, 220, 221, 223, 224, 225, 228, 229, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 256, 262, 264, 265, 266, 267, 268, 321, 332, 336], "submodul": [8, 32, 73, 77, 91, 97, 101, 249], "param": [8, 32, 40, 73, 77, 87, 91, 97, 110, 111, 112, 116, 122, 130, 136, 138, 143, 170, 172, 203, 214, 221, 224, 227, 229, 249, 258, 261, 264, 265, 266, 267, 268, 325, 331, 332, 333, 336], "grad": [8, 32, 73, 77, 91, 97, 325, 327], "whose": [8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 73, 77, 91, 92, 93, 97, 110, 128, 140, 143, 144, 146, 148, 192, 197, 224], "neg": [8, 13, 14, 16, 17, 18, 19, 20, 21, 35, 41, 59, 106, 118, 129, 145, 243, 321, 327, 331, 332], "ask": [8, 325, 327, 328, 331, 333, 337], "much": [8, 13, 14, 35, 41, 59, 91, 97, 248, 251, 327, 331, 332, 334, 337], "render": [8, 296, 325, 326, 327], "upon": [8, 332], "factor": [8, 32, 132, 178, 191, 204, 205, 213, 217, 218, 220, 235, 240, 242, 243, 245, 255, 270, 325, 326, 331, 334, 337], "fit": [8, 11, 124, 321, 322, 325], "bottlneck": 8, "brax": [8, 69, 70, 130, 337], "jax": [8, 11], "improperli": 8, "item": [8, 13, 26, 28, 32, 38, 45, 55, 65, 73, 77, 91, 97, 117, 144, 186, 187, 237, 238, 240, 254, 291, 321, 322, 325, 327, 328, 331, 332, 334], "underli": [8, 73, 77, 91, 97, 249, 332], "tedeiou": 8, "priorit": [8, 35, 41, 59, 235, 237, 238, 240, 241, 247, 252, 254, 256, 325, 326], "amount": [8, 220, 326, 334], "contigu": [8, 73, 77, 91, 97, 156, 327, 331, 332, 334, 336, 337], "costli": [8, 332], "concaten": [8, 21, 30, 31, 106, 107, 124, 143, 179, 183, 227, 325, 326, 331, 332, 334, 337], "constitut": [8, 326, 331, 332], "plain": 8, "profil": 8, "fulli": [8, 32, 73, 77, 91, 97, 176, 180, 326, 332, 334], "frequent": [8, 334], "program": [8, 247, 337], "functorch": [8, 10], "incl": 8, "suit": [8, 72, 327, 337], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "expand": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 224, 227, 249, 331, 332, 336], "new_shap": 8, "permut": [8, 63, 126, 336, 337], "idea": [9, 252, 322, 328, 331], "introductori": 9, "intro": [9, 327, 328], "dai": [9, 336], "2022": [9, 10, 332, 336], "spin": 9, "deep": [9, 106, 165, 166, 167, 168, 171, 220, 234, 246, 254, 255, 325], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": 9, "summari": [9, 124, 150, 325, 326, 327, 328], "reddit": 9, "reagent": 9, "orient": [9, 337], "baselines3": 9, "tf": 9, "bandit": [9, 90], "tensorflow": [9, 186, 187], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": 9, "salina": 9, "sequenti": [9, 32, 73, 77, 91, 97, 122, 226, 227, 251, 320, 327, 328, 331, 332, 333, 337], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 336], "grade": 9, "factori": [9, 43], "throughput": [9, 325], "cherri": 9, "jaxrl": 9, "space": [9, 33, 44, 73, 77, 91, 97, 109, 113, 156, 169, 172, 188, 194, 198, 209, 213, 215, 216, 218, 220, 221, 222, 223, 224, 225, 227, 228, 229, 238, 240, 241, 256, 262, 320, 326, 327, 328, 331, 332, 336, 337], "mbrl": [9, 87, 320], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 332], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 327, 328, 331], "notebook": [10, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337], "24": [10, 325, 326, 332], "11": [10, 27, 33, 45, 56, 57, 67, 74, 142, 161, 185, 324, 326, 327, 328, 331, 332, 334, 335], "12": [10, 56, 57, 67, 95, 96, 324, 325, 326, 328, 332, 334, 335], "pip": [10, 54, 331, 336, 337], "pip3": [10, 327, 328, 331], "extra": [10, 32, 73, 77, 91, 97, 106, 150, 159, 320, 327, 328, 334], "url": 10, "org": [10, 35, 59, 106, 128, 146, 164, 165, 166, 167, 168, 169, 172, 173, 174, 179, 185, 186, 187, 191, 193, 194, 196, 197, 199, 200, 206, 216, 220, 234, 235, 238, 239, 240, 242, 243, 244, 245, 246, 247, 250, 251, 253, 254, 255, 264, 269, 277, 333], "whl": 10, "u": [10, 54, 175, 176, 179, 180, 332], "There": [10, 177, 181, 320, 322, 327, 328, 331, 332, 334, 337], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 249], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 59, 71, 73, 75, 77, 90, 91, 92, 93, 94, 97, 99, 100, 101, 104, 106, 113, 115, 121, 122, 124, 128, 129, 131, 138, 139, 144, 146, 148, 149, 150, 153, 157, 159, 160, 161, 162, 163, 165, 166, 167, 168, 171, 172, 174, 177, 181, 182, 183, 184, 185, 188, 189, 190, 191, 192, 197, 198, 206, 209, 215, 216, 221, 222, 223, 224, 225, 228, 229, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 256, 259, 262, 263, 264, 265, 266, 267, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 304, 309, 310, 316, 326, 327], "callabl": [11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 54, 73, 74, 77, 87, 91, 97, 103, 115, 233, 305, 306, 314, 315, 316, 326], "from_vers": 11, "to_vers": 11, "intersect": [11, 138], "vs": [11, 177, 181, 182, 336], "longer": [11, 326, 331, 334], "self": [11, 26, 28, 32, 34, 36, 39, 73, 77, 87, 91, 97, 104, 110, 111, 114, 128, 140, 143, 144, 146, 148, 161, 172, 175, 179, 185, 197, 206, 213, 217, 218, 221, 224, 229, 234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 262, 264, 265, 266, 267, 268, 322, 325, 326, 332, 336], "x": [11, 23, 26, 32, 38, 40, 122, 142, 163, 172, 174, 175, 176, 177, 179, 180, 181, 182, 183, 185, 188, 189, 207, 215, 221, 222, 231, 233, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 300, 325, 327, 332, 334, 336], "23": [11, 326, 332, 333], "lambda": [11, 13, 14, 16, 17, 21, 22, 38, 73, 74, 77, 91, 97, 103, 122, 140, 207, 215, 222, 243, 245, 264, 267, 275, 276, 280, 281, 312, 321, 325, 326, 331, 334, 336, 337], "import_modul": 11, "27": [11, 324, 326, 327, 330, 332, 333, 334, 335], "get_class_that_defined_method": 11, "f": [11, 77, 180, 233, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 325, 326, 327, 328, 331, 332, 334, 337], "otherwis": [11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 43, 44, 45, 46, 47, 52, 55, 73, 77, 86, 91, 92, 93, 97, 99, 106, 113, 124, 139, 140, 141, 144, 150, 175, 178, 179, 188, 189, 204, 205, 215, 222, 228, 235, 244, 249, 250, 254, 296, 297, 322, 325, 326, 327, 328, 332, 337], "classmethod": [11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 146, 164, 196], "module_set": 11, "setters_dict": 11, "dict": [11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 34, 36, 39, 73, 74, 77, 91, 92, 93, 97, 99, 100, 122, 140, 144, 149, 150, 162, 163, 164, 165, 166, 167, 168, 169, 174, 182, 183, 196, 221, 225, 254, 287, 288, 296, 305, 306, 309, 314, 315, 316, 325, 326, 327, 337], "setter": 11, "setter_dict": 11, "copi": [11, 18, 19, 20, 21, 32, 34, 36, 39, 40, 45, 73, 77, 91, 97, 130, 139, 144, 159, 177, 181, 214, 249, 254, 321, 325, 326, 328, 334], "kwd": 12, "policy_weight": [12, 13, 14, 16, 17, 19, 20], "tensordictbas": [12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 32, 41, 42, 52, 53, 54, 73, 75, 77, 91, 97, 104, 106, 107, 110, 111, 112, 115, 116, 117, 118, 121, 122, 127, 129, 130, 132, 135, 136, 138, 139, 140, 141, 143, 149, 150, 159, 160, 161, 177, 181, 184, 185, 213, 214, 216, 217, 218, 220, 223, 224, 225, 234, 235, 236, 237, 238, 239, 240, 241, 242, 247, 248, 249, 250, 251, 252, 253, 254, 256, 262, 263, 264, 265, 266, 267, 268, 300, 325, 332], "udpdat": [12, 13, 14, 16, 17, 19, 20], "create_env_fn": [13, 14, 16, 17, 18, 19, 20, 21, 74, 91, 97, 325, 336], "int": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 71, 73, 77, 87, 91, 92, 93, 97, 99, 106, 107, 108, 113, 118, 119, 123, 124, 126, 128, 129, 131, 137, 138, 141, 144, 145, 146, 148, 152, 156, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 202, 203, 204, 206, 207, 213, 214, 215, 216, 217, 218, 220, 221, 223, 224, 225, 234, 235, 236, 241, 243, 244, 248, 249, 250, 251, 252, 256, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 291, 292, 293, 296, 297, 300, 302, 309, 310, 314, 315, 316, 332], "200": [13, 14, 16, 17, 21, 32, 73, 77, 91, 97, 98, 99, 132, 165, 166, 173, 199, 200, 325, 328, 332], "total_fram": [13, 14, 16, 17, 18, 19, 20, 21, 106, 132, 300, 303, 312, 322, 325, 326, 327, 328, 331, 334, 336], "device_typ": [13, 16, 27, 30, 33, 162, 163, 164, 165, 166, 167, 168, 174, 183, 190, 191, 196], "create_env_kwarg": [13, 14, 16, 17, 74, 88, 91, 97, 325], "postproc": [13, 14, 16, 17, 18, 19, 20, 21, 132, 326, 334], "explorationtyp": [13, 14, 16, 20, 21, 249, 296, 325, 326, 327, 328, 336], "interactiontyp": [13, 16, 18, 19, 20, 21, 154, 158, 221, 225, 296], "exploration_mod": [13, 16, 18, 19, 20, 318, 320], "preemptive_threshold": [13, 14], "float": [13, 14, 25, 27, 32, 33, 35, 40, 41, 46, 59, 73, 77, 91, 97, 106, 110, 111, 114, 122, 124, 128, 132, 133, 134, 139, 140, 142, 143, 144, 146, 148, 150, 170, 173, 175, 178, 179, 183, 186, 187, 190, 191, 199, 200, 203, 205, 213, 224, 228, 231, 232, 233, 234, 235, 240, 241, 244, 245, 246, 247, 250, 252, 254, 255, 256, 263, 269, 270, 271, 272, 273, 274, 275, 276, 277, 298, 325, 326, 334, 337], "num_thread": [13, 14, 91, 97], "num_sub_thread": [13, 14, 91, 97], "datacollector": [13, 14, 16, 17, 221, 225, 251, 327], "recept": 13, "safe": [13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 209, 213, 215, 216, 220, 221, 222, 223, 224, 225, 227, 320, 336], "stepcount": [13, 73, 77, 91, 97, 143, 325, 326, 327, 328, 331, 336], "env_mak": [13, 14, 16, 21, 312, 337], "50": [13, 14, 16, 21, 37, 40, 326, 327, 328, 331, 332], "2000": [13, 14, 16, 45, 80, 327, 334], "enumer": [13, 14, 16, 21, 32, 38, 42, 73, 77, 91, 97, 257, 321, 325, 326, 327, 328, 334, 336], "int64": [13, 14, 16, 24, 27, 30, 34, 36, 37, 40, 41, 43, 45, 53, 55, 73, 77, 86, 90, 91, 92, 93, 95, 96, 97, 115, 126, 132, 138, 172, 198, 215, 216, 220, 221, 222, 223, 320, 327, 328, 332, 334, 336, 337], "step_count": [13, 14, 16, 73, 77, 91, 97, 138, 327, 328, 336], "shutdown": [13, 14, 16, 17, 21, 325, 336], "del": [13, 14, 16, 325, 327, 330, 336, 337], "randompolici": [13, 14, 16, 18, 19, 20, 22, 106, 132, 318, 334], "lifespan": [13, 14, 16, 18, 19, 20, 326], "divis": [13, 14, 16, 18, 19, 20, 331], "endless": [13, 14, 16, 18, 19, 20], "dictionari": [13, 14, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 73, 77, 91, 97, 99, 140, 144, 221, 225, 254, 296, 314, 315, 316, 322, 326, 327, 332, 337], "span": [13, 14, 16, 17, 18, 19, 20, 21], "n_step": [13, 14, 16, 17, 18, 19, 20, 21, 32, 326, 327, 331], "independ": [13, 14, 16, 17, 18, 19, 20, 21, 143, 145, 189, 321, 322, 325, 326, 331, 334, 336], "ignor": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 43, 44, 46, 47, 73, 77, 91, 97, 113, 116, 136, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 186, 187, 188, 189, 192, 193, 194, 196, 199, 200, 202, 207, 213, 214, 216, 217, 218, 220, 223, 228, 231, 264, 334], "mainli": [13, 14, 16, 17, 18, 19, 20, 21, 40, 320, 331, 332], "round": [13, 14, 16], "closest": [13, 14, 16], "post": [13, 14, 16, 18, 19, 20, 21, 32, 53, 73, 77, 91, 97], "multistep": [13, 14, 16, 18, 19, 20, 21, 318, 326], "return_same_td": [13, 14, 16], "cautious": [13, 14, 16, 251], "whole": [13, 14, 16, 26, 28, 32, 45, 73, 77, 91, 97, 144, 221, 254, 291, 325, 327], "boolm": [13, 14], "update_policy_weight_": [13, 14], "sync": [13, 14, 18, 19, 20, 21, 302, 312, 322, 325, 336], "async": [13, 14, 18, 19, 20, 21, 149, 325, 336], "ratio": [13, 14, 40, 325, 327], "finish": [13, 14, 21, 77, 132, 337], "rest": [13, 14, 320, 327, 328, 332, 336], "earli": [13, 14, 77, 138, 336], "thread": [13, 14, 88, 91, 97], "equal": [13, 14, 88, 91, 97, 123, 124, 162, 163, 171, 175, 177, 179, 181, 183, 189, 255, 259, 291, 314, 315, 325, 327, 333], "plu": [13, 14, 40, 91, 97, 332], "safeti": [13, 14, 87, 91, 97], "harm": [13, 14, 91, 97], "ordereddict": [13, 14, 16, 17, 21, 32, 73, 77, 91, 97, 144, 150, 254, 326], "form": [13, 14, 17, 32, 35, 38, 41, 42, 52, 53, 54, 73, 77, 91, 97, 150, 175, 177, 179, 181, 233, 234, 236, 248, 251, 300, 320, 331], "worker0": [13, 14, 17], "state_dict0": [13, 14, 17], "worker1": [13, 14, 17], "state_dict1": [13, 14, 17], "reset_idx": [13, 14, 17], "static_se": [13, 14, 16, 17, 21, 73, 77, 91, 97, 144], "integ": [13, 14, 16, 17, 23, 30, 31, 32, 33, 40, 47, 64, 73, 77, 91, 97, 115, 119, 124, 138, 162, 163, 183, 188, 189, 247, 254, 334], "increment": [13, 14, 16, 17, 73, 77, 91, 97, 248], "env_fn": [13, 14, 16, 17, 74, 314, 315], "env_fn_parallel": [13, 14, 16, 17], "100": [13, 14, 16, 17, 32, 35, 38, 41, 42, 43, 52, 53, 54, 56, 57, 73, 77, 91, 97, 109, 115, 124, 132, 138, 188, 216, 292, 312, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "300": [13, 14, 16, 17, 167, 168, 332], "out_se": [13, 14, 16, 17, 337], "shut": [13, 14, 16, 17], "irrevers": [13, 14, 17], "kwarg": [14, 16, 17, 21, 25, 26, 32, 52, 56, 57, 65, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 104, 110, 128, 137, 140, 143, 144, 145, 147, 148, 151, 161, 162, 163, 165, 166, 167, 168, 171, 174, 177, 178, 181, 183, 184, 185, 188, 189, 195, 203, 205, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 256, 258, 262, 263, 264, 265, 266, 267, 268, 283, 287, 288, 290, 293, 300, 305, 306, 309, 313, 314, 315, 321, 327, 331], "tupl": [15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 54, 73, 77, 91, 97, 104, 113, 115, 121, 122, 124, 129, 159, 165, 171, 172, 177, 180, 181, 182, 183, 189, 192, 196, 197, 198, 215, 216, 222, 223, 228, 234, 235, 237, 241, 243, 247, 249, 251, 252, 253, 254, 256, 264, 265, 266, 267, 283, 294, 296, 298, 307, 308, 325], "rand": [15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 54, 70, 83, 87, 104, 111, 114, 161, 185, 221, 234, 235, 237, 238, 240, 241, 247, 251, 252, 254, 256, 332, 336, 337], "describ": [15, 44, 107, 143, 203, 204, 238, 286, 321, 325, 327, 331, 332, 337], "tensor_spec": [15, 104, 160, 241, 251, 253], "boundedtensorspec": [15, 22, 26, 73, 77, 91, 97, 217, 218, 220, 221, 228, 234, 235, 237, 247, 251, 252, 254, 256, 318, 327, 331, 332, 336, 337], "cube": 15, "envcreat": [16, 22, 312, 313, 316, 318, 325, 326, 336, 337], "interruptor": 16, "_interruptor": 16, "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "chunk": 16, "policy_state_dict": 16, "env_state_dict": 16, "close": [16, 17, 77, 88, 122, 234, 236, 248, 251, 325, 330, 332, 336], "pin_memori": [17, 35, 38, 41, 42, 52, 53, 54, 127, 325, 336], "regular": [17, 34, 36, 39, 73, 77, 91, 97, 144, 198, 216, 222, 223, 224, 225, 242, 302, 318, 322, 325, 326, 334, 337], "mere": 17, "greater": [17, 177, 181, 325, 326, 336], "sent": [17, 56, 57, 67, 150], "server": 17, "postprocessor": 17, "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 300], "string": [18, 19, 20, 32, 37, 45, 55, 73, 77, 91, 97, 103, 128, 138, 148, 177, 181, 215, 221, 222, 233, 282, 299, 309, 321, 325, 327, 328], "respect": [18, 19, 20, 32, 73, 77, 91, 97, 105, 110, 111, 114, 128, 129, 140, 143, 144, 146, 148, 175, 179, 188, 200, 224, 229, 295, 327, 328, 331], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 319, 326, 327, 330, 334], "serv": [18, 20, 21, 79, 334, 337], "fashion": [18, 20, 21], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 20, 21, 53, 73, 77, 91, 97, 118], "seen": [18, 20, 21, 321, 325, 326, 328, 331, 334], "turn": [18, 20, 21, 120, 145, 149, 215, 296, 321, 325, 326, 328, 332, 333], "submitit_delai": [18, 22], "former": [18, 19, 20, 35, 38, 41, 42, 52, 73, 77, 91, 97, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 188, 189, 192, 193, 194, 196, 199, 200, 202, 207, 213, 214, 216, 217, 218, 220, 223, 228, 231, 325], "whilst": [18, 19, 20], "latter": [18, 19, 20, 32, 52, 73, 77, 91, 97, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 188, 189, 192, 193, 194, 196, 199, 200, 202, 207, 213, 214, 216, 217, 218, 220, 223, 228, 231, 251, 314, 315], "homonym": [18, 19, 20, 332], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 325], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 33, 221, 225], "tensorpiperpcbackendopt": 20, "_td": [21, 74], "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 314, 315, 325, 326], "coordin": 21, "init": [21, 32, 73, 77, 91, 97, 325, 326, 327], "autodetect": 21, "similarli": [21, 32, 63, 73, 77, 91, 97, 188, 226, 227, 247, 337], "num_cpu": 21, "num_gpu": 21, "1024": [21, 169, 326, 334], "equat": [21, 77, 220, 233, 236, 255, 327, 332], "exce": [21, 327, 334], "indefinit": [21, 51], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 300, 325, 327, 328], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "32": [22, 26, 35, 38, 41, 42, 52, 53, 54, 95, 96, 98, 99, 162, 163, 164, 165, 166, 169, 174, 183, 188, 189, 193, 194, 196, 197, 206, 262, 325, 326, 327, 328, 332, 333, 334, 336, 337], "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": 22, "jump": 22, "host": [22, 32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224], "wherea": [22, 113, 249, 322], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 164, 169, 196, 214], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "rollout_tensordict": 23, "durat": [23, 331], "meta": [23, 44, 52, 75, 322, 327, 331, 334], "aren": [23, 139, 328], "assert_is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "belong": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 149, 150, 320, 325, 331], "encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 113, 194, 195, 199, 233, 320, 326, 327, 328, 332, 334], "ndarrai": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 77, 220, 228], "ignore_devic": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "np": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 77, 228, 332], "cast": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 55, 73, 77, 91, 97, 110, 111, 114, 122, 128, 140, 143, 144, 146, 148, 150, 224, 309, 337], "least": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 109, 337], "complient": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "singleton": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 162, 163, 183, 201, 202], "implements_for_spec": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "torch_funct": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "tensor_to_index": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 337], "project": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 113, 177, 179, 209, 213, 215, 216, 220, 221, 222, 223, 224, 225, 320, 336, 337], "uniform": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 41, 44, 46, 47, 59], "unbound": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 140, 156, 332, 334], "squeez": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 106, 137, 139, 162, 163, 201, 202, 325, 332, 334], "dim": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 106, 107, 126, 140, 145, 150, 180, 182, 202, 207, 316, 326, 327, 332, 334], "to_numpi": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "transformed_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 143, 144, 192, 203, 316], "check_spec_encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "to_one_hot": [24, 27, 30], "hot": [24, 27, 30, 31, 33, 92, 93, 99, 104, 113, 172, 195, 198, 215, 216, 222, 223, 234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 262, 328], "to_one_hot_spec": [24, 27, 30], "onehotdiscretetensorspec": [24, 27, 172, 198, 215, 222, 238, 240, 241, 262, 318, 320], "convert": [24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 73, 77, 91, 97, 110, 111, 114, 128, 140, 143, 144, 146, 148, 150, 224, 233, 249, 325, 326, 327, 332, 334], "type_check": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "fill": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 140, 149, 181, 328, 332, 333], "upper": [25, 123], "unnam": 26, "pixels_spec": 26, "observation_vector_spec": 26, "33": [26, 32, 73, 77, 91, 97, 162, 163, 183, 326, 332], "composite_spec": 26, "observation_vector": [26, 107, 309, 325], "randn": [26, 34, 35, 36, 38, 39, 41, 42, 52, 53, 54, 56, 57, 67, 124, 156, 164, 169, 172, 175, 176, 179, 180, 182, 186, 187, 188, 192, 195, 196, 198, 209, 210, 211, 212, 214, 215, 221, 222, 224, 227, 228, 229, 234, 235, 237, 238, 240, 241, 247, 251, 252, 253, 254, 256, 264, 265, 266, 267, 299, 320, 336, 337], "td_project": 26, "is_empti": [26, 28, 332], "include_nest": [26, 28], "leaves_onli": [26, 28], "itemsview": 26, "immedi": [26, 28, 32, 73, 77, 91, 97, 263, 331], "children": [26, 28, 32, 73, 77, 91, 97], "keysview": [26, 28], "reflect": [26, 28, 92, 93, 149, 159, 249, 303, 326, 327, 328, 331], "lock_": [26, 28], "recurs": [26, 28, 32, 48, 49, 73, 77, 91, 97, 249], "succeed": [26, 28, 327, 331, 332], "selected_kei": [26, 28, 136, 325], "unlock_": [26, 28], "unlock": [26, 28], "valuesview": 26, "onehottensorspec": 27, "action_valu": [27, 33, 171, 172, 198, 215, 216, 222, 223, 241, 249, 262, 320, 328], "arang": [27, 33, 172, 187, 215, 291, 320, 334], "argmax": [27, 172, 198, 216, 223], "chosen_action_valu": [27, 33, 197, 198, 206, 222, 223, 262, 320, 328], "outcom": [27, 33, 170, 203], "lazi": [28, 29, 49, 50, 73, 77, 91, 97, 99, 128, 146, 162, 190, 226, 227, 325, 326, 330, 334, 337], "represent": [28, 29, 32, 73, 77, 91, 97, 128, 146, 148, 325, 332, 333, 337], "drawn": [28, 29, 140, 217, 221, 225, 327, 331], "lazystackedtensordict": [28, 73, 77, 87, 91, 97, 330, 336], "heterogen": [28, 29, 86, 92, 93, 152, 188, 189, 325, 326], "semant": [28, 29, 320], "thrown": [29, 32, 73, 77, 91, 97, 334], "nvec": [30, 31], "cardin": [30, 31, 172, 198, 215, 216, 223, 327], "ax": [30, 190, 191], "m": [30, 32, 73, 77, 91, 97, 113, 225, 320, 326, 332], "ts": [30, 31], "multionehotdiscretetensorspec": [30, 238, 241, 262, 318], "use_regist": [31, 33], "to_categor": [31, 33], "to_categorical_spec": [31, 33], "multidiscretetensorspec": [31, 318], "gamma": [32, 132, 185, 234, 235, 237, 238, 240, 241, 242, 243, 245, 247, 249, 251, 252, 253, 254, 256, 257, 258, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 312, 321, 325, 326, 327, 331, 336], "sutton": [32, 321, 331], "1988": 32, "tempor": [32, 177, 181, 185, 265, 266, 271, 272], "44": [32, 325, 326, 332], "discount": [32, 74, 132, 235, 240, 242, 243, 245, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 321, 326, 327, 331], "ahead": [32, 337], "add_modul": [32, 73, 77, 91, 97], "child": [32, 73, 77, 91, 97], "fn": [32, 37, 73, 77, 91, 97, 192, 314, 315], "init_weight": [32, 73, 77, 91, 97], "fill_": [32, 73, 77, 91, 97, 326, 328, 337], "net": [32, 73, 77, 91, 97, 182, 189, 234, 235, 241, 247, 251, 252, 253, 254, 309, 312, 326, 332, 333, 336], "in_featur": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 162, 163, 165, 166, 167, 168, 182, 183, 189, 190, 191, 210, 224, 238, 240, 336], "out_featur": [32, 73, 77, 87, 91, 97, 110, 128, 140, 143, 144, 146, 148, 161, 162, 163, 165, 166, 167, 168, 173, 174, 177, 181, 182, 183, 185, 188, 189, 190, 191, 210, 215, 224, 238, 240, 320, 325, 328, 336], "bia": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 162, 163, 173, 175, 176, 177, 179, 180, 181, 183, 189, 190, 191, 192, 217, 218, 220, 224, 231, 232, 233, 249, 254, 321, 325, 326, 327, 328, 331, 336], "requires_grad": [32, 73, 77, 91, 97, 122], "bfloat16": [32, 73, 77, 91, 97], "datatyp": [32, 73, 77, 91, 97, 334], "member": [32, 73, 77, 91, 97, 249], "xdoctest": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224, 249, 254], "skip": [32, 73, 77, 91, 97, 119, 144, 152, 221, 225, 249, 254, 264, 265, 266, 267, 282, 283, 293, 296, 325, 326, 327, 332], "buf": [32, 73, 77, 91, 97], "20l": [32, 73, 77, 91, 97, 249], "1l": [32, 73, 77, 91, 97, 249], "5l": [32, 73, 77, 91, 97, 249], "__call__": [32, 37, 73, 77, 91, 97, 225, 322], "doubl": [32, 46, 73, 77, 91, 97, 110, 111, 112, 114, 128, 140, 143, 144, 146, 148, 224, 238, 242, 246, 252, 255, 262, 325, 326, 327, 328, 337], "eval": [32, 73, 77, 91, 97, 144, 150, 325, 326, 327], "evalu": [32, 73, 77, 91, 97, 144, 170, 186, 187, 195, 205, 252, 305, 306, 326, 327], "dropout": [32, 73, 77, 91, 97, 144, 175, 177, 179, 181, 183, 328], "batchnorm": [32, 73, 77, 91, 97, 144], "disabl": [32, 73, 77, 91, 97, 144, 178, 205, 325], "comparison": [32, 73, 77, 91, 97, 144, 249, 325, 326], "similar": [32, 73, 77, 91, 92, 93, 97, 110, 128, 140, 143, 144, 146, 147, 148, 150, 210, 212, 221, 224, 225, 321, 325, 326, 327, 328, 332, 337], "confus": [32, 73, 77, 91, 97, 144], "extra_repr": [32, 73, 77, 91, 97], "shift": [32, 231, 264, 265, 266, 267, 327], "nontermin": 32, "original_reward": 32, "newli": [32, 73, 77, 91, 97], "OR": 32, "reshap": [32, 177, 181, 183, 327, 331], "get_buff": [32, 73, 77, 91, 97], "throw": [32, 73, 77, 91, 97, 337], "docstr": [32, 73, 77, 91, 97], "get_submodul": [32, 73, 77, 91, 97], "explan": [32, 73, 77, 91, 97], "qualifi": [32, 73, 77, 91, 97], "referenc": [32, 73, 77, 91, 97], "attributeerror": [32, 73, 77, 91, 97], "invalid": [32, 73, 77, 91, 97, 100, 186, 187], "resolv": [32, 73, 77, 91, 97], "someth": [32, 73, 77, 86, 91, 97, 319, 326, 327, 332, 337], "get_extra_st": [32, 73, 77, 91, 97, 150], "set_extra_st": [32, 73, 77, 91, 97, 150], "picklabl": [32, 73, 77, 91, 97, 150], "pickl": [32, 73, 77, 91, 97, 150], "get_paramet": [32, 73, 77, 91, 97], "sai": [32, 73, 77, 91, 97, 188, 333, 337], "net_b": [32, 73, 77, 91, 97], "net_c": [32, 73, 77, 91, 97], "conv": [32, 73, 77, 91, 97, 162, 163, 326], "conv2d": [32, 73, 77, 91, 97, 163, 188, 336], "kernel_s": [32, 73, 77, 91, 97, 162, 163, 165, 166, 188, 193, 326, 336], "stride": [32, 73, 77, 91, 97, 162, 163, 165, 166, 174, 188, 326, 336], "diagram": [32, 73, 77, 91, 97], "degre": [32, 73, 77, 91, 97], "named_modul": [32, 73, 77, 91, 97], "o": [32, 73, 77, 91, 97, 180], "transit": [32, 52, 73, 77, 91, 97, 230, 325, 328, 332, 334], "half": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224, 325], "ipu": [32, 73, 77, 91, 97], "strict": [32, 34, 36, 39, 73, 77, 91, 97, 144, 254], "descend": [32, 73, 77, 91, 97, 144, 254], "persist": [32, 73, 77, 91, 97, 144, 159, 254], "enforc": [32, 63, 73, 77, 91, 97, 144, 226, 254, 332], "preserv": [32, 73, 77, 91, 97, 144, 254], "missing_kei": [32, 73, 77, 91, 97, 144, 254], "unexpected_kei": [32, 73, 77, 91, 97, 144, 254], "namedtupl": [32, 73, 77, 91, 97, 144, 254], "duplic": [32, 63, 73, 77, 91, 97, 238, 242, 249, 262], "l": [32, 73, 77, 91, 97, 175, 179, 263, 327, 332], "idx": [32, 73, 77, 91, 97], "named_buff": [32, 73, 77, 91, 97], "remove_dupl": [32, 73, 77, 91, 97, 249], "prepend": [32, 73, 77, 91, 97, 249], "running_var": [32, 73, 77, 91, 97], "named_children": [32, 73, 77, 91, 97], "conv4": [32, 73, 77, 91, 97], "conv5": [32, 73, 77, 91, 97], "memo": [32, 73, 77, 91, 97], "named_paramet": [32, 73, 77, 91, 97, 122, 249], "register_backward_hook": [32, 73, 77, 91, 97], "removablehandl": [32, 73, 77, 91, 97], "deprec": [32, 73, 77, 91, 97, 144, 153, 157, 171, 218, 234, 235, 236, 238, 241, 242, 247, 248, 251, 252, 253, 254, 262, 264, 265, 266, 267, 272, 337], "favor": [32, 73, 77, 91, 97, 327], "register_full_backward_hook": [32, 73, 77, 91, 97], "register_buff": [32, 73, 77, 91, 97], "running_mean": [32, 73, 77, 91, 97], "alongsid": [32, 73, 77, 91, 97, 331], "num_featur": [32, 73, 77, 91, 97], "register_forward_hook": [32, 73, 77, 91, 97, 172, 198], "with_kwarg": [32, 73, 77, 91, 97], "always_cal": [32, 73, 77, 91, 97], "posit": [32, 35, 38, 41, 42, 52, 53, 54, 73, 77, 91, 97, 118, 119, 137, 138, 141, 144, 145, 192, 254, 321, 327, 331, 332, 334], "signatur": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224, 321, 325, 332], "register_module_forward_hook": [32, 73, 77, 91, 97], "regardless": [32, 73, 77, 91, 97, 236, 248, 251], "register_forward_pre_hook": [32, 73, 77, 91, 97], "invok": [32, 73, 77, 91, 97], "And": [32, 73, 77, 91, 97], "forward_pr": [32, 73, 77, 91, 97], "register_module_forward_pre_hook": [32, 73, 77, 91, 97], "grad_input": [32, 73, 77, 91, 97], "grad_output": [32, 73, 77, 91, 97], "subsequ": [32, 73, 77, 91, 97, 328], "technic": [32, 73, 77, 91, 97, 326, 328], "caller": [32, 73, 77, 91, 97], "register_module_full_backward_hook": [32, 73, 77, 91, 97], "register_full_backward_pre_hook": [32, 73, 77, 91, 97], "backward_pr": [32, 73, 77, 91, 97], "register_module_full_backward_pre_hook": [32, 73, 77, 91, 97], "register_load_state_dict_post_hook": [32, 73, 77, 91, 97], "incompatible_kei": [32, 73, 77, 91, 97], "clear": [32, 73, 77, 81, 91, 97, 292], "register_modul": [32, 73, 77, 91, 97, 322], "alia": [32, 73, 77, 91, 97], "register_paramet": [32, 73, 77, 91, 97], "register_state_dict_pre_hook": [32, 73, 77, 91, 97], "keep_var": [32, 34, 36, 39, 73, 77, 91, 97, 144, 254], "requires_grad_": [32, 73, 77, 91, 97], "autograd": [32, 73, 77, 91, 97, 144, 254], "freez": [32, 73, 77, 91, 97], "finetun": [32, 73, 77, 91, 97], "gan": [32, 73, 77, 91, 97], "share_memori": [32, 73, 74, 77, 91, 97, 325], "share_memory_": [32, 73, 77, 91, 97, 336], "destin": [32, 34, 36, 39, 73, 77, 91, 97, 111, 112, 114, 144, 146, 150, 159, 254, 283], "averag": [32, 73, 77, 91, 97, 144, 150, 220, 243, 244, 254, 298, 325, 327], "shallow": [32, 73, 77, 91, 97, 144, 254, 328], "pleas": [32, 53, 73, 77, 91, 92, 93, 97, 106, 141, 144, 254, 319], "detach": [32, 73, 77, 91, 97, 144, 249, 254, 264, 265, 266, 267, 325], "non_block": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224, 328], "memory_format": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224], "channels_last": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224], "complex": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224, 325, 326], "integr": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 168, 177, 181, 185, 224, 320, 331, 332, 333], "unchang": [32, 73, 77, 91, 97, 110, 113, 128, 140, 143, 144, 146, 148, 217, 224, 297, 325, 334], "tri": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224], "pin": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224], "4d": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224], "ignore_w": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224], "1913": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224], "3420": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224], "5113": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224], "2325": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224], "torch_doctest_cuda1": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224], "gpu1": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224], "1914": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224], "5112": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224, 332], "2324": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224], "float16": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 176, 180, 224], "cdoubl": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224], "3741": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224], "j": [32, 35, 59, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224, 322], "2382": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224], "5593": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224, 332], "4443": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224], "complex128": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224], "6122": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224], "1150": [32, 73, 77, 91, 97, 110, 128, 140, 143, 144, 146, 148, 224], "to_empti": [32, 73, 77, 91, 97], "dst_type": [32, 73, 77, 91, 97], "xpu": [32, 73, 77, 91, 97], "set_to_non": [32, 73, 77, 91, 97], "unidimension": 33, "keepdim": 33, "user_regist": 33, "priori": 33, "definit": [33, 64, 188], "uniqu": [33, 106, 115, 139, 140, 141, 334], "discretebox": [33, 73, 77, 91, 97, 327, 331, 337], "chosen_data": [34, 55], "rewarddata": [34, 55, 318], "rejected_data": [34, 55], "from_dataset": [34, 36, 55], "dataset_nam": [34, 36, 40, 45, 55, 90], "max_length": [34, 36, 37, 43, 45, 55], "550": [34, 36, 40, 45, 55, 332], "root_dir": [34, 36, 45, 55], "from_disk": [34, 36, 45, 55], "num_work": [34, 36, 45, 55, 88, 91, 97, 325, 326], "carperai": [34, 36, 40, 45], "openai_summarize_comparison": [34, 36, 45], "sequen": [34, 36], "cach": [34, 36, 45, 52, 53, 55, 73, 77, 91, 97, 111, 114, 128, 144, 148, 292, 333], "load_from_disk": [34, 36, 45, 55], "load_dataset": [34, 36, 45, 55], "attention_mask": [34, 36, 37, 39, 40, 43, 45, 55], "memorymappedtensor": [34, 36, 45, 56, 333], "92534": 34, "input_id": [34, 36, 37, 39, 40, 43, 45, 55], "end_scor": [34, 39, 40, 55], "sub_data": [34, 36], "from_dict": [34, 36, 39, 45], "batch_dim": [34, 36, 39, 45, 316], "determin": [34, 35, 36, 39, 41, 52, 59, 73, 77, 91, 97, 128, 148, 188, 220, 326, 331], "input_dict": [34, 36, 39], "exclusinv": [34, 36, 39], "__maximum__": [34, 36, 39], "toler": [34, 36, 39, 170, 203], "sie": [34, 36, 39], "input_td": [34, 36, 39], "from_tensordict": [34, 36, 39], "non_tensordict": [34, 36, 39], "_no_default_": [34, 36, 39], "getattr": [34, 36, 39], "tensorclass": [34, 36, 39, 55, 56, 57, 67], "from_flatten": [34, 36, 39], "attemptedli": [34, 36, 39], "setattr": [34, 36, 39], "tent": [34, 36, 39, 45], "flatten": [34, 36, 39, 118, 297, 328, 331], "to_tensordict": [34, 36, 39, 328], "memmap": [34, 36, 39, 56, 91, 97, 150, 297, 334], "unbind": [34, 36, 39, 177, 181], "alpha": [35, 41, 59, 162, 163, 188, 235, 241, 250, 252, 254, 325, 334, 336], "ep": [35, 41, 59, 150, 220, 236, 255, 298, 325, 326, 328], "1e": [35, 41, 59, 150, 170, 173, 192, 203, 325, 326, 327, 331], "08": [35, 41, 59, 325, 326, 327, 331, 332], "collate_fn": [35, 38, 41, 42, 52, 53, 54, 334, 336], "prefetch": [35, 38, 41, 42, 52, 53, 54, 55, 325, 326, 328, 334], "schaul": [35, 59], "quan": [35, 59], "antonogl": [35, 59], "silver": [35, 59], "2015": [35, 59], "arxiv": [35, 59, 106, 128, 146, 164, 165, 166, 167, 168, 169, 172, 173, 174, 179, 185, 191, 193, 194, 196, 197, 199, 200, 206, 216, 220, 234, 235, 238, 239, 240, 242, 243, 244, 245, 246, 247, 250, 251, 254, 255, 264, 269, 277, 333], "ab": [35, 59, 128, 146, 150, 164, 169, 173, 174, 179, 185, 191, 193, 194, 196, 197, 199, 200, 206, 234, 235, 238, 239, 240, 243, 244, 245, 246, 247, 250, 251, 254, 333], "1511": [35, 59, 174], "05952": [35, 59], "expon": [35, 41, 59], "\u03b1": [35, 41, 59], "delta": [35, 41, 59, 175, 179, 203, 221, 225, 318, 321], "null": [35, 41, 59, 105], "max_siz": [35, 38, 41, 42, 56, 57, 58, 64, 67], "1_000": [35, 38, 41, 42, 334], "merg": [35, 38, 41, 42, 52, 53, 54, 332], "mini": [35, 38, 41, 42, 52, 53, 54, 331], "decid": [35, 38, 41, 42, 336], "meth": [35, 38, 41, 42, 249, 332], "incompat": [35, 38, 41, 42, 334], "drop_last": [35, 38, 41, 42, 63], "return_info": [35, 38, 41, 42, 52, 53, 54, 334], "tensordictprioritizedreplaybuff": [35, 318, 336], "simplifi": [35, 332, 334], "manual_se": [35, 38, 41, 42, 104, 113, 124, 132, 135, 139, 141, 186, 187, 195, 209, 216, 217, 218, 220, 228, 234, 235, 237, 247, 254, 331, 332, 336, 337], "_weight": [35, 41, 334, 336], "arrai": [35, 40, 115, 175, 176, 179, 180, 325, 334], "update_prior": [35, 59, 297, 322, 326, 334, 336], "36278465": 35, "tempfil": [35, 38, 41, 42, 45, 52, 53, 54, 312, 325, 326, 334], "tqdm": [35, 38, 41, 42, 52, 53, 54, 300, 325, 327, 328, 331, 332], "randomsampl": [35, 38, 41, 42, 52, 53, 54, 318, 325], "1_000_000": [35, 38, 41, 42, 52, 53, 54, 325, 328], "td_error": [35, 38, 41, 42, 52, 53, 54, 235, 237, 238, 240, 241, 242, 247, 249, 252, 254, 256, 262, 325, 334, 336], "update_tensordict_prior": [35, 38, 41, 42, 52, 53, 54, 325, 334, 336], "temporarydirectori": [35, 38, 41, 42, 45, 52, 53, 54, 325, 326, 334], "tmpdir": [35, 38, 41, 42, 45, 52, 53, 54, 325, 326], "rb_load": [35, 38, 41, 42, 52, 53, 54], "cursor": [35, 38, 41, 42, 52, 53, 54], "insert_transform": [35, 38, 41, 42, 52, 53, 54], "insert": [35, 38, 41, 42, 52, 53, 54, 61, 65, 66, 68, 145], "prompt_rindex": [36, 37, 40], "label": [36, 37, 40, 45, 325, 334], "os": [36, 45, 55, 326], "cpu_count": [36, 45, 55], "promptdatatldr": 36, "116722": 36, "prompt": [37, 40], "return_tensordict": [37, 43], "recip": [37, 73, 77, 91, 97, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 188, 189, 192, 193, 194, 196, 199, 200, 202, 207, 213, 214, 216, 217, 218, 220, 223, 228, 231], "text": [37, 40, 43, 53, 175, 176, 179, 180, 220, 327], "tensodict": [37, 43], "orign": [37, 43], "valid_sampl": 37, "identifi": 37, "eough": 37, "toknen": 37, "meet": 37, "criterion": 37, "autotoken": [37, 43, 45], "from_pretrain": [37, 40, 43], "gpt2": [37, 40, 43, 45, 164, 169, 196], "pad_token": [37, 43], "eos_token": 37, "enough": [37, 334], "inde": [37, 113, 327, 332], "roundrobinwrit": [38, 42, 52, 53, 54, 318], "Not": 38, "ref_model": 40, "reward_model": [40, 230], "kl_coef": 40, "max_new_token": 40, "score_clip": 40, "kl_schedul": 40, "klcontrollerbas": 40, "num_step": 40, "causal": 40, "sentenc": 40, "frozen": [40, 122], "kl": [40, 122, 244, 248], "penalti": [40, 248], "strai": 40, "far": [40, 178, 204, 205, 332, 337], "calcul": [40, 132, 175, 240], "gpt2rewardmodel": 40, "get_dataload": [40, 318], "promptdata": [40, 318], "gpt2lmheadmodel": 40, "dl": 40, "block_siz": [40, 55], "tensorclass_typ": [40, 55], "openai_summarize_tldr": 40, "config_class": 40, "model_path": 40, "rollout_from_model": 40, "rollout_from_data": 40, "600": [40, 332, 334], "reward_kl": [40, 122], "reward_raw": 40, "sample_log_prob": [40, 210, 211, 212, 221, 225, 227, 251, 309, 327, 331, 336], "create_rollout_td": 40, "log_prob": [40, 170, 186, 187, 195, 205, 225], "log_ratio": 40, "replic": 40, "rindex": 40, "multipli": [40, 175, 179, 235, 236, 241, 248, 250, 251, 252, 254, 298, 325], "term": [40, 122, 179, 180, 190, 191, 233, 234, 241, 302, 326, 327, 331], "subtract": [40, 139], "ve": [40, 325, 328], "eo": 40, "limit": [40, 87, 106, 122, 325, 326, 328, 331, 332], "generation_config": 40, "generationconfig": 40, "ti": [40, 273, 274, 275, 276, 278, 279, 280, 281, 326], "log_probs_gen": 40, "logprobs_of_label": 40, "priority_kei": [41, 42, 235, 238, 241, 242, 247, 249, 252, 254, 256, 262, 334, 336], "reduct": [41, 59], "prioritizedreplaybuff": [41, 318, 336], "min": [41, 59, 203, 204, 205, 214, 220, 235, 236, 241, 250, 252, 254, 326, 327, 331], "median": [41, 59, 221, 225], "include_info": [41, 42, 52, 53, 54], "kw": [42, 61, 66], "int32": [42, 83, 156], "huggingfac": [43, 219], "co": [43, 115, 332], "doc": [43, 326, 331], "pad_trunc": 43, "am": 43, "worri": 43, "me": 43, "reassur": 43, "ok": 43, "tokenizer_fn": 45, "tensordicttoken": [45, 318], "pre_tokenization_hook": 45, "valid_s": 45, "tokenizer_class": 45, "tokenizer_model_nam": 45, "tokein": 45, "condit": [45, 139, 215, 216, 222, 223, 233, 325, 332, 334], "elementwis": 45, "vocabulari": 45, "loader": [45, 327], "185068": 45, "dataset_to_tensordict": 45, "data_dir": 45, "nestedkei": [45, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 116, 118, 120, 121, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 146, 150, 159, 160, 213, 214, 217, 218, 220, 225, 238, 262, 283], "valid_mask_kei": 45, "conver": 45, "undergon": 45, "preprocess": [45, 326], "batch_dimens": 45, "filder": 45, "randint": [45, 142, 334], "data_memmap": 45, "exclus": [48, 49, 118, 175, 177, 179, 181, 186, 187, 215, 216, 222, 223, 255, 256, 264, 265, 266, 267, 268, 316, 320], "recurse_through_entri": 49, "recurse_through_stack": 49, "consolid": 49, "from_env": 52, "use_truncated_as_don": 52, "direct_download": 52, "terminate_on_end": 52, "env_kwarg": [52, 53, 314, 315, 325], "reconstruct": [52, 244, 325, 337], "recov": [52, 53, 213, 218, 220, 226, 247, 330], "regard": [52, 53, 172, 216, 234, 242, 251, 325, 327, 332], "get_dataset": 52, "qlearning_dataset": 52, "fewer": 52, "left": [52, 110, 111, 112, 116, 122, 128, 130, 136, 138, 141, 143, 146, 148, 217, 326, 327], "possess": 52, "unexpectedli": 52, "episod": [52, 77, 132, 135, 139, 161, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 326, 331], "absent": [52, 73, 77, 91, 97], "traj_split": 52, "dataset_id": [52, 53], "observationnorm": [52, 150, 316, 325, 326, 327, 328, 336], "maze2d": 52, "umaz": 52, "128": [52, 166, 169, 326, 328, 332, 333, 334], "loc": [52, 122, 124, 134, 178, 192, 204, 205, 210, 211, 212, 221, 225, 227, 234, 235, 247, 251, 252, 253, 254, 304, 309, 316, 320, 325, 326, 327, 328, 331, 336], "minari": 53, "currenrtli": 53, "minari_data": 53, "door": 53, "28": [53, 188, 325, 326, 332], "39": [53, 324, 326, 332, 333, 334, 335], "door_body_po": 53, "qpo": 53, "30": [53, 123, 199, 200, 324, 325, 326, 327, 331, 332, 335, 337], "qvel": 53, "dua": 54, "graff": 54, "2017": 54, "uci": 54, "archiv": 54, "ic": 54, "edu": 54, "ml": 54, "sklearn": 54, "adult_num": [54, 90], "adult_onehot": [54, 90], "mushroom_num": [54, 90], "mushroom_onehot": [54, 90], "covertyp": [54, 90], "shuttl": [54, 90], "magic": [54, 90], "infinit": [55, 334], "three": [55, 320, 322, 327, 331, 332, 334, 337], "block": [55, 320, 328], "pairwisedataset": [55, 318], "256": [55, 169, 325, 326, 327, 331, 332], "scratch_dir": [56, 325, 334], "mistak": [56, 57, 67], "myclass": [56, 57, 67], "foo": [56, 57, 67, 214, 334, 337], "bar": [56, 57, 67, 214, 293, 294, 296, 300, 322, 326], "attach": [56, 57, 58, 64, 67, 326], "entiti": [56, 57, 58, 64, 67], "alloc": [57, 186, 187, 325], "auto": [57, 67, 149, 220, 235, 241, 250, 252, 254, 256, 321, 331], "zero_": [57, 67, 156], "max_capac": [59, 325, 334], "uniformli": [60, 249, 337], "roundrobin": [61, 66], "piec": [61, 66, 68, 325, 326, 327, 331, 332, 334], "consum": [63, 326, 327, 331, 334], "incomplet": 63, "unlik": [63, 242, 251, 326, 336], "fresh": 63, "caution": [63, 152, 337], "shuffl": [63, 331], "haven": [63, 333], "remain": [63, 112, 113, 122, 139, 191], "draw": [63, 217], "__len__": 64, "rank_kei": 65, "rank": [65, 161], "samplerwithoutreplac": [65, 318, 327, 331, 334], "19": [65, 325, 326, 327, 328, 332], "get_insert_index": 65, "googl": [69, 70, 327, 328, 331], "ant": [69, 70, 80, 333], "get_environ": 70, "87": [70, 326, 332, 333], "acrobot": [70, 337], "fetch": [70, 122, 333, 334], "task_nam": 71, "cheetah": [71, 72, 325], "frame_skip": [71, 72, 76, 77, 82, 84, 85, 119, 293, 296, 303, 322, 325, 326, 327, 336], "dm_control": [72, 325, 330, 337], "continuousbox": [73, 77, 91, 97, 156, 327, 331, 332, 336, 337], "unboundedcontinuoustensorspec": [73, 77, 87, 91, 97, 104, 111, 114, 140, 156, 161, 185, 209, 224, 227, 229, 253, 318, 327, 328, 331, 332, 337], "sort": [73, 77, 91, 97, 220], "depth": [73, 77, 87, 91, 97, 161, 162, 163, 165, 166, 167, 168, 173, 174, 183, 185, 188, 189, 193, 194, 215, 320, 326, 330, 331], "another_act": [73, 77, 91, 97], "mutabl": [73, 77, 91, 97], "batch_lock": [73, 75, 77, 91, 97, 140, 144, 332], "immut": [73, 77, 91, 97, 130, 144], "done_keys_group": [73, 77, 91, 97], "outer": [73, 77, 91, 97, 322, 325, 326, 337], "another_don": [73, 77, 91, 97], "empty_cach": [73, 77, 91, 97, 144], "fake_tensordict": [73, 77, 91, 97, 326], "fake": [73, 77, 91, 97, 325, 326], "afterward": [73, 77, 91, 97, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 188, 189, 192, 193, 194, 196, 199, 200, 202, 207, 213, 214, 216, 217, 218, 220, 223, 228, 231, 337], "silent": [73, 77, 91, 97, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 188, 189, 192, 193, 194, 196, 199, 200, 202, 207, 213, 214, 216, 217, 218, 220, 223, 228, 231], "braxenv": [73, 77, 91, 97, 130, 318], "envnam": [73, 77, 91, 97], "mimic": [73, 77, 91, 97], "renametransform": [73, 77, 91, 97], "pipeline_st": [73, 77, 91, 97], "15": [73, 77, 91, 97, 214, 220, 243, 325, 326, 327, 328, 331, 332, 334], "attibut": [73, 77, 91, 97], "speak": [73, 77, 91, 97, 325], "rand_act": [73, 77, 86, 91, 92, 93, 97], "_step": [73, 77, 91, 97, 104, 111, 114, 118, 130], "reset_kei": [73, 77, 91, 97, 106, 135, 139, 140, 141], "multitask": [73, 77, 91, 97], "multiag": [73, 77, 86, 91, 92, 93, 97, 160, 189, 197, 206, 262], "another_reward": [73, 77, 91, 97], "callback": [73, 77, 91, 97, 331], "auto_reset": [73, 77, 91, 97, 332], "auto_cast_to_devic": [73, 77, 91, 97, 331], "break_when_any_don": [73, 77, 91, 97, 331], "return_contigu": [73, 77, 91, 97, 152, 330], "soon": [73, 77, 91, 92, 93, 97], "ndim": [73, 77, 91, 97], "concomitt": [73, 77, 91, 97], "workspac": [73, 77, 91, 97], "prevail": [73, 77, 91, 97, 135, 160], "cartpol": [73, 77, 91, 97, 106, 135, 139, 326, 328, 334, 337], "creator": [74, 305, 306, 314, 315, 316], "substitut": [74, 139, 150], "vecnorm": [74, 316], "env_creat": [74, 325], "test_env1": 74, "observation_count": [74, 337], "test_env2": 74, "sleep": [74, 337], "ps": 74, "p1": 74, "p2": 74, "9934": 74, "env_str": 75, "info_dict_read": 77, "set_info_dict_read": 77, "put": [77, 99, 150, 316, 320, 326, 327, 328, 332], "read_act": 77, "read_don": 77, "reader": [77, 326], "interrupt": [77, 270], "nonsens": 77, "fallback": 77, "broken": [77, 152], "read_ob": 77, "dictat": [77, 221, 225, 251, 325, 332], "read_reward": 77, "baseinfodictread": 77, "info_dict": 77, "hoc": 77, "dict_read": 77, "default_info_dict_read": 77, "my_info_kei": 77, "some_env": 77, "placehold": [79, 115, 144], "secur": 79, "isaacgym": [80, 81], "isaacgymwrapp": [80, 318], "isaacgymenv": [81, 318], "webpag": 81, "isaac": 81, "essenc": 81, "04": [81, 325, 326, 327, 332, 333], "snake": [82, 83], "6x6": [82, 83], "td1": [83, 234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 262, 325], "12x12": 83, "tsp50": 83, "tsp100": 83, "mo": [84, 85], "minecart": [84, 85], "mo_gym": 85, "qualnam": 86, "marl": [86, 100, 106, 141, 188, 331], "leverag": [86, 92, 93, 325, 331, 337], "neural": [86, 92, 93, 162, 163, 201, 224, 320, 326, 327, 328, 331, 332, 337], "group_map": [86, 92, 93, 99, 100], "constructiuon": [86, 92, 93], "premad": [86, 92, 93, 99, 262], "all_in_one_group": [86, 100], "agent_0": [86, 92, 93, 100], "agent_1": [86, 92, 93, 100], "agent_2": [86, 92, 93, 100], "agent_3": 86, "int8": [86, 92, 93], "one_group_per_ag": [86, 92, 93], "environn": 87, "constraint": [87, 327, 331], "mymbenv": [87, 161, 185], "world_model": [87, 161, 185, 244], "super": [87, 104, 111, 114, 161, 172, 185, 229, 235, 237, 241, 247, 252, 254, 256, 325, 332, 336], "hidden_observ": [87, 161, 185], "mlp": [87, 161, 162, 163, 165, 166, 167, 168, 177, 181, 182, 185, 189, 210, 215, 238, 240, 309, 320, 326, 330, 333, 336], "worldmodelwrapp": [87, 161, 185], "activation_class": [87, 161, 162, 163, 165, 166, 167, 168, 173, 174, 183, 185, 188, 189, 326, 331, 336], "relu": [87, 161, 169, 185, 192, 233], "activate_last_lay": [87, 161, 168, 183, 185], "run_type_check": 87, "less": [88, 207, 314, 315, 321, 327, 328, 334, 336], "readthedoc": 88, "en": 88, "python_interfac": 88, "task_id": 88, "106": [90, 332], "my_env_fun": [91, 97], "custom_attribute_list": [91, 97], "custom_attribut": [91, 97], "custom_method_list": [91, 97], "custom_method": [91, 97], "deploi": [91, 97], "slight": [91, 97, 326], "share_individual_td": [91, 97], "shared_memori": [91, 97], "policy_proof": [91, 97], "ll": [91, 97, 175, 176, 179, 180, 325, 326, 327, 328, 331, 337], "hidden": [91, 97, 173, 175, 176, 177, 179, 180, 181, 182, 193, 194, 199, 200, 210, 211, 212, 214, 224, 227, 236, 248, 251, 320, 328, 330, 336], "introduc": [91, 97, 175, 177, 179, 181, 220, 325], "drastic": [91, 334], "influenc": 91, "rule": [91, 111, 114, 225, 320, 327], "thumb": [91, 327], "suppos": [91, 296, 322, 337], "scenario": [91, 98, 99, 325, 331, 332], "myenv": [91, 111, 114], "update_kwarg": [91, 97], "pettingzoo": [92, 93], "pet": [92, 93], "zoo": [92, 93], "guid": [92, 93, 95, 96, 139, 319, 325, 331], "__": [92, 93], "aecenv": [92, 93], "use_mask": [92, 93], "dead": [92, 93], "compulsori": [92, 93], "adversary_0": [92, 93], "adversari": [92, 93], "marlgroupmaptyp": [92, 93, 99, 100, 318], "vectoris": [92, 93, 175, 176, 179, 180], "multiwalker_v9": 92, "return_st": [92, 93], "categorical_act": [92, 93, 95, 96, 99], "n_piston": [92, 93], "pistonball_v6": [92, 93], "piston": [92, 93], "piston_0": [92, 93], "piston_1": [92, 93], "piston_20": [92, 93], "aec": [92, 93], "tictactoe_v3": [92, 93], "player": [92, 93], "player_1": [92, 93], "player_2": [92, 93], "butterfli": 93, "parallel_env": [93, 325, 336, 337], "roboh": 94, "vikashplu": 94, "read_info": 94, "pars": [94, 334], "smacv2": [95, 96], "starcraft": [95, 96], "challeng": [95, 96, 332, 333], "v2": [95, 96, 259, 273, 274, 275, 276, 278, 279, 280, 281, 309, 328], "10gen_terran": [95, 96], "10gen_zerg": [95, 96], "10gen_protoss": [95, 96], "3m": [95, 96, 333], "8m": [95, 96, 333], "25m": [95, 96], "5m_vs_6m": [95, 96], "8m_vs_9m": [95, 96], "10m_vs_11m": [95, 96], "27m_vs_30m": [95, 96], "mmm": [95, 96], "mmm2": [95, 96], "2s3z": [95, 96], "3s5z": [95, 96], "3s5z_vs_3s6z": [95, 96], "3s_vs_3z": [95, 96], "3s_vs_4z": [95, 96], "3s_vs_5z": [95, 96], "1c3s5z": [95, 96], "2m_vs_1z": [95, 96], "corridor": [95, 96], "6h_vs_8z": [95, 96], "2s_vs_1sc": [95, 96], "so_many_banel": [95, 96], "bane_vs_ban": [95, 96], "2c_vs_64zg": [95, 96], "old": [95, 96, 248, 337], "smac": [95, 96], "map_nam": [95, 96], "18": [95, 96, 98, 99, 189, 326, 331, 332, 333, 337], "176": [95, 96, 332], "battle_won": [95, 96], "dead_al": [95, 96], "dead_enemi": [95, 96], "episode_limit": [95, 96], "322": [95, 96, 332], "Or": [95, 96, 188], "procedur": [95, 96], "distribution_config": [95, 96], "n_unit": [95, 96], "n_enemi": [95, 96], "team_gen": [95, 96], "dist_typ": [95, 96], "weighted_team": [95, 96], "unit_typ": [95, 96], "marin": [95, 96], "maraud": [95, 96], "medivac": [95, 96], "exception_unit_typ": [95, 96], "start_posit": [95, 96], "surrounded_and_reflect": [95, 96], "map_x": [95, 96], "map_i": [95, 96], "capability_config": [95, 96], "88": [95, 96, 325, 326, 332], "131": [95, 96, 332, 334], "starcraft2env": 96, "flock": [98, 99], "continuous_act": [98, 99, 331], "agent_collision_rew": [98, 99], "agent_distance_rew": [98, 99], "agent_nam": [99, 100], "agent_names_to_indices_map": 99, "unbatched_action_spec": [99, 331], "unbatched_observation_spec": 99, "unbatched_reward_spec": 99, "het_spec": 99, "het_specs_map": 99, "ca": 100, "environment4": 100, "get_group_map": 100, "sumbodul": 101, "model_bas": [102, 161, 185], "adapt": [104, 248, 325, 332], "masker": 104, "binarydiscretetensorspec": [104, 238, 241, 262, 318], "maskedenv": 104, "ones_lik": 104, "scatter": 104, "unsqueez": [104, 106, 107, 142, 145, 182, 325, 328, 331, 332], "_set_se": [104, 111, 114, 332], "transform_reward_spec": [105, 109, 110, 111, 112, 116, 122, 130, 133, 134, 136, 138, 143, 145], "padding_valu": [106, 186, 187], "as_invers": 106, "account": [106, 186, 187, 320, 326, 328, 334, 337], "movement": 106, "veloc": [106, 331, 332, 337], "propos": [106, 115, 184, 246, 255, 309, 320, 328, 334], "pdf": [106, 164, 165, 166, 167, 168, 172, 196, 216, 220, 242, 252, 255, 264, 269, 277, 309], "1312": [106, 326], "5602": 106, "constant": [106, 124, 139, 322, 325, 327, 328, 337], "unsqueezetransform": [106, 332, 334], "consumpt": 106, "followin": 106, "pictur": 106, "pixels_trsf": [106, 334], "grayscal": [106, 326, 328, 334, 337], "data_exclud": [106, 334], "transform_observation_spec": [106, 107, 108, 109, 110, 111, 112, 115, 116, 118, 120, 121, 122, 124, 126, 130, 131, 135, 136, 138, 139, 140, 141, 142, 143, 145, 146, 149, 332], "del_kei": [107, 146, 330, 332], "unsqueeze_if_oor": 107, "observation_posit": 107, "observation_veloc": 107, "delet": 107, "key1": [107, 291, 299], "key2": [107, 291, 299], "crop": [108, 129, 283], "center": [108, 283], "width": [108, 131], "height": [108, 131], "squar": [108, 178, 204, 205, 283], "out_keys_inv": [109, 111, 114, 124, 125, 126, 130, 143, 332], "scalar": [109, 133, 166, 168, 190, 191, 213, 217, 218, 220, 231, 234, 235, 236, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 262, 264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 320, 326, 332], "permit": [109, 118, 145], "rewardsc": [110, 144, 325, 326, 328], "rewardclip": 110, "transformed_env": [110, 143, 144], "transform_env_devic": [110, 112, 143], "transform_input_spec": [110, 111, 112, 113, 124, 126, 130, 135, 138, 139, 140, 143, 145, 147], "transform_output_spec": [110, 111, 112, 116, 122, 130, 136, 138, 143], "untouch": [110, 111, 112, 116, 122, 130, 136, 138, 143], "transformfull_done_spec": [110, 111, 112, 116, 122, 130, 136, 138, 143], "dtype_in": 111, "dtype_out": 111, "scan": [111, 114, 226, 227], "resp": [111, 114], "not_transform": [111, 114], "constructedw": [111, 114], "orig_devic": 112, "unspecifi": 112, "transform_done_spec": [112, 143], "num_actions_effect": 113, "max_act": 113, "include_forward": 113, "dimension": [113, 177, 181, 264, 269, 277, 331], "num_act": [113, 241], "action_out": 113, "_call": [113, 118, 332], "eol_kei": 115, "life": 115, "lives_kei": 115, "eol_attribut": 115, "unwrap": 115, "al": [115, 126, 161, 337], "breakout": 115, "v5": [115, 126, 337], "210": [115, 126, 332, 337], "160": [115, 126, 326, 332, 337], "eol_transform": 115, "eol": 115, "dqnloss": [115, 234, 235, 237, 240, 241, 242, 243, 246, 247, 249, 251, 252, 253, 254, 255, 256, 257, 262, 307, 318, 321, 326, 328], "action_spac": [115, 172, 198, 215, 216, 222, 223, 234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 262, 328], "register_kei": 115, "loss_or_advantag": 115, "lossmodul": [115, 300, 311, 312, 318], "valueestimatorbas": [115, 249, 318], "excluded_kei": 116, "finit": [117, 334], "first_dim": 118, "last_dim": 118, "allow_positive_dim": [118, 145], "th": [118, 145, 175, 179, 332], "frameskip": 118, "repeatedli": [119, 327, 331], "init_kei": 121, "is_init": [121, 177, 181, 220, 328], "tracker": 121, "coef": 122, "pi_curr": 122, "pi_0": 122, "overfit": 122, "fine": [122, 333], "probabilist": [122, 221, 318, 327, 336], "get_dist": [122, 225, 226], "mod": [122, 177, 181, 228, 328], "normalparamextractor": [122, 320, 327, 331], "probabilisticactor": [122, 210, 211, 212, 214, 234, 235, 239, 241, 247, 250, 251, 252, 253, 254, 256, 320, 325, 327, 331], "tanhnorm": [122, 210, 211, 212, 221, 227, 234, 235, 247, 251, 252, 253, 254, 256, 318, 327, 331, 336], "n_ob": [122, 234, 235, 237, 238, 240, 241, 247, 251, 252, 253, 254, 256], "n_act": [122, 234, 235, 237, 238, 240, 241, 247, 251, 252, 253, 254, 256], "return_log_prob": [122, 210, 211, 212, 221, 225, 227, 253, 320, 327, 331, 336], "apply_": 122, "copy_": [122, 325], "formulat": 122, "diverg": [122, 177, 181, 221, 225, 244, 248], "noop": [123, 336], "trial": 123, "op": [123, 149, 213, 217, 218, 302], "randomli": [123, 124, 140, 217, 221, 225, 331, 332, 334], "standard_norm": [124, 134, 325, 326, 328], "affin": [124, 134], "layer": [124, 150, 162, 163, 165, 166, 173, 175, 176, 177, 179, 180, 181, 183, 188, 189, 190, 191, 193, 194, 201, 202, 208, 219, 228, 320, 326, 327, 328, 333], "normal": [124, 150, 162, 163, 178, 183, 186, 187, 192, 204, 205, 213, 221, 225, 236, 248, 251, 296, 298, 316, 320, 322, 328, 331, 337], "set_default_tensor_typ": 124, "doubletensor": 124, "isclos": 124, "next_ob": [124, 264, 265, 266, 267, 336], "rubric": [124, 227], "init_stat": [124, 325, 326, 327, 328], "3752e": 124, "01": [124, 220, 231, 236, 248, 251, 324, 325, 326, 328, 331, 332, 333, 335], "5087e": 124, "03": [124, 324, 325, 326, 332, 333, 335], "9294e": 124, "9636": 124, "5608": 124, "6408": 124, "num_it": [124, 326, 327], "reduce_dim": [124, 325, 326, 327, 328], "cat_dim": [124, 325, 326, 327, 328], "keep_dim": [124, 326, 328], "statist": [124, 150, 253, 316, 325, 326, 327, 337], "approach": [124, 325, 327, 337], "gaussian": [124, 140, 161, 185, 190, 191, 196, 213, 327], "empir": [124, 161, 185, 221, 225, 325, 327, 331], "3d": [124, 162], "third": [124, 216, 331], "reorder": 126, "in_keys_in": 126, "pong": [126, 337], "channel": [126, 188, 193, 194, 326], "r3m": [128, 333], "resnet": [128, 146, 148], "visual": [128, 146, 148, 327, 332], "embed": [128, 146, 147, 148, 197, 209, 210, 211, 212, 224, 229, 333], "ego4d": [128, 146, 148], "univers": [128, 146, 148], "suraj": [128, 146], "nair": [128, 146], "aravind": [128, 146], "rajeswaran": [128, 146], "vikash": [128, 146, 148], "kumar": [128, 146, 148], "chelsea": [128, 146], "finn": [128, 146], "abhinav": [128, 146], "gupta": [128, 146], "2203": [128, 146, 185, 333], "12601": [128, 146, 333], "_init": [128, 146, 325], "snippet": [128, 146, 325], "resnet50": [128, 148, 333], "model_nam": [128, 146, 148, 286], "resnet34": 128, "resnet18": 128, "r3m_vec": [128, 333], "feed": [128, 148, 249, 320, 325, 331, 334], "244": [128, 148, 332], "stack_imag": [128, 148], "tread": [128, 148], "separet": [128, 148], "hub": [128, 148, 333], "resnet50_weight": [128, 148], "imagenet1k_v1": [128, 148], "download_path": [128, 148], "tensor_pixels_kei": [128, 148], "dest": [128, 146, 148, 224], "sub_seq_len": 129, "sample_dim": [129, 325], "primarili": 129, "hesit": 129, "request": 129, "robust": 129, "mix": [129, 197, 206, 262, 325, 331], "improp": 129, "create_copi": 130, "renam": [130, 132, 159, 325], "stuff": 130, "newnam": 130, "interpol": [131, 326, 328], "bilinear": [131, 328], "truncated_kei": [132, 138], "r2g": 132, "99": [132, 150, 185, 245, 258, 263, 270, 312, 325, 326, 327, 331, 332, 336], "reward_to_go": 132, "bernoulli_": 132, "9010": 132, "9404": [132, 270], "9701": [132, 270], "9900": [132, 270], "0000": [132, 141, 217, 218, 228, 270, 327, 328, 332, 336], "crash": 132, "clamp_min": 133, "clamp_max": 133, "clip_min": 133, "clip_max": 133, "episode_": 135, "reward1": 135, "reward2": 135, "episode_reward": [135, 331], "keep_reward": 136, "keep_don": 136, "excludetransform": [136, 334], "squeeze_dim": 137, "step_count_kei": 138, "update_don": 138, "adaptec": 138, "accordingli": [138, 139, 179, 222, 328], "completet": 138, "recognis": 138, "accompani": 138, "target_return": 139, "chosen": [139, 140, 197, 198, 206, 223, 309, 320], "primer": [140, 328], "default_valu": [140, 328], "unit": [140, 161, 173, 175, 176, 193, 194, 199, 200, 327], "transfomedenv": 140, "mykei": 140, "__unless": 140, "exists__": 140, "pool": 141, "increas": [141, 220, 331], "10th": 141, "0216": 141, "1149": 141, "1990": 141, "2749": 141, "3281": 141, "9290": 141, "3702": 141, "8978": 141, "from_int": 142, "255": [142, 332, 334], "ri": 142, "principl": 143, "cattransform": 143, "notabl": 143, "rewardsum": [143, 331], "cache_spec": 144, "anymor": [144, 224], "set_missing_toler": 144, "keyerror": 144, "unsqueeze_dim": [145, 332], "danger": 145, "vc1": 146, "vc1_vec": 146, "small": [146, 325, 327, 331, 337], "untrain": 146, "make_noload_model": 146, "naiv": 146, "vip": [147, 148, 333], "toward": 148, "implicit": [148, 247, 334], "jason": 148, "ma": 148, "shagun": 148, "sodhani": 148, "dinesh": 148, "jayaraman": 148, "osbert": 148, "bastani": 148, "ami": 148, "zhang": 148, "vip_vec": 148, "final_nam": 149, "sb3": 149, "terminal_obs_read": 149, "truli": [149, 336], "till": 149, "22": [149, 324, 325, 326, 327, 328, 331, 332, 333, 335], "did": [149, 270, 326, 327, 334, 337], "nan": 149, "shared_td": 150, "decai": [150, 213, 217, 218, 255, 298, 325, 326, 328, 337], "9999": [150, 332], "0001": [150, 173, 192, 327, 332], "fly": [150, 248, 321, 327, 332, 334, 337], "to_observation_norm": 150, "underflow": [150, 298], "build_td_for_shared_vecnorm": 150, "memmori": 150, "memmap_": 150, "queue": [150, 334], "td_share": 150, "v": [150, 175, 176, 179, 180, 210, 247, 254, 320, 325, 326], "state_dim": [151, 164, 169, 196, 199, 200, 214], "action_dim": [151, 164, 165, 167, 169, 196, 214, 325, 330], "gsde": [151, 252, 316], "func": 151, "gsdemodul": 151, "check_dtyp": 152, "short": [152, 179, 180, 326, 327, 331], "discrep": [152, 234, 236, 237, 238, 248, 251, 253, 262], "imposs": 152, "probabilistictdmodul": [157, 158, 183, 221, 225, 263, 296], "next_tensordict": 159, "keep_oth": [159, 332], "exclude_reward": 159, "exclude_don": 159, "exclude_act": 159, "next_": 159, "funtion": 159, "write_full_fals": 160, "leav": [160, 325], "_terminated_or_trunc": 160, "cross": 161, "entropi": [161, 234, 235, 236, 241, 247, 248, 250, 251, 252, 254, 256, 331], "botev": 161, "et": 161, "2013": 161, "cem": 161, "plan": [161, 184, 185], "varianc": [161, 178, 192, 204, 205, 321, 325, 327, 331], "k": [161, 175, 176, 179, 180], "repeat": [161, 327, 331, 332], "maximis": [161, 165, 167, 185, 320, 325, 326, 327, 331], "horizon": [161, 185, 327], "modelbasedenv": [161, 185], "planning_horizon": [161, 185], "optim_step": [161, 185, 326], "mpc": [161, 184, 185], "num_candid": [161, 185], "candid": [161, 185], "top_k": [161, 185], "modelbasedenvbas": [161, 184, 185, 318], "safemodul": [161, 184, 210, 212, 225, 234, 235, 241, 247, 251, 252, 253, 254, 256, 305, 306, 312, 318, 336], "num_cel": [162, 163, 165, 166, 167, 168, 173, 174, 177, 181, 183, 188, 189, 210, 326, 327, 328, 331, 336], "elu": [162, 163, 165, 166, 167, 168, 173, 174, 188, 326, 336], "activation_kwarg": [162, 163, 183], "norm_class": [162, 163, 165, 166, 183], "norm_kwarg": [162, 163, 183], "bias_last_lay": [162, 163, 165, 166, 167, 168, 174, 183], "aggregator_class": [162, 163, 165, 166, 326, 328, 336], "squashdim": [162, 163, 165, 188, 336], "aggregator_kwarg": [162, 163, 165, 166, 326, 328], "squeeze_output": [162, 163, 165, 166, 326, 328], "convolut": [162, 163, 165, 166, 188, 201], "produc": [162, 163, 183, 189, 195, 210, 212, 214, 283, 327, 328, 334, 337], "cell": [162, 163, 175, 176, 177, 179, 180, 181, 183, 188, 189, 327], "kernel": [162, 163, 174, 182, 188], "cnet": [162, 163], "conv3d": 162, "34": [162, 163, 183, 324, 326, 332, 335], "35": [162, 163, 183, 324, 326, 328, 332, 333, 334, 335], "rectangular": [162, 163], "transformer_config": [164, 196, 214], "decisiontransform": [164, 196], "dtconfig": [164, 169, 196], "2202": [164, 169, 196, 250], "05607": [164, 169, 196, 250], "return_to_go": [164, 169, 196, 214], "conv_net_kwarg": [165, 166], "mlp_net_kwarg": [165, 166, 167], "use_avg_pool": [165, 166], "WITH": [165, 166, 167, 168, 220, 255], "1509": [165, 166, 167, 168, 185, 220, 238, 246, 255, 332], "02971": [165, 166, 167, 168, 220, 255], "convnet": [165, 188, 328, 336], "ndims_in": 165, "avgpool": [165, 166], "adaptiveavgpool2d": [166, 326, 328], "400": [167, 168, 331, 332, 334], "mlp_net_kwargs_net1": 168, "mlp_net_kwargs_net2": 168, "decion": 169, "desdescrib": 169, "n_embd": 169, "n_layer": [169, 175, 179], "n_head": 169, "n_inner": 169, "n_posit": 169, "resid_pdrop": 169, "attn_pdrop": 169, "gpt2config": 169, "atol": [170, 203], "06": [170, 203, 325, 326, 327, 332, 333], "rtol": [170, 203], "batch_shap": [170, 203], "event_shap": [170, 203], "absolut": [170, 203, 325], "densiti": [170, 186, 187, 195, 205], "mass": [170, 186, 187, 195, 205, 332], "rsampl": [170, 187, 195, 225], "sample_shap": [170, 186, 187, 195], "dqnet": 171, "atom": 171, "softmax": [171, 187, 195, 215, 216], "var_num": [172, 198, 215, 216, 223], "action_value_kei": [172, 198, 215, 216, 222, 223, 249, 262], "action_mask_kei": [172, 198, 215, 216, 217, 218, 222, 223], "perspect": [172, 216, 242, 327], "1707": [172, 216, 242, 251], "06887": [172, 216, 242], "mult": [172, 189, 198, 215, 216, 222, 223], "tensordict_modul": [172, 175, 176, 179, 180, 198, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 235, 237, 241, 247, 251, 252, 253, 254, 256, 320], "nbin": [172, 215, 320], "customdistributionalqv": 172, "log_softmax": [172, 215], "from_modul": [172, 221, 224, 227, 229], "one_hot": [172, 187, 198], "qvalue_actor": [172, 198, 215, 222, 320], "to_modul": [172, 221, 224, 227, 229], "std_bia": 173, "std_min_val": 173, "belief": [173, 193, 199, 200], "1912": [173, 243, 244, 245], "01603": [173, 243, 244, 245], "softplu": [173, 192, 231, 232, 233], "out_features_valu": 174, "cnn_kwarg": [174, 326], "mlp_kwarg": [174, 182, 326], "duel": 174, "cnn": [174, 188, 326, 336], "06581": 174, "512": [174, 326, 332, 334], "input_s": [175, 176, 177, 179, 180, 181, 182, 328], "hidden_s": [175, 176, 177, 179, 180, 181, 182, 328], "num_lay": [175, 177, 179, 181, 193, 194], "batch_first": [175, 177, 179, 181, 328], "bidirect": [175, 179, 328], "cudnn": [175, 176, 179, 180, 328], "vmap": [175, 176, 179, 180, 207, 224, 227, 336], "rnn": [175, 176, 179, 180, 328], "device_count": [175, 176, 179, 180, 325, 326, 328, 333, 337], "els": [175, 176, 179, 180, 193, 320, 322, 325, 326, 327, 328, 331, 332, 333], "n_in": [175, 176, 179, 180], "n_out": [175, 176, 179, 180], "h0": [175, 176, 179, 180], "h1": [175, 176, 179, 180], "call_gru": [175, 176], "h_out": [175, 176, 179, 180], "batched_cal": [175, 176, 179, 180], "gate": [175, 176, 179], "r_t": 175, "sigma": [175, 176, 178, 179, 180, 196, 204, 205, 213, 220, 327], "w_": [175, 176, 179, 180], "ir": [175, 176], "x_t": [175, 179], "b_": [175, 176, 179, 180], "hr": [175, 176, 179], "h_": [175, 176, 179], "z_t": 175, "iz": [175, 176], "hz": [175, 176], "n_t": 175, "odot": [175, 176, 179, 180], "hn": [175, 176, 179], "h_t": [175, 179], "sigmoid": [175, 176, 179, 180], "hadamard": [175, 176, 179, 180], "multilay": [175, 179], "_t": [175, 179, 331, 332], "ge": [175, 179], "bernoulli": [175, 179], "b_ih": [175, 176, 179, 180, 181], "b_hh": [175, 176, 179, 180, 181], "seq": [175, 177, 179, 181, 328, 330], "h_0": [175, 179, 180], "unbatch": [175, 179], "pack": [175, 179, 327, 337], "pack_padded_sequ": [175, 179], "pack_sequ": [175, 179], "num": [175, 179], "_layer": [175, 179], "_size": [175, 176, 179, 180], "h_n": [175, 179], "packedsequ": [175, 179], "weight_ih_l": [175, 179], "learnabl": [175, 176, 179, 180], "w_ir": 175, "w_iz": 175, "w_in": 175, "num_direct": [175, 179], "weight_hh_l": [175, 179], "w_hr": 175, "w_hz": 175, "w_hn": 175, "bias_ih_l": [175, 179], "b_ir": 175, "b_iz": 175, "b_in": 175, "bias_hh_l": [175, 179], "b_hr": 175, "b_hz": 175, "b_hn": 175, "bias": [175, 176, 179, 180, 231, 321, 325], "mathcal": [175, 176, 179, 180], "sqrt": [175, 176, 179, 180, 220], "frac": [175, 176, 179, 180, 327], "seq_len": [175, 179], "subtli": 175, "matrix": [175, 179, 190, 191], "contrast": [175, 246, 334], "hx": [175, 176, 179, 180], "gru": [176, 177], "lstmcell": [176, 181], "gru_cel": 176, "z": 176, "weight_ih": [176, 180], "weight_hh": [176, 180], "bias_ih": [176, 180], "bias_hh": [176, 180], "rocm": [176, 180], "embedd": [177, 181, 182], "grucel": [177, 224], "proj_siz": [177, 179], "python_bas": [177, 181], "recurrent_st": [177, 328], "custom_kei": [177, 181], "recurrent_mod": [177, 181], "set_recurrent_mod": [177, 181, 328], "gru_modul": 177, "rs": [177, 325], "gru_module_train": 177, "policy_train": [177, 181], "traj_td": [177, 181], "policy_infer": [177, 181], "td_inf": [177, 181], "assert_clos": [177, 181], "upscal": [178, 204, 205], "tanh_loc": [178, 204, 205], "event_dim": [178, 203, 204], "ultim": [178, 204, 205], "poor": [178, 204, 205], "explos": [178, 204, 205], "switch": [178, 205], "formula": [178, 204, 205, 234, 236, 248, 251, 321, 327], "c0": [179, 180], "c1": [179, 180], "call_lstm": [179, 180], "c_out": [179, 180], "i_t": 179, "ii": [179, 180], "hi": [179, 180], "f_t": 179, "hf": [179, 180], "g_t": 179, "ig": [179, 180], "hg": [179, 180], "o_t": 179, "ho": [179, 180], "c_t": 179, "c_": 179, "forget": 179, "consequ": 179, "1402": 179, "1128": 179, "c_0": [179, 180], "proj": 179, "c_n": 179, "w_ii": 179, "w_if": 179, "w_ig": 179, "w_io": 179, "w_hi": 179, "w_hf": 179, "w_hg": 179, "w_ho": 179, "b_ii": 179, "b_if": 179, "b_ig": 179, "b_io": 179, "b_hi": 179, "b_hf": 179, "b_hg": 179, "b_ho": 179, "weight_hr_l": 179, "_revers": 179, "analog": 179, "cn": 179, "lstm_cell": 180, "h_1": 180, "c_1": 180, "time_step": [180, 182], "cx": 180, "trust": 181, "correspont": 181, "recurrent_state_h": [181, 328], "recurrent_state_c": [181, 328], "triplet": [181, 222, 223], "lstm_modul": 181, "rs_h": 181, "rs_c": 181, "hidden0": 181, "hidden1": 181, "lstm_kwarg": 182, "next_observ": [182, 234, 235, 237, 238, 240, 241, 247, 251, 252, 253, 254, 256, 330], "2d": [182, 331], "hidden0_in": 182, "hidden1_in": 182, "hidden0_out": 182, "hidden1_out": 182, "single_bias_last_lay": 183, "layer_class": 183, "layer_kwarg": 183, "perceptron": 183, "seamless": 183, "lazylinear": [183, 320, 327, 332, 333, 336], "42": [183, 234, 235, 237, 247, 254, 326, 332, 333, 334], "noisylinear": [183, 190, 318, 326], "noisylazylinear": [183, 318], "At": [184, 217, 326, 327, 328, 330, 332, 333], "mpcplanner": 184, "tensordict_out": [184, 337], "mppi": 185, "covari": 185, "william": [185, 253], "aldrich": 185, "theodor": 185, "01149": 185, "hansen": 185, "wang": 185, "su": 185, "04955": 185, "valueoper": [185, 210, 211, 212, 234, 235, 236, 237, 241, 247, 248, 251, 252, 253, 254, 256, 312, 320, 325, 327], "tdlambdaestim": [185, 318, 325], "value_net": [185, 238, 240, 253, 264, 265, 266, 267, 327], "adv": 185, "lmbda": [185, 258, 264, 267, 269, 275, 276, 277, 280, 281, 321, 325, 327, 331], "95": [185, 258, 326, 327, 328, 332], "value_network": [185, 237, 238, 240, 242, 247, 254, 264, 265, 266, 267, 321, 325, 327], "temperatur": [185, 235, 247], "neg_inf": [186, 187], "inf": [186, 187], "www": [186, 187], "api_doc": [186, 187], "tf_agent": [186, 187], "event": [186, 187, 195, 273, 274, 275, 276, 278, 279, 280, 281, 334], "unnorm": [186, 187, 195], "sparse_mask": [186, 187], "dens": [186, 187], "0831": [186, 187], "1203": [186, 187], "0928": [186, 187], "1972": [186, 187], "grad_method": [187, 195], "reparamgradientstrategi": [187, 195], "passthrough": [187, 195], "proxi": [187, 195, 321], "relaxedonehot": [187, 195], "zeros_lik": [187, 332], "sample_non_valid": 187, "centralis": [188, 189, 331], "share_param": [188, 189, 331], "basi": [188, 334], "homogen": [188, 189, 331], "agent_network": [188, 189], "modulelist": [188, 189, 309, 336], "lazyconv2d": [188, 336], "2592": [188, 326], "decentralis": [188, 331], "n_agent_input": [189, 331], "n_agent_output": [189, 331], "toech": 189, "centalis": 189, "shown": [189, 320, 330, 331, 334], "std_init": [190, 191], "initialize_paramet": 190, "isol": [190, 249], "1706": [191, 206], "10295v3": 191, "induc": 191, "aid": 191, "scale_map": 192, "biased_softplus_1": 192, "scale_lb": [192, 199, 200], "exp": [192, 233], "module_norm": 192, "decod": 193, "1803": [193, 194, 197], "10122": [193, 194], "rnn_hidden": 193, "latent": 194, "excacli": 195, "inres": 196, "mu": [196, 220, 327], "state_shap": [197, 262], "mixing_embed_dim": [197, 262], "qmix": [197, 331], "mixer": [197, 206, 262], "monoton": 197, "hyper": 197, "11485": 197, "qmixerloss": [197, 206], "qmix_vdn": [197, 206], "eventu": [197, 328, 332], "vdn": [197, 206], "greedi": [198, 216, 217, 218, 223, 326, 328], "hidden_dim": [199, 200], "posterior": [199, 244], "rssm": [199, 200, 244], "1811": [199, 200], "04551": [199, 200], "obs_embed": 199, "rnn_hidden_dim": 200, "dream": 200, "tanhtransform": 204, "decomposit": 206, "05296": 206, "hide": [207, 327, 331], "satisfi": [207, 320], "tensordictmodulebas": [207, 215, 222, 328], "vmap_dim": 207, "lam": 207, "sample_in": 207, "sample_in_td": 207, "vm": 207, "translat": [209, 221], "character": [209, 215, 221, 222, 224, 334], "overflow": [209, 215, 216, 221, 222, 223, 224, 225], "td_modul": [209, 210, 211, 212, 221, 224, 225, 227, 229, 336], "3635": 209, "0340": 209, "1476": 209, "3911": [209, 332], "1664": [209, 326, 332], "5455": 209, "2247": 209, "4583": 209, "2916": 209, "2160": 209, "5337": 209, "5193": 209, "grad_fn": [209, 217, 218, 336], "addmmbackward0": 209, "actorvalueoper": [210, 320], "get_policy_oper": [210, 211, 212, 236, 248, 251, 320], "standalon": [210, 211, 212], "tdmodul": [210, 211, 212, 312], "get_critic_oper": 210, "common_oper": [210, 212], "policy_oper": [210, 211, 212], "value_oper": [210, 211, 212], "normalparamwrapp": [210, 211, 212, 221, 227, 234, 235, 241, 247, 251, 252, 253, 254, 256, 318, 336], "module_hidden": [210, 212], "td_module_hidden": [210, 212], "module_act": [210, 212], "td_module_act": [210, 211, 212], "module_valu": [210, 211, 212], "td_module_valu": [210, 211, 212], "state_action_valu": [210, 229, 235, 254, 263, 309, 312, 320, 325, 336], "td_clone": [210, 211, 212], "tensordictmodulewrapp": [210, 305, 306, 312], "get_policy_head": [210, 211, 212], "safesequenti": [210, 211, 212, 262], "head": [210, 212, 236, 248, 251], "get_value_head": [210, 211, 212], "get_value_oper": [210, 211, 212, 236, 248, 251], "action_modul": 211, "state_valu": [211, 212, 229, 236, 248, 251, 252, 254, 264, 265, 266, 267, 269, 271, 273, 275, 277, 278, 280, 320, 325, 327, 331], "qualiti": [212, 320], "actorcriticoper": [212, 236, 248, 251, 320], "embeddig": 212, "refet": 212, "actorcriticwrapp": [212, 320, 325], "po": [213, 218], "sigma_init": 213, "epsilon": [213, 217, 218, 220, 255, 298, 326, 327, 328], "sigma_end": 213, "annealing_num_step": [213, 217, 218, 220, 325, 326, 328], "captur": [213, 217, 218, 220], "omiss": [213, 217, 218, 220], "ommit": [213, 217, 218, 220, 334], "inferec": 214, "set_tensor_kei": 214, "dt_inference_wrapp": 214, "baz": 214, "inference_context": 214, "obs_dim": 214, "tanhdelta": [214, 318, 325], "dtactor": 214, "actor_modul": [214, 336], "dist_class": 214, "dist_kwarg": 214, "distribution_kwarg": [214, 221, 225, 327, 331], "inference_actor": 214, "sequence_length": 214, "mask_context": 214, "out_act": 214, "qvaluemodul": [215, 222, 262, 328], "distributionaldqnnet": 215, "make_log_softmax": 215, "my_action_valu": [216, 223], "chanc": 216, "thid": 216, "threshold": [217, 235, 236, 327], "eps_init": [217, 218, 220, 326, 328], "eps_end": [217, 218, 220, 326], "explorative_polici": [217, 218, 220], "9055": [217, 218, 332], "9277": [217, 218], "6295": [217, 218], "2532": [217, 218], "addbackward0": [217, 218], "lmheadmodel": 219, "extract": [219, 325, 327], "actor_head": [219, 236, 248, 251], "base_model": 219, "lm_head": 219, "ornstein": 220, "uhlenbeck": 220, "ou": [220, 325], "correl": 220, "noise_t": 220, "noise_": 220, "theta": [220, 327, 332], "sigma_t": 220, "sigma_": 220, "anneal": 220, "ou_prev_nois": 220, "ou_step": 220, "x0": 220, "sigma_min": 220, "n_steps_ann": 220, "is_init_kei": 220, "_ou_prev_nois": 220, "_ou_step": 220, "default_interaction_typ": [221, 225], "interaction_typ": [221, 225], "set_interaction_typ": [221, 225], "cache_dist": [221, 225], "n_empirical_estim": [221, 225], "compound": 221, "compositedistribut": 221, "categ": 221, "distribution_map": 221, "chose": 223, "functionalmodul": 224, "functionalmodulewithbuff": 224, "td_fmodul": 224, "td_function": 224, "td_state": 224, "ensembl": [224, 252], "params_repeat": 224, "td_vmap": [224, 227], "random_sampl": [224, 225], "suppli": 225, "fist": 225, "log_prob_kei": [225, 331], "probabilistictensordictsequenti": [226, 234, 236, 248, 251, 253, 305, 306, 336], "partial_toler": [226, 227, 330], "who": [226, 227], "AND": [226, 227], "tensordictsequenci": 227, "tensordictsequ": 227, "safeprobabilisticmodul": [227, 320], "spec1": 227, "net1": 227, "module1": 227, "td_module1": 227, "spec2": 227, "module2": 227, "td_module2": 227, "clamp": [228, 244, 300, 332], "boundari": [228, 327, 331], "resolut": 228, "simplest": [228, 325, 327, 328, 331, 334, 337], "9944": 228, "9991": 228, "3020": 228, "2299": [228, 332], "5418": 228, "2989": 228, "6849": 228, "3169": 228, "2690": 228, "9649": [228, 332], "5686": 228, "8602": 228, "0315": 228, "8455": [228, 332], "6027": 228, "4746": 228, "7843": 228, "7782": 228, "2111": 228, "5115": 228, "4687": 228, "5760": 228, "custommodul": 229, "cat": [229, 235, 237, 247, 252, 254, 256, 336], "imaginari": 230, "imagin": 230, "transition_model": 230, "get_reward_oper": 230, "get_transition_model_oper": 230, "min_val": [231, 233], "_bia": 231, "invert": [232, 327], "surject": 233, "expln": 233, "biased_softplu": [233, 318], "beggin": 233, "biased_softplus_": 233, "syntax": [233, 325], "met": [233, 332], "1602": 234, "01783v2": 234, "entropy_bonu": [234, 236, 248, 251, 327], "favour": [234, 236, 248, 251], "samples_mc_entropi": [234, 236, 248, 250, 251], "mont": [234, 236, 248, 251, 325], "carlo": [234, 236, 248, 251, 325], "entropy_coef": [234, 236, 248, 251, 327, 331], "critic_coef": [234, 236, 248, 251, 327], "loss_critic_typ": [234, 236, 248, 251, 253, 327], "l1": [234, 236, 237, 238, 241, 248, 251, 252, 253, 256, 259, 262, 320, 325], "l2": [234, 236, 237, 238, 239, 240, 241, 244, 245, 248, 251, 252, 253, 256, 259, 262, 325], "smooth_l1": [234, 235, 236, 237, 238, 241, 247, 248, 251, 252, 253, 254, 256, 259, 262, 327], "separate_loss": [234, 236, 237, 241, 247, 248, 251, 252, 253, 254, 256], "propag": [234, 236, 237, 241, 247, 248, 251, 252, 253, 254, 256, 264, 265, 266, 267, 327, 331], "advantage_kei": [234, 236, 248, 251, 253, 264, 265, 266, 267], "value_target_kei": [234, 236, 248, 251, 253, 264, 265, 266, 267, 327], "value_target": [234, 236, 248, 251, 253, 264, 265, 266, 267, 327, 331], "loss_crit": [234, 251, 327, 331], "loss_entropi": [234, 251, 327, 331], "loss_object": [234, 251, 327, 331], "recur": [234, 235, 237, 238, 240, 241, 247, 251, 252, 253, 254, 256, 264, 265, 266, 267, 268], "next_reward": [234, 235, 237, 238, 240, 241, 247, 251, 252, 253, 254, 256, 264, 265, 266, 267], "next_don": [234, 235, 237, 238, 240, 241, 247, 251, 252, 253, 254, 256, 264, 265, 266, 267], "next_termin": [234, 235, 237, 238, 240, 241, 247, 251, 252, 253, 254, 256, 264, 265, 266, 267], "loss_obj": 234, "sacloss": [234, 246, 255, 318], "select_out_kei": [234, 235, 237, 241, 247, 251, 252, 254, 256], "essenti": [234, 235, 236, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 262, 326, 332, 334], "make_value_estim": [234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 257, 262, 321, 325, 326, 331], "value_typ": [234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 258, 262, 325], "valueestim": [234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 258, 262, 318, 321, 325, 331], "hyperparam": [234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 262, 325], "enum": [234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 258, 262, 325], "default_value_estim": [234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 262, 325], "refin": [234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 262], "default_value_kwarg": [234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 262, 318, 325], "dqn_loss": [234, 235, 237, 238, 240, 241, 242, 243, 247, 249, 251, 252, 253, 254, 256, 257, 262], "conserv": [235, 240], "2006": [235, 240, 332], "04779": [235, 240], "actor_network": [235, 237, 239, 241, 247, 250, 252, 254, 256, 325], "qvalue_network": [235, 241, 247, 252, 254, 256], "loss_funct": [235, 237, 238, 239, 240, 241, 247, 252, 254, 256, 259, 262, 325], "alpha_init": [235, 241, 250, 252, 254], "min_alpha": [235, 241, 250, 252, 254], "max_alpha": [235, 241, 250, 252, 254], "fixed_alpha": [235, 241, 250, 252, 254], "target_entropi": [235, 241, 250, 252, 254], "prod": [235, 250, 254], "n_action": [235, 238, 240, 250, 254], "delay_actor": [235, 237, 254, 256], "delay_qvalu": [235, 241, 252, 254, 256], "min_q_weight": 235, "max_q_backup": 235, "backup": 235, "deterministic_backup": 235, "num_random": 235, "with_lagrang": 235, "lagrang": 235, "lagrange_thresh": 235, "valueclass": [235, 237, 241, 247, 252, 254, 256], "qvalu": [235, 241, 247, 252, 254, 256, 309], "loss_actor": [235, 237, 241, 247, 252, 253, 254, 256, 295, 325, 336], "loss_alpha": [235, 241, 252, 254], "loss_alpha_prim": 235, "loss_qvalu": [235, 241, 247, 252, 254, 256], "clip_epsilon": [236, 327, 331], "normalize_advantag": [236, 248, 251, 331], "value_kei": [236, 248, 251, 264, 265, 266, 267, 325], "somemodul": [236, 248, 251], "someactor": [236, 248, 251], "value_head": [236, 248, 251], "somevalu": [236, 248, 251], "loss_modul": [236, 246, 248, 249, 251, 255, 300, 311, 312, 321, 322, 325, 326, 327, 331, 334], "ppoloss": [236, 248, 318], "delay_valu": [237, 238, 240, 242, 253, 254, 262, 326, 328], "loss_valu": [237, 247, 253, 254, 325, 327, 331, 336], "pred_valu": [237, 256, 325, 336], "pred_value_max": [237, 325, 336], "target_valu": [237, 252, 256, 263, 321, 325, 336], "target_value_max": [237, 325, 336], "qvalueactor": [238, 240, 262, 320, 326, 328], "double_dqn": 238, "06461": [238, 246], "mult_one_hot": [238, 241, 262], "loss_val": [238, 240, 321, 325, 327, 328, 331, 334], "2106": 239, "01345": 239, "distanc": [240, 248, 259, 263, 264, 331], "loss_cql": 240, "dcql_loss": 240, "ste": 241, "num_qvalue_net": [241, 247, 252, 254, 256], "target_entropy_weight": 241, "onehotcategor": [241, 318], "disctount": 242, "distributionalqvalueactor": [242, 320], "input_tensordict": [242, 325], "actor_model": 243, "value_model": [243, 245], "model_based_env": 243, "dreamerenv": [243, 318], "imagination_horizon": 243, "unrol": [243, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281], "discount_loss": [243, 245], "lambda_kl": 244, "lambda_reco": 244, "lambda_reward": 244, "reco_loss": 244, "reward_loss": 244, "free_nat": 244, "nat": 244, "delayed_clamp": 244, "global_averag": 244, "value_loss": 245, "fake_data": 245, "ddpgloss": [246, 255, 312, 318, 325, 336], "td3loss": [246, 255, 318], "value_network_update_interv": 246, "2110": 247, "06169": 247, "expectil": 247, "tau": [247, 255, 325, 326], "antmaz": 247, "sticht": 247, "loss_value_diff": 247, "diff": 247, "old_polici": 248, "new_polici": 248, "apart": [248, 331], "dtarg": 248, "samples_mc_kl": 248, "analyt": 248, "decrement": 248, "loss_": [249, 295, 321, 325], "equip": [249, 328], "gh": 249, "_acceptedkei": 249, "dataclass": [249, 309], "_forward_value_estimator_kei": 249, "alter": [249, 320], "value_estim": [249, 264, 265, 266, 267, 268, 321, 325, 331], "myloss": 249, "action2": 249, "convert_to_funct": [249, 325], "expand_dim": 249, "create_target_param": [249, 325], "compare_against": [249, 325], "_param": 249, "expans": 249, "resampl": 249, "_target_param": 249, "blend": 249, "upcom": [249, 273, 274, 275, 276, 278, 279, 280, 281, 325], "proxim": [251, 327, 331], "optimis": [251, 296, 327, 331], "flavour": [251, 331, 336], "clipppoloss": [251, 318, 327, 331], "klpenppoloss": [251, 318], "regularis": 251, "06347": 251, "gae": [251, 318, 321, 325, 327, 331], "ppo_loss": 251, "tdlambda": [251, 258, 321, 325], "base_lay": 251, "randn_lik": 251, "samplelogprob": 251, "openreview": [252, 309], "ay8zfzm0tdd": [252, 309], "sub_sample_len": 252, "subsampl": [252, 291, 322], "action_log_prob_actor": 252, "state_action_value_actor": [252, 256], "connectionist": 253, "1992": 253, "doi": 253, "1007": 253, "bf00992696": 253, "actor_net": [253, 325, 327], "1801": 254, "01290": 254, "applic": [254, 262, 332], "1812": 254, "05905": 254, "redqloss": [255, 318], "math": 255, "theta_t": [255, 332], "theta_": [255, 332], "polyak": 255, "policy_nois": 256, "noise_clip": 256, "next_state_valu": [256, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 318], "td0": [257, 325], "strict_shap": 259, "view_a": 259, "qmixer": [262, 318], "local_valu": 262, "visibl": [262, 331], "dafault": 262, "acceptedkei": 262, "global_valu": 262, "penultim": 262, "local_value_network": 262, "mixer_network": 262, "suggest": [262, 331], "value_modul": [262, 327, 336], "qnet": [262, 325], "next_val_kei": 263, "pred_next_v": 263, "usus": 263, "mse": 263, "q_valu": 263, "n_steps_to_next": 263, "value_next_st": 263, "1506": [264, 269, 277], "02438": [264, 269, 277], "exponenti": [264, 265, 266, 267, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 298], "average_ga": [264, 327], "skip_exist": [264, 265, 266, 267], "advang": 264, "gradient_mod": 264, "value_error": [264, 265, 266, 267, 268], "sign": 264, "target_param": [264, 265, 266, 267, 268, 325, 331], "98": [264, 265, 266, 267, 325, 326, 332, 334], "94": [264, 267, 325, 326, 332], "unpack": [264, 265, 266, 267], "tensor_kei": [264, 265, 266, 267, 268], "next_valu": [264, 265, 266, 267, 268], "aka": [265, 326], "average_reward": [265, 266, 267], "tdestim": [265, 266, 268], "infti": 266, "valuefunctionbas": 268, "time_dim": [269, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281], "old_stat": [269, 271, 273, 275, 277, 278, 280], "new_stat": [269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281], "rolling_gamma": [273, 274, 275, 276, 278, 279, 280, 281], "g1": [273, 274, 275, 276, 278, 279, 280, 281], "g2": [273, 274, 275, 276, 278, 279, 280, 281], "g3": [273, 274, 275, 276, 278, 279, 280, 281], "g4": [273, 274, 275, 276, 278, 279, 280, 281], "v3": [273, 274, 275, 276, 278, 279, 280, 281], "v4": [273, 274, 275, 276, 278, 279, 280, 281, 325, 327, 333], "out_file_bas": 282, "skip_reset": 282, "interv": [282, 283, 292, 302, 326, 332], "center_crop": 283, "make_grid": 283, "Will": 283, "grid": 283, "exp_nam": [284, 285, 288, 289, 290, 312, 326], "log_dir": [284, 285, 287, 289, 326], "templat": 284, "csv": [285, 287, 326], "minim": [285, 334], "dependeci": 285, "experiment_nam": [286, 287], "uuid": [286, 326, 337], "date": 286, "logger_typ": 287, "logger_nam": 287, "tensorboard": [287, 289, 336], "wandb": [287, 290, 336], "mlflow": [287, 288], "wandb_kwarg": 287, "mlflow_kwarg": 287, "tracking_uri": 288, "uri": 288, "datastor": 288, "tb_log": 289, "tensoarboard": 289, "sub_traj_len": 291, "min_sub_traj_len": 291, "register_op": [291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 322, 326], "process_optim_batch": [291, 297, 298, 322], "td_out": [291, 299], "_process_optim_batch_hook": [291, 322], "batch_subsampl": 291, "clear_cuda": 292, "pre_optim_step": [292, 322], "counter": [293, 322], "log_pbar": [293, 294, 296, 298, 322, 326], "progress": [293, 294, 296, 300, 322, 326, 328, 337], "count_fram": 293, "pre_steps_log": [293, 294, 322], "count_frames_log": 293, "lognam": 294, "r_train": [294, 326], "log_reward": [294, 326], "loss_compon": 295, "appl": 295, "omit": [295, 327, 332, 334], "optimizer_hook": 295, "record_interv": [296, 325, 326], "record_fram": [296, 303, 325, 326], "policy_explor": [296, 312, 325, 326], "log_kei": [296, 326], "suffix": 296, "underestim": 296, "set_exploration_typ": [296, 318, 327, 328, 336], "r_evalu": [296, 325], "flatten_tensordict": [297, 326], "max_dim": 297, "rb_trainer": 297, "batch_process": [297, 298, 299, 322], "post_loss": [297, 322], "999": [298, 326], "jitter": 298, "finfo": 298, "default_dtyp": 298, "get_default_dtyp": 298, "reward_norm": 298, "update_reward_stat": 298, "normalize_reward": 298, "make_train": [299, 318], "_process_batch_hook": [299, 322], "select_kei": [299, 322], "versatil": 300, "optim_steps_per_batch": [300, 322, 326], "epoch": [300, 327, 331], "clip_grad_norm": 300, "clip_norm": 300, "progress_bar": 300, "save_trainer_interv": 300, "log_interv": [300, 326], "save_trainer_fil": [300, 322], "datacollectorbas": [302, 305, 306, 312, 318], "update_weights_interv": [302, 326], "sit": [302, 326], "update_weight": 302, "post_step": [302, 322], "cfg": [303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316], "dictconfig": [303, 304, 305, 306, 309, 310, 311, 312, 313, 316], "divid": [303, 320, 325, 331, 332], "unknowingli": 303, "annealing_fram": [303, 325], "init_env_step": [303, 304, 325], "proof_environ": [304, 309, 325], "sta": 304, "ot": 304, "actor_model_explor": [305, 306, 325], "make_env_kwarg": [305, 306], "targetnetupdat": [307, 308, 311, 312], "redqloss_deprec": 308, "actor_net_kwarg": 309, "qvalue_net_kwarg": 309, "observation_kei": 309, "dummi": [309, 325, 337], "parser_env_arg": 309, "parser_model_args_continu": 309, "cattensor": [309, 325, 330, 332, 337], "hydra": 309, "config_stor": 309, "configstor": 309, "halfcheetah": [309, 325], "config_field": 309, "config_cl": 309, "redqmodelconfig": 309, "envconfig": 309, "make_dataclass": 309, "cls_name": 309, "cs": 309, "config_path": 309, "config_nam": 309, "17": [309, 325, 326, 327, 331, 332, 333], "replayargsconfig": 310, "target_net_updat": [312, 325, 326], "constitu": 312, "learnt": [312, 325, 327], "tensorboardlogg": [312, 318], "egreedywrapp": [312, 326, 328], "env_proof": 312, "obs_spec": 312, "net_valu": 312, "dir": [312, 322, 326], "gettempdir": 312, "argpars": [313, 316], "namespac": [313, 316], "parser": [313, 316], "transformed_env_constructor": [313, 318], "num_env_per_collector": [314, 315], "video_tag": 316, "norm_obs_onli": 316, "use_env_cr": 316, "custom_env_mak": 316, "custom_env": 316, "return_transformed_env": 316, "action_dim_gsd": 316, "state_dim_gsd": 316, "obs_norm_state_dict": 316, "wheter": 316, "maker": 316, "asyncdatacollector": 318, "distributedsyncdatacollector": 318, "submitit_delayed_launch": 318, "raycollector": 318, "tensordictmaxvaluewrit": 318, "d4rlexperiencereplai": 318, "minariexperiencereplai": 318, "openmlexperiencereplai": 318, "unboundeddiscretetensorspec": [318, 337], "lazystackedtensorspec": 318, "lazystackedcompositespec": 318, "prompttensordicttoken": 318, "rolloutfrommodel": 318, "tokenizeddatasetload": 318, "create_infinite_iter": 318, "consolidate_spec": 318, "check_no_exclusive_kei": 318, "contains_lazy_spec": 318, "check_marl_group": 318, "tensordictrecord": 318, "videorecord": [318, 327], "get_available_librari": 318, "set_exploration_mod": 318, "make_composite_from_td": [318, 332], "terminated_or_trunc": 318, "braxwrapp": 318, "dmcontrolenv": [318, 325, 330, 337], "dmcontrolwrapp": [318, 337], "jumanjienv": 318, "jumanjiwrapp": 318, "mogymenv": 318, "mogymwrapp": 318, "multithreadedenvwrapp": 318, "openmlenv": 318, "pettingzooenv": 318, "robohiveenv": 318, "smacv2env": 318, "smacv2wrapp": 318, "vmaswrapp": 318, "qvaluehook": 318, "distributionalqvaluehook": 318, "reset_nois": 318, "cemplann": 318, "mpcplannerbas": 318, "mppiplann": 318, "independentnorm": 318, "truncatednorm": 318, "maskedonehotcategor": 318, "inv_softplu": 318, "vmapmodul": 318, "distributionaldqnloss": [318, 326], "discretesacloss": 318, "iqlloss": 318, "cqlloss": 318, "discretecqlloss": 318, "dtloss": 318, "onlinedtloss": 318, "a2closs": 318, "reinforceloss": 318, "dreameractorloss": 318, "dreamermodelloss": 318, "dreamervalueloss": 318, "td0estim": [318, 325], "td1estim": [318, 325], "td0_return_estim": 318, "td0_advantage_estim": 318, "td1_return_estim": 318, "vec_td1_return_estim": 318, "td1_advantage_estim": 318, "vec_td1_advantage_estim": 318, "td_lambda_return_estim": 318, "vec_td_lambda_return_estim": 318, "td_lambda_advantage_estim": 318, "vec_td_lambda_advantage_estim": 318, "generalized_advantage_estim": 318, "vec_generalized_advantage_estim": 318, "reward2go": 318, "distance_loss": [318, 325], "hold_out_net": 318, "hold_out_param": [318, 325], "softupd": [318, 325, 326, 328], "hardupd": [318, 325], "batchsubsampl": [318, 322], "clearcudacach": 318, "countframeslog": 318, "logreward": [318, 322, 326], "optimizerhook": [318, 326], "replaybuffertrain": [318, 322, 326], "rewardnorm": 318, "selectkei": [318, 322], "trainerhookbas": [318, 322, 326], "updateweight": [318, 322, 326], "make_collector_offpolici": 318, "make_collector_onpolici": 318, "make_dqn_loss": 318, "make_redq_loss": 318, "make_redq_model": 318, "make_replay_buff": [318, 325], "make_target_updat": 318, "parallel_env_constructor": [318, 325], "sync_async_collector": 318, "sync_sync_collector": 318, "correct_for_frame_skip": 318, "get_stats_random_rollout": 318, "csvlogger": [318, 326], "mlflowlogg": 318, "wandblogg": 318, "get_logg": 318, "generate_exp_nam": 318, "journei": 319, "textbook": 319, "highlight": 319, "ever": [319, 331], "bump": 319, "think": [319, 327, 331, 337], "benefit": [319, 331, 334], "pr": 319, "ground": [320, 325, 332], "categori": [320, 322], "recycl": [320, 334], "impos": 320, "violat": 320, "noisier": 320, "Their": [320, 331], "sd": 320, "prob_modul": 320, "pick": [320, 325, 326], "tabl": [320, 326], "customari": 320, "hopefulli": [320, 326], "functional_modul": 320, "make_funct": [320, 336], "mathbb": [320, 326], "rightarrow": [320, 326], "soften": 320, "backbon": [320, 328, 330, 336], "make_actor": 320, "make_valu": 320, "shared_param": 320, "make_common": 320, "reusabl": [321, 325, 334], "swappabl": [321, 325], "characterist": [321, 325, 332], "trainabl": [321, 325, 333], "whatev": [321, 325], "smth": [321, 325], "metric": [321, 325], "nutshel": [321, 325], "barto": [321, 331], "chapter": 321, "significantli": [321, 325, 326, 331], "next_stat": 321, "value_net_loss": 321, "pow": [321, 325], "therebi": 321, "room": 321, "convers": 321, "signifi": [321, 331], "underperform": 321, "thin": 321, "intric": 321, "believ": 322, "scheme": [322, 337], "substenti": 322, "_pre_steps_log_hook": 322, "_pre_optim_hook": 322, "sub_batch": 322, "_post_loss_hook": 322, "_post_optim_hook": 322, "post_optim": [322, 326], "_post_optim_log": 322, "post_optim_log": 322, "_post_steps_hook": 322, "_post_steps_log_hook": 322, "post_steps_log": 322, "comment": [322, 326, 336], "extens": [322, 334], "reserv": 322, "logginghook": 322, "logging_hook": 322, "save_dict": 322, "some_valu": 322, "torchsnapshot": 322, "ckpt_backend": 322, "pt": [322, 333], "filepath": 322, "save_train": 322, "load_from_fil": 322, "25": [324, 325, 326, 327, 332, 335], "57": [324, 326, 331, 332, 333, 335], "972": [324, 335], "galleri": [324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337], "mem": [324, 335], "mb": [324, 325, 326, 327, 328, 330, 331, 332, 333, 334, 335, 336, 337], "torchrl_demo": [324, 335, 336], "55": [324, 325, 326, 328, 331, 332, 335, 336], "956": [324, 335, 336], "torchrl_env": [324, 335, 337], "162": [324, 332, 335, 337], "110": [324, 332, 335, 337], "dqn_with_rnn": [324, 328, 335], "392": [324, 328, 332, 335], "2019": [324, 328, 335], "02": [324, 325, 326, 327, 328, 332, 333, 335], "836": [324, 332, 335], "rb_tutori": [324, 334, 335], "211": [324, 332, 334, 335], "452": [324, 327, 332, 334, 335], "coding_dqn": [324, 326, 335], "393": [324, 326, 332, 335], "1086": [324, 335], "multiagent_ppo": [324, 331, 335], "657": [324, 331, 335], "37": [324, 325, 326, 331, 332, 333, 335], "coding_ddpg": [324, 325, 335], "56": [324, 325, 326, 331, 332, 335], "483": [324, 325, 332, 335], "coding_ppo": [324, 327, 335], "506": [324, 327, 332, 335], "pretrained_model": [324, 333, 335], "00": [324, 325, 326, 327, 328, 331, 332, 333, 335], "53": [324, 326, 327, 332, 333, 335], "561": [324, 332, 333, 335], "2455": [324, 333, 335], "multi_task": [324, 330, 335], "47": [324, 325, 326, 328, 330, 332, 333, 335], "813": [324, 330, 332, 335], "author": [325, 326, 327, 328, 331, 332, 334], "vincent": [325, 326, 327, 328, 332, 334], "moen": [325, 326, 327, 328, 332, 334], "assembl": 325, "focus": 325, "straightforward": [325, 326, 334], "overview": [325, 327, 331, 336], "transpar": [325, 328], "understood": 325, "sota": [325, 326, 336], "illustr": [325, 326, 334], "loss_dict": 325, "modal": 325, "oblivi": [325, 327, 334], "elementari": 325, "didact": 325, "dilut": 325, "pessimist": [325, 326, 327], "target_actor_network_param": 325, "actor_in_kei": 325, "actor_crit": 325, "noth": [325, 327], "compromis": 325, "hp": 325, "hasattr": 325, "_value_estim": 325, "elif": [325, 326], "notimplementederror": 325, "unknown": 325, "_loss_actor": 325, "td_copi": 325, "actor_network_param": 325, "value_network_param": 325, "_loss_valu": 325, "pred_val": 325, "target_value_network_param": 325, "smooth": [325, 326], "loss_funt": 325, "glue": 325, "_forward": 325, "ndimens": 325, "remaind": 325, "focu": [325, 326, 327], "pixels_onli": [325, 326, 336, 337], "env_librari": 325, "env_task": 325, "env_arg": 325, "friendli": 325, "torchr": 325, "rescal": 325, "presum": 325, "make_transformed_env": 325, "reward_sc": 325, "double_to_float_list": 325, "double_to_float_inv_list": 325, "marker": 325, "env_per_collector": 325, "transform_state_dict": 325, "make_t_env": 325, "adjust": [325, 331, 332], "seem": [325, 328], "cheat": 325, "10m": 325, "cautiou": 325, "magnitud": 325, "thousand": [325, 328], "get_env_stat": 325, "proof_env": 325, "5000": [325, 326, 327], "maxim": [325, 332], "recal": [325, 327], "ddpgmlpactor": 325, "ddpgmlpqnet": 325, "materi": 325, "ornsteinuhlenbeckprocesswrapp": 325, "make_ddpg_actor": 325, "q_net": 325, "moduless": 325, "sugges": 325, "tight": 325, "10_000": [325, 327, 334], "traj_len": [325, 328], "make_record": 325, "recorder_obj": 325, "flavor": 325, "circular": 325, "buffer_s": [325, 326], "random_crop_len": 325, "prb": 325, "buffer_scratch_dir": 325, "temporari": 325, "dirrectori": 325, "trajecotri": 325, "sampel": 325, "dataflow": 325, "ceil_div": 325, "utd": [325, 328], "update_to_data": 325, "realiz": 325, "_must_": 325, "001": [325, 332], "outdat": 325, "trick": [325, 326], "despit": 325, "adam": [325, 326, 327, 328, 331, 332], "optimizer_actor": 325, "lr": [325, 326, 327, 328, 331, 332], "weight_decai": [325, 326], "optimizer_valu": 325, "total_collection_step": 325, "pretti": [325, 334], "rewards_ev": 325, "collected_fram": 325, "pbar": [325, 327, 328, 331, 332], "r0": 325, "numel": [325, 327, 328, 333, 334], "current_fram": 325, "sampled_tensordict": 325, "gn1": 325, "clip_grad_norm_": [325, 327, 331, 332], "gn2": 325, "gn": [325, 332], "td_record": 325, "rn": 325, "set_descript": [325, 327, 328, 331, 332], "2f": 325, "800": [325, 326], "2570": 325, "84it": 325, "1600": [325, 326], "1035": 325, "08it": [325, 326, 327], "3200": [325, 326], "2141": 325, "83it": [325, 326, 332], "48": [325, 326, 332, 333], "4800": [325, 326, 332], "3081": 325, "39it": [325, 326], "75": [325, 326, 332, 333], "85": [325, 326, 332, 334], "250": [325, 332], "52": [325, 326, 331, 332, 333, 334], "86": [325, 326, 332], "5600": 325, "6400": [325, 336], "1365": 325, "59it": [325, 326, 332], "89": [325, 326, 332, 333, 334], "291": [325, 332], "31": [325, 326, 327, 332, 333], "72": [325, 326, 332, 333, 334], "7200": 325, "887": 325, "57it": [325, 326, 332], "67": [325, 326, 330, 332, 333], "80": [325, 326, 327, 331, 332, 333, 334], "79": [325, 326, 331, 332], "54": [325, 326, 332, 333], "49": [325, 326, 332, 333], "69": [325, 326, 332, 333], "8000": [325, 327], "674": [325, 332], "95it": [325, 326, 332], "43": [325, 326, 328, 332, 333], "58": [325, 326, 331, 332, 333], "261": [325, 332], "8800": 325, "572": [325, 332], "07it": [325, 326, 327], "91": [325, 326, 332], "40": [325, 326, 327, 331, 332, 334], "151": [325, 332], "96": [325, 326, 332, 333], "9600": 325, "428": [325, 332], "88it": [325, 326], "36": [325, 326, 328, 332], "62": [325, 326, 332], "286": [325, 332], "68": [325, 326, 332, 333], "10400it": 325, "417": [325, 332], "54it": [325, 326], "222": [325, 332], "76": [325, 326, 332], "plot": [325, 327, 328, 331, 332], "mention": [325, 328, 334, 337], "matplotlib": [325, 327, 328, 331, 332, 334, 337], "pyplot": [325, 327, 328, 331, 332, 334, 337], "plt": [325, 327, 328, 331, 332, 334, 337], "zip": [325, 329], "legend": 325, "xlabel": [325, 328, 331, 332], "ylabel": [325, 331], "tight_layout": 325, "concret": [325, 327], "takeawai": [325, 326], "minut": [325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "jupyt": [325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337], "ipynb": [325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "sphinx": [325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337], "customis": [326, 331], "road": 326, "aspect": 326, "highest": 326, "prerequisit": [326, 328], "familiar": [326, 331, 337], "lookup": 326, "amort": [326, 327], "conjunct": 326, "cart": 326, "pole": 326, "un": 326, "actuat": 326, "frictionless": 326, "upright": 326, "duelingcnndqnet": 326, "is_notebook": 326, "shell": 326, "get_ipython": 326, "__class__": 326, "zmqinteractiveshel": 326, "qtconsol": 326, "terminalinteractiveshel": 326, "ipython": [326, 331, 332], "nameerror": 326, "umbrella": 326, "misplac": 326, "misus": 326, "orchestr": 326, "everyth": [326, 328], "five": [326, 327], "64x64": 326, "motion": [326, 332], "obs_norm_sd": 326, "simpler": 326, "get_norm_stat": 326, "test_env": 326, "make_model": 326, "dummy_env": 326, "output_s": [326, 328], "init_bia": 326, "actor_explor": 326, "eps_greedy_v": 326, "eps_greedy_val_env": 326, "get_replay_buff": 326, "n_optim": 326, "themselv": 326, "simplic": [326, 327, 333, 334], "get_collector": 326, "data_collector": 326, "bunch": 326, "concept": [326, 334], "power": 326, "ubiquit": 326, "get_loss_modul": 326, "target_updat": 326, "995": [326, 332], "sensit": 326, "variat": 326, "2e": [326, 332], "wd": 326, "upd": 326, "harder": [326, 336], "5_000": 326, "500000": 326, "100000": 326, "005": 326, "mandatori": [326, 327, 331, 332], "fairer": 326, "budget": [326, 327], "dqn_exp_": 326, "uuid1": [326, 337], "9895": 326, "0737": 326, "tmp": [326, 334], "tmpnpozfkto": 326, "dqn_exp_258fa262": 326, "952f": 326, "11ee": [326, 337], "a7f3": [326, 337], "0242ac110002": [326, 337], "registr": 326, "cumbersom": 326, "buffer_hook": 326, "weight_updat": 326, "descript": [326, 327], "aliv": 326, "total_reward": 326, "07": [326, 331, 332], "41it": [326, 332], "4045": 326, "9259": 326, "96it": [326, 332], "51": [326, 332, 333], "82it": [326, 327, 332], "3712": 326, "3772": 326, "40it": 326, "3893": 326, "192": [326, 332], "09": [326, 332], "11it": 326, "4497": 326, "224": [326, 332], "43it": [326, 332], "4345": 326, "288": [326, 332], "79it": 326, "4948": 326, "320": [326, 332, 337], "70": [326, 327, 331, 332, 333], "64it": 326, "3983": 326, "352": [326, 332], "73": [326, 327, 332, 333], "384": [326, 332], "59": [326, 332, 333], "77": [326, 332, 334], "416": [326, 332], "32it": [326, 332], "4074": [326, 332], "448": [326, 332], "82": [326, 332, 333], "02it": 326, "4586": 326, "480": [326, 332, 333], "83": [326, 332, 333], "19it": 326, "4797": 326, "544": [326, 332], "576": [326, 332], "608": [326, 332], "16it": [326, 332], "4676": 326, "640": 326, "672": 326, "51it": [326, 332], "704": 326, "85it": 326, "736": 326, "91it": 326, "768": 326, "97it": 326, "53it": [326, 332], "832": 326, "27it": 326, "864": 326, "89it": 326, "896": 326, "45": [326, 331, 332, 333, 334], "90": [326, 327, 331, 332], "25it": 326, "928": 326, "10it": 326, "960": 326, "992": [326, 332], "13it": 326, "1056": 326, "1088": 326, "1120": 326, "76it": [326, 332], "1152": 326, "98it": 326, "4134": 326, "1184": 326, "67it": [326, 332], "1216": 326, "47it": 326, "1248": 326, "41": [326, 332, 333], "62it": [326, 328, 332], "1280": 326, "29it": [326, 332], "93it": 326, "1344": 326, "1376": 326, "1408": 326, "09it": 326, "1440": 326, "4524": 326, "1472": 326, "42it": 326, "1504": 326, "4526": 326, "1536": 326, "1568": 326, "23it": 326, "60it": [326, 332], "1632": 326, "1696": 326, "31it": [326, 332], "1728": 326, "90it": [326, 332], "1760": 326, "1792": 326, "1824": 326, "1856": 326, "77it": 326, "1888": 326, "80it": [326, 328], "1920": 326, "1952": 326, "1984": 326, "28it": [326, 332], "2016": 326, "71it": [326, 332], "2048": [326, 333], "26it": 326, "2080": 326, "4224": 326, "2112": [326, 332], "03it": 326, "2144": 326, "2176": 326, "12it": [326, 332], "4104": 326, "2208": 326, "36it": 326, "2240": 326, "92it": 326, "2272": 326, "15it": 326, "2304": 326, "2336": 326, "2368": 326, "2400": 326, "2432": 326, "00it": [326, 327], "2464": 326, "2496": 326, "2528": [326, 332], "2560": 326, "2624": 326, "24it": [326, 327], "2656": [326, 332], "2688": 326, "94it": [326, 327], "2720": [326, 332], "22it": 326, "2752": 326, "2784": 326, "06it": 326, "2816": 326, "2848": 326, "46it": 326, "2880": 326, "2912": 326, "78it": 326, "2944": [326, 332], "60": [326, 327, 331, 332, 336], "2976": [326, 332], "65it": [326, 332], "3008": 326, "61": [326, 332, 333], "3040": 326, "3072": 326, "68it": [326, 332], "3104": 326, "63": [326, 332], "3136": 326, "70it": [326, 332], "3168": 326, "65": [326, 332, 333, 334], "3232": [326, 332], "6923": 326, "3264": 326, "33it": [326, 332], "66": [326, 331, 332, 333], "3296": 326, "14it": 326, "3328": 326, "3360": 326, "3392": 326, "3424": 326, "38it": 326, "3456": [326, 332], "56it": 326, "3488": 326, "3520": 326, "71": [326, 332, 333, 334], "3552": 326, "3584": 326, "3616": 326, "3648": 326, "84": [326, 328, 332], "74": [326, 332, 333], "3680": 326, "20it": 326, "3744": 326, "3776": 326, "69it": [326, 332], "3808": 326, "30it": [326, 332], "3840": 326, "3872": 326, "78": [326, 332, 333], "3904": 326, "3936": 326, "3968": 326, "05it": 326, "4000": [326, 327], "4032": 326, "4064": 326, "4096": 326, "4128": [326, 332], "4160": 326, "4192": 326, "4256": [326, 332], "4288": [326, 332], "4320": 326, "4352": 326, "4384": 326, "4416": 326, "4448": 326, "4480": 326, "4512": 326, "05": [326, 328, 332, 333], "4544": 326, "92": [326, 332, 333], "4576": 326, "45it": [326, 332], "4608": 326, "93": [326, 332, 333], "4640": 326, "4672": [326, 332], "4704": 326, "4736": 326, "4768": 326, "49it": 326, "97": [326, 332, 333], "4832": 326, "66it": [326, 328, 332], "4375": [326, 332], "4864": 326, "37it": [326, 328], "4896": 326, "4928": 326, "4960": 326, "4992": 326, "5024it": 326, "print_csv_files_in_fold": 326, "folder_path": 326, "csv_file": 326, "output_str": 326, "dirpath": 326, "walk": [326, 330], "endswith": 326, "strip": 326, "4796708822250366": 326, "45859628915786743": 326, "44965073466300964": 326, "4948333501815796": 326, "4676021933555603": 326, "21520870923995972": 326, "2808959186077118": 326, "2984631657600403": 326, "2174227088689804": 326, "22190307080745697": 326, "30868369340896606": 326, "37999653816223145": 326, "3222835659980774": 326, "4165610373020172": 326, "grad_norm_0": 326, "2142953872680664": 326, "9807610511779785": 326, "230731725692749": 326, "1002657413482666": 326, "4567058086395264": 326, "0121047496795654": 326, "5062923431396484": 326, "076997756958008": 326, "232630252838135": 326, "10000000894069672": 326, "692306995391846": 326, "qvaluenetwork": 326, "worst": 326, "accuraci": 326, "fanci": 326, "1087": 326, "demonstr": [327, 331, 332, 337], "talk": 327, "repetit": 327, "six": 327, "sophist": [327, 331], "invent": 327, "theta_k": 327, "pi_": 327, "exceed": 327, "discourag": [327, 332], "indispens": 327, "analyz": 327, "lingua": 327, "franca": 327, "defaultdict": [327, 332], "has_cuda": [327, 331, 337], "3e": [327, 328, 331], "max_grad_norm": [327, 331], "ourselv": [327, 337], "benefici": 327, "errat": 327, "hamper": [327, 334], "reactiv": 327, "xy": 327, "sub_batch_s": 327, "num_epoch": [327, 331], "entropy_ep": [327, 331], "generalist": 327, "interchang": [327, 333, 334], "panel": 327, "charact": 327, "inverteddoublependulum": 327, "transmit": 327, "stai": 327, "supplementari": [327, 337], "told": 327, "stringent": [327, 331], "confid": [327, 331], "ran": 327, "f_": 327, "mu_": 327, "difficulti": [327, 337], "brought": [327, 328], "d_ob": 327, "d_action": 327, "policy_modul": [327, 331], "That": 327, "said": 327, "briefli": [327, 331], "refil": [327, 331], "capac": 327, "conveni": [327, 331, 332], "easiest": [327, 331], "mathemat": [327, 331], "tradeoff": [327, 331], "advantage_modul": 327, "lr_schedul": [327, 332], "cosineannealinglr": [327, 332], "eval_str": 327, "tensordict_data": [327, 331], "data_view": [327, 331], "subdata": [327, 331], "cum_reward_str": 327, "4f": [327, 328, 332], "stepcount_str": 327, "param_group": 327, "lr_str": 327, "eval_rollout": 327, "nice": 327, "449": [327, 332], "04it": 327, "4205": 327, "0885": [327, 332], "0003": [327, 332], "447": [327, 332], "1147": 327, "3000": 327, "44it": [327, 332], "1597": 327, "1937": 327, "0002": [327, 332], "456": [327, 332], "2057": 327, "6000": 327, "458": [327, 332], "58it": 327, "2188": 327, "7000": 327, "450": [327, 332], "35it": 327, "2391": 327, "454": [327, 332], "2480": 327, "9000": 327, "2485": 327, "460": [327, 332], "2621": 327, "cap": [327, 334], "figsiz": [327, 332], "subplot": [327, 332, 337], "titl": [327, 328, 331, 332], "bit": [327, 328, 331, 334], "lstmmodul": 328, "84x84": 328, "accessori": 328, "stamp": 328, "tensordictprim": 328, "assist": 328, "emb": 328, "n_cell": 328, "customiz": 328, "almost": 328, "wouldn": 328, "make_tensordict_prim": 328, "interpolationmod": 328, "qval": 328, "stoch_polici": 328, "opportun": 328, "coupl": [328, 332, 334], "uniniti": 328, "again": [328, 331, 333, 334, 337], "redund": 328, "strongli": 328, "million": 328, "sake": [328, 333, 334], "20_000": [328, 332], "longest": 328, "npai": 328, "action_spread": 328, "1000000": 328, "119": [328, 332], "0007": [328, 332], "117": [328, 332], "0010": [328, 332], "150": [328, 332], "153": [328, 332], "0013": [328, 332], "171": [328, 332], "0012": [328, 332], "tutorials_python": 329, "tutorials_jupyt": 329, "humanoid": 330, "env1_obs_kei": 330, "observation_stand": 330, "env2_obs_kei": 330, "observation_walk": 330, "tdreset1": 330, "tdreset2": 330, "tdreset": 330, "policy_common": 330, "policy_stand": 330, "policy_walk": 330, "But": 330, "exclusive_field": [330, 336], "stack_dim": [330, 336], "env1_mak": 330, "env2_mak": 330, "_single_task": 330, "td_rollout": 330, "matteo": 331, "bettini": 331, "maddpg": 331, "navig": 331, "lidar": 331, "sensor": 331, "collis": 331, "tie": 331, "mappo": 331, "ippo": 331, "phase": [331, 334], "mathbf": 331, "pi": [331, 332], "fed": [331, 334], "approxim": [331, 337], "literatur": 331, "overcom": 331, "stationari": 331, "concurr": 331, "analys": 331, "gui": 331, "visualis": 331, "multiagentmlp": 331, "divic": 331, "vmas_devic": 331, "6_000": 331, "team": [331, 336], "n_iter": 331, "minibatch_s": 331, "generalis": 331, "furthermor": 331, "simd": 331, "parallelis": 331, "warp": 331, "todai": 331, "circl": 331, "surround": 331, "dot": [331, 332], "collid": 331, "drag": 331, "elast": 331, "acceler": 331, "penalis": 331, "num_vmas_env": 331, "scenario_nam": 331, "four": [331, 332], "environmnet": 331, "final_rew": 331, "agent_collis": 331, "stress": 331, "paramount": 331, "n_rollout_step": 331, "evolut": 331, "yourself": 331, "utilis": 331, "n_actions_per_ag": 331, "n_obs_per_ag": 331, "share_parameters_polici": 331, "policy_net": 331, "denot": 331, "carefulli": [331, 337], "grant": 331, "converg": 331, "cooper": 331, "share_parameters_crit": 331, "critic_net": 331, "fantast": 331, "minibatch": 331, "desc": 331, "episode_reward_mean": 331, "episode_reward_mean_list": 331, "get_item_shap": 331, "critic_param": 331, "target_critic_param": 331, "refresh": 331, "3641679584980011": 331, "4940122067928314": 331, "0600677728652954": 331, "4344534873962402": 331, "1100871562957764": 331, "304917335510254": 331, "6943857669830322": 331, "871443748474121": 331, "8500826358795166": 331, "759843587875366": 331, "xvfb": 331, "pyvirtualdisplai": 331, "1400": [331, 332], "900": 331, "pil": 331, "rendering_callback": 331, "fromarrai": 331, "rgb_arrai": [331, 332], "gif": 331, "save_al": 331, "append_imag": 331, "profici": 331, "master": 331, "freeli": 332, "codebas": 332, "touch": 332, "undertaken": 332, "broader": 332, "wider": 332, "algebra": 332, "acquaint": 332, "avenu": 332, "_apply_to_composit": 332, "default_x": 332, "default_i": 332, "torqu": 332, "upward": 332, "angular": 332, "sin": 332, "rad": 332, "sec": 332, "gravit": 332, "angl": 332, "deleg": 332, "new_th": 332, "new_thdot": 332, "thdot": 332, "g_forc": 332, "max_torqu": 332, "angle_norm": 332, "max_spe": 332, "albeit": 332, "gen_param": 332, "high_th": 332, "high_thdot": 332, "low_th": 332, "low_thdot": 332, "rng": 332, "lazili": 332, "organ": [332, 334], "trivial": 332, "neither": 332, "shortcut": [332, 337], "irrelev": 332, "_make_spec": 332, "td_param": 332, "pseudo": 332, "render_mod": 332, "render_fp": 332, "random_": 332, "_make_step": 332, "staticmethod": 332, "complic": [332, 334, 337], "showcas": 332, "skeleton": 332, "_apply_transform": [332, 337], "_inv_apply_transform": [332, 337], "subset": [332, 333], "unitari": 332, "sine": 332, "cosin": 332, "sintransform": 332, "tensordict_reset": 332, "costransform": 332, "t_sin": 332, "t_co": 332, "cat_transform": 332, "mdp": 332, "simple_rollout": 332, "unexplor": 332, "recreat": 332, "init_td": 332, "traj_return": 332, "last_reward": 332, "is_ipython": 332, "inlin": 332, "get_backend": 332, "ion": 332, "gcf": 332, "clear_output": 332, "625": 332, "0488": 332, "0748": 332, "519": 332, "63it": 332, "0499": 332, "4472": 332, "073": 332, "0685": 332, "0408": 332, "552": 332, "5154": 332, "9086": 332, "527": 332, "9385": 332, "155": 332, "72it": 332, "2568": 332, "4981": 332, "223": 332, "8929": 332, "4491": 332, "581": 332, "73it": 332, "3233": 332, "0664": 332, "596": 332, "1021": 332, "5263": 332, "9579": 332, "5807": 332, "8075": 332, "212": 332, "2009": 332, "5525": 332, "914": 332, "2894": 332, "0115": 332, "0977": 332, "1845": 332, "1830": 332, "4858": 332, "233": 332, "2863": 332, "0297": 332, "464": 332, "4617": 332, "5997": 332, "904": 332, "1647": 332, "0777": 332, "901": 332, "4709": 332, "6813": 332, "8317": 332, "3221": 332, "5554": 332, "276": 332, "3353": 332, "701": 332, "8570": 332, "6656": 332, "463": 332, "7779": 332, "6911": 332, "875": 332, "0796": 332, "7082": 332, "308": 332, "0421": 332, "1496": 332, "5037": 332, "1755": 332, "5029": 332, "9454": 332, "665": 332, "9330": 332, "2118": 332, "444": 332, "0995": 332, "6294": 332, "3146": 332, "2909": 332, "461": 332, "9720": 332, "1298": 332, "9923": 332, "0345": 332, "3438": 332, "3688": 332, "424": 332, "6953": 332, "5233": 332, "411": 332, "8011": 332, "5329": 332, "2677": 332, "6969": 332, "7010": 332, "376": 332, "9352": 332, "7707": 332, "6178": 332, "5646": 332, "348": 332, "7304": 332, "9407": 332, "942": 332, "3882": 332, "7604": 332, "3507": 332, "8928": 332, "258": 332, "6978": 332, "4641": 332, "549": 332, "6047": 332, "5005": 332, "4136": 332, "2993": 332, "3222": 332, "4046": 332, "7314": 332, "275": 332, "6331": 332, "9318": 332, "961": 332, "8331": 332, "1604": 332, "4099": 332, "4761": 332, "125": 332, "4262": 332, "6363": 332, "382": 332, "3593": 332, "7377": 332, "2847": 332, "3443": 332, "867": 332, "3592": 332, "4760": 332, "441": 332, "9950": 332, "8021": 332, "3528": 332, "1214": 332, "708": 332, "4023": 332, "3583": 332, "041": 332, "3801": 332, "0310": 332, "120": 332, "4244": 332, "2039": 332, "4850": 332, "8748": 332, "706": 332, "4897": 332, "9210": 332, "8964": 332, "0832": 332, "3934": 332, "8971": 332, "2933": 332, "74it": 332, "3377": 332, "6996": 332, "2274": 332, "8916": 332, "098": 332, "2660": 332, "9110": 332, "4503": 332, "6956": 332, "9172": 332, "4026": 332, "946": 332, "9229": 332, "5205": 332, "294": 332, "8872": 332, "6637": 332, "019": 332, "9281": 332, "2082": 332, "724": 332, "8561": 332, "6574": 332, "357": 332, "4138": 332, "5230": 332, "385": 332, "4065": 332, "5642": 332, "921": 332, "9786": 332, "4129": 332, "5831": 332, "266": 332, "7723": 332, "4152": 332, "0898": 332, "389": 332, "5155": 332, "5376": 332, "5616": 332, "4094": 332, "283": 332, "5333": 332, "4803": 332, "895": 332, "6566": 332, "2588": 332, "662": 332, "4732": 332, "7503": 332, "068": 332, "0714": 332, "3370": 332, "059": 332, "8612": 332, "1915": 332, "3855": 332, "0349": 332, "9644": 332, "4538": 332, "445": 332, "0392": 332, "4080": 332, "1648": 332, "9599": 332, "143": 332, "4284": 332, "5946": 332, "2590": 332, "9181": 332, "4621": 332, "9075": 332, "1772": 332, "9444": 332, "351": 332, "9391": 332, "5595": 332, "8673": 332, "6240": 332, "5919": 332, "0018": 332, "1071": 332, "9127": 332, "251": 332, "9799": 332, "3131": 332, "9612": 332, "9705": 332, "8741": 332, "2230": 332, "0972": 332, "0337": 332, "0350": 332, "0654": 332, "102": [332, 334], "2441": 332, "4596": 332, "362": 332, "103": 332, "4362": 332, "104": 332, "4041": 332, "6907": 332, "105": 332, "4664": 332, "2760": 332, "0299": 332, "9712": 332, "349": 332, "107": 332, "3332": 332, "4479": 332, "772": 332, "108": 332, "4357": 332, "9591": 332, "543": 332, "109": 332, "6216": 332, "1353": 332, "692": 332, "6261": 332, "7086": 332, "496": 332, "111": 332, "7758": 332, "9818": 332, "112": 332, "7772": 332, "5055": 332, "113": [332, 334], "5840": 332, "3180": 332, "2083": 332, "115": 332, "5275": 332, "6873": 332, "116": 332, "4107": 332, "1624": 332, "6372": 332, "2571": 332, "118": 332, "4039": 332, "4428": 332, "4728": 332, "5628": 332, "6767": 332, "2466": 332, "522": 332, "121": [332, 337], "5873": 332, "5072": 332, "122": [332, 337], "6548": 332, "3766": 332, "123": 332, "5134": 332, "1955": 332, "124": [332, 334], "2481": 332, "0591": 332, "4500": 332, "3368": 332, "126": 332, "9708": 332, "7059": 332, "127": [332, 334], "3031": 332, "2534": 332, "843": 332, "3327": 332, "6193": 332, "129": 332, "4831": 332, "1172": 332, "2593": 332, "4219": 332, "962": 332, "8380": 332, "899": 332, "132": 332, "2721": 332, "9048": 332, "166": 332, "133": [332, 334], "2419": 332, "5248": 332, "134": 332, "2139": 332, "4278": 332, "135": 332, "0690": 332, "5140": 332, "136": 332, "1140": 332, "7402": 332, "137": 332, "5356": 332, "1636": 332, "138": 332, "0671": 332, "8798": 332, "139": 332, "8918": 332, "3298": 332, "307": 332, "140": 332, "1779": 332, "141": 332, "1771": 332, "3624": 332, "936": 332, "142": 332, "1683": 332, "4810": 332, "9373": 332, "4435": 332, "144": 332, "4396": 332, "8092": 332, "145": [332, 334], "2572": 332, "146": 332, "4212": 332, "0260": 332, "147": 332, "0939": 332, "6478": 332, "605": 332, "148": 332, "6606": 332, "7289": 332, "149": 332, "9300": 332, "7193": 332, "563": 332, "1166": 332, "8514": 332, "9108": 332, "0672": 332, "292": 332, "152": 332, "8591": 332, "3768": 332, "9976": 332, "154": [332, 334], "0576": 332, "0067": 332, "935": 332, "4199": 332, "1722": 332, "156": 332, "8310": 332, "3466": 332, "157": 332, "8631": 332, "2492": 332, "158": 332, "8763": 332, "1277": 332, "159": 332, "5562": 332, "7446": 332, "1082": 332, "9830": 332, "161": 332, "0946": 332, "5229": 332, "4574": 332, "6900": 332, "163": [332, 333, 334], "2229": 332, "0318": 332, "482": 332, "164": 332, "0543": 332, "0817": 332, "761": 332, "165": 332, "2809": 332, "5118": 332, "366": 332, "1142": 332, "5635": 332, "167": 332, "1949": 332, "2327": 332, "982": 332, "168": 332, "0967": 332, "0387": 332, "457": 332, "169": 332, "21it": 332, "0782": 332, "2150": 332, "170": [332, 334], "5222": 332, "3725": 332, "9288": 332, "9837": 332, "172": 332, "1416": 332, "1099": 332, "173": 332, "8620": 332, "8475": 332, "174": 332, "1807": 332, "175": 332, "1148": 332, "0645": 332, "2751": 332, "8313": 332, "177": 332, "61it": 332, "9286": 332, "9770": 332, "178": 332, "5735": 332, "2837": 332, "179": [332, 334], "2926": 332, "9489": 332, "180": 332, "1507": 332, "181": 332, "8724": 332, "3567": 332, "182": 332, "3574": 332, "6140": 332, "183": 332, "7895": 332, "2518": 332, "184": 332, "6146": 332, "185": 332, "8776": 332, "7358": 332, "186": 332, "3722": 332, "8428": 332, "187": 332, "7955": 332, "188": 332, "0092": 332, "7106": 332, "829": 332, "189": 332, "2264": 332, "6919": 332, "190": 332, "1438": 332, "1362": 332, "191": 332, "0618": 332, "8217": 332, "9420": 332, "6765": 332, "193": 332, "7745": 332, "0709": 332, "194": 332, "9478": 332, "6867": 332, "195": 332, "6507": 332, "6225": 332, "196": 332, "2244": 332, "2195": 332, "197": 332, "5385": 332, "9263": 332, "198": 332, "1878": 332, "2374": 332, "199": 332, "8054": 332, "3504": 332, "557": 332, "0766": 332, "6825": 332, "201": 332, "2011": 332, "8393": 332, "202": 332, "0803": 332, "7815": 332, "203": 332, "8363": 332, "2460": 332, "204": 332, "8643": 332, "2191": 332, "593": 332, "205": 332, "0773": 332, "1343": 332, "206": 332, "8657": 332, "207": 332, "9304": 332, "7584": 332, "208": 332, "8752": 332, "2307": 332, "209": 332, "5250": 332, "4869": 332, "7837": 332, "5762": 332, "6661": 332, "8600": 332, "2502": 332, "1752": 332, "213": 332, "3075": 332, "8871": 332, "214": 332, "9406": 332, "8090": 332, "215": 332, "6291": 332, "8923": 332, "876": 332, "216": 332, "9504": 332, "21e": 332, "217": 332, "7431": 332, "7880": 332, "218": 332, "4463": 332, "5432": 332, "219": 332, "3793": 332, "3313": 332, "220": 332, "8843": 332, "0369": 332, "065": 332, "221": 332, "4828": 332, "8391": 332, "6265": 332, "2913": 332, "947": 332, "5541": 332, "1252": 332, "7342": 332, "2396": 332, "225": 332, "5936": 332, "1924": 332, "226": 332, "9975": 332, "2045": 332, "227": 332, "8367": 332, "9540": 332, "228": 332, "7259": 332, "6743": 332, "229": 332, "4827": 332, "7528": 332, "230": 332, "7361": 332, "8756": 332, "231": 332, "7646": 332, "1116": 332, "232": 332, "5426": 332, "8385": 332, "5662": 332, "8585": 332, "234": 332, "8234": 332, "7930": 332, "235": 332, "2648": 332, "9309": 332, "236": 332, "6817": 332, "237": 332, "0943": 332, "1533": 332, "238": 332, "3045": 332, "0483": 332, "239": 332, "240": [332, 336, 337], "6415": 332, "0201": 332, "241": 332, "4437": 332, "4365": 332, "242": 332, "0358": 332, "4943": 332, "243": 332, "1272": 332, "5003": 332, "1180": 332, "2637": 332, "245": 332, "7197": 332, "0873": 332, "246": 332, "2917": 332, "247": 332, "0160": 332, "0738": 332, "248": 332, "3689": 332, "0120": 332, "249": 332, "5570": 332, "0475": 332, "4423": 332, "2220": 332, "6803": 332, "252": 332, "1465": 332, "7214": 332, "253": 332, "8801": 332, "7034": 332, "254": 332, "9136": 332, "4076": 332, "7589": 332, "5013": 332, "8150": 332, "2241": 332, "257": 332, "0753": 332, "8081": 332, "1951": 332, "8314": 332, "259": 332, "0038": 332, "260": 332, "0889": 332, "4616": 332, "0655": 332, "262": 332, "8333": 332, "9476": 332, "263": 332, "7554": 332, "3798": 332, "264": 332, "3717": 332, "3947": 332, "529": 332, "265": 332, "3060": 332, "6495": 332, "7467": 332, "8889": 332, "267": 332, "8457": 332, "591": 332, "268": 332, "7137": 332, "0536": 332, "771": 332, "269": 332, "1651": 332, "388": 332, "270": 332, "8246": 332, "5709": 332, "281": 332, "271": 332, "7502": 332, "0521": 332, "032": 332, "272": 332, "5475": 332, "7253": 332, "273": 332, "2856": 332, "7130": 332, "274": 332, "2778": 332, "4122": 332, "8368": 332, "1841": 332, "9622": 332, "1603": 332, "003e": 332, "277": 332, "0247": 332, "346": 332, "278": 332, "2238": 332, "6418": 332, "279": 332, "0626": 332, "2538": 332, "280": 332, "0149": 332, "7380": 332, "2167": [332, 337], "8911": 332, "282": 332, "8725": 332, "1983": 332, "8142": 332, "3709": 332, "284": 332, "4989": 332, "285": 332, "6464": 332, "6210": 332, "9726": 332, "0820": 332, "287": 332, "6975": 332, "9091": 332, "4926": 332, "4791": 332, "289": 332, "0905": 332, "3500": 332, "290": 332, "2287": 332, "9918": 332, "5543": 332, "9245": 332, "6444": 332, "631": 332, "293": 332, "0448": 332, "4769": 332, "8566": 332, "7208": 332, "295": 332, "0966": 332, "296": 332, "5303": 332, "1537": 332, "023": 332, "297": 332, "2682": 332, "564": 332, "298": 332, "4318": 332, "5063": 332, "299": 332, "7475": 332, "4190": 332, "8186": 332, "5077": 332, "301": 332, "1883": 332, "5291": 332, "472": 332, "302": 332, "1256": 332, "3998": 332, "303": 332, "3622": 332, "0930": 332, "626": 332, "304": 332, "9500": 332, "0075": 332, "5664": 332, "305": 332, "5697": 332, "3024": 332, "306": 332, "3117": 332, "0052": 332, "006": 332, "0981": 332, "9312": 332, "3873": 332, "309": 332, "0411": 332, "2650": 332, "310": 332, "1656": 332, "0228": 332, "004": 332, "311": 332, "1196": 332, "2478": 332, "312": 332, "7353": 332, "0812": 332, "313": 332, "3022": 332, "758": 332, "314": 332, "1406": 332, "4626": 332, "315": 332, "2156": 332, "851": 332, "316": 332, "1953": 332, "3774": 332, "317": 332, "6385": 332, "9917": 332, "318": 332, "2764": 332, "905": 332, "319": 332, "6391": 332, "9317": 332, "9748": 332, "2679": 332, "321": 332, "8495": 332, "5125": 332, "8177": 332, "6602": 332, "323": 332, "0704": 332, "5776": 332, "324": 332, "9833": [332, 336], "1339": 332, "402": 332, "325": 332, "1238": 332, "326": 332, "9299": 332, "0227": 332, "327": 332, "7727": 332, "1607": 332, "336": 332, "328": 332, "3958": 332, "3223": 332, "763": 332, "329": 332, "4742": 332, "1797": 332, "330": 332, "0144": 332, "0085": 332, "791": 332, "331": 332, "8284": 332, "0428": 332, "332": 332, "0098": 332, "7365": 332, "333": 332, "4566": 332, "0781": 332, "086": 332, "334": 332, "3355": 332, "0230": 332, "335": 332, "9346": 332, "0423": 332, "076": 332, "3711": 332, "1335": 332, "6855": 332, "337": 332, "0304": 332, "0023": 332, "8459": 332, "338": 332, "9998": 332, "4399": 332, "339": 332, "2303": 332, "1346": 332, "340": 332, "2915": 332, "7116": 332, "341": 332, "5560": 332, "0487": 332, "342": 332, "5119": 332, "061": 332, "343": 332, "3305": 332, "3705": 332, "957": 332, "344": 332, "6068": 332, "345": 332, "5731": 332, "3897": 332, "0376": 332, "347": 332, "0434": 332, "012": 332, "1300": 332, "1215": 332, "0968": 332, "350": 332, "1348": 332, "0073": 332, "5052": 332, "4184": 332, "2817": 332, "8887": 332, "353": 332, "4779": 332, "1009": 332, "354": 332, "0604": 332, "599": 332, "355": 332, "4486": 332, "1176": 332, "656": 332, "356": 332, "2436": 332, "0668": 332, "8849": 332, "358": 332, "7511": 332, "8804": 332, "359": 332, "8870": 332, "6728": 332, "360": 332, "8841": 332, "5508": 332, "361": 332, "5242": 332, "0268": 332, "6185": 332, "363": 332, "1378": 332, "0204": 332, "364": 332, "0355": 332, "685": 332, "365": 332, "4884": 332, "0231": 332, "0770": 332, "0014": 332, "6793": 332, "367": 332, "9834": 332, "863": 332, "368": 332, "6709": 332, "462": 332, "369": 332, "5199": 332, "9790": 332, "370": 332, "9401": 332, "7802": 332, "371": 332, "6723": 332, "372": 332, "2678": 332, "6201": 332, "373": 332, "2184": 332, "7385": 332, "374": 332, "6344": 332, "617": 332, "375": 332, "9945": 332, "0772": 332, "567": 332, "7576": 332, "0398": 332, "377": 332, "3396": 332, "0022": 332, "094": 332, "378": 332, "3073": 332, "4018": 332, "379": 332, "1869": 332, "380": 332, "0481": 332, "1117": 332, "381": 332, "6823": 332, "981": 332, "8305": 332, "0210": 332, "383": 332, "4908": 332, "0272": 332, "538": 332, "17it": 332, "3267": 332, "0111": 332, "7965": 332, "1796": 332, "0039": 332, "5396": 332, "386": 332, "3757": 332, "0490": 332, "387": 332, "1394": 332, "4187": 332, "2986": 332, "7954": 332, "1274": 332, "0063": 332, "390": 332, "8706": 332, "0114": 332, "391": 332, "6922": 332, "0004": 332, "2423": 332, "9115": 332, "2602": 332, "2449": 332, "0783": 332, "394": 332, "0631": 332, "0057": 332, "7444": 332, "395": 332, "3339": 332, "0167": 332, "396": 332, "4806": 332, "397": 332, "4171": 332, "067": 332, "398": 332, "2618": 332, "5809": 332, "399": 332, "0054": 332, "3364": 332, "8733": 332, "0184": 332, "401": 332, "9137": 332, "0113": 332, "025": 332, "0386": 332, "0625": 332, "403": 332, "1332": 332, "0582": 332, "7816": 332, "404": 332, "8341": 332, "0941": 332, "854": 332, "405": 332, "8615": 332, "588": 332, "406": 332, "3849": 332, "008": 332, "407": 332, "9395": 332, "0765": 332, "055": 332, "408": 332, "2685": 332, "2235": 332, "688": 332, "409": 332, "3052": 332, "4249": 332, "410": 332, "6806": 332, "6383": 332, "3721": 332, "9981": 332, "412": 332, "1862": 332, "822": 332, "413": 332, "9811": 332, "0171": 332, "013": 332, "414": 332, "0252": 332, "0049": 332, "6205": 332, "415": 332, "1108": 332, "4921": 332, "9142": 332, "8130": 332, "1725": 332, "0036": 332, "3196": 332, "418": 332, "7795": 332, "0242": 332, "799": 332, "419": 332, "7737": 332, "0138": 332, "420": 332, "1462": 332, "0053": 332, "421": 332, "9226": 332, "6139": 332, "422": 332, "9889": 332, "0403": 332, "423": 332, "6194": 332, "0032": 332, "3989": 332, "0104": 332, "425": 332, "9960": 332, "0009": 332, "6009": 332, "426": 332, "2697": 332, "0914": 332, "427": 332, "1114": 332, "9862": 332, "1932": 332, "429": 332, "0637": 332, "0623": 332, "082": 332, "430": 332, "9906": 332, "2031": 332, "431": 332, "9948": 332, "0895": 332, "432": 332, "1970": 332, "0256": 332, "433": 332, "4231": 332, "0449": 332, "644": 332, "434": 332, "1039": 332, "1973": 332, "435": 332, "4561": 332, "1225": 332, "436": 332, "0211": 332, "2125": 332, "437": 332, "3866": 332, "0050": 332, "7202": 332, "438": 332, "6388": 332, "0072": 332, "439": 332, "1187": 332, "0015": 332, "5116": 332, "440": 332, "0432": 332, "0025": 332, "7809": 332, "1925": 332, "0103": 332, "442": 332, "9570": 332, "443": 332, "0871": 332, "5601": 332, "0165": 332, "0047": 332, "6061": 332, "2746": 332, "0027": 332, "7887": 332, "446": 332, "1835": 332, "0035": 332, "855": 332, "8420": 332, "548": 332, "2653": 332, "0126": 332, "9736": 332, "0594": 332, "0119": 332, "6196": 332, "4509": 332, "0373": 332, "451": 332, "0620": 332, "6898": 332, "3235": 332, "687": 332, "453": 332, "5879": 332, "8406": 332, "0694": 332, "455": 332, "8259": 332, "0235": 332, "81it": 332, "8500": 332, "0024": 332, "4054": 332, "2027": 332, "0894": 332, "459": 332, "5966": 332, "6942": 332, "0016": 332, "4254": 332, "6703": 332, "0145": 332, "8124": 332, "0218": 332, "9196": 332, "52it": 332, "0188": 332, "8986": 332, "0884": 332, "0084": 332, "5624": 332, "465": 332, "8862": 332, "0006": 332, "5384": 332, "466": 332, "5837": 332, "467": 332, "8954": 332, "0101": 332, "6751": 332, "468": 332, "8063": 332, "0122": 332, "9635": 332, "469": 332, "0692": 332, "4216": 332, "470": 332, "1227": 332, "0586": 332, "162e": 332, "471": 332, "9690": 332, "0074": 332, "4166": 332, "6324": 332, "473": 332, "0778": 332, "474": 332, "8548": 332, "0017": 332, "4408": 332, "475": 332, "8125": 332, "1515": 332, "476": 332, "2733": 332, "0044": 332, "2836": 332, "477": 332, "7497": 332, "7681": 332, "478": 332, "8547": 332, "0105": 332, "7212": 332, "479": 332, "9848": 332, "0019": 332, "6498": 332, "1987": 332, "0011": 332, "5473": 332, "481": 332, "8991": 332, "0033": 332, "6091": 332, "9189": 332, "5771": 332, "6781": 332, "7542": 332, "484": 332, "5959": 332, "0064": 332, "4295": 332, "485": 332, "2547": 332, "486": 332, "0636": 332, "547": 332, "487": 332, "0065": 332, "488": 332, "1694": 332, "0083": 332, "5759": 332, "489": 332, "0493": 332, "0021": 332, "7805": 332, "490": 332, "0950": 332, "497": 332, "491": 332, "9717": 332, "3672": 332, "492": 332, "0207": 332, "493": 332, "8266": 332, "0069": 332, "5365": 332, "494": 332, "2623": 332, "5078": 332, "495": 332, "4545": 332, "09636": 332, "8754": 332, "498": 332, "0031": 332, "8269": 332, "499": 332, "4082": 332, "6642": 332, "2284": 332, "501": 332, "9130": 332, "0008": 332, "502": 332, "503": 332, "7624": 332, "0056": 332, "3858": 332, "504": 332, "0890": 332, "0042": 332, "505": 332, "7505": 332, "2157": 332, "8394": 332, "3413": 332, "507": 332, "9609": 332, "0041": 332, "6905": 332, "508": 332, "8467": 332, "4409": 332, "509": 332, "510": 332, "8128": 332, "3559": 332, "511": 332, "1479": 332, "0264": 332, "1589": 332, "566": 332, "513": 332, "2756": 332, "0046": 332, "5266": 332, "514": 332, "9873": 332, "0112": 332, "9314": 332, "515": 332, "3791": 332, "0721": 332, "516": 332, "4580": 332, "0758": 332, "6114": 332, "517": 332, "2431": 332, "518": 332, "1958": 332, "5553": 332, "8924": 332, "0097": 332, "520": 332, "3737": 332, "0234": 332, "521": 332, "9125": 332, "4623": 332, "3230": 332, "0589": 332, "3784": 332, "523": 332, "9482": 332, "0051": 332, "524": 332, "1979": 332, "0045": 332, "6401": 332, "525": 332, "18it": 332, "1588": 332, "0048": 332, "6255": 332, "526": 332, "34it": 332, "6084": 332, "3477": 332, "1475": 332, "0209": 332, "528": 332, "55it": 332, "7611": 332, "1040": 332, "0099": 332, "0173": 332, "643": 332, "530": 332, "8189": 332, "4358": 332, "531": 332, "9897": 332, "532": 332, "1548": 332, "9751": 332, "533": 332, "6362": 332, "7495": 332, "534": 332, "1749": 332, "9513": 332, "535": 332, "7708": 332, "0371": 332, "536": 332, "2649": 332, "0437": 332, "537": 332, "5491": 332, "0276": 332, "6426": 332, "7294": 332, "078e": 332, "539": 332, "9928": 332, "540": 332, "7937": 332, "0124": 332, "9664": 332, "541": 332, "3342": 332, "542": 332, "2046": 332, "75it": 332, "5496": 332, "0956": 332, "0059": 332, "545": 332, "9028": 332, "5843": 332, "546": 332, "0674": 332, "0178": 332, "797": 332, "2815": 332, "0599": 332, "1587": 332, "9276": 332, "8228": 332, "6164": 332, "551": 332, "6850": 332, "9167": 332, "3092": 332, "0670": 332, "9177": 332, "553": 332, "1599": 332, "0043": 332, "554": 332, "6367": 332, "555": 332, "3657": 332, "556": 332, "6694": 332, "2622": 332, "0372": 332, "4841": 332, "558": 332, "2707": 332, "0058": 332, "757": 332, "559": 332, "2267": 332, "5415": 332, "560": 332, "4556": 332, "0163": 332, "1839": 332, "0809": 332, "6262": 332, "562": 332, "0278": 332, "1112": 332, "6155": 332, "565": 332, "1427": 332, "3582": 332, "624": 332, "7870": 332, "9490": 332, "0439": 332, "8796": 332, "568": 332, "8026": 332, "612": 332, "569": 332, "3147": 332, "8486": 332, "570": 332, "7917": 332, "0129": 332, "571": 332, "9553": 332, "0020": 332, "6871": 332, "3132": 332, "0159": 332, "8646": 332, "573": 332, "5320": 332, "0269": 332, "574": 332, "2955": 332, "0245": 332, "575": 332, "3347": 332, "0179": 332, "9718": 332, "1629": 332, "804": 332, "577": 332, "4164": 332, "0070": 332, "4335": 332, "578": 332, "579": 332, "3049": 332, "9063": 332, "580": 332, "8785": 332, "3295": 332, "5184": 332, "0546": 332, "582": 332, "4589": 332, "583": 332, "4697": 332, "2476": 332, "584": 332, "2397": 332, "585": 332, "4953": 332, "1775": 332, "586": 332, "2258": 332, "0110": 332, "7671": 332, "587": 332, "3981": 332, "8590": 332, "589": 332, "9820": 332, "4221": 332, "590": 332, "1293": 332, "0116": 332, "868": 332, "1675": 332, "5931": 332, "592": 332, "2910": 332, "5219": 332, "2124": 332, "1730": 332, "737": 332, "594": 332, "2914": 332, "0206": 332, "595": 332, "0172": 332, "3982": 332, "0945": 332, "0121": 332, "4789": 332, "597": 332, "3805": 332, "598": 332, "3310": 332, "5065": 332, "6028": 332, "6316": 332, "6724": 332, "6523": 332, "601": 332, "0136": 332, "4298": 332, "602": 332, "3524": 332, "2629": 332, "603": 332, "2635": 332, "7839": 332, "604": 332, "6041": 332, "8027": 332, "4170": 332, "4675": 332, "606": 332, "3153": 332, "9316": 332, "607": 332, "0649": 332, "9722": 332, "7989": 332, "0329": 332, "609": 332, "1976": 332, "6852": 332, "610": 332, "4793": 332, "1255": 332, "611": 332, "4581": 332, "0394": 332, "2047": 332, "0326": 332, "613": 332, "8967": 332, "8619": 332, "614": 332, "5906": 332, "6491": 332, "615": 332, "6634": 332, "4394": 332, "616": 332, "0624": 332, "0061": 332, "5676": 332, "3259": 332, "0131": 332, "7733": 332, "618": 332, "7515": 332, "0189": 332, "5575": 332, "619": 332, "9313": 332, "6286": 332, "620": 332, "4325": 332, "7832": 332, "621": 332, "1134": 332, "622": 332, "4572": 332, "0500": 332, "5838": 332, "623": 332, "3818": 332, "8623": 332, "1253": 332, "6622": 332, "subject": 332, "saw": [332, 334], "explain": 333, "semat": 333, "r3mtransform": 333, "embodi": 333, "ai": 333, "env_transform": [333, 337], "s3": 333, "amazonaw": 333, "r3m_50": 333, "374m": 333, "3mb": 333, "6m": 333, "9m": 333, "7mb": 333, "1mb": 333, "4m": 333, "4mb": 333, "9mb": 333, "103m": 333, "115m": 333, "130m": 333, "138m": 333, "147m": 333, "162m": 333, "169m": 333, "8mb": 333, "179m": 333, "2mb": 333, "184m": 333, "6mb": 333, "195m": 333, "0mb": 333, "200m": 333, "212m": 333, "217m": 333, "229m": 333, "245m": 333, "253m": 333, "261m": 333, "268m": 333, "277m": 333, "282m": 333, "293m": 333, "5mb": 333, "299m": 333, "311m": 333, "326m": 333, "331m": 333, "342m": 333, "348m": 333, "360m": 333, "wiser": 333, "conclud": 333, "_storag": [333, 334], "supervis": [334, 337], "pull": 334, "temporarili": 334, "ram": [334, 337], "batteri": 334, "dataliststorag": 334, "datalazytensorstorag": 334, "tensordidct": 334, "datalazymemmapstorag": 334, "buffer_list": 334, "lowest": 334, "medium": 334, "buffer_lazytensor": 334, "buffer_lazymemmap": 334, "tempdir": 334, "tmph3xr_suv": 334, "fullest": 334, "convini": 334, "mydata": 334, "background": 334, "question": [334, 336], "_i": 334, "artifici": 334, "0892946e": 334, "she": 334, "augment": 334, "proport": 334, "hist": 334, "barcontain": 334, "artist": 334, "revert": 334, "expens": 334, "reappear": 334, "unfold": 334, "problemat": 334, "window": 334, "4th": 334, "demo": 336, "icml": 336, "vmoen": 336, "fb": 336, "invest": 336, "platform": 336, "media": 336, "predominantli": 336, "tensordict1": 336, "tensordict2": 336, "tensordict_sampl": 336, "_sampler": 336, "_sum_tre": 336, "modulenotfounderror": 336, "28791671991348267": 336, "gym_env": 336, "noopresetenv": [336, 337], "backbone_modul": 336, "params_expand": 336, "tensordict_exp": 336, "base_modul": 336, "0137": 336, "1524": 336, "0641": 336, "viewbackward0": 336, "asstridedbackward0": 336, "8728": 336, "1334": 336, "3494": 336, "6887": 336, "6402": 336, "_safetanhbackward": 336, "1132": 336, "1762": 336, "3430": 336, "2668": 336, "2918": 336, "6239": 336, "roughli": 336, "tensordicts_prealloc": 336, "tensordicts_stack": 336, "tensordict_rollout": [336, 337], "disclaim": 336, "concatmodul": 336, "loss_td": 336, "year": 336, "roadmap": 336, "compris": 336, "contributor": 336, "curiou": 336, "nascent": 336, "unsupervis": 337, "rom": 337, "licens": 337, "pygam": 337, "unifi": 337, "insid": 337, "_build_env": 337, "adventur": 337, "airraid": 337, "alien": 337, "amidar": 337, "assault": 337, "2511": 337, "deserv": 337, "__episode__": 337, "__trajectory__": 337, "void": 337, "reproduct": 337, "tensordict_tprim": 337, "imshow": 337, "axesimag": 337, "0x7f0bca6f92b0": 337, "inconsist": 337, "0x7f0bf9e08e40": 337, "swingup": 337, "wrapper1": 337, "wrapper2": 337, "obviou": 337, "truth": 337, "env0": 337, "env_transformed_bi": 337, "stanc": 337, "transformeddistribut": 337, "base_dist": 337, "concat": 337, "mofidi": 337, "transformedenviron": 337, "moderet": 337, "computation": 337, "legitim": 337, "incom": 337, "amongst": 337, "wor": 337, "convention": 337, "scope": 337, "markovian": 337, "3288080526": 337, "constain": 337, "bar_": 337, "get_someth": 337, "bar_61b82184": 337, "952e": 337, "aargh": 337, "foo_list": 337, "batched_env": 337, "_dispatch_caller_parallel": 337, "0x7f0bd1362a00": 337, "bar_69126bb0": 337, "8376": 337, "bar_690fd8b4": 337, "8433": 337, "bar_69106838": 337, "86ac": 337, "parallen": 337, "particularili": 337, "evolv": 337, "steadi": 337, "approx": 337, "0531": 337, "3525": 337, "0726": 337, "0814": 337, "1276": 337, "1181": 337, "_extra_st": 337, "observation_ssq": 337, "observation_sum": 337, "2405": 337, "0776": 337, "2655": 337, "1742": 337, "2345": 337, "dispach": 337, "absor": 337}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"], [11, 1, 1, "", "reset"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "RandomPolicy"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "BinaryDiscreteTensorSpec"], [25, 0, 1, "", "BoundedTensorSpec"], [26, 0, 1, "", "CompositeSpec"], [27, 0, 1, "", "DiscreteTensorSpec"], [28, 0, 1, "", "LazyStackedCompositeSpec"], [29, 0, 1, "", "LazyStackedTensorSpec"], [30, 0, 1, "", "MultiDiscreteTensorSpec"], [31, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [32, 0, 1, "", "MultiStep"], [33, 0, 1, "", "OneHotDiscreteTensorSpec"], [34, 0, 1, "", "PairwiseDataset"], [35, 0, 1, "", "PrioritizedReplayBuffer"], [36, 0, 1, "", "PromptData"], [37, 0, 1, "", "PromptTensorDictTokenizer"], [38, 0, 1, "", "ReplayBuffer"], [39, 0, 1, "", "RewardData"], [40, 0, 1, "", "RolloutFromModel"], [41, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [42, 0, 1, "", "TensorDictReplayBuffer"], [43, 0, 1, "", "TensorDictTokenizer"], [44, 0, 1, "", "TensorSpec"], [45, 0, 1, "", "TokenizedDatasetLoader"], [46, 0, 1, "", "UnboundedContinuousTensorSpec"], [47, 0, 1, "", "UnboundedDiscreteTensorSpec"], [48, 0, 1, "", "check_no_exclusive_keys"], [49, 0, 1, "", "consolidate_spec"], [50, 0, 1, "", "contains_lazy_spec"], [51, 0, 1, "", "create_infinite_iterator"], [55, 0, 1, "", "get_dataloader"]], "torchrl.data.BinaryDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "to_one_hot"], [24, 1, 1, "", "to_one_hot_spec"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "empty"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_empty"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "items"], [26, 1, 1, "", "keys"], [26, 1, 1, "", "lock_"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unlock_"], [26, 1, 1, "", "values"], [26, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "to_one_hot"], [27, 1, 1, "", "to_one_hot_spec"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "empty"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_empty"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "items"], [28, 1, 1, "", "keys"], [28, 1, 1, "", "lock_"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unlock_"], [28, 1, 1, "", "values"], [28, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to_categorical"], [31, 1, 1, "", "to_categorical_spec"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[32, 1, 1, "", "add_module"], [32, 1, 1, "", "apply"], [32, 1, 1, "", "bfloat16"], [32, 1, 1, "", "buffers"], [32, 1, 1, "", "children"], [32, 1, 1, "", "compile"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 1, 1, "", "double"], [32, 1, 1, "", "eval"], [32, 1, 1, "", "extra_repr"], [32, 1, 1, "", "float"], [32, 1, 1, "", "forward"], [32, 1, 1, "", "get_buffer"], [32, 1, 1, "", "get_extra_state"], [32, 1, 1, "", "get_parameter"], [32, 1, 1, "", "get_submodule"], [32, 1, 1, "", "half"], [32, 1, 1, "", "ipu"], [32, 1, 1, "", "load_state_dict"], [32, 1, 1, "", "modules"], [32, 1, 1, "", "named_buffers"], [32, 1, 1, "", "named_children"], [32, 1, 1, "", "named_modules"], [32, 1, 1, "", "named_parameters"], [32, 1, 1, "", "parameters"], [32, 1, 1, "", "register_backward_hook"], [32, 1, 1, "", "register_buffer"], [32, 1, 1, "", "register_forward_hook"], [32, 1, 1, "", "register_forward_pre_hook"], [32, 1, 1, "", "register_full_backward_hook"], [32, 1, 1, "", "register_full_backward_pre_hook"], [32, 1, 1, "", "register_load_state_dict_post_hook"], [32, 1, 1, "", "register_module"], [32, 1, 1, "", "register_parameter"], [32, 1, 1, "", "register_state_dict_pre_hook"], [32, 1, 1, "", "requires_grad_"], [32, 1, 1, "", "set_extra_state"], [32, 1, 1, "", "share_memory"], [32, 1, 1, "", "state_dict"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_empty"], [32, 1, 1, "", "train"], [32, 1, 1, "", "type"], [32, 1, 1, "", "xpu"], [32, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[34, 3, 1, "", "batch_size"], [34, 3, 1, "", "device"], [34, 1, 1, "", "from_dataset"], [34, 1, 1, "", "from_dict"], [34, 1, 1, "", "from_tensordict"], [34, 1, 1, "", "get"], [34, 1, 1, "", "load_state_dict"], [34, 1, 1, "", "set"], [34, 1, 1, "", "state_dict"], [34, 1, 1, "", "to_tensordict"], [34, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[35, 1, 1, "", "add"], [35, 1, 1, "", "append_transform"], [35, 1, 1, "", "dumps"], [35, 1, 1, "", "empty"], [35, 1, 1, "", "extend"], [35, 1, 1, "", "insert_transform"], [35, 1, 1, "", "loads"], [35, 1, 1, "", "sample"]], "torchrl.data.PromptData": [[36, 3, 1, "", "batch_size"], [36, 3, 1, "", "device"], [36, 1, 1, "", "from_dataset"], [36, 1, 1, "", "from_dict"], [36, 1, 1, "", "from_tensordict"], [36, 1, 1, "", "get"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "set"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to_tensordict"], [36, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[38, 1, 1, "", "add"], [38, 1, 1, "", "append_transform"], [38, 1, 1, "", "dumps"], [38, 1, 1, "", "empty"], [38, 1, 1, "", "extend"], [38, 1, 1, "", "insert_transform"], [38, 1, 1, "", "loads"], [38, 1, 1, "", "sample"]], "torchrl.data.RewardData": [[39, 3, 1, "", "batch_size"], [39, 3, 1, "", "device"], [39, 1, 1, "", "from_dict"], [39, 1, 1, "", "from_tensordict"], [39, 1, 1, "", "get"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "set"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to_tensordict"], [39, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[40, 1, 1, "", "create_rollout_td"], [40, 1, 1, "", "generate"], [40, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "dumps"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "loads"], [41, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "append_transform"], [42, 1, 1, "", "dumps"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert_transform"], [42, 1, 1, "", "loads"], [42, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[45, 1, 1, "", "dataset_to_tensordict"], [45, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "zero"]], "torchrl.data.datasets": [[52, 0, 1, "", "D4RLExperienceReplay"], [53, 0, 1, "", "MinariExperienceReplay"], [54, 0, 1, "", "OpenMLExperienceReplay"]], "torchrl.data.datasets.D4RLExperienceReplay": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 1, 1, "", "dumps"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "loads"], [52, 1, 1, "", "sample"]], "torchrl.data.datasets.MinariExperienceReplay": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 1, 1, "", "dumps"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "loads"], [53, 1, 1, "", "sample"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[54, 1, 1, "", "add"], [54, 1, 1, "", "append_transform"], [54, 1, 1, "", "dumps"], [54, 1, 1, "", "empty"], [54, 1, 1, "", "extend"], [54, 1, 1, "", "insert_transform"], [54, 1, 1, "", "loads"], [54, 1, 1, "", "sample"]], "torchrl.data.replay_buffers": [[56, 0, 1, "", "LazyMemmapStorage"], [57, 0, 1, "", "LazyTensorStorage"], [58, 0, 1, "", "ListStorage"], [59, 0, 1, "", "PrioritizedSampler"], [60, 0, 1, "", "RandomSampler"], [61, 0, 1, "", "RoundRobinWriter"], [62, 0, 1, "", "Sampler"], [63, 0, 1, "", "SamplerWithoutReplacement"], [64, 0, 1, "", "Storage"], [65, 0, 1, "", "TensorDictMaxValueWriter"], [66, 0, 1, "", "TensorDictRoundRobinWriter"], [67, 0, 1, "", "TensorStorage"], [68, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[56, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[57, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[58, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[59, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[61, 1, 1, "", "add"], [61, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[64, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[65, 1, 1, "", "add"], [65, 1, 1, "", "extend"], [65, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[66, 1, 1, "", "add"], [66, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[67, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[68, 1, 1, "", "add"], [68, 1, 1, "", "extend"]], "torchrl.envs": [[69, 2, 1, "", "BraxEnv"], [70, 2, 1, "", "BraxWrapper"], [71, 2, 1, "", "DMControlEnv"], [72, 2, 1, "", "DMControlWrapper"], [73, 0, 1, "", "EnvBase"], [74, 0, 1, "", "EnvCreator"], [75, 0, 1, "", "EnvMetaData"], [76, 2, 1, "", "GymEnv"], [77, 0, 1, "", "GymLikeEnv"], [78, 2, 1, "", "GymWrapper"], [79, 2, 1, "", "HabitatEnv"], [80, 2, 1, "", "IsaacGymEnv"], [81, 2, 1, "", "IsaacGymWrapper"], [82, 2, 1, "", "JumanjiEnv"], [83, 2, 1, "", "JumanjiWrapper"], [84, 2, 1, "", "MOGymEnv"], [85, 2, 1, "", "MOGymWrapper"], [86, 2, 1, "", "MarlGroupMapType"], [87, 2, 1, "", "ModelBasedEnvBase"], [88, 2, 1, "", "MultiThreadedEnv"], [89, 2, 1, "", "MultiThreadedEnvWrapper"], [90, 2, 1, "", "OpenMLEnv"], [91, 0, 1, "", "ParallelEnv"], [92, 2, 1, "", "PettingZooEnv"], [93, 2, 1, "", "PettingZooWrapper"], [94, 2, 1, "", "RoboHiveEnv"], [95, 2, 1, "", "SMACv2Env"], [96, 2, 1, "", "SMACv2Wrapper"], [97, 0, 1, "", "SerialEnv"], [98, 2, 1, "", "VmasEnv"], [99, 2, 1, "", "VmasWrapper"], [100, 2, 1, "", "check_marl_grouping"], [101, 2, 1, "", "gym_backend"], [87, 1, 1, "", "rand_step"], [87, 1, 1, "", "reset"], [87, 1, 1, "", "rollout"], [103, 2, 1, "", "set_gym_backend"], [87, 1, 1, "", "set_seed"], [87, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[73, 3, 1, "", "action_key"], [73, 3, 1, "", "action_keys"], [73, 3, 1, "", "action_spec"], [73, 1, 1, "", "add_module"], [73, 1, 1, "", "apply"], [73, 3, 1, "", "batch_locked"], [73, 1, 1, "", "bfloat16"], [73, 1, 1, "", "buffers"], [73, 1, 1, "", "children"], [73, 1, 1, "", "compile"], [73, 1, 1, "", "cpu"], [73, 1, 1, "", "cuda"], [73, 3, 1, "", "done_key"], [73, 3, 1, "", "done_keys"], [73, 3, 1, "", "done_keys_groups"], [73, 3, 1, "", "done_spec"], [73, 1, 1, "", "double"], [73, 1, 1, "", "empty_cache"], [73, 1, 1, "", "eval"], [73, 1, 1, "", "extra_repr"], [73, 1, 1, "", "fake_tensordict"], [73, 1, 1, "", "float"], [73, 1, 1, "", "forward"], [73, 3, 1, "", "full_action_spec"], [73, 3, 1, "", "full_done_spec"], [73, 3, 1, "", "full_reward_spec"], [73, 3, 1, "", "full_state_spec"], [73, 1, 1, "", "get_buffer"], [73, 1, 1, "", "get_extra_state"], [73, 1, 1, "", "get_parameter"], [73, 1, 1, "", "get_submodule"], [73, 1, 1, "", "half"], [73, 3, 1, "", "input_spec"], [73, 1, 1, "", "ipu"], [73, 1, 1, "", "load_state_dict"], [73, 1, 1, "", "modules"], [73, 1, 1, "", "named_buffers"], [73, 1, 1, "", "named_children"], [73, 1, 1, "", "named_modules"], [73, 1, 1, "", "named_parameters"], [73, 3, 1, "", "observation_spec"], [73, 3, 1, "", "output_spec"], [73, 1, 1, "", "parameters"], [73, 1, 1, "", "rand_action"], [73, 1, 1, "id0", "rand_step"], [73, 1, 1, "", "register_backward_hook"], [73, 1, 1, "", "register_buffer"], [73, 1, 1, "", "register_forward_hook"], [73, 1, 1, "", "register_forward_pre_hook"], [73, 1, 1, "", "register_full_backward_hook"], [73, 1, 1, "", "register_full_backward_pre_hook"], [73, 1, 1, "", "register_load_state_dict_post_hook"], [73, 1, 1, "", "register_module"], [73, 1, 1, "", "register_parameter"], [73, 1, 1, "", "register_state_dict_pre_hook"], [73, 1, 1, "", "requires_grad_"], [73, 1, 1, "id1", "reset"], [73, 3, 1, "", "reset_keys"], [73, 3, 1, "", "reward_key"], [73, 3, 1, "", "reward_keys"], [73, 3, 1, "", "reward_spec"], [73, 1, 1, "id2", "rollout"], [73, 1, 1, "", "set_extra_state"], [73, 1, 1, "id3", "set_seed"], [73, 1, 1, "", "share_memory"], [73, 3, 1, "", "specs"], [73, 1, 1, "", "state_dict"], [73, 3, 1, "", "state_spec"], [73, 1, 1, "id4", "step"], [73, 1, 1, "", "step_and_maybe_reset"], [73, 1, 1, "", "to"], [73, 1, 1, "", "to_empty"], [73, 1, 1, "", "train"], [73, 1, 1, "", "type"], [73, 1, 1, "", "xpu"], [73, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[77, 3, 1, "", "action_key"], [77, 3, 1, "", "action_keys"], [77, 3, 1, "", "action_spec"], [77, 1, 1, "", "add_module"], [77, 1, 1, "", "apply"], [77, 3, 1, "", "batch_locked"], [77, 1, 1, "", "bfloat16"], [77, 1, 1, "", "buffers"], [77, 1, 1, "", "children"], [77, 1, 1, "", "close"], [77, 1, 1, "", "compile"], [77, 1, 1, "", "cpu"], [77, 1, 1, "", "cuda"], [77, 3, 1, "", "done_key"], [77, 3, 1, "", "done_keys"], [77, 3, 1, "", "done_keys_groups"], [77, 3, 1, "", "done_spec"], [77, 1, 1, "", "double"], [77, 1, 1, "", "empty_cache"], [77, 1, 1, "", "eval"], [77, 1, 1, "", "extra_repr"], [77, 1, 1, "", "fake_tensordict"], [77, 1, 1, "", "float"], [77, 1, 1, "", "forward"], [77, 3, 1, "", "full_action_spec"], [77, 3, 1, "", "full_done_spec"], [77, 3, 1, "", "full_reward_spec"], [77, 3, 1, "", "full_state_spec"], [77, 1, 1, "", "get_buffer"], [77, 1, 1, "", "get_extra_state"], [77, 1, 1, "", "get_parameter"], [77, 1, 1, "", "get_submodule"], [77, 1, 1, "", "half"], [77, 3, 1, "", "input_spec"], [77, 1, 1, "", "ipu"], [77, 1, 1, "", "load_state_dict"], [77, 1, 1, "", "modules"], [77, 1, 1, "", "named_buffers"], [77, 1, 1, "", "named_children"], [77, 1, 1, "", "named_modules"], [77, 1, 1, "", "named_parameters"], [77, 3, 1, "", "observation_spec"], [77, 3, 1, "", "output_spec"], [77, 1, 1, "", "parameters"], [77, 1, 1, "", "rand_action"], [77, 1, 1, "", "rand_step"], [77, 1, 1, "", "read_action"], [77, 1, 1, "", "read_done"], [77, 1, 1, "", "read_obs"], [77, 1, 1, "", "read_reward"], [77, 1, 1, "", "register_backward_hook"], [77, 1, 1, "", "register_buffer"], [77, 1, 1, "", "register_forward_hook"], [77, 1, 1, "", "register_forward_pre_hook"], [77, 1, 1, "", "register_full_backward_hook"], [77, 1, 1, "", "register_full_backward_pre_hook"], [77, 1, 1, "", "register_load_state_dict_post_hook"], [77, 1, 1, "", "register_module"], [77, 1, 1, "", "register_parameter"], [77, 1, 1, "", "register_state_dict_pre_hook"], [77, 1, 1, "", "requires_grad_"], [77, 1, 1, "", "reset"], [77, 3, 1, "", "reset_keys"], [77, 3, 1, "", "reward_key"], [77, 3, 1, "", "reward_keys"], [77, 3, 1, "", "reward_spec"], [77, 1, 1, "", "rollout"], [77, 1, 1, "", "set_extra_state"], [77, 1, 1, "", "set_info_dict_reader"], [77, 1, 1, "", "set_seed"], [77, 1, 1, "", "share_memory"], [77, 3, 1, "", "specs"], [77, 1, 1, "", "state_dict"], [77, 3, 1, "", "state_spec"], [77, 1, 1, "", "step"], [77, 1, 1, "", "step_and_maybe_reset"], [77, 1, 1, "", "to"], [77, 1, 1, "", "to_empty"], [77, 1, 1, "", "train"], [77, 1, 1, "", "type"], [77, 1, 1, "", "xpu"], [77, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[91, 3, 1, "", "action_key"], [91, 3, 1, "", "action_keys"], [91, 3, 1, "", "action_spec"], [91, 1, 1, "", "add_module"], [91, 1, 1, "", "apply"], [91, 3, 1, "", "batch_locked"], [91, 1, 1, "", "bfloat16"], [91, 1, 1, "", "buffers"], [91, 1, 1, "", "children"], [91, 1, 1, "", "compile"], [91, 1, 1, "", "cpu"], [91, 1, 1, "", "cuda"], [91, 3, 1, "", "done_key"], [91, 3, 1, "", "done_keys"], [91, 3, 1, "", "done_keys_groups"], [91, 3, 1, "", "done_spec"], [91, 1, 1, "", "double"], [91, 1, 1, "", "empty_cache"], [91, 1, 1, "", "eval"], [91, 1, 1, "", "extra_repr"], [91, 1, 1, "", "fake_tensordict"], [91, 1, 1, "", "float"], [91, 1, 1, "", "forward"], [91, 3, 1, "", "full_action_spec"], [91, 3, 1, "", "full_done_spec"], [91, 3, 1, "", "full_reward_spec"], [91, 3, 1, "", "full_state_spec"], [91, 1, 1, "", "get_buffer"], [91, 1, 1, "", "get_extra_state"], [91, 1, 1, "", "get_parameter"], [91, 1, 1, "", "get_submodule"], [91, 1, 1, "", "half"], [91, 3, 1, "", "input_spec"], [91, 1, 1, "", "ipu"], [91, 1, 1, "", "load_state_dict"], [91, 1, 1, "", "modules"], [91, 1, 1, "", "named_buffers"], [91, 1, 1, "", "named_children"], [91, 1, 1, "", "named_modules"], [91, 1, 1, "", "named_parameters"], [91, 3, 1, "", "observation_spec"], [91, 3, 1, "", "output_spec"], [91, 1, 1, "", "parameters"], [91, 1, 1, "", "rand_action"], [91, 1, 1, "", "rand_step"], [91, 1, 1, "", "register_backward_hook"], [91, 1, 1, "", "register_buffer"], [91, 1, 1, "", "register_forward_hook"], [91, 1, 1, "", "register_forward_pre_hook"], [91, 1, 1, "", "register_full_backward_hook"], [91, 1, 1, "", "register_full_backward_pre_hook"], [91, 1, 1, "", "register_load_state_dict_post_hook"], [91, 1, 1, "", "register_module"], [91, 1, 1, "", "register_parameter"], [91, 1, 1, "", "register_state_dict_pre_hook"], [91, 1, 1, "", "requires_grad_"], [91, 1, 1, "", "reset"], [91, 3, 1, "", "reset_keys"], [91, 3, 1, "", "reward_key"], [91, 3, 1, "", "reward_keys"], [91, 3, 1, "", "reward_spec"], [91, 1, 1, "", "rollout"], [91, 1, 1, "", "set_extra_state"], [91, 1, 1, "", "set_seed"], [91, 1, 1, "", "share_memory"], [91, 3, 1, "", "specs"], [91, 1, 1, "", "state_dict"], [91, 3, 1, "", "state_spec"], [91, 1, 1, "", "step"], [91, 1, 1, "", "step_and_maybe_reset"], [91, 1, 1, "", "to"], [91, 1, 1, "", "to_empty"], [91, 1, 1, "", "train"], [91, 1, 1, "", "type"], [91, 1, 1, "", "update_kwargs"], [91, 1, 1, "", "xpu"], [91, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[97, 3, 1, "", "action_key"], [97, 3, 1, "", "action_keys"], [97, 3, 1, "", "action_spec"], [97, 1, 1, "", "add_module"], [97, 1, 1, "", "apply"], [97, 3, 1, "", "batch_locked"], [97, 1, 1, "", "bfloat16"], [97, 1, 1, "", "buffers"], [97, 1, 1, "", "children"], [97, 1, 1, "", "compile"], [97, 1, 1, "", "cpu"], [97, 1, 1, "", "cuda"], [97, 3, 1, "", "done_key"], [97, 3, 1, "", "done_keys"], [97, 3, 1, "", "done_keys_groups"], [97, 3, 1, "", "done_spec"], [97, 1, 1, "", "double"], [97, 1, 1, "", "empty_cache"], [97, 1, 1, "", "eval"], [97, 1, 1, "", "extra_repr"], [97, 1, 1, "", "fake_tensordict"], [97, 1, 1, "", "float"], [97, 1, 1, "", "forward"], [97, 3, 1, "", "full_action_spec"], [97, 3, 1, "", "full_done_spec"], [97, 3, 1, "", "full_reward_spec"], [97, 3, 1, "", "full_state_spec"], [97, 1, 1, "", "get_buffer"], [97, 1, 1, "", "get_extra_state"], [97, 1, 1, "", "get_parameter"], [97, 1, 1, "", "get_submodule"], [97, 1, 1, "", "half"], [97, 3, 1, "", "input_spec"], [97, 1, 1, "", "ipu"], [97, 1, 1, "", "load_state_dict"], [97, 1, 1, "", "modules"], [97, 1, 1, "", "named_buffers"], [97, 1, 1, "", "named_children"], [97, 1, 1, "", "named_modules"], [97, 1, 1, "", "named_parameters"], [97, 3, 1, "", "observation_spec"], [97, 3, 1, "", "output_spec"], [97, 1, 1, "", "parameters"], [97, 1, 1, "", "rand_action"], [97, 1, 1, "", "rand_step"], [97, 1, 1, "", "register_backward_hook"], [97, 1, 1, "", "register_buffer"], [97, 1, 1, "", "register_forward_hook"], [97, 1, 1, "", "register_forward_pre_hook"], [97, 1, 1, "", "register_full_backward_hook"], [97, 1, 1, "", "register_full_backward_pre_hook"], [97, 1, 1, "", "register_load_state_dict_post_hook"], [97, 1, 1, "", "register_module"], [97, 1, 1, "", "register_parameter"], [97, 1, 1, "", "register_state_dict_pre_hook"], [97, 1, 1, "", "requires_grad_"], [97, 1, 1, "", "reset"], [97, 3, 1, "", "reset_keys"], [97, 3, 1, "", "reward_key"], [97, 3, 1, "", "reward_keys"], [97, 3, 1, "", "reward_spec"], [97, 1, 1, "", "rollout"], [97, 1, 1, "", "set_extra_state"], [97, 1, 1, "", "set_seed"], [97, 1, 1, "", "share_memory"], [97, 3, 1, "", "specs"], [97, 1, 1, "", "state_dict"], [97, 3, 1, "", "state_spec"], [97, 1, 1, "", "step"], [97, 1, 1, "", "step_and_maybe_reset"], [97, 1, 1, "", "to"], [97, 1, 1, "", "to_empty"], [97, 1, 1, "", "train"], [97, 1, 1, "", "type"], [97, 1, 1, "", "update_kwargs"], [97, 1, 1, "", "xpu"], [97, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[102, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[104, 0, 1, "", "ActionMask"], [105, 0, 1, "", "BinarizeReward"], [106, 0, 1, "", "CatFrames"], [107, 0, 1, "", "CatTensors"], [108, 0, 1, "", "CenterCrop"], [109, 0, 1, "", "ClipTransform"], [110, 0, 1, "", "Compose"], [111, 0, 1, "", "DTypeCastTransform"], [112, 0, 1, "", "DeviceCastTransform"], [113, 0, 1, "", "DiscreteActionProjection"], [114, 0, 1, "", "DoubleToFloat"], [115, 0, 1, "", "EndOfLifeTransform"], [116, 0, 1, "", "ExcludeTransform"], [117, 0, 1, "", "FiniteTensorDictCheck"], [118, 0, 1, "", "FlattenObservation"], [119, 0, 1, "", "FrameSkipTransform"], [120, 0, 1, "", "GrayScale"], [121, 0, 1, "", "InitTracker"], [122, 0, 1, "", "KLRewardTransform"], [123, 0, 1, "", "NoopResetEnv"], [124, 0, 1, "", "ObservationNorm"], [125, 0, 1, "", "ObservationTransform"], [126, 0, 1, "", "PermuteTransform"], [127, 0, 1, "", "PinMemoryTransform"], [128, 0, 1, "", "R3MTransform"], [129, 0, 1, "", "RandomCropTensorDict"], [130, 0, 1, "", "RenameTransform"], [131, 0, 1, "", "Resize"], [132, 0, 1, "", "Reward2GoTransform"], [133, 0, 1, "", "RewardClipping"], [134, 0, 1, "", "RewardScaling"], [135, 0, 1, "", "RewardSum"], [136, 0, 1, "", "SelectTransform"], [137, 0, 1, "", "SqueezeTransform"], [138, 0, 1, "", "StepCounter"], [139, 0, 1, "", "TargetReturn"], [140, 0, 1, "", "TensorDictPrimer"], [141, 0, 1, "", "TimeMaxPool"], [142, 0, 1, "", "ToTensorImage"], [143, 0, 1, "", "Transform"], [144, 0, 1, "", "TransformedEnv"], [145, 0, 1, "", "UnsqueezeTransform"], [146, 0, 1, "", "VC1Transform"], [147, 0, 1, "", "VIPRewardTransform"], [148, 0, 1, "", "VIPTransform"], [149, 0, 1, "", "VecGymEnvTransform"], [150, 0, 1, "", "VecNorm"], [151, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionMask": [[104, 1, 1, "", "forward"]], "torchrl.envs.transforms.BinarizeReward": [[105, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[106, 1, 1, "", "forward"], [106, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[107, 1, 1, "", "forward"], [107, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[108, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[109, 1, 1, "", "transform_observation_spec"], [109, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[110, 1, 1, "", "forward"], [110, 1, 1, "", "to"], [110, 1, 1, "", "transform_env_device"], [110, 1, 1, "", "transform_input_spec"], [110, 1, 1, "", "transform_observation_spec"], [110, 1, 1, "", "transform_output_spec"], [110, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[111, 1, 1, "", "forward"], [111, 1, 1, "", "transform_input_spec"], [111, 1, 1, "", "transform_observation_spec"], [111, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[112, 1, 1, "", "forward"], [112, 1, 1, "", "transform_done_spec"], [112, 1, 1, "", "transform_env_device"], [112, 1, 1, "", "transform_input_spec"], [112, 1, 1, "", "transform_observation_spec"], [112, 1, 1, "", "transform_output_spec"], [112, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[113, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[115, 1, 1, "", "forward"], [115, 1, 1, "", "register_keys"], [115, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[116, 1, 1, "", "forward"], [116, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[117, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[118, 1, 1, "", "forward"], [118, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[119, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[120, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[121, 1, 1, "", "forward"], [121, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[122, 1, 1, "", "forward"], [122, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[124, 1, 1, "", "init_stats"], [124, 1, 1, "", "transform_input_spec"], [124, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[126, 1, 1, "", "transform_input_spec"], [126, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[127, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[128, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[129, 1, 1, "", "forward"]], "torchrl.envs.transforms.RenameTransform": [[130, 1, 1, "", "forward"], [130, 1, 1, "", "transform_input_spec"], [130, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[131, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[132, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[133, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[134, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[135, 1, 1, "", "forward"], [135, 1, 1, "", "transform_input_spec"], [135, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[136, 1, 1, "", "forward"], [136, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.StepCounter": [[138, 1, 1, "", "forward"], [138, 1, 1, "", "transform_input_spec"], [138, 1, 1, "", "transform_observation_spec"], [138, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[139, 1, 1, "", "forward"], [139, 1, 1, "", "transform_input_spec"], [139, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[140, 1, 1, "", "forward"], [140, 1, 1, "", "to"], [140, 1, 1, "", "transform_input_spec"], [140, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[141, 1, 1, "", "forward"], [141, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[142, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[143, 3, 1, "", "container"], [143, 1, 1, "", "forward"], [143, 3, 1, "", "parent"], [143, 1, 1, "", "to"], [143, 1, 1, "", "transform_done_spec"], [143, 1, 1, "", "transform_env_device"], [143, 1, 1, "", "transform_input_spec"], [143, 1, 1, "", "transform_observation_spec"], [143, 1, 1, "", "transform_output_spec"], [143, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[144, 3, 1, "", "batch_locked"], [144, 1, 1, "", "empty_cache"], [144, 1, 1, "", "eval"], [144, 3, 1, "", "input_spec"], [144, 1, 1, "", "load_state_dict"], [144, 3, 1, "", "output_spec"], [144, 1, 1, "", "set_missing_tolerance"], [144, 1, 1, "", "set_seed"], [144, 1, 1, "", "state_dict"], [144, 1, 1, "", "to"], [144, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[145, 1, 1, "", "transform_input_spec"], [145, 1, 1, "", "transform_observation_spec"], [145, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[146, 1, 1, "", "forward"], [146, 1, 1, "", "make_noload_model"], [146, 1, 1, "", "to"], [146, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[147, 1, 1, "", "forward"], [147, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[148, 1, 1, "", "to"]], "torchrl.envs.transforms.VecGymEnvTransform": [[149, 1, 1, "", "forward"], [149, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VecNorm": [[150, 1, 1, "", "build_td_for_shared_vecnorm"], [150, 1, 1, "", "forward"], [150, 1, 1, "", "get_extra_state"], [150, 1, 1, "", "set_extra_state"], [150, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[152, 2, 1, "", "check_env_specs"], [153, 2, 1, "", "exploration_mode"], [154, 2, 1, "", "exploration_type"], [155, 2, 1, "", "get_available_libraries"], [156, 2, 1, "", "make_composite_from_td"], [157, 2, 1, "", "set_exploration_mode"], [158, 2, 1, "", "set_exploration_type"], [159, 2, 1, "", "step_mdp"], [160, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[161, 0, 1, "", "CEMPlanner"], [162, 0, 1, "", "Conv3dNet"], [163, 0, 1, "", "ConvNet"], [164, 0, 1, "", "DTActor"], [165, 0, 1, "", "DdpgCnnActor"], [166, 0, 1, "", "DdpgCnnQNet"], [167, 0, 1, "", "DdpgMlpActor"], [168, 0, 1, "", "DdpgMlpQNet"], [169, 0, 1, "", "DecisionTransformer"], [170, 0, 1, "", "Delta"], [171, 0, 1, "", "DistributionalDQNnet"], [172, 0, 1, "", "DistributionalQValueHook"], [173, 0, 1, "", "DreamerActor"], [174, 0, 1, "", "DuelingCnnDQNet"], [175, 0, 1, "", "GRU"], [176, 0, 1, "", "GRUCell"], [177, 0, 1, "", "GRUModule"], [178, 0, 1, "", "IndependentNormal"], [179, 0, 1, "", "LSTM"], [180, 0, 1, "", "LSTMCell"], [181, 0, 1, "", "LSTMModule"], [182, 0, 1, "", "LSTMNet"], [183, 0, 1, "", "MLP"], [184, 0, 1, "", "MPCPlannerBase"], [185, 0, 1, "", "MPPIPlanner"], [186, 0, 1, "", "MaskedCategorical"], [187, 0, 1, "", "MaskedOneHotCategorical"], [188, 0, 1, "", "MultiAgentConvNet"], [189, 0, 1, "", "MultiAgentMLP"], [190, 0, 1, "", "NoisyLazyLinear"], [191, 0, 1, "", "NoisyLinear"], [192, 0, 1, "", "NormalParamWrapper"], [193, 0, 1, "", "ObsDecoder"], [194, 0, 1, "", "ObsEncoder"], [195, 0, 1, "", "OneHotCategorical"], [196, 0, 1, "", "OnlineDTActor"], [197, 0, 1, "", "QMixer"], [198, 0, 1, "", "QValueHook"], [199, 0, 1, "", "RSSMPosterior"], [200, 0, 1, "", "RSSMPrior"], [201, 0, 1, "", "Squeeze2dLayer"], [202, 0, 1, "", "SqueezeLayer"], [203, 0, 1, "", "TanhDelta"], [204, 0, 1, "", "TanhNormal"], [205, 0, 1, "", "TruncatedNormal"], [206, 0, 1, "", "VDNMixer"], [207, 0, 1, "", "VmapModule"], [208, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[161, 1, 1, "", "planning"]], "torchrl.modules.Conv3dNet": [[162, 1, 1, "", "forward"]], "torchrl.modules.ConvNet": [[163, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[164, 1, 1, "", "default_config"], [164, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[165, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[166, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[167, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[168, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[169, 0, 1, "", "DTConfig"], [169, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[170, 1, 1, "", "log_prob"], [170, 3, 1, "", "mean"], [170, 3, 1, "", "mode"], [170, 1, 1, "", "rsample"], [170, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[171, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[173, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[174, 1, 1, "", "forward"]], "torchrl.modules.GRU": [[175, 1, 1, "", "forward"]], "torchrl.modules.GRUCell": [[176, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[177, 1, 1, "", "forward"], [177, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[178, 3, 1, "", "mode"]], "torchrl.modules.LSTM": [[179, 1, 1, "", "forward"]], "torchrl.modules.LSTMCell": [[180, 1, 1, "", "forward"]], "torchrl.modules.LSTMModule": [[181, 1, 1, "", "forward"], [181, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.LSTMNet": [[182, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[183, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[184, 1, 1, "", "forward"], [184, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[185, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[186, 1, 1, "", "log_prob"], [186, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[187, 1, 1, "", "log_prob"], [187, 1, 1, "", "rsample"], [187, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentConvNet": [[188, 1, 1, "", "forward"]], "torchrl.modules.MultiAgentMLP": [[189, 1, 1, "", "forward"]], "torchrl.modules.NoisyLazyLinear": [[190, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[192, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[193, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[194, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[195, 1, 1, "", "log_prob"], [195, 3, 1, "", "mode"], [195, 1, 1, "", "rsample"], [195, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[196, 1, 1, "", "default_config"], [196, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[197, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[199, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[200, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[202, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[203, 3, 1, "", "mean"], [203, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[204, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[205, 1, 1, "", "log_prob"], [205, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[206, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[207, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[209, 0, 1, "", "Actor"], [210, 0, 1, "", "ActorCriticOperator"], [211, 0, 1, "", "ActorCriticWrapper"], [212, 0, 1, "", "ActorValueOperator"], [213, 0, 1, "", "AdditiveGaussianWrapper"], [214, 0, 1, "", "DecisionTransformerInferenceWrapper"], [215, 0, 1, "", "DistributionalQValueActor"], [216, 0, 1, "", "DistributionalQValueModule"], [217, 0, 1, "", "EGreedyModule"], [218, 0, 1, "", "EGreedyWrapper"], [219, 0, 1, "", "LMHeadActorValueOperator"], [220, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [221, 0, 1, "", "ProbabilisticActor"], [222, 0, 1, "", "QValueActor"], [223, 0, 1, "", "QValueModule"], [224, 0, 1, "", "SafeModule"], [225, 0, 1, "", "SafeProbabilisticModule"], [226, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [227, 0, 1, "", "SafeSequential"], [228, 0, 1, "", "TanhModule"], [229, 0, 1, "", "ValueOperator"], [230, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[210, 1, 1, "", "get_critic_operator"], [210, 1, 1, "", "get_policy_head"], [210, 1, 1, "", "get_value_head"], [210, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[211, 1, 1, "", "get_policy_head"], [211, 1, 1, "", "get_policy_operator"], [211, 1, 1, "", "get_value_head"], [211, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[212, 1, 1, "", "get_policy_head"], [212, 1, 1, "", "get_policy_operator"], [212, 1, 1, "", "get_value_head"], [212, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[213, 1, 1, "", "forward"], [213, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[214, 1, 1, "", "forward"], [214, 1, 1, "", "mask_context"], [214, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[216, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[217, 1, 1, "", "forward"], [217, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.EGreedyWrapper": [[218, 1, 1, "", "forward"], [218, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[220, 1, 1, "", "forward"], [220, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[223, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[224, 1, 1, "", "random"], [224, 1, 1, "", "random_sample"], [224, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[225, 1, 1, "", "random"], [225, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[228, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[230, 1, 1, "", "get_reward_operator"], [230, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[231, 0, 1, "", "biased_softplus"], [232, 0, 1, "", "inv_softplus"], [233, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[231, 1, 1, "", "forward"]], "torchrl.objectives": [[234, 0, 1, "", "A2CLoss"], [235, 0, 1, "", "CQLLoss"], [236, 0, 1, "", "ClipPPOLoss"], [237, 0, 1, "", "DDPGLoss"], [238, 0, 1, "", "DQNLoss"], [239, 0, 1, "", "DTLoss"], [240, 0, 1, "", "DiscreteCQLLoss"], [241, 0, 1, "", "DiscreteSACLoss"], [242, 0, 1, "", "DistributionalDQNLoss"], [243, 0, 1, "", "DreamerActorLoss"], [244, 0, 1, "", "DreamerModelLoss"], [245, 0, 1, "", "DreamerValueLoss"], [246, 0, 1, "", "HardUpdate"], [247, 0, 1, "", "IQLLoss"], [248, 0, 1, "", "KLPENPPOLoss"], [249, 0, 1, "", "LossModule"], [250, 0, 1, "", "OnlineDTLoss"], [251, 0, 1, "", "PPOLoss"], [252, 0, 1, "", "REDQLoss"], [253, 0, 1, "", "ReinforceLoss"], [254, 0, 1, "", "SACLoss"], [255, 0, 1, "", "SoftUpdate"], [256, 0, 1, "", "TD3Loss"], [257, 0, 1, "", "ValueEstimators"], [258, 0, 1, "", "default_value_kwargs"], [259, 0, 1, "", "distance_loss"], [260, 0, 1, "", "hold_out_net"], [261, 0, 1, "", "hold_out_params"], [263, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[234, 1, 1, "", "forward"], [234, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[235, 1, 1, "", "forward"], [235, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[236, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[237, 1, 1, "", "forward"], [237, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[238, 1, 1, "", "forward"], [238, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[239, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteCQLLoss": [[240, 1, 1, "", "forward"], [240, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DiscreteSACLoss": [[241, 1, 1, "", "forward"], [241, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[242, 1, 1, "", "forward"], [242, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[243, 1, 1, "", "forward"], [243, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[244, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[245, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[247, 1, 1, "", "forward"], [247, 1, 1, "", "loss_value_diff"], [247, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[248, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[249, 1, 1, "", "convert_to_functional"], [249, 1, 1, "", "forward"], [249, 1, 1, "", "make_value_estimator"], [249, 1, 1, "", "named_parameters"], [249, 1, 1, "", "parameters"], [249, 1, 1, "", "set_keys"], [249, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[250, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[251, 1, 1, "", "forward"], [251, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[252, 1, 1, "", "forward"], [252, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[253, 1, 1, "", "forward"], [253, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[254, 1, 1, "", "forward"], [254, 1, 1, "", "load_state_dict"], [254, 1, 1, "", "make_value_estimator"], [254, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3Loss": [[256, 1, 1, "", "forward"], [256, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[262, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[262, 1, 1, "", "forward"], [262, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[264, 0, 1, "", "GAE"], [265, 0, 1, "", "TD0Estimator"], [266, 0, 1, "", "TD1Estimator"], [267, 0, 1, "", "TDLambdaEstimator"], [268, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[264, 1, 1, "", "forward"], [264, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[265, 1, 1, "", "forward"], [265, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[266, 1, 1, "", "forward"], [266, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[267, 1, 1, "", "forward"], [267, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[268, 1, 1, "", "forward"], [268, 1, 1, "", "set_keys"], [268, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[269, 0, 1, "", "generalized_advantage_estimate"], [270, 0, 1, "", "reward2go"], [271, 0, 1, "", "td0_advantage_estimate"], [272, 0, 1, "", "td0_return_estimate"], [273, 0, 1, "", "td1_advantage_estimate"], [274, 0, 1, "", "td1_return_estimate"], [275, 0, 1, "", "td_lambda_advantage_estimate"], [276, 0, 1, "", "td_lambda_return_estimate"], [277, 0, 1, "", "vec_generalized_advantage_estimate"], [278, 0, 1, "", "vec_td1_advantage_estimate"], [279, 0, 1, "", "vec_td1_return_estimate"], [280, 0, 1, "", "vec_td_lambda_advantage_estimate"], [281, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[282, 2, 1, "", "TensorDictRecorder"], [283, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[284, 2, 1, "", "Logger"], [286, 2, 1, "", "generate_exp_name"], [287, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[285, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[288, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[289, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[290, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[291, 0, 1, "", "BatchSubSampler"], [292, 0, 1, "", "ClearCudaCache"], [293, 0, 1, "", "CountFramesLog"], [294, 0, 1, "", "LogReward"], [295, 0, 1, "", "OptimizerHook"], [296, 0, 1, "", "Recorder"], [297, 0, 1, "", "ReplayBufferTrainer"], [298, 0, 1, "", "RewardNormalizer"], [299, 0, 1, "", "SelectKeys"], [300, 0, 1, "", "Trainer"], [301, 0, 1, "", "TrainerHookBase"], [302, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[291, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[292, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[293, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[294, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[295, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[296, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[297, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[298, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[299, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[301, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[302, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[303, 2, 1, "", "correct_for_frame_skip"], [304, 2, 1, "", "get_stats_random_rollout"], [305, 2, 1, "", "make_collector_offpolicy"], [306, 2, 1, "", "make_collector_onpolicy"], [307, 2, 1, "", "make_dqn_loss"], [308, 2, 1, "", "make_redq_loss"], [309, 2, 1, "", "make_redq_model"], [310, 2, 1, "", "make_replay_buffer"], [311, 2, 1, "", "make_target_updater"], [312, 2, 1, "", "make_trainer"], [313, 2, 1, "", "parallel_env_constructor"], [314, 2, 1, "", "sync_async_collector"], [315, 2, 1, "", "sync_sync_collector"], [316, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 320, 321, 322, 323, 325, 326, 327, 331, 332, 336, 337], "tutori": [0, 327, 331], "basic": [0, 334], "intermedi": [0, 8], "advanc": 0, "refer": [0, 318], "knowledg": [0, 319], "base": [0, 7, 319], "indic": 0, "tabl": 0, "collector": [1, 325, 326, 327, 328, 331, 336], "packag": [1, 2, 3, 320, 321, 322, 323], "singl": [1, 4], "node": 1, "data": [1, 2, 4, 325, 326, 327, 331, 336], "distribut": [1, 320], "helper": [1, 3], "function": [1, 4, 321, 326, 327, 331, 336], "replai": [2, 325, 326, 327, 328, 331, 334, 336], "buffer": [2, 325, 326, 327, 328, 331, 334, 336], "compos": [2, 110], "share": 2, "across": 2, "process": 2, "store": [2, 326], "trajectori": 2, "checkpoint": [2, 322], "dataset": 2, "tensorspec": [2, 44], "reinforc": [2, 321, 327, 331], "learn": [2, 4, 327, 331], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 320, 321, 322], "env": [3, 332, 336, 337], "vector": [3, 336], "multi": [3, 320, 321, 330, 331], "agent": [3, 4, 320, 321, 331], "environ": [3, 4, 6, 7, 325, 326, 327, 328, 330, 331, 332, 336, 337], "transform": [3, 143, 325, 327, 331, 332, 334, 336, 337], "clone": [3, 7], "mask": 3, "action": [3, 4, 328, 332], "record": [3, 296, 322, 325], "domain": [3, 320], "specif": [3, 320, 330], "librari": [3, 336], "thing": [4, 325, 332], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 336], "gener": [4, 320], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 325, 332], "algorithm": [4, 320], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 325, 326], "return": [4, 321], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "polici": [4, 325, 327, 328, 330, 331, 332], "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 336], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 330], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 325, 326, 327], "standard": 4, "explor": [4, 320, 325, 326], "valu": [4, 320, 321, 325, 327, 328], "loss": [4, 325, 326, 327, 328, 331], "earli": 4, "train": [4, 8, 321, 325, 327, 328, 331, 332], "roughli": 4, "uniformli": 4, "random": [4, 331], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "episod": 4, "remain": 4, "constant": [4, 326], "increas": 4, "an": [4, 327, 328, 332], "dynam": [4, 334], "can": 4, "low": 4, "forward": [4, 325], "model": [4, 320, 325, 326, 328, 333, 336], "also": 4, "us": [4, 6, 9, 328, 333, 334, 336], "offlin": 4, "observ": [4, 325], "space": 4, "effect": [4, 332], "dramat": 4, "dure": [4, 7], "high": 4, "dimension": 4, "work": [5, 6, 7], "gym": [5, 337], "what": 5, "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "instal": [6, 7, 336], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": 7, "render": [7, 331, 337], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 325], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 332], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "randompolici": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "binarydiscretetensorspec": 24, "boundedtensorspec": 25, "compositespec": 26, "discretetensorspec": 27, "lazystackedcompositespec": 28, "lazystackedtensorspec": 29, "multidiscretetensorspec": 30, "multionehotdiscretetensorspec": 31, "multistep": 32, "onehotdiscretetensorspec": 33, "pairwisedataset": 34, "prioritizedreplaybuff": 35, "promptdata": 36, "prompttensordicttoken": 37, "replaybuff": 38, "rewarddata": 39, "rolloutfrommodel": 40, "tensordictprioritizedreplaybuff": 41, "tensordictreplaybuff": 42, "tensordicttoken": 43, "tokenizeddatasetload": 45, "unboundedcontinuoustensorspec": 46, "unboundeddiscretetensorspec": 47, "check_no_exclusive_kei": 48, "consolidate_spec": 49, "contains_lazy_spec": 50, "create_infinite_iter": 51, "d4rlexperiencereplai": 52, "minariexperiencereplai": 53, "openmlexperiencereplai": 54, "get_dataload": 55, "lazymemmapstorag": 56, "lazytensorstorag": 57, "liststorag": 58, "prioritizedsampl": 59, "randomsampl": 60, "roundrobinwrit": 61, "sampler": 62, "samplerwithoutreplac": 63, "storag": [64, 325, 334], "tensordictmaxvaluewrit": 65, "tensordictroundrobinwrit": 66, "tensorstorag": 67, "writer": 68, "braxenv": 69, "braxwrapp": 70, "dmcontrolenv": 71, "dmcontrolwrapp": 72, "envbas": [73, 332], "envcreat": 74, "envmetadata": 75, "gymenv": 76, "gymlikeenv": 77, "gymwrapp": 78, "habitatenv": 79, "isaacgymenv": 80, "isaacgymwrapp": 81, "jumanjienv": 82, "jumanjiwrapp": 83, "mogymenv": 84, "mogymwrapp": 85, "marlgroupmaptyp": 86, "modelbasedenvbas": 87, "multithreadedenv": 88, "multithreadedenvwrapp": 89, "openmlenv": 90, "parallelenv": 91, "pettingzooenv": 92, "pettingzoowrapp": 93, "robohiveenv": 94, "smacv2env": 95, "smacv2wrapp": 96, "serialenv": 97, "vmasenv": 98, "vmaswrapp": 99, "check_marl_group": 100, "gym_backend": 101, "dreamerenv": 102, "set_gym_backend": 103, "actionmask": 104, "binarizereward": 105, "catfram": [106, 334], "cattensor": 107, "centercrop": 108, "cliptransform": 109, "dtypecasttransform": 111, "devicecasttransform": 112, "discreteactionproject": 113, "doubletofloat": 114, "endoflifetransform": 115, "excludetransform": 116, "finitetensordictcheck": 117, "flattenobserv": 118, "frameskiptransform": 119, "grayscal": 120, "inittrack": 121, "klrewardtransform": 122, "noopresetenv": 123, "observationnorm": 124, "observationtransform": 125, "permutetransform": 126, "pinmemorytransform": 127, "r3mtransform": 128, "randomcroptensordict": 129, "renametransform": 130, "resiz": 131, "reward2gotransform": 132, "rewardclip": 133, "rewardsc": 134, "rewardsum": 135, "selecttransform": 136, "squeezetransform": 137, "stepcount": 138, "targetreturn": 139, "tensordictprim": 140, "timemaxpool": 141, "totensorimag": 142, "transformedenv": 144, "unsqueezetransform": 145, "vc1transform": 146, "viprewardtransform": 147, "viptransform": 148, "vecgymenvtransform": 149, "vecnorm": [150, 337], "gsdenois": 151, "check_env_spec": 152, "exploration_mod": 153, "exploration_typ": 154, "get_available_librari": 155, "make_composite_from_td": 156, "set_exploration_mod": 157, "set_exploration_typ": 158, "step_mdp": 159, "terminated_or_trunc": 160, "cemplann": 161, "conv3dnet": 162, "convnet": 163, "dtactor": 164, "ddpgcnnactor": 165, "ddpgcnnqnet": 166, "ddpgmlpactor": 167, "ddpgmlpqnet": 168, "decisiontransform": 169, "delta": 170, "distributionaldqnnet": 171, "distributionalqvaluehook": 172, "dreameractor": 173, "duelingcnndqnet": 174, "gru": 175, "grucel": 176, "grumodul": 177, "independentnorm": 178, "lstm": [179, 328], "lstmcell": 180, "lstmmodul": 181, "lstmnet": 182, "mlp": [183, 328], "mpcplannerbas": 184, "mppiplann": 185, "maskedcategor": 186, "maskedonehotcategor": 187, "multiagentconvnet": 188, "multiagentmlp": 189, "noisylazylinear": 190, "noisylinear": 191, "normalparamwrapp": 192, "obsdecod": 193, "obsencod": 194, "onehotcategor": 195, "onlinedtactor": 196, "qmixer": [197, 321], "qvaluehook": 198, "rssmposterior": 199, "rssmprior": 200, "squeeze2dlay": 201, "squeezelay": 202, "tanhdelta": 203, "tanhnorm": 204, "truncatednorm": 205, "vdnmixer": 206, "vmapmodul": 207, "reset_nois": 208, "actor": [209, 320, 325], "actorcriticoper": 210, "actorcriticwrapp": 211, "actorvalueoper": 212, "additivegaussianwrapp": 213, "decisiontransformerinferencewrapp": 214, "distributionalqvalueactor": 215, "distributionalqvaluemodul": 216, "egreedymodul": 217, "egreedywrapp": 218, "lmheadactorvalueoper": 219, "ornsteinuhlenbeckprocesswrapp": 220, "probabilisticactor": 221, "qvalueactor": 222, "qvaluemodul": 223, "safemodul": [224, 320], "safeprobabilisticmodul": 225, "safeprobabilistictensordictsequenti": 226, "safesequenti": 227, "tanhmodul": 228, "valueoper": 229, "worldmodelwrapp": 230, "biased_softplu": 231, "inv_softplu": 232, "map": 233, "a2closs": 234, "cqlloss": 235, "clipppoloss": 236, "ddpgloss": 237, "dqnloss": 238, "dtloss": 239, "discretecqlloss": 240, "discretesacloss": 241, "distributionaldqnloss": 242, "dreameractorloss": 243, "dreamermodelloss": 244, "dreamervalueloss": 245, "hardupd": 246, "iqlloss": 247, "klpenppoloss": 248, "lossmodul": [249, 325], "onlinedtloss": 250, "ppoloss": 251, "redqloss": 252, "reinforceloss": 253, "sacloss": 254, "softupd": 255, "td3loss": 256, "valueestim": 257, "default_value_kwarg": 258, "distance_loss": 259, "hold_out_net": 260, "hold_out_param": 261, "qmixerloss": 262, "next_state_valu": 263, "gae": 264, "td0estim": 265, "td1estim": 266, "tdlambdaestim": 267, "valueestimatorbas": 268, "generalized_advantage_estim": 269, "reward2go": 270, "td0_advantage_estim": 271, "td0_return_estim": 272, "td1_advantage_estim": 273, "td1_return_estim": 274, "td_lambda_advantage_estim": 275, "td_lambda_return_estim": 276, "vec_generalized_advantage_estim": 277, "vec_td1_advantage_estim": 278, "vec_td1_return_estim": 279, "vec_td_lambda_advantage_estim": 280, "vec_td_lambda_return_estim": 281, "tensordictrecord": 282, "videorecord": 283, "logger": [284, 322], "csvlogger": 285, "generate_exp_nam": 286, "get_logg": 287, "mlflowlogg": 288, "tensorboardlogg": 289, "wandblogg": 290, "batchsubsampl": 291, "clearcudacach": 292, "countframeslog": 293, "logreward": 294, "optimizerhook": 295, "replaybuffertrain": 297, "rewardnorm": 298, "selectkei": 299, "trainer": [300, 322, 326], "trainerhookbas": 301, "updateweight": 302, "correct_for_frame_skip": 303, "get_stats_random_rollout": 304, "make_collector_offpolici": 305, "make_collector_onpolici": 306, "make_dqn_loss": 307, "make_redq_loss": 308, "make_redq_model": 309, "make_replay_buff": 310, "make_target_updat": 311, "make_train": 312, "parallel_env_constructor": 313, "sync_async_collector": 314, "sync_sync_collector": 315, "transformed_env_constructor": 316, "readm": [317, 329], "tuto": [317, 329], "api": 318, "contribut": [319, 336], "content": 319, "modul": [320, 325, 328, 336], "tensordict": [320, 334, 336], "wrapper": 320, "probabilist": 320, "q": [320, 326, 328], "oper": 320, "join": 320, "hook": [320, 322, 326], "regular": 320, "planner": 320, "object": [321, 325, 336], "dqn": [321, 326, 328], "ddpg": [321, 325], "sac": 321, "redq": 321, "iql": 321, "cql": 321, "dt": 321, "td3": 321, "ppo": [321, 327, 331], "a2c": 321, "dreamer": 321, "builder": 322, "_util": 323, "comput": [324, 326, 332, 335], "time": [324, 325, 335], "code": [325, 332], "setup": [325, 328], "The": 325, "__init__": 325, "method": 325, "estim": 325, "put": 325, "togeth": [325, 332], "call": 325, "parallel": [325, 330, 337], "execut": [325, 330, 332], "stat": 325, "build": [325, 326, 334], "evalu": 325, "batch": [325, 332, 334], "size": [325, 334], "construct": 325, "target": [325, 326], "network": [325, 326, 327, 328, 331], "updat": 325, "experi": [325, 332], "result": [325, 327, 331], "conclus": [325, 326, 327, 328, 331, 332, 334], "A": [326, 334], "exampl": [326, 334], "deep": 326, "collect": [326, 327], "paramet": [326, 327], "hyperparamet": [326, 327, 331], "regist": 326, "possibl": 326, "improv": 326, "defin": [327, 331], "loop": [327, 328, 331, 332], "next": [327, 331], "step": [327, 331, 337], "recurr": 328, "overview": 328, "convolut": 328, "select": 328, "further": 328, "read": 328, "divers": 330, "rollout": [330, 331, 332, 337], "critic": 331, "pendulum": 332, "write": 332, "_step": 332, "reset": [332, 337], "simul": 332, "_reset": 332, "metadata": 332, "_spec": 332, "spec": [332, 337], "shape": 332, "seed": [332, 337], "wrap": 332, "class": [332, 336], "test": 332, "our": 332, "custom": [332, 334], "simpl": 332, "pretrain": 333, "vanilla": 334, "integr": 334, "tensorclass": 334, "sampl": 334, "iter": 334, "over": 334, "fix": 334, "priorit": 334, "save": 334, "raw": 334, "imag": 334, "more": 334, "complex": 334, "introduct": 336, "config": 336, "tensordictmodul": 336, "sequenc": 336, "program": 336, "ensembl": 336, "meta": 336, "special": 336, "state": 336, "frame_skip": 337, "deepmind": 337, "control": 337, "devic": 337, "run": 337, "close": 337, "access": 337, "attribut": 337, "kwarg": 337}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})