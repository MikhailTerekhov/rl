Search.setIndex({"docnames": ["index", "reference/collectors", "reference/data", "reference/envs", "reference/generated/knowledge_base/DEBUGGING_RL", "reference/generated/knowledge_base/GYM", "reference/generated/knowledge_base/HABITAT", "reference/generated/knowledge_base/MUJOCO_INSTALLATION", "reference/generated/knowledge_base/PRO-TIPS", "reference/generated/knowledge_base/RESOURCES", "reference/generated/knowledge_base/VERSIONING_ISSUES", "reference/generated/torchrl._utils.implement_for", "reference/generated/torchrl.collectors.collectors.DataCollectorBase", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector", "reference/generated/torchrl.collectors.collectors.RandomPolicy", "reference/generated/torchrl.collectors.collectors.SyncDataCollector", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector", "reference/generated/torchrl.collectors.distributed.RPCDataCollector", "reference/generated/torchrl.collectors.distributed.RayCollector", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher", "reference/generated/torchrl.collectors.utils.split_trajectories", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec", "reference/generated/torchrl.data.BoundedTensorSpec", "reference/generated/torchrl.data.CompositeSpec", "reference/generated/torchrl.data.DiscreteTensorSpec", "reference/generated/torchrl.data.LazyStackedCompositeSpec", "reference/generated/torchrl.data.LazyStackedTensorSpec", "reference/generated/torchrl.data.MultiDiscreteTensorSpec", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec", "reference/generated/torchrl.data.MultiStep", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec", "reference/generated/torchrl.data.PairwiseDataset", "reference/generated/torchrl.data.PrioritizedReplayBuffer", "reference/generated/torchrl.data.PromptData", "reference/generated/torchrl.data.PromptTensorDictTokenizer", "reference/generated/torchrl.data.ReplayBuffer", "reference/generated/torchrl.data.RewardData", "reference/generated/torchrl.data.RolloutFromModel", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer", "reference/generated/torchrl.data.TensorDictReplayBuffer", "reference/generated/torchrl.data.TensorDictTokenizer", "reference/generated/torchrl.data.TensorSpec", "reference/generated/torchrl.data.TokenizedDatasetLoader", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec", "reference/generated/torchrl.data.check_no_exclusive_keys", "reference/generated/torchrl.data.consolidate_spec", "reference/generated/torchrl.data.contains_lazy_spec", "reference/generated/torchrl.data.create_infinite_iterator", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay", "reference/generated/torchrl.data.get_dataloader", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage", "reference/generated/torchrl.data.replay_buffers.ListStorage", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler", "reference/generated/torchrl.data.replay_buffers.RandomSampler", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.Sampler", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement", "reference/generated/torchrl.data.replay_buffers.Storage", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter", "reference/generated/torchrl.data.replay_buffers.TensorStorage", "reference/generated/torchrl.data.replay_buffers.Writer", "reference/generated/torchrl.envs.BraxEnv", "reference/generated/torchrl.envs.BraxWrapper", "reference/generated/torchrl.envs.DMControlEnv", "reference/generated/torchrl.envs.DMControlWrapper", "reference/generated/torchrl.envs.EnvBase", "reference/generated/torchrl.envs.EnvCreator", "reference/generated/torchrl.envs.EnvMetaData", "reference/generated/torchrl.envs.GymEnv", "reference/generated/torchrl.envs.GymLikeEnv", "reference/generated/torchrl.envs.GymWrapper", "reference/generated/torchrl.envs.HabitatEnv", "reference/generated/torchrl.envs.IsaacGymEnv", "reference/generated/torchrl.envs.IsaacGymWrapper", "reference/generated/torchrl.envs.JumanjiEnv", "reference/generated/torchrl.envs.JumanjiWrapper", "reference/generated/torchrl.envs.MarlGroupMapType", "reference/generated/torchrl.envs.ModelBasedEnvBase", "reference/generated/torchrl.envs.MultiThreadedEnv", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper", "reference/generated/torchrl.envs.OpenMLEnv", "reference/generated/torchrl.envs.ParallelEnv", "reference/generated/torchrl.envs.PettingZooEnv", "reference/generated/torchrl.envs.PettingZooWrapper", "reference/generated/torchrl.envs.RoboHiveEnv", "reference/generated/torchrl.envs.SMACv2Env", "reference/generated/torchrl.envs.SMACv2Wrapper", "reference/generated/torchrl.envs.SerialEnv", "reference/generated/torchrl.envs.VmasEnv", "reference/generated/torchrl.envs.VmasWrapper", "reference/generated/torchrl.envs.check_marl_grouping", "reference/generated/torchrl.envs.gym_backend", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv", "reference/generated/torchrl.envs.set_gym_backend", "reference/generated/torchrl.envs.transforms.ActionMask", "reference/generated/torchrl.envs.transforms.BinarizeReward", "reference/generated/torchrl.envs.transforms.CatFrames", "reference/generated/torchrl.envs.transforms.CatTensors", "reference/generated/torchrl.envs.transforms.CenterCrop", "reference/generated/torchrl.envs.transforms.ClipTransform", "reference/generated/torchrl.envs.transforms.Compose", "reference/generated/torchrl.envs.transforms.DTypeCastTransform", "reference/generated/torchrl.envs.transforms.DeviceCastTransform", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection", "reference/generated/torchrl.envs.transforms.DoubleToFloat", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform", "reference/generated/torchrl.envs.transforms.ExcludeTransform", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck", "reference/generated/torchrl.envs.transforms.FlattenObservation", "reference/generated/torchrl.envs.transforms.FrameSkipTransform", "reference/generated/torchrl.envs.transforms.GrayScale", "reference/generated/torchrl.envs.transforms.InitTracker", "reference/generated/torchrl.envs.transforms.KLRewardTransform", "reference/generated/torchrl.envs.transforms.NoopResetEnv", "reference/generated/torchrl.envs.transforms.ObservationNorm", "reference/generated/torchrl.envs.transforms.ObservationTransform", "reference/generated/torchrl.envs.transforms.PermuteTransform", "reference/generated/torchrl.envs.transforms.PinMemoryTransform", "reference/generated/torchrl.envs.transforms.R3MTransform", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict", "reference/generated/torchrl.envs.transforms.RenameTransform", "reference/generated/torchrl.envs.transforms.Resize", "reference/generated/torchrl.envs.transforms.Reward2GoTransform", "reference/generated/torchrl.envs.transforms.RewardClipping", "reference/generated/torchrl.envs.transforms.RewardScaling", "reference/generated/torchrl.envs.transforms.RewardSum", "reference/generated/torchrl.envs.transforms.SelectTransform", "reference/generated/torchrl.envs.transforms.SqueezeTransform", "reference/generated/torchrl.envs.transforms.StepCounter", "reference/generated/torchrl.envs.transforms.TargetReturn", "reference/generated/torchrl.envs.transforms.TensorDictPrimer", "reference/generated/torchrl.envs.transforms.TimeMaxPool", "reference/generated/torchrl.envs.transforms.ToTensorImage", "reference/generated/torchrl.envs.transforms.Transform", "reference/generated/torchrl.envs.transforms.TransformedEnv", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform", "reference/generated/torchrl.envs.transforms.VC1Transform", "reference/generated/torchrl.envs.transforms.VIPRewardTransform", "reference/generated/torchrl.envs.transforms.VIPTransform", "reference/generated/torchrl.envs.transforms.VecNorm", "reference/generated/torchrl.envs.transforms.gSDENoise", "reference/generated/torchrl.envs.utils.check_env_specs", "reference/generated/torchrl.envs.utils.exploration_mode", "reference/generated/torchrl.envs.utils.exploration_type", "reference/generated/torchrl.envs.utils.get_available_libraries", "reference/generated/torchrl.envs.utils.make_composite_from_td", "reference/generated/torchrl.envs.utils.set_exploration_mode", "reference/generated/torchrl.envs.utils.set_exploration_type", "reference/generated/torchrl.envs.utils.step_mdp", "reference/generated/torchrl.envs.utils.terminated_or_truncated", "reference/generated/torchrl.modules.CEMPlanner", "reference/generated/torchrl.modules.ConvNet", "reference/generated/torchrl.modules.DTActor", "reference/generated/torchrl.modules.DdpgCnnActor", "reference/generated/torchrl.modules.DdpgCnnQNet", "reference/generated/torchrl.modules.DdpgMlpActor", "reference/generated/torchrl.modules.DdpgMlpQNet", "reference/generated/torchrl.modules.DecisionTransformer", "reference/generated/torchrl.modules.Delta", "reference/generated/torchrl.modules.DistributionalDQNnet", "reference/generated/torchrl.modules.DistributionalQValueHook", "reference/generated/torchrl.modules.DreamerActor", "reference/generated/torchrl.modules.DuelingCnnDQNet", "reference/generated/torchrl.modules.GRUModule", "reference/generated/torchrl.modules.IndependentNormal", "reference/generated/torchrl.modules.LSTMModule", "reference/generated/torchrl.modules.LSTMNet", "reference/generated/torchrl.modules.MLP", "reference/generated/torchrl.modules.MPCPlannerBase", "reference/generated/torchrl.modules.MPPIPlanner", "reference/generated/torchrl.modules.MaskedCategorical", "reference/generated/torchrl.modules.MaskedOneHotCategorical", "reference/generated/torchrl.modules.MultiAgentConvNet", "reference/generated/torchrl.modules.MultiAgentMLP", "reference/generated/torchrl.modules.NoisyLazyLinear", "reference/generated/torchrl.modules.NoisyLinear", "reference/generated/torchrl.modules.NormalParamWrapper", "reference/generated/torchrl.modules.ObsDecoder", "reference/generated/torchrl.modules.ObsEncoder", "reference/generated/torchrl.modules.OneHotCategorical", "reference/generated/torchrl.modules.OnlineDTActor", "reference/generated/torchrl.modules.QMixer", "reference/generated/torchrl.modules.QValueHook", "reference/generated/torchrl.modules.RSSMPosterior", "reference/generated/torchrl.modules.RSSMPrior", "reference/generated/torchrl.modules.Squeeze2dLayer", "reference/generated/torchrl.modules.SqueezeLayer", "reference/generated/torchrl.modules.TanhDelta", "reference/generated/torchrl.modules.TanhNormal", "reference/generated/torchrl.modules.TruncatedNormal", "reference/generated/torchrl.modules.VDNMixer", "reference/generated/torchrl.modules.VmapModule", "reference/generated/torchrl.modules.reset_noise", "reference/generated/torchrl.modules.tensordict_module.Actor", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor", "reference/generated/torchrl.modules.tensordict_module.QValueActor", "reference/generated/torchrl.modules.tensordict_module.QValueModule", "reference/generated/torchrl.modules.tensordict_module.SafeModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential", "reference/generated/torchrl.modules.tensordict_module.SafeSequential", "reference/generated/torchrl.modules.tensordict_module.TanhModule", "reference/generated/torchrl.modules.tensordict_module.ValueOperator", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper", "reference/generated/torchrl.modules.utils.biased_softplus", "reference/generated/torchrl.modules.utils.inv_softplus", "reference/generated/torchrl.modules.utils.mappings", "reference/generated/torchrl.objectives.A2CLoss", "reference/generated/torchrl.objectives.CQLLoss", "reference/generated/torchrl.objectives.ClipPPOLoss", "reference/generated/torchrl.objectives.DDPGLoss", "reference/generated/torchrl.objectives.DQNLoss", "reference/generated/torchrl.objectives.DTLoss", "reference/generated/torchrl.objectives.DiscreteSACLoss", "reference/generated/torchrl.objectives.DistributionalDQNLoss", "reference/generated/torchrl.objectives.DreamerActorLoss", "reference/generated/torchrl.objectives.DreamerModelLoss", "reference/generated/torchrl.objectives.DreamerValueLoss", "reference/generated/torchrl.objectives.HardUpdate", "reference/generated/torchrl.objectives.IQLLoss", "reference/generated/torchrl.objectives.KLPENPPOLoss", "reference/generated/torchrl.objectives.LossModule", "reference/generated/torchrl.objectives.OnlineDTLoss", "reference/generated/torchrl.objectives.PPOLoss", "reference/generated/torchrl.objectives.REDQLoss", "reference/generated/torchrl.objectives.ReinforceLoss", "reference/generated/torchrl.objectives.SACLoss", "reference/generated/torchrl.objectives.SoftUpdate", "reference/generated/torchrl.objectives.TD3Loss", "reference/generated/torchrl.objectives.ValueEstimators", "reference/generated/torchrl.objectives.default_value_kwargs", "reference/generated/torchrl.objectives.distance_loss", "reference/generated/torchrl.objectives.hold_out_net", "reference/generated/torchrl.objectives.hold_out_params", "reference/generated/torchrl.objectives.multiagent.QMixerLoss", "reference/generated/torchrl.objectives.next_state_value", "reference/generated/torchrl.objectives.value.GAE", "reference/generated/torchrl.objectives.value.TD0Estimator", "reference/generated/torchrl.objectives.value.TD1Estimator", "reference/generated/torchrl.objectives.value.TDLambdaEstimator", "reference/generated/torchrl.objectives.value.ValueEstimatorBase", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.reward2go", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate", "reference/generated/torchrl.record.TensorDictRecorder", "reference/generated/torchrl.record.VideoRecorder", "reference/generated/torchrl.record.loggers.Logger", "reference/generated/torchrl.record.loggers.csv.CSVLogger", "reference/generated/torchrl.record.loggers.generate_exp_name", "reference/generated/torchrl.record.loggers.get_logger", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger", "reference/generated/torchrl.record.loggers.wandb.WandbLogger", "reference/generated/torchrl.trainers.BatchSubSampler", "reference/generated/torchrl.trainers.ClearCudaCache", "reference/generated/torchrl.trainers.CountFramesLog", "reference/generated/torchrl.trainers.LogReward", "reference/generated/torchrl.trainers.OptimizerHook", "reference/generated/torchrl.trainers.Recorder", "reference/generated/torchrl.trainers.ReplayBufferTrainer", "reference/generated/torchrl.trainers.RewardNormalizer", "reference/generated/torchrl.trainers.SelectKeys", "reference/generated/torchrl.trainers.Trainer", "reference/generated/torchrl.trainers.TrainerHookBase", "reference/generated/torchrl.trainers.UpdateWeights", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy", "reference/generated/torchrl.trainers.helpers.make_dqn_loss", "reference/generated/torchrl.trainers.helpers.make_redq_loss", "reference/generated/torchrl.trainers.helpers.make_redq_model", "reference/generated/torchrl.trainers.helpers.make_replay_buffer", "reference/generated/torchrl.trainers.helpers.make_target_updater", "reference/generated/torchrl.trainers.helpers.make_trainer", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor", "reference/generated/torchrl.trainers.helpers.sync_async_collector", "reference/generated/torchrl.trainers.helpers.sync_sync_collector", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor", "reference/generated/tutorials/README", "reference/index", "reference/knowledge_base", "reference/modules", "reference/objectives", "reference/trainers", "reference/utils", "tutorials/coding_ddpg", "tutorials/coding_dqn", "tutorials/coding_ppo", "tutorials/dqn_with_rnn", "tutorials/index", "tutorials/multi_task", "tutorials/multiagent_ppo", "tutorials/pendulum", "tutorials/pretrained_models", "tutorials/rb_tutorial", "tutorials/sg_execution_times", "tutorials/torchrl_demo", "tutorials/torchrl_envs"], "filenames": ["index.rst", "reference/collectors.rst", "reference/data.rst", "reference/envs.rst", "reference/generated/knowledge_base/DEBUGGING_RL.rst", "reference/generated/knowledge_base/GYM.rst", "reference/generated/knowledge_base/HABITAT.rst", "reference/generated/knowledge_base/MUJOCO_INSTALLATION.rst", "reference/generated/knowledge_base/PRO-TIPS.rst", "reference/generated/knowledge_base/RESOURCES.rst", "reference/generated/knowledge_base/VERSIONING_ISSUES.rst", "reference/generated/torchrl._utils.implement_for.rst", "reference/generated/torchrl.collectors.collectors.DataCollectorBase.rst", "reference/generated/torchrl.collectors.collectors.MultiSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.MultiaSyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.RandomPolicy.rst", "reference/generated/torchrl.collectors.collectors.SyncDataCollector.rst", "reference/generated/torchrl.collectors.collectors.aSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedDataCollector.rst", "reference/generated/torchrl.collectors.distributed.DistributedSyncDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RPCDataCollector.rst", "reference/generated/torchrl.collectors.distributed.RayCollector.rst", "reference/generated/torchrl.collectors.distributed.submitit_delayed_launcher.rst", "reference/generated/torchrl.collectors.utils.split_trajectories.rst", "reference/generated/torchrl.data.BinaryDiscreteTensorSpec.rst", "reference/generated/torchrl.data.BoundedTensorSpec.rst", "reference/generated/torchrl.data.CompositeSpec.rst", "reference/generated/torchrl.data.DiscreteTensorSpec.rst", "reference/generated/torchrl.data.LazyStackedCompositeSpec.rst", "reference/generated/torchrl.data.LazyStackedTensorSpec.rst", "reference/generated/torchrl.data.MultiDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiOneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.MultiStep.rst", "reference/generated/torchrl.data.OneHotDiscreteTensorSpec.rst", "reference/generated/torchrl.data.PairwiseDataset.rst", "reference/generated/torchrl.data.PrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.PromptData.rst", "reference/generated/torchrl.data.PromptTensorDictTokenizer.rst", "reference/generated/torchrl.data.ReplayBuffer.rst", "reference/generated/torchrl.data.RewardData.rst", "reference/generated/torchrl.data.RolloutFromModel.rst", "reference/generated/torchrl.data.TensorDictPrioritizedReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictReplayBuffer.rst", "reference/generated/torchrl.data.TensorDictTokenizer.rst", "reference/generated/torchrl.data.TensorSpec.rst", "reference/generated/torchrl.data.TokenizedDatasetLoader.rst", "reference/generated/torchrl.data.UnboundedContinuousTensorSpec.rst", "reference/generated/torchrl.data.UnboundedDiscreteTensorSpec.rst", "reference/generated/torchrl.data.check_no_exclusive_keys.rst", "reference/generated/torchrl.data.consolidate_spec.rst", "reference/generated/torchrl.data.contains_lazy_spec.rst", "reference/generated/torchrl.data.create_infinite_iterator.rst", "reference/generated/torchrl.data.datasets.D4RLExperienceReplay.rst", "reference/generated/torchrl.data.datasets.OpenMLExperienceReplay.rst", "reference/generated/torchrl.data.get_dataloader.rst", "reference/generated/torchrl.data.replay_buffers.LazyMemmapStorage.rst", "reference/generated/torchrl.data.replay_buffers.LazyTensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.ListStorage.rst", "reference/generated/torchrl.data.replay_buffers.PrioritizedSampler.rst", "reference/generated/torchrl.data.replay_buffers.RandomSampler.rst", "reference/generated/torchrl.data.replay_buffers.RoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.Sampler.rst", "reference/generated/torchrl.data.replay_buffers.SamplerWithoutReplacement.rst", "reference/generated/torchrl.data.replay_buffers.Storage.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictMaxValueWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorDictRoundRobinWriter.rst", "reference/generated/torchrl.data.replay_buffers.TensorStorage.rst", "reference/generated/torchrl.data.replay_buffers.Writer.rst", "reference/generated/torchrl.envs.BraxEnv.rst", "reference/generated/torchrl.envs.BraxWrapper.rst", "reference/generated/torchrl.envs.DMControlEnv.rst", "reference/generated/torchrl.envs.DMControlWrapper.rst", "reference/generated/torchrl.envs.EnvBase.rst", "reference/generated/torchrl.envs.EnvCreator.rst", "reference/generated/torchrl.envs.EnvMetaData.rst", "reference/generated/torchrl.envs.GymEnv.rst", "reference/generated/torchrl.envs.GymLikeEnv.rst", "reference/generated/torchrl.envs.GymWrapper.rst", "reference/generated/torchrl.envs.HabitatEnv.rst", "reference/generated/torchrl.envs.IsaacGymEnv.rst", "reference/generated/torchrl.envs.IsaacGymWrapper.rst", "reference/generated/torchrl.envs.JumanjiEnv.rst", "reference/generated/torchrl.envs.JumanjiWrapper.rst", "reference/generated/torchrl.envs.MarlGroupMapType.rst", "reference/generated/torchrl.envs.ModelBasedEnvBase.rst", "reference/generated/torchrl.envs.MultiThreadedEnv.rst", "reference/generated/torchrl.envs.MultiThreadedEnvWrapper.rst", "reference/generated/torchrl.envs.OpenMLEnv.rst", "reference/generated/torchrl.envs.ParallelEnv.rst", "reference/generated/torchrl.envs.PettingZooEnv.rst", "reference/generated/torchrl.envs.PettingZooWrapper.rst", "reference/generated/torchrl.envs.RoboHiveEnv.rst", "reference/generated/torchrl.envs.SMACv2Env.rst", "reference/generated/torchrl.envs.SMACv2Wrapper.rst", "reference/generated/torchrl.envs.SerialEnv.rst", "reference/generated/torchrl.envs.VmasEnv.rst", "reference/generated/torchrl.envs.VmasWrapper.rst", "reference/generated/torchrl.envs.check_marl_grouping.rst", "reference/generated/torchrl.envs.gym_backend.rst", "reference/generated/torchrl.envs.model_based.dreamer.DreamerEnv.rst", "reference/generated/torchrl.envs.set_gym_backend.rst", "reference/generated/torchrl.envs.transforms.ActionMask.rst", "reference/generated/torchrl.envs.transforms.BinarizeReward.rst", "reference/generated/torchrl.envs.transforms.CatFrames.rst", "reference/generated/torchrl.envs.transforms.CatTensors.rst", "reference/generated/torchrl.envs.transforms.CenterCrop.rst", "reference/generated/torchrl.envs.transforms.ClipTransform.rst", "reference/generated/torchrl.envs.transforms.Compose.rst", "reference/generated/torchrl.envs.transforms.DTypeCastTransform.rst", "reference/generated/torchrl.envs.transforms.DeviceCastTransform.rst", "reference/generated/torchrl.envs.transforms.DiscreteActionProjection.rst", "reference/generated/torchrl.envs.transforms.DoubleToFloat.rst", "reference/generated/torchrl.envs.transforms.EndOfLifeTransform.rst", "reference/generated/torchrl.envs.transforms.ExcludeTransform.rst", "reference/generated/torchrl.envs.transforms.FiniteTensorDictCheck.rst", "reference/generated/torchrl.envs.transforms.FlattenObservation.rst", "reference/generated/torchrl.envs.transforms.FrameSkipTransform.rst", "reference/generated/torchrl.envs.transforms.GrayScale.rst", "reference/generated/torchrl.envs.transforms.InitTracker.rst", "reference/generated/torchrl.envs.transforms.KLRewardTransform.rst", "reference/generated/torchrl.envs.transforms.NoopResetEnv.rst", "reference/generated/torchrl.envs.transforms.ObservationNorm.rst", "reference/generated/torchrl.envs.transforms.ObservationTransform.rst", "reference/generated/torchrl.envs.transforms.PermuteTransform.rst", "reference/generated/torchrl.envs.transforms.PinMemoryTransform.rst", "reference/generated/torchrl.envs.transforms.R3MTransform.rst", "reference/generated/torchrl.envs.transforms.RandomCropTensorDict.rst", "reference/generated/torchrl.envs.transforms.RenameTransform.rst", "reference/generated/torchrl.envs.transforms.Resize.rst", "reference/generated/torchrl.envs.transforms.Reward2GoTransform.rst", "reference/generated/torchrl.envs.transforms.RewardClipping.rst", "reference/generated/torchrl.envs.transforms.RewardScaling.rst", "reference/generated/torchrl.envs.transforms.RewardSum.rst", "reference/generated/torchrl.envs.transforms.SelectTransform.rst", "reference/generated/torchrl.envs.transforms.SqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.StepCounter.rst", "reference/generated/torchrl.envs.transforms.TargetReturn.rst", "reference/generated/torchrl.envs.transforms.TensorDictPrimer.rst", "reference/generated/torchrl.envs.transforms.TimeMaxPool.rst", "reference/generated/torchrl.envs.transforms.ToTensorImage.rst", "reference/generated/torchrl.envs.transforms.Transform.rst", "reference/generated/torchrl.envs.transforms.TransformedEnv.rst", "reference/generated/torchrl.envs.transforms.UnsqueezeTransform.rst", "reference/generated/torchrl.envs.transforms.VC1Transform.rst", "reference/generated/torchrl.envs.transforms.VIPRewardTransform.rst", "reference/generated/torchrl.envs.transforms.VIPTransform.rst", "reference/generated/torchrl.envs.transforms.VecNorm.rst", "reference/generated/torchrl.envs.transforms.gSDENoise.rst", "reference/generated/torchrl.envs.utils.check_env_specs.rst", "reference/generated/torchrl.envs.utils.exploration_mode.rst", "reference/generated/torchrl.envs.utils.exploration_type.rst", "reference/generated/torchrl.envs.utils.get_available_libraries.rst", "reference/generated/torchrl.envs.utils.make_composite_from_td.rst", "reference/generated/torchrl.envs.utils.set_exploration_mode.rst", "reference/generated/torchrl.envs.utils.set_exploration_type.rst", "reference/generated/torchrl.envs.utils.step_mdp.rst", "reference/generated/torchrl.envs.utils.terminated_or_truncated.rst", "reference/generated/torchrl.modules.CEMPlanner.rst", "reference/generated/torchrl.modules.ConvNet.rst", "reference/generated/torchrl.modules.DTActor.rst", "reference/generated/torchrl.modules.DdpgCnnActor.rst", "reference/generated/torchrl.modules.DdpgCnnQNet.rst", "reference/generated/torchrl.modules.DdpgMlpActor.rst", "reference/generated/torchrl.modules.DdpgMlpQNet.rst", "reference/generated/torchrl.modules.DecisionTransformer.rst", "reference/generated/torchrl.modules.Delta.rst", "reference/generated/torchrl.modules.DistributionalDQNnet.rst", "reference/generated/torchrl.modules.DistributionalQValueHook.rst", "reference/generated/torchrl.modules.DreamerActor.rst", "reference/generated/torchrl.modules.DuelingCnnDQNet.rst", "reference/generated/torchrl.modules.GRUModule.rst", "reference/generated/torchrl.modules.IndependentNormal.rst", "reference/generated/torchrl.modules.LSTMModule.rst", "reference/generated/torchrl.modules.LSTMNet.rst", "reference/generated/torchrl.modules.MLP.rst", "reference/generated/torchrl.modules.MPCPlannerBase.rst", "reference/generated/torchrl.modules.MPPIPlanner.rst", "reference/generated/torchrl.modules.MaskedCategorical.rst", "reference/generated/torchrl.modules.MaskedOneHotCategorical.rst", "reference/generated/torchrl.modules.MultiAgentConvNet.rst", "reference/generated/torchrl.modules.MultiAgentMLP.rst", "reference/generated/torchrl.modules.NoisyLazyLinear.rst", "reference/generated/torchrl.modules.NoisyLinear.rst", "reference/generated/torchrl.modules.NormalParamWrapper.rst", "reference/generated/torchrl.modules.ObsDecoder.rst", "reference/generated/torchrl.modules.ObsEncoder.rst", "reference/generated/torchrl.modules.OneHotCategorical.rst", "reference/generated/torchrl.modules.OnlineDTActor.rst", "reference/generated/torchrl.modules.QMixer.rst", "reference/generated/torchrl.modules.QValueHook.rst", "reference/generated/torchrl.modules.RSSMPosterior.rst", "reference/generated/torchrl.modules.RSSMPrior.rst", "reference/generated/torchrl.modules.Squeeze2dLayer.rst", "reference/generated/torchrl.modules.SqueezeLayer.rst", "reference/generated/torchrl.modules.TanhDelta.rst", "reference/generated/torchrl.modules.TanhNormal.rst", "reference/generated/torchrl.modules.TruncatedNormal.rst", "reference/generated/torchrl.modules.VDNMixer.rst", "reference/generated/torchrl.modules.VmapModule.rst", "reference/generated/torchrl.modules.reset_noise.rst", "reference/generated/torchrl.modules.tensordict_module.Actor.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticOperator.rst", "reference/generated/torchrl.modules.tensordict_module.ActorCriticWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.AdditiveGaussianWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.DistributionalQValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.EGreedyModule.rst", "reference/generated/torchrl.modules.tensordict_module.LMHeadActorValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper.rst", "reference/generated/torchrl.modules.tensordict_module.ProbabilisticActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueActor.rst", "reference/generated/torchrl.modules.tensordict_module.QValueModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticModule.rst", "reference/generated/torchrl.modules.tensordict_module.SafeProbabilisticTensorDictSequential.rst", "reference/generated/torchrl.modules.tensordict_module.SafeSequential.rst", "reference/generated/torchrl.modules.tensordict_module.TanhModule.rst", "reference/generated/torchrl.modules.tensordict_module.ValueOperator.rst", "reference/generated/torchrl.modules.tensordict_module.WorldModelWrapper.rst", "reference/generated/torchrl.modules.utils.biased_softplus.rst", "reference/generated/torchrl.modules.utils.inv_softplus.rst", "reference/generated/torchrl.modules.utils.mappings.rst", "reference/generated/torchrl.objectives.A2CLoss.rst", "reference/generated/torchrl.objectives.CQLLoss.rst", "reference/generated/torchrl.objectives.ClipPPOLoss.rst", "reference/generated/torchrl.objectives.DDPGLoss.rst", "reference/generated/torchrl.objectives.DQNLoss.rst", "reference/generated/torchrl.objectives.DTLoss.rst", "reference/generated/torchrl.objectives.DiscreteSACLoss.rst", "reference/generated/torchrl.objectives.DistributionalDQNLoss.rst", "reference/generated/torchrl.objectives.DreamerActorLoss.rst", "reference/generated/torchrl.objectives.DreamerModelLoss.rst", "reference/generated/torchrl.objectives.DreamerValueLoss.rst", "reference/generated/torchrl.objectives.HardUpdate.rst", "reference/generated/torchrl.objectives.IQLLoss.rst", "reference/generated/torchrl.objectives.KLPENPPOLoss.rst", "reference/generated/torchrl.objectives.LossModule.rst", "reference/generated/torchrl.objectives.OnlineDTLoss.rst", "reference/generated/torchrl.objectives.PPOLoss.rst", "reference/generated/torchrl.objectives.REDQLoss.rst", "reference/generated/torchrl.objectives.ReinforceLoss.rst", "reference/generated/torchrl.objectives.SACLoss.rst", "reference/generated/torchrl.objectives.SoftUpdate.rst", "reference/generated/torchrl.objectives.TD3Loss.rst", "reference/generated/torchrl.objectives.ValueEstimators.rst", "reference/generated/torchrl.objectives.default_value_kwargs.rst", "reference/generated/torchrl.objectives.distance_loss.rst", "reference/generated/torchrl.objectives.hold_out_net.rst", "reference/generated/torchrl.objectives.hold_out_params.rst", "reference/generated/torchrl.objectives.multiagent.QMixerLoss.rst", "reference/generated/torchrl.objectives.next_state_value.rst", "reference/generated/torchrl.objectives.value.GAE.rst", "reference/generated/torchrl.objectives.value.TD0Estimator.rst", "reference/generated/torchrl.objectives.value.TD1Estimator.rst", "reference/generated/torchrl.objectives.value.TDLambdaEstimator.rst", "reference/generated/torchrl.objectives.value.ValueEstimatorBase.rst", "reference/generated/torchrl.objectives.value.functional.generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.reward2go.rst", "reference/generated/torchrl.objectives.value.functional.td0_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td0_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.td_lambda_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_generalized_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td1_return_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_advantage_estimate.rst", "reference/generated/torchrl.objectives.value.functional.vec_td_lambda_return_estimate.rst", "reference/generated/torchrl.record.TensorDictRecorder.rst", "reference/generated/torchrl.record.VideoRecorder.rst", "reference/generated/torchrl.record.loggers.Logger.rst", "reference/generated/torchrl.record.loggers.csv.CSVLogger.rst", "reference/generated/torchrl.record.loggers.generate_exp_name.rst", "reference/generated/torchrl.record.loggers.get_logger.rst", "reference/generated/torchrl.record.loggers.mlflow.MLFlowLogger.rst", "reference/generated/torchrl.record.loggers.tensorboard.TensorboardLogger.rst", "reference/generated/torchrl.record.loggers.wandb.WandbLogger.rst", "reference/generated/torchrl.trainers.BatchSubSampler.rst", "reference/generated/torchrl.trainers.ClearCudaCache.rst", "reference/generated/torchrl.trainers.CountFramesLog.rst", "reference/generated/torchrl.trainers.LogReward.rst", "reference/generated/torchrl.trainers.OptimizerHook.rst", "reference/generated/torchrl.trainers.Recorder.rst", "reference/generated/torchrl.trainers.ReplayBufferTrainer.rst", "reference/generated/torchrl.trainers.RewardNormalizer.rst", "reference/generated/torchrl.trainers.SelectKeys.rst", "reference/generated/torchrl.trainers.Trainer.rst", "reference/generated/torchrl.trainers.TrainerHookBase.rst", "reference/generated/torchrl.trainers.UpdateWeights.rst", "reference/generated/torchrl.trainers.helpers.correct_for_frame_skip.rst", "reference/generated/torchrl.trainers.helpers.get_stats_random_rollout.rst", "reference/generated/torchrl.trainers.helpers.make_collector_offpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_collector_onpolicy.rst", "reference/generated/torchrl.trainers.helpers.make_dqn_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_loss.rst", "reference/generated/torchrl.trainers.helpers.make_redq_model.rst", "reference/generated/torchrl.trainers.helpers.make_replay_buffer.rst", "reference/generated/torchrl.trainers.helpers.make_target_updater.rst", "reference/generated/torchrl.trainers.helpers.make_trainer.rst", "reference/generated/torchrl.trainers.helpers.parallel_env_constructor.rst", "reference/generated/torchrl.trainers.helpers.sync_async_collector.rst", "reference/generated/torchrl.trainers.helpers.sync_sync_collector.rst", "reference/generated/torchrl.trainers.helpers.transformed_env_constructor.rst", "reference/generated/tutorials/README.rst", "reference/index.rst", "reference/knowledge_base.rst", "reference/modules.rst", "reference/objectives.rst", "reference/trainers.rst", "reference/utils.rst", "tutorials/coding_ddpg.rst", "tutorials/coding_dqn.rst", "tutorials/coding_ppo.rst", "tutorials/dqn_with_rnn.rst", "tutorials/index.rst", "tutorials/multi_task.rst", "tutorials/multiagent_ppo.rst", "tutorials/pendulum.rst", "tutorials/pretrained_models.rst", "tutorials/rb_tutorial.rst", "tutorials/sg_execution_times.rst", "tutorials/torchrl_demo.rst", "tutorials/torchrl_envs.rst"], "titles": ["TorchRL", "torchrl.collectors package", "torchrl.data package", "torchrl.envs package", "Things to consider when debugging RL", "Working with gym", "Working with <code class=\"docutils literal notranslate\"><span class=\"pre\">habitat-lab</span></code>", "Working with MuJoCo-based environments", "Common PyTorch errors and solutions", "Useful resources", "Versioning Issues", "implement_for", "DataCollectorBase", "MultiSyncDataCollector", "MultiaSyncDataCollector", "RandomPolicy", "SyncDataCollector", "aSyncDataCollector", "DistributedDataCollector", "DistributedSyncDataCollector", "RPCDataCollector", "RayCollector", "submitit_delayed_launcher", "split_trajectories", "BinaryDiscreteTensorSpec", "BoundedTensorSpec", "CompositeSpec", "DiscreteTensorSpec", "LazyStackedCompositeSpec", "LazyStackedTensorSpec", "MultiDiscreteTensorSpec", "MultiOneHotDiscreteTensorSpec", "MultiStep", "OneHotDiscreteTensorSpec", "PairwiseDataset", "PrioritizedReplayBuffer", "PromptData", "PromptTensorDictTokenizer", "ReplayBuffer", "RewardData", "RolloutFromModel", "TensorDictPrioritizedReplayBuffer", "TensorDictReplayBuffer", "TensorDictTokenizer", "TensorSpec", "TokenizedDatasetLoader", "UnboundedContinuousTensorSpec", "UnboundedDiscreteTensorSpec", "check_no_exclusive_keys", "consolidate_spec", "contains_lazy_spec", "create_infinite_iterator", "D4RLExperienceReplay", "OpenMLExperienceReplay", "get_dataloader", "LazyMemmapStorage", "LazyTensorStorage", "ListStorage", "PrioritizedSampler", "RandomSampler", "RoundRobinWriter", "Sampler", "SamplerWithoutReplacement", "Storage", "TensorDictMaxValueWriter", "TensorDictRoundRobinWriter", "TensorStorage", "Writer", "BraxEnv", "BraxWrapper", "DMControlEnv", "DMControlWrapper", "EnvBase", "EnvCreator", "EnvMetaData", "GymEnv", "GymLikeEnv", "GymWrapper", "HabitatEnv", "IsaacGymEnv", "IsaacGymWrapper", "JumanjiEnv", "JumanjiWrapper", "MarlGroupMapType", "ModelBasedEnvBase", "MultiThreadedEnv", "MultiThreadedEnvWrapper", "OpenMLEnv", "ParallelEnv", "PettingZooEnv", "PettingZooWrapper", "RoboHiveEnv", "SMACv2Env", "SMACv2Wrapper", "SerialEnv", "VmasEnv", "VmasWrapper", "check_marl_grouping", "gym_backend", "DreamerEnv", "set_gym_backend", "ActionMask", "BinarizeReward", "CatFrames", "CatTensors", "CenterCrop", "ClipTransform", "Compose", "DTypeCastTransform", "DeviceCastTransform", "DiscreteActionProjection", "DoubleToFloat", "EndOfLifeTransform", "ExcludeTransform", "FiniteTensorDictCheck", "FlattenObservation", "FrameSkipTransform", "GrayScale", "InitTracker", "KLRewardTransform", "NoopResetEnv", "ObservationNorm", "ObservationTransform", "PermuteTransform", "PinMemoryTransform", "R3MTransform", "RandomCropTensorDict", "RenameTransform", "Resize", "Reward2GoTransform", "RewardClipping", "RewardScaling", "RewardSum", "SelectTransform", "SqueezeTransform", "StepCounter", "TargetReturn", "TensorDictPrimer", "TimeMaxPool", "ToTensorImage", "Transform", "TransformedEnv", "UnsqueezeTransform", "VC1Transform", "VIPRewardTransform", "VIPTransform", "VecNorm", "gSDENoise", "check_env_specs", "exploration_mode", "exploration_type", "get_available_libraries", "make_composite_from_td", "set_exploration_mode", "set_exploration_type", "step_mdp", "terminated_or_truncated", "CEMPlanner", "ConvNet", "DTActor", "DdpgCnnActor", "DdpgCnnQNet", "DdpgMlpActor", "DdpgMlpQNet", "DecisionTransformer", "Delta", "DistributionalDQNnet", "DistributionalQValueHook", "DreamerActor", "DuelingCnnDQNet", "GRUModule", "IndependentNormal", "LSTMModule", "LSTMNet", "MLP", "MPCPlannerBase", "MPPIPlanner", "MaskedCategorical", "MaskedOneHotCategorical", "MultiAgentConvNet", "MultiAgentMLP", "NoisyLazyLinear", "NoisyLinear", "NormalParamWrapper", "ObsDecoder", "ObsEncoder", "OneHotCategorical", "OnlineDTActor", "QMixer", "QValueHook", "RSSMPosterior", "RSSMPrior", "Squeeze2dLayer", "SqueezeLayer", "TanhDelta", "TanhNormal", "TruncatedNormal", "VDNMixer", "VmapModule", "reset_noise", "Actor", "ActorCriticOperator", "ActorCriticWrapper", "ActorValueOperator", "AdditiveGaussianWrapper", "DecisionTransformerInferenceWrapper", "DistributionalQValueActor", "DistributionalQValueModule", "EGreedyModule", "LMHeadActorValueOperator", "OrnsteinUhlenbeckProcessWrapper", "ProbabilisticActor", "QValueActor", "QValueModule", "SafeModule", "SafeProbabilisticModule", "SafeProbabilisticTensorDictSequential", "SafeSequential", "TanhModule", "ValueOperator", "WorldModelWrapper", "biased_softplus", "inv_softplus", "mappings", "A2CLoss", "CQLLoss", "ClipPPOLoss", "DDPGLoss", "DQNLoss", "DTLoss", "DiscreteSACLoss", "DistributionalDQNLoss", "DreamerActorLoss", "DreamerModelLoss", "DreamerValueLoss", "HardUpdate", "IQLLoss", "KLPENPPOLoss", "LossModule", "OnlineDTLoss", "PPOLoss", "REDQLoss", "ReinforceLoss", "SACLoss", "SoftUpdate", "TD3Loss", "ValueEstimators", "default_value_kwargs", "distance_loss", "hold_out_net", "hold_out_params", "QMixerLoss", "next_state_value", "GAE", "TD0Estimator", "TD1Estimator", "TDLambdaEstimator", "ValueEstimatorBase", "generalized_advantage_estimate", "reward2go", "td0_advantage_estimate", "td0_return_estimate", "td1_advantage_estimate", "td1_return_estimate", "td_lambda_advantage_estimate", "td_lambda_return_estimate", "vec_generalized_advantage_estimate", "vec_td1_advantage_estimate", "vec_td1_return_estimate", "vec_td_lambda_advantage_estimate", "vec_td_lambda_return_estimate", "TensorDictRecorder", "VideoRecorder", "Logger", "CSVLogger", "generate_exp_name", "get_logger", "MLFlowLogger", "TensorboardLogger", "WandbLogger", "BatchSubSampler", "ClearCudaCache", "CountFramesLog", "LogReward", "OptimizerHook", "Recorder", "ReplayBufferTrainer", "RewardNormalizer", "SelectKeys", "Trainer", "TrainerHookBase", "UpdateWeights", "correct_for_frame_skip", "get_stats_random_rollout", "make_collector_offpolicy", "make_collector_onpolicy", "make_dqn_loss", "make_redq_loss", "make_redq_model", "make_replay_buffer", "make_target_updater", "make_trainer", "parallel_env_constructor", "sync_async_collector", "sync_sync_collector", "transformed_env_constructor", "README Tutos", "API Reference", "Knowledge Base", "torchrl.modules package", "torchrl.objectives package", "torchrl.trainers package", "torchrl._utils package", "TorchRL objectives: Coding a DDPG loss", "TorchRL trainer: A DQN example", "Reinforcement Learning (PPO) with TorchRL Tutorial", "Recurrent DQN: Training recurrent policies", "README Tutos", "Task-specific policy in multi-task environments", "Multi-Agent Reinforcement Learning (PPO) with TorchRL Tutorial", "Pendulum: Writing your environment and transforms with TorchRL", "Using pretrained models", "Using Replay Buffers", "Computation times", "Introduction to TorchRL", "TorchRL envs"], "terms": {"an": [0, 1, 2, 3, 5, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 41, 42, 44, 46, 47, 51, 52, 53, 55, 56, 57, 60, 63, 64, 65, 66, 67, 70, 72, 73, 76, 84, 85, 87, 88, 89, 90, 94, 97, 101, 103, 105, 108, 110, 111, 114, 120, 121, 125, 126, 127, 129, 136, 137, 138, 139, 140, 141, 143, 146, 148, 158, 160, 161, 162, 163, 170, 172, 173, 174, 175, 179, 180, 181, 185, 192, 193, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 215, 216, 220, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 251, 253, 254, 255, 256, 257, 272, 275, 284, 285, 289, 290, 293, 302, 303, 304, 305, 308, 309, 310, 313, 314, 318, 319, 321, 322, 324, 325], "open": [0, 5, 7, 11, 314, 319, 324], "sourc": [0, 1, 4, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325], "reinforc": [0, 3, 9, 103, 160, 161, 162, 163, 167, 207, 210, 224, 225, 229, 231, 235, 236, 242, 243, 244, 307, 314, 317, 320, 323, 324], "learn": [0, 3, 7, 8, 9, 18, 32, 53, 103, 160, 161, 162, 163, 167, 176, 182, 207, 210, 224, 225, 229, 231, 235, 236, 241, 242, 243, 244, 307, 309, 310, 313, 314, 316, 317, 318, 320, 322, 323, 324, 325], "rl": [0, 1, 2, 3, 5, 8, 10, 13, 14, 16, 17, 84, 136, 182, 200, 211, 219, 224, 238, 240, 280, 308, 309, 310, 311, 313, 314, 315, 319, 321, 322, 325], "librari": [0, 1, 2, 5, 6, 7, 8, 9, 10, 18, 19, 20, 37, 43, 80, 85, 151, 307, 308, 309, 312, 313, 314, 315, 319, 320, 325], "pytorch": [0, 1, 2, 3, 139, 181, 182, 289, 308, 311, 313, 315, 316, 319, 320, 321, 324, 325], "It": [0, 2, 3, 4, 7, 32, 37, 40, 41, 43, 45, 52, 72, 76, 78, 84, 85, 88, 89, 90, 94, 112, 119, 121, 126, 136, 141, 148, 160, 162, 168, 179, 180, 188, 190, 191, 197, 198, 207, 208, 210, 213, 215, 224, 225, 226, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 244, 245, 251, 252, 253, 285, 298, 308, 309, 310, 313, 314, 316, 319, 320, 321, 322, 324, 325], "provid": [0, 1, 2, 3, 5, 8, 9, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 30, 31, 32, 33, 35, 38, 41, 42, 45, 49, 52, 53, 54, 55, 59, 64, 72, 76, 84, 88, 89, 90, 94, 103, 104, 105, 106, 108, 111, 115, 120, 121, 123, 125, 126, 129, 132, 133, 136, 137, 138, 141, 143, 145, 146, 156, 158, 164, 167, 170, 172, 173, 174, 175, 177, 178, 179, 180, 198, 200, 204, 207, 208, 210, 211, 212, 213, 218, 224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 276, 280, 286, 293, 298, 301, 308, 309, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "python": [0, 3, 5, 6, 7, 10, 21, 100, 177, 178, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325], "first": [0, 1, 3, 4, 5, 7, 8, 18, 20, 21, 26, 28, 52, 55, 56, 66, 76, 103, 104, 115, 121, 125, 126, 139, 141, 143, 170, 172, 174, 179, 180, 181, 185, 200, 205, 206, 207, 211, 212, 214, 215, 226, 233, 237, 238, 240, 271, 288, 309, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "low": [0, 25, 72, 76, 88, 94, 106, 110, 152, 207, 211, 218, 313, 314, 315, 319, 320, 324, 325], "high": [0, 9, 25, 41, 72, 76, 88, 94, 106, 110, 120, 152, 207, 211, 218, 253, 258, 266, 313, 314, 315, 319, 320, 322, 324, 325], "level": [0, 3, 4, 22, 26, 28, 103, 135, 237, 313, 314, 324], "abstract": [0, 3, 8, 24, 25, 26, 27, 28, 29, 30, 44, 46, 47, 67, 72, 122, 175, 257, 281, 290, 311, 315, 320, 324], "ar": [0, 1, 2, 3, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 21, 23, 28, 29, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 48, 52, 53, 54, 55, 56, 57, 63, 66, 72, 73, 76, 83, 84, 87, 88, 89, 90, 91, 94, 103, 106, 107, 108, 110, 111, 112, 114, 115, 119, 120, 123, 125, 129, 132, 137, 138, 139, 140, 141, 142, 143, 145, 146, 152, 156, 157, 163, 165, 170, 172, 173, 175, 177, 178, 179, 182, 186, 188, 191, 205, 206, 208, 210, 211, 212, 214, 215, 216, 217, 218, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 248, 251, 252, 253, 254, 255, 256, 257, 286, 301, 305, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "intend": [0, 7, 13, 14, 16, 17, 18, 19, 20, 21, 45, 110, 198, 238, 309, 324], "effici": [0, 1, 2, 4, 8, 182, 309, 313, 314, 315, 316, 318, 319, 321, 322, 324], "modular": [0, 217, 322, 324], "document": [0, 5, 7, 18, 19, 21, 32, 72, 76, 88, 94, 141, 314, 324], "properli": [0, 72, 76, 88, 94, 315, 319, 320, 324], "test": [0, 3, 5, 143, 148, 170, 172, 173, 285, 301, 315, 316, 324], "The": [0, 1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 63, 64, 72, 76, 80, 88, 89, 90, 94, 103, 107, 108, 111, 112, 113, 121, 123, 125, 129, 131, 132, 133, 135, 136, 137, 140, 141, 143, 145, 155, 156, 157, 160, 161, 162, 163, 164, 167, 170, 172, 173, 175, 176, 177, 178, 179, 182, 183, 189, 190, 191, 200, 201, 205, 206, 207, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 251, 252, 253, 254, 255, 256, 257, 259, 274, 277, 278, 279, 280, 284, 301, 303, 304, 309, 310, 311, 314, 315, 316, 319, 320, 321, 322, 324, 325], "code": [0, 3, 5, 7, 8, 72, 76, 88, 94, 125, 141, 143, 170, 172, 217, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325], "aim": [0, 3, 7, 28, 29, 125, 143, 145, 174, 292, 308, 309, 310, 313, 314, 324], "support": [0, 1, 3, 18, 20, 26, 53, 54, 55, 56, 63, 66, 85, 87, 89, 103, 112, 121, 137, 138, 140, 151, 167, 198, 206, 207, 214, 217, 231, 253, 254, 255, 256, 277, 309, 311, 315, 316, 319, 320, 322, 324], "research": [0, 7, 9, 324], "most": [0, 3, 7, 8, 32, 110, 313, 315, 320, 322, 324, 325], "written": [0, 3, 34, 36, 39, 45, 52, 55, 72, 76, 88, 94, 103, 112, 119, 132, 135, 138, 155, 156, 200, 210, 211, 214, 215, 219, 224, 226, 237, 240, 242, 252, 271, 272, 309, 310, 311, 313, 316, 318, 320, 324], "highli": [0, 2, 324, 325], "wai": [0, 3, 4, 80, 125, 127, 145, 240, 253, 254, 255, 256, 309, 313, 314, 315, 318, 319, 320, 321, 322, 324, 325], "can": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 58, 62, 72, 73, 76, 80, 83, 88, 89, 90, 92, 93, 94, 100, 101, 103, 106, 107, 108, 110, 111, 112, 120, 121, 125, 126, 129, 132, 135, 136, 137, 140, 141, 143, 145, 146, 156, 157, 170, 171, 172, 175, 176, 179, 180, 182, 183, 196, 198, 200, 204, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 251, 252, 253, 254, 255, 256, 257, 285, 298, 303, 304, 305, 308, 309, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "easili": [0, 3, 7, 72, 76, 88, 94, 298, 310, 313, 314, 315, 319, 324, 325], "swap": [0, 3, 315, 321, 324], "compon": [0, 2, 3, 55, 56, 57, 63, 66, 167, 189, 206, 207, 213, 224, 225, 226, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 251, 284, 289, 313, 314, 315, 316, 318, 319, 320, 321, 324], "transform": [0, 1, 2, 4, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 40, 41, 42, 43, 52, 53, 72, 73, 76, 88, 89, 90, 94, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 159, 160, 164, 167, 168, 187, 188, 189, 197, 205, 209, 218, 221, 223, 229, 239, 272, 286, 298, 305, 307, 314, 316, 317, 321, 323], "them": [0, 2, 3, 7, 9, 21, 32, 35, 37, 38, 41, 42, 52, 53, 72, 73, 76, 80, 83, 88, 89, 90, 94, 108, 111, 141, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 179, 180, 183, 184, 185, 187, 190, 191, 193, 197, 198, 204, 205, 207, 208, 210, 213, 218, 221, 237, 243, 272, 313, 314, 316, 318, 319, 320, 321, 322, 324, 325], "write": [0, 3, 8, 23, 32, 37, 45, 76, 106, 123, 124, 132, 135, 156, 200, 214, 215, 217, 219, 225, 227, 228, 230, 236, 241, 243, 245, 252, 257, 272, 309, 311, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325], "new": [0, 3, 4, 8, 13, 14, 16, 17, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 46, 47, 58, 62, 72, 76, 85, 88, 92, 93, 94, 132, 140, 146, 155, 156, 170, 172, 210, 214, 215, 220, 224, 225, 226, 228, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 251, 313, 315, 316, 319, 320, 324, 325], "ones": [0, 15, 26, 32, 35, 41, 42, 72, 76, 88, 94, 104, 107, 108, 109, 111, 121, 125, 129, 137, 140, 141, 143, 145, 177, 178, 198, 214, 224, 225, 227, 236, 240, 241, 243, 245, 259, 313, 315, 319, 320, 322, 324, 325], "littl": [0, 3, 43, 315, 316, 322, 324, 325], "effort": [0, 3, 320, 322, 324], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 55, 56, 57, 62, 63, 64, 66, 72, 76, 78, 83, 84, 88, 89, 90, 94, 100, 101, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 119, 121, 125, 126, 127, 129, 132, 133, 135, 137, 138, 140, 141, 143, 144, 145, 146, 148, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 193, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 220, 221, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 251, 253, 254, 255, 256, 257, 271, 280, 282, 285, 286, 289, 291, 292, 293, 298, 301, 305, 308, 309, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "repo": [0, 6, 52, 103, 138, 143, 308, 319, 324], "attempt": [0, 204, 210, 228, 236, 251, 324], "align": [0, 324], "exist": [0, 3, 4, 11, 18, 21, 32, 45, 72, 76, 88, 94, 104, 109, 141, 243, 293, 305, 319, 324, 325], "ecosystem": [0, 324], "ha": [0, 3, 4, 5, 7, 8, 10, 16, 17, 18, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 44, 46, 47, 72, 73, 76, 80, 88, 94, 103, 135, 136, 137, 138, 141, 170, 172, 179, 204, 207, 210, 215, 237, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "dataset": [0, 34, 35, 36, 37, 38, 40, 41, 42, 45, 52, 53, 54, 87, 146, 307, 313, 314, 321, 322, 324, 325], "pillar": [0, 324], "environ": [0, 1, 2, 5, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 101, 103, 104, 108, 109, 110, 111, 116, 120, 121, 125, 126, 132, 135, 136, 137, 138, 140, 141, 143, 146, 148, 157, 170, 172, 173, 175, 176, 204, 210, 232, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 280, 282, 285, 292, 293, 294, 295, 298, 301, 302, 303, 304, 305, 307, 308, 309, 317, 321, 322, 323], "model": [0, 1, 3, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 72, 76, 84, 88, 94, 108, 125, 137, 143, 145, 147, 158, 159, 164, 170, 172, 174, 175, 176, 180, 187, 188, 197, 201, 202, 203, 209, 214, 220, 224, 225, 226, 228, 229, 232, 233, 234, 236, 237, 238, 240, 241, 243, 251, 289, 294, 295, 296, 297, 298, 307, 308, 311, 315, 317, 319, 320, 322, 323, 325], "data": [0, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 74, 76, 84, 87, 88, 89, 90, 94, 101, 103, 108, 109, 111, 113, 119, 121, 129, 135, 148, 152, 156, 157, 167, 170, 172, 173, 176, 179, 180, 189, 198, 200, 206, 208, 210, 211, 212, 214, 217, 218, 219, 224, 225, 227, 228, 230, 236, 240, 241, 242, 243, 245, 251, 253, 254, 255, 256, 257, 280, 286, 289, 291, 294, 301, 303, 304, 305, 307, 309, 310, 311, 316, 320, 321, 322, 325], "util": [0, 3, 17, 23, 32, 40, 72, 76, 88, 89, 90, 94, 97, 125, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 164, 221, 222, 223, 238, 301, 307, 312, 313, 315, 319, 320, 322, 324, 325], "e": [0, 1, 3, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 33, 55, 56, 66, 72, 73, 76, 88, 94, 104, 107, 115, 121, 125, 132, 137, 140, 141, 143, 145, 148, 170, 171, 172, 176, 180, 183, 189, 195, 196, 205, 207, 211, 213, 214, 215, 243, 252, 253, 254, 255, 256, 280, 292, 304, 309, 313, 314, 315, 319, 320, 321, 324, 325], "g": [0, 1, 3, 7, 8, 10, 11, 32, 33, 72, 73, 76, 88, 94, 104, 107, 115, 121, 125, 132, 137, 140, 141, 143, 145, 148, 170, 171, 172, 176, 180, 195, 196, 205, 211, 214, 215, 243, 252, 262, 263, 264, 265, 267, 268, 269, 270, 304, 309, 313, 314, 315, 319, 320, 321, 324, 325], "collector": [0, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 40, 103, 129, 135, 210, 286, 289, 291, 294, 295, 301, 303, 304, 307, 311, 322, 325], "contain": [0, 3, 7, 12, 13, 14, 16, 17, 19, 20, 26, 28, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 50, 52, 53, 58, 60, 63, 65, 67, 72, 76, 84, 88, 94, 107, 108, 111, 125, 137, 140, 141, 143, 145, 146, 155, 156, 157, 158, 174, 176, 180, 200, 206, 207, 211, 213, 214, 219, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 251, 252, 253, 254, 255, 256, 257, 259, 276, 280, 292, 298, 301, 302, 303, 304, 305, 309, 310, 311, 313, 314, 315, 316, 319, 320, 321, 322, 324, 325], "etc": [0, 3, 7, 8, 11, 32, 46, 47, 72, 76, 88, 94, 119, 141, 174, 180, 313, 314, 315, 322, 324, 325], "have": [0, 1, 3, 5, 6, 7, 8, 9, 13, 14, 17, 18, 20, 21, 26, 30, 32, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 62, 63, 72, 76, 88, 89, 90, 94, 103, 108, 111, 112, 119, 120, 121, 135, 140, 141, 146, 148, 156, 158, 173, 174, 179, 180, 198, 216, 217, 224, 226, 237, 240, 248, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 280, 289, 309, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "few": [0, 2, 8, 280, 315, 316, 319, 322, 324, 325], "depend": [0, 1, 2, 3, 4, 7, 8, 34, 36, 108, 111, 219, 240, 309, 313, 315, 316, 319, 320, 324, 325], "possibl": [0, 3, 4, 27, 29, 32, 33, 34, 36, 39, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 158, 214, 285, 289, 309, 313, 315, 316, 319, 320, 322, 324, 325], "standard": [0, 3, 121, 131, 146, 157, 168, 176, 181, 182, 204, 205, 245, 253, 254, 255, 256, 313, 314, 319, 322, 324], "numpi": [0, 11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 139, 289, 320, 322, 324, 325], "common": [0, 3, 4, 21, 76, 88, 94, 101, 201, 202, 203, 209, 224, 225, 226, 230, 236, 237, 240, 241, 242, 243, 245, 301, 308, 309, 311, 313, 315, 318, 319, 320, 321, 324, 325], "openai": [0, 7, 75, 77, 91, 315, 320, 324, 325], "gym": [0, 1, 3, 4, 8, 11, 13, 14, 16, 17, 21, 22, 72, 73, 75, 76, 77, 80, 88, 91, 94, 98, 100, 103, 106, 112, 118, 119, 121, 123, 127, 129, 132, 137, 140, 146, 298, 301, 308, 313, 314, 315, 316, 320, 321, 322, 324], "onli": [0, 1, 3, 4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 44, 46, 47, 52, 55, 56, 66, 72, 76, 80, 85, 88, 89, 90, 94, 103, 104, 106, 107, 108, 110, 111, 115, 121, 125, 126, 129, 135, 136, 137, 138, 140, 141, 143, 145, 146, 172, 173, 179, 180, 200, 205, 206, 211, 212, 214, 215, 216, 217, 224, 226, 227, 230, 236, 237, 238, 240, 241, 242, 243, 244, 245, 253, 254, 255, 256, 257, 293, 311, 313, 314, 315, 316, 318, 319, 320, 322, 324, 325], "option": [0, 1, 3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 59, 62, 66, 70, 72, 73, 76, 84, 87, 88, 89, 90, 91, 94, 101, 103, 104, 105, 106, 108, 110, 111, 112, 115, 116, 118, 119, 120, 121, 125, 126, 127, 129, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 194, 195, 196, 198, 200, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 251, 252, 253, 254, 255, 256, 257, 259, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 274, 277, 280, 282, 283, 284, 285, 286, 287, 289, 293, 294, 295, 296, 297, 298, 300, 301, 303, 304, 305, 309, 316, 319, 320, 322, 324], "On": [0, 3, 7, 18, 19, 20, 21, 309, 314, 319], "end": [0, 3, 13, 14, 32, 35, 38, 41, 42, 52, 53, 62, 72, 76, 88, 94, 112, 123, 135, 136, 141, 158, 175, 243, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "come": [0, 1, 3, 8, 76, 83, 88, 94, 108, 111, 200, 201, 202, 203, 211, 219, 313, 314, 315, 316, 319, 322, 324, 325], "set": [0, 1, 2, 3, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 32, 33, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 62, 63, 66, 72, 74, 76, 84, 88, 89, 90, 94, 100, 101, 103, 104, 107, 108, 111, 118, 119, 125, 129, 135, 136, 137, 138, 140, 141, 143, 145, 148, 153, 154, 156, 170, 172, 175, 179, 180, 204, 205, 214, 238, 240, 243, 257, 280, 285, 286, 295, 305, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "re": [0, 3, 8, 32, 62, 72, 76, 88, 94, 172, 177, 178, 211, 215, 311, 313, 315, 316, 318, 320, 324, 325], "usabl": [0, 311, 316, 324], "function": [0, 3, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 45, 46, 47, 49, 55, 56, 57, 63, 66, 72, 73, 76, 88, 94, 100, 108, 111, 141, 146, 148, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 172, 173, 174, 177, 178, 179, 180, 183, 184, 185, 186, 187, 190, 191, 193, 196, 198, 201, 202, 203, 204, 205, 207, 208, 210, 211, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 298, 301, 307, 309, 313, 316, 318, 320, 322, 325], "cost": [0, 2, 27, 313, 314, 319, 320, 322], "return": [0, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 52, 53, 54, 60, 64, 65, 67, 70, 72, 73, 76, 84, 87, 88, 89, 90, 94, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 121, 123, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 155, 156, 157, 159, 160, 161, 162, 163, 165, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 183, 186, 187, 188, 190, 191, 194, 195, 196, 197, 200, 201, 202, 203, 205, 211, 213, 214, 215, 219, 220, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 248, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 276, 289, 292, 294, 298, 301, 302, 303, 304, 305, 307, 309, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "process": [0, 1, 2, 3, 4, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 43, 45, 72, 73, 76, 80, 83, 85, 88, 89, 90, 94, 108, 111, 146, 179, 180, 207, 210, 213, 311, 313, 314, 316, 319, 320, 321, 322, 324, 325], "good": [0, 1, 4, 9, 313, 315, 316, 319, 324, 325], "runtim": [0, 3, 32, 72, 76, 88, 94, 320], "perform": [0, 3, 4, 8, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 72, 76, 88, 94, 97, 108, 111, 120, 141, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 175, 176, 179, 180, 183, 184, 185, 187, 190, 191, 193, 198, 204, 205, 207, 208, 210, 213, 218, 221, 233, 240, 243, 285, 289, 310, 313, 314, 315, 316, 318, 319, 320, 325], "To": [0, 2, 3, 4, 6, 7, 8, 9, 18, 19, 20, 32, 35, 38, 40, 41, 42, 52, 53, 72, 76, 83, 88, 89, 90, 92, 93, 94, 135, 146, 201, 202, 203, 210, 230, 238, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 309, 310, 313, 314, 315, 316, 319, 320, 321, 322, 324, 325], "read": [0, 3, 7, 17, 23, 37, 40, 55, 56, 57, 63, 66, 72, 76, 88, 94, 101, 103, 104, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 123, 124, 126, 127, 129, 132, 133, 135, 136, 137, 138, 140, 143, 144, 146, 156, 186, 200, 201, 202, 203, 206, 211, 214, 215, 217, 219, 220, 224, 225, 226, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 251, 253, 254, 255, 256, 257, 272, 285, 289, 298, 309, 313, 314, 315, 316, 318, 319, 320, 321, 325], "more": [0, 2, 3, 4, 6, 8, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 72, 76, 79, 80, 88, 89, 90, 94, 139, 143, 147, 167, 174, 181, 183, 200, 204, 206, 207, 214, 219, 224, 231, 238, 240, 253, 258, 266, 284, 308, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 325], "about": [0, 3, 5, 7, 9, 18, 19, 20, 43, 310, 313, 314, 315, 319, 320, 324, 325], "philosophi": [0, 9], "capabl": [0, 1, 7, 9, 311, 313, 318, 321, 325], "beyond": 0, "api": [0, 3, 5, 89, 90, 91, 125, 145, 310, 311, 319, 320, 324, 325], "check": [0, 2, 3, 4, 5, 6, 7, 9, 11, 18, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 48, 50, 72, 73, 76, 84, 88, 94, 97, 103, 104, 114, 119, 126, 148, 170, 172, 200, 206, 207, 211, 212, 213, 214, 215, 309, 310, 314, 315, 316, 318, 319, 320, 321, 322, 325], "paper": [0, 125, 143, 145, 188, 197, 235, 298, 313, 315, 319], "ppo": [0, 4, 8, 211, 215, 226, 237, 240, 307, 309, 313, 314, 317, 323], "pendulum": [0, 3, 13, 14, 16, 17, 21, 22, 72, 73, 75, 76, 77, 85, 88, 94, 103, 106, 107, 113, 118, 119, 121, 127, 129, 135, 137, 138, 140, 141, 146, 170, 172, 301, 309, 314, 315, 317, 323, 324, 325], "your": [0, 2, 3, 7, 8, 10, 18, 32, 72, 76, 80, 83, 88, 89, 90, 94, 146, 305, 308, 309, 310, 314, 315, 316, 317, 319, 322, 323, 324], "introduct": [0, 310, 317, 319, 323, 325], "multi": [0, 7, 9, 28, 29, 32, 72, 76, 88, 92, 93, 94, 170, 172, 173, 174, 179, 180, 251, 253, 254, 255, 256, 307, 313, 314, 315, 316, 317, 320, 323, 324], "agent": [0, 9, 28, 29, 83, 89, 90, 92, 93, 95, 96, 97, 135, 136, 177, 178, 179, 180, 182, 188, 197, 251, 307, 317, 320, 323], "env": [0, 1, 2, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 40, 52, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 170, 172, 175, 176, 214, 238, 271, 293, 294, 295, 298, 301, 303, 304, 305, 307, 309, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323], "us": [0, 1, 2, 3, 5, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 58, 59, 66, 70, 72, 73, 76, 84, 87, 88, 89, 90, 91, 92, 93, 94, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 118, 119, 121, 125, 126, 127, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 148, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 167, 168, 170, 171, 172, 174, 175, 176, 178, 179, 180, 182, 183, 186, 187, 188, 189, 195, 196, 197, 198, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 266, 275, 276, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 299, 301, 305, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 323, 325], "pretrain": [0, 317, 323], "recurr": [0, 170, 172, 191, 314, 317, 322, 323], "dqn": [0, 112, 167, 206, 207, 224, 225, 227, 228, 230, 231, 232, 235, 236, 238, 240, 241, 242, 243, 244, 245, 251, 296, 307, 309, 317, 323], "train": [0, 1, 3, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 34, 36, 40, 45, 54, 72, 76, 88, 89, 90, 94, 108, 116, 125, 136, 141, 143, 145, 148, 160, 162, 170, 172, 204, 208, 210, 224, 225, 226, 227, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 251, 253, 289, 291, 301, 307, 311, 314, 317, 321, 322, 323, 325], "polici": [0, 1, 2, 3, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 72, 76, 84, 88, 94, 110, 119, 136, 153, 154, 167, 170, 172, 179, 180, 182, 189, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 218, 224, 225, 226, 227, 230, 236, 237, 239, 240, 241, 242, 243, 245, 285, 291, 294, 295, 301, 303, 304, 309, 310, 311, 314, 317, 321, 322, 323, 324, 325], "replai": [0, 8, 13, 14, 16, 35, 38, 41, 42, 52, 53, 58, 59, 60, 61, 63, 64, 65, 103, 110, 126, 129, 137, 225, 227, 228, 230, 236, 241, 243, 245, 286, 289, 299, 301, 307, 311, 317, 320, 321, 323], "buffer": [0, 1, 3, 4, 8, 13, 14, 16, 32, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 72, 76, 84, 88, 94, 103, 107, 110, 125, 126, 129, 137, 140, 141, 143, 145, 214, 217, 225, 227, 228, 230, 236, 241, 243, 245, 286, 289, 299, 301, 307, 311, 317, 320, 321, 323, 325], "task": [0, 3, 9, 28, 29, 40, 45, 70, 76, 79, 88, 89, 90, 91, 94, 125, 135, 143, 145, 236, 313, 314, 315, 316, 317, 319, 320, 323, 324, 325], "specif": [0, 2, 5, 8, 41, 42, 76, 164, 205, 289, 307, 310, 311, 315, 316, 317, 319, 322, 323], "object": [0, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 55, 56, 57, 63, 66, 72, 76, 88, 94, 108, 111, 112, 121, 125, 140, 141, 143, 146, 176, 188, 197, 200, 201, 211, 214, 215, 216, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 293, 294, 295, 300, 301, 305, 307, 309, 311, 314, 315, 316, 317, 319, 320, 322, 323, 325], "ddpg": [0, 160, 161, 162, 163, 227, 235, 244, 307, 309, 314, 317, 323], "loss": [0, 3, 8, 36, 112, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 251, 252, 253, 284, 289, 296, 297, 298, 301, 310, 311, 317, 320, 322, 323, 324], "trainer": [0, 224, 225, 226, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 251, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 313, 317, 323], "A": [0, 1, 3, 8, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 74, 76, 78, 79, 88, 91, 94, 106, 110, 116, 119, 125, 126, 127, 137, 140, 141, 143, 144, 146, 147, 148, 155, 157, 158, 167, 170, 172, 174, 176, 177, 178, 180, 182, 183, 198, 204, 205, 206, 207, 208, 211, 212, 215, 217, 218, 221, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 248, 251, 253, 254, 255, 256, 257, 259, 273, 274, 277, 282, 289, 291, 298, 301, 310, 313, 315, 317, 319, 320, 323, 325], "exampl": [0, 1, 2, 3, 4, 9, 10, 11, 13, 14, 15, 16, 17, 18, 21, 22, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 54, 55, 56, 64, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 79, 81, 82, 84, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 118, 119, 121, 123, 125, 127, 129, 132, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 152, 155, 156, 157, 158, 159, 164, 167, 170, 172, 173, 174, 176, 179, 180, 183, 186, 187, 188, 189, 197, 198, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 214, 217, 218, 219, 224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 246, 247, 251, 253, 254, 255, 256, 259, 280, 281, 282, 283, 284, 286, 287, 288, 291, 298, 301, 309, 310, 311, 313, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325], "packag": [0, 6, 7, 10, 100, 307, 308, 322, 325], "singl": [0, 3, 13, 14, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 43, 52, 53, 64, 72, 76, 88, 94, 103, 104, 125, 129, 145, 158, 170, 172, 173, 174, 180, 213, 217, 226, 228, 230, 231, 237, 240, 241, 245, 253, 254, 255, 256, 262, 263, 264, 265, 267, 268, 269, 270, 298, 305, 307, 313, 314, 315, 316, 318, 319, 320, 321, 322], "node": [0, 2, 18, 19, 20, 21, 22, 298, 307], "distribut": [0, 2, 3, 4, 9, 10, 18, 19, 20, 21, 22, 89, 90, 119, 121, 157, 165, 166, 167, 168, 171, 176, 177, 178, 183, 186, 187, 190, 191, 194, 195, 196, 204, 205, 206, 207, 211, 215, 216, 224, 225, 226, 230, 231, 236, 237, 240, 241, 242, 243, 245, 307, 311, 314, 315, 319, 320, 324, 325], "helper": [0, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 313, 314, 316, 320], "compos": [0, 3, 32, 35, 38, 41, 42, 52, 53, 59, 60, 61, 64, 65, 72, 76, 88, 94, 103, 140, 141, 146, 209, 233, 243, 298, 307, 313, 314, 315, 316, 318, 319, 322, 324, 325], "tensorspec": [0, 3, 15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 46, 47, 48, 49, 50, 72, 76, 84, 88, 94, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 117, 118, 119, 121, 123, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 156, 191, 200, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 218, 225, 228, 230, 241, 243, 245, 251, 307, 320], "from": [0, 1, 3, 4, 5, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 62, 63, 64, 66, 72, 73, 76, 83, 84, 88, 89, 90, 92, 93, 94, 97, 100, 101, 103, 104, 106, 108, 109, 110, 111, 112, 113, 118, 119, 121, 123, 125, 126, 127, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 152, 155, 156, 157, 160, 161, 162, 163, 164, 167, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 183, 186, 187, 188, 189, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 224, 225, 226, 227, 228, 230, 231, 232, 236, 237, 238, 240, 241, 242, 243, 245, 247, 251, 252, 253, 254, 255, 256, 259, 271, 272, 280, 286, 289, 292, 293, 298, 299, 301, 302, 305, 307, 308, 309, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "human": [0, 307, 320], "feedback": [0, 307, 324], "rlhf": [0, 40, 45, 54, 119, 307, 309], "envbas": [0, 3, 13, 14, 16, 17, 18, 19, 20, 21, 73, 76, 88, 94, 101, 108, 111, 120, 127, 140, 141, 146, 148, 157, 175, 176, 285, 293, 294, 295, 298, 301, 303, 304, 305, 307, 316], "gymlikeenv": [0, 307], "envmetadata": [0, 307], "vector": [0, 1, 8, 24, 27, 33, 83, 89, 90, 110, 160, 162, 174, 253, 256, 266, 267, 268, 269, 270, 307, 313, 314, 316, 318, 319, 320, 321, 325], "mask": [0, 1, 4, 23, 27, 30, 31, 33, 89, 90, 101, 126, 167, 177, 178, 189, 205, 206, 207, 208, 212, 213, 286, 307, 314, 316, 325], "action": [0, 2, 8, 9, 13, 14, 15, 16, 17, 21, 27, 33, 40, 44, 69, 72, 76, 82, 83, 84, 88, 89, 90, 92, 93, 94, 95, 96, 101, 106, 108, 110, 111, 112, 113, 116, 119, 120, 123, 127, 129, 133, 135, 141, 152, 155, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 172, 174, 175, 176, 177, 178, 179, 187, 188, 189, 191, 194, 195, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 215, 218, 219, 224, 225, 227, 228, 230, 236, 238, 240, 241, 242, 243, 245, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 298, 301, 305, 307, 309, 310, 311, 313, 314, 315, 318, 319, 321, 322, 324, 325], "record": [0, 32, 72, 76, 88, 94, 119, 240, 271, 272, 273, 274, 275, 276, 277, 278, 279, 301, 307, 314, 315], "domain": [0, 2, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 72, 76, 88, 94, 110, 137, 152, 200, 206, 207, 211, 212, 213, 214, 215, 216, 217, 307, 315, 316, 319, 320, 324, 325], "modul": [0, 2, 3, 4, 8, 11, 32, 40, 64, 72, 76, 83, 84, 88, 94, 100, 107, 110, 112, 119, 125, 126, 136, 137, 140, 141, 143, 145, 146, 147, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 249, 251, 253, 254, 255, 256, 257, 289, 296, 297, 301, 307, 310, 311, 314, 315, 318, 319, 320, 321, 322], "tensordict": [0, 1, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 55, 56, 58, 64, 65, 66, 69, 72, 73, 74, 76, 82, 83, 84, 87, 88, 89, 90, 92, 93, 94, 95, 96, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 123, 124, 125, 126, 127, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 155, 156, 157, 166, 167, 170, 172, 173, 175, 176, 188, 189, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 251, 252, 253, 254, 255, 256, 257, 271, 280, 284, 285, 286, 288, 289, 298, 307, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 325], "actor": [0, 3, 4, 15, 21, 119, 157, 159, 160, 162, 167, 168, 176, 187, 189, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 251, 298, 307, 310, 314, 315, 316, 319, 321, 324], "explor": [0, 1, 147, 182, 200, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 224, 285, 294, 295, 301, 307, 315, 316, 319, 320], "valu": [0, 1, 3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 54, 72, 76, 83, 88, 94, 100, 102, 103, 104, 106, 108, 110, 111, 112, 120, 121, 125, 126, 129, 130, 132, 137, 138, 140, 141, 145, 146, 152, 156, 160, 161, 162, 163, 165, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 186, 188, 189, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 280, 282, 283, 284, 285, 286, 289, 298, 301, 307, 311, 314, 318, 319, 320, 322, 324, 325], "gener": [0, 1, 3, 7, 8, 9, 16, 35, 38, 40, 61, 62, 72, 73, 76, 84, 88, 89, 90, 92, 93, 94, 107, 108, 109, 113, 119, 121, 127, 132, 133, 135, 140, 156, 165, 177, 178, 186, 200, 211, 215, 219, 220, 241, 247, 253, 258, 266, 275, 289, 307, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325], "hook": [0, 32, 72, 76, 88, 94, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 172, 173, 174, 179, 180, 183, 184, 185, 187, 189, 190, 191, 193, 198, 204, 205, 207, 208, 210, 213, 218, 221, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 307], "planner": [0, 157, 176, 307], "sac": [0, 230, 241, 243, 307], "redq": [0, 241, 297, 298, 307], "iql": [0, 236, 307, 319], "cql": [0, 225, 307], "dt": [0, 210, 307, 320], "td3": [0, 245, 307], "a2c": [0, 224, 307], "dreamer": [0, 99, 168, 232, 233, 234, 307, 309], "checkpoint": [0, 307, 321], "builder": [0, 307, 314, 325], "logger": [0, 272, 274, 275, 276, 277, 278, 279, 283, 289, 301, 305, 307, 314], "_util": [0, 3, 11, 307], "implement_for": [0, 3, 307], "contribut": 0, "thing": [0, 3, 7, 8, 308, 315, 316, 319, 322, 325], "consid": [0, 1, 3, 8, 20, 32, 34, 36, 39, 55, 56, 66, 72, 76, 88, 94, 110, 146, 165, 179, 194, 308, 313, 320, 322], "when": [0, 1, 2, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 57, 59, 62, 63, 66, 72, 73, 76, 83, 85, 87, 88, 89, 90, 94, 101, 103, 107, 108, 110, 111, 119, 120, 121, 125, 126, 132, 137, 140, 141, 143, 145, 146, 153, 154, 157, 167, 174, 175, 176, 177, 178, 181, 189, 195, 211, 214, 215, 217, 221, 226, 228, 231, 237, 240, 243, 246, 251, 252, 253, 254, 255, 256, 271, 272, 286, 305, 308, 309, 311, 313, 314, 315, 316, 319, 320, 321, 322, 325], "debug": [0, 6, 8, 40, 308, 325], "work": [0, 3, 4, 8, 11, 32, 34, 36, 38, 39, 72, 76, 80, 88, 94, 104, 119, 125, 143, 146, 158, 174, 207, 213, 218, 226, 237, 240, 289, 308, 309, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "habitat": [0, 3, 78, 308, 321], "lab": [0, 3, 70, 71, 308], "mujoco": [0, 6, 8, 91, 308, 315, 316], "error": [0, 1, 3, 7, 10, 11, 29, 32, 72, 76, 88, 94, 97, 126, 148, 308, 313, 315, 319, 325], "solut": [0, 3, 6, 7, 9, 21, 308, 309, 311, 324], "resourc": [0, 1, 21, 308, 313, 315, 319], "version": [0, 1, 3, 6, 11, 32, 34, 36, 40, 72, 76, 88, 89, 94, 203, 238, 243, 253, 256, 308, 309, 313, 315, 316, 319, 320, 321, 325], "issu": [0, 4, 5, 8, 55, 56, 66, 80, 103, 126, 138, 200, 206, 207, 211, 212, 213, 214, 215, 308, 324], "index": [0, 3, 7, 8, 10, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 55, 56, 58, 60, 64, 65, 66, 67, 72, 76, 88, 94, 103, 110, 155, 177, 178, 318, 319, 322, 324], "search": [0, 156, 314], "page": [0, 7], "somewhat": [1, 310, 325], "equival": [1, 3, 17, 24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 52, 54, 72, 76, 88, 94, 109, 112, 141, 167, 189, 206, 207, 212, 213, 240, 286, 324, 325], "dataload": [1, 54, 62, 314, 315, 322], "except": [1, 3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 72, 76, 88, 94, 103, 114, 129, 136, 137, 138, 170, 172, 186, 204, 208, 210, 309, 314, 322, 324, 325], "1": [1, 2, 3, 4, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 40, 41, 42, 44, 45, 46, 47, 52, 54, 64, 69, 72, 73, 76, 82, 83, 84, 87, 88, 89, 90, 92, 93, 94, 95, 96, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 116, 119, 121, 123, 125, 126, 127, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 152, 155, 157, 158, 159, 160, 161, 163, 164, 167, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 190, 191, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 217, 218, 219, 221, 224, 225, 226, 227, 228, 230, 233, 236, 237, 239, 240, 241, 242, 243, 244, 245, 251, 252, 253, 254, 255, 256, 259, 261, 262, 263, 267, 268, 270, 280, 285, 286, 287, 298, 301, 305, 308, 309, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "thei": [1, 2, 3, 4, 8, 9, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 72, 76, 83, 88, 89, 90, 94, 114, 119, 125, 133, 140, 141, 145, 172, 173, 224, 225, 226, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 251, 286, 289, 309, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "collect": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 35, 38, 41, 42, 52, 53, 91, 103, 121, 125, 145, 148, 210, 225, 227, 230, 241, 243, 245, 280, 286, 289, 291, 292, 293, 301, 311, 313, 316, 319, 320, 321, 322, 324, 325], "over": [1, 2, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 42, 43, 45, 51, 64, 72, 76, 88, 94, 110, 121, 132, 138, 155, 198, 217, 231, 233, 238, 259, 292, 311, 313, 314, 315, 319, 320, 325], "non": [1, 3, 8, 21, 32, 34, 35, 36, 38, 39, 41, 42, 72, 76, 88, 89, 90, 94, 102, 107, 115, 125, 137, 140, 141, 142, 143, 145, 155, 170, 172, 179, 214, 215, 224, 225, 227, 228, 230, 231, 232, 233, 236, 238, 240, 241, 242, 243, 245, 251, 253, 254, 255, 256, 309, 313, 316, 319, 320, 322, 325], "static": [1, 11, 40, 45, 146, 236, 320, 322], "2": [1, 3, 8, 9, 10, 11, 13, 14, 16, 21, 22, 26, 28, 30, 31, 32, 35, 36, 37, 38, 41, 42, 43, 45, 54, 72, 73, 76, 83, 87, 88, 89, 90, 92, 93, 94, 95, 96, 104, 107, 108, 109, 110, 111, 119, 121, 123, 125, 129, 132, 135, 136, 137, 140, 141, 143, 145, 146, 152, 156, 158, 159, 160, 161, 162, 164, 167, 169, 170, 172, 173, 174, 177, 178, 179, 180, 183, 187, 198, 205, 206, 207, 208, 210, 214, 218, 219, 224, 225, 226, 227, 230, 236, 237, 240, 241, 242, 243, 245, 252, 253, 254, 255, 256, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 280, 309, 310, 313, 314, 315, 316, 318, 319, 320, 322, 324, 325], "like": [1, 2, 3, 4, 7, 21, 26, 28, 32, 35, 38, 41, 42, 45, 72, 76, 78, 83, 88, 89, 90, 94, 112, 139, 148, 180, 209, 241, 310, 313, 315, 316, 319, 320, 321, 322, 325], "being": [1, 3, 7, 8, 17, 18, 20, 21, 32, 54, 72, 76, 88, 94, 108, 110, 111, 120, 127, 141, 153, 154, 170, 172, 208, 210, 226, 237, 240, 243, 272, 286, 291, 303, 304, 305, 309, 313, 314, 315, 316, 319, 320, 322], "s": [1, 2, 3, 6, 7, 8, 32, 35, 38, 41, 42, 52, 53, 72, 76, 80, 85, 88, 89, 90, 94, 103, 107, 125, 135, 137, 139, 140, 141, 143, 145, 146, 148, 158, 170, 172, 178, 179, 180, 182, 188, 197, 201, 203, 204, 207, 208, 211, 214, 215, 218, 225, 236, 238, 243, 253, 254, 255, 256, 257, 298, 309, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "accept": [1, 13, 14, 16, 17, 18, 19, 20, 21, 32, 38, 54, 72, 76, 84, 88, 94, 103, 107, 115, 125, 132, 137, 140, 141, 142, 143, 145, 198, 214, 215, 216, 238, 243, 311, 315, 325], "two": [1, 3, 4, 8, 10, 32, 40, 62, 72, 76, 88, 94, 121, 125, 145, 163, 170, 172, 192, 215, 237, 248, 285, 289, 298, 310, 313, 314, 315, 316, 318, 319, 320, 322, 324, 325], "main": [1, 2, 3, 5, 20, 22, 73, 215, 289, 309, 310, 313, 314, 318, 325], "argument": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 54, 62, 72, 76, 85, 88, 89, 94, 106, 107, 125, 133, 135, 137, 140, 141, 143, 145, 155, 158, 170, 172, 174, 177, 178, 179, 180, 181, 198, 200, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 218, 219, 224, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 251, 253, 254, 255, 256, 257, 261, 271, 282, 292, 298, 301, 302, 305, 313, 314, 315, 316, 319, 320, 322, 325], "list": [1, 6, 7, 8, 9, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 49, 52, 53, 57, 62, 63, 72, 76, 84, 88, 89, 90, 94, 97, 106, 108, 111, 119, 121, 123, 125, 132, 141, 143, 145, 146, 155, 166, 170, 172, 174, 177, 178, 184, 189, 207, 212, 213, 215, 217, 218, 219, 238, 243, 250, 253, 256, 271, 285, 286, 303, 304, 309, 313, 315, 318, 320, 321, 322, 324, 325], "constructor": [1, 16, 18, 19, 20, 21, 38, 45, 140, 224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 251, 253, 254, 255, 256, 257, 298, 302, 305, 309, 313, 314, 315, 319, 322], "iter": [1, 11, 13, 14, 16, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 51, 52, 53, 54, 72, 76, 88, 94, 113, 121, 133, 158, 174, 179, 180, 193, 200, 206, 211, 212, 214, 216, 217, 219, 238, 250, 285, 288, 289, 298, 310, 311, 313, 315, 316, 319, 320], "execut": [1, 3, 6, 7, 8, 13, 14, 16, 18, 19, 20, 21, 32, 35, 37, 38, 41, 42, 52, 53, 72, 73, 76, 80, 84, 85, 88, 94, 101, 141, 170, 172, 208, 216, 217, 293, 305, 309, 311, 314, 315, 316, 319, 322, 323, 325], "step": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 69, 72, 73, 76, 82, 84, 88, 89, 90, 94, 101, 115, 118, 121, 135, 136, 137, 138, 141, 155, 156, 157, 168, 170, 172, 173, 175, 176, 204, 208, 210, 211, 215, 224, 232, 240, 252, 253, 254, 255, 256, 259, 260, 261, 271, 280, 285, 289, 311, 313, 314, 316, 318, 320, 321, 322, 324], "queri": [1, 3, 13, 14, 16, 17, 32, 34, 36, 39, 72, 76, 88, 94, 125, 140, 143, 146, 217, 313, 320, 324], "defin": [1, 2, 11, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 72, 76, 88, 94, 126, 136, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 179, 180, 183, 184, 185, 187, 190, 191, 193, 198, 204, 205, 207, 208, 210, 213, 218, 221, 228, 238, 253, 254, 255, 256, 257, 271, 302, 313, 314, 316, 320, 322, 325], "number": [1, 3, 8, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 27, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 66, 72, 76, 84, 85, 87, 88, 89, 90, 94, 103, 110, 116, 120, 121, 131, 135, 138, 146, 157, 158, 165, 166, 168, 169, 170, 171, 172, 174, 176, 179, 180, 183, 184, 185, 188, 190, 191, 194, 195, 196, 197, 200, 204, 205, 208, 210, 211, 214, 215, 219, 223, 225, 230, 232, 236, 237, 239, 241, 243, 245, 280, 282, 285, 289, 291, 292, 293, 303, 304, 305, 309, 313, 314, 315, 316, 319, 320, 321, 325], "befor": [1, 3, 4, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 45, 53, 62, 72, 76, 88, 94, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 120, 121, 123, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 144, 170, 172, 174, 181, 182, 224, 225, 226, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 251, 254, 255, 256, 286, 313, 315, 316, 319, 320, 322, 325], "deliv": [1, 16, 18, 19, 20, 313, 314, 324], "stack": [1, 3, 7, 8, 18, 20, 21, 28, 29, 50, 72, 76, 83, 88, 89, 90, 94, 146, 170, 172, 216, 217, 271, 280, 309, 314, 318, 320, 324], "user": [1, 2, 3, 5, 8, 21, 32, 52, 72, 76, 88, 94, 136, 141, 164, 173, 240, 243, 302, 310, 311, 313, 314, 320, 324, 325], "reset": [1, 3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 38, 41, 42, 52, 53, 69, 72, 73, 76, 82, 83, 84, 85, 87, 88, 89, 90, 94, 103, 112, 115, 118, 120, 125, 132, 135, 136, 137, 138, 140, 143, 146, 148, 156, 170, 172, 199, 210, 271, 298, 313, 314, 315, 316, 318, 319, 324], "whenev": [1, 3, 32, 35, 38, 41, 42, 100, 118, 141, 238, 253, 254, 255, 256, 291, 309], "reach": [1, 13, 14, 16, 17, 18, 19, 20, 21, 22, 40, 62, 72, 76, 88, 94, 135, 204, 208, 210, 313, 315, 319, 324, 325], "done": [1, 3, 4, 7, 8, 13, 14, 16, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 52, 69, 72, 73, 76, 82, 83, 84, 87, 88, 89, 90, 92, 93, 94, 95, 96, 101, 103, 108, 109, 111, 112, 113, 120, 121, 123, 127, 129, 131, 133, 135, 137, 138, 140, 141, 146, 155, 156, 157, 170, 172, 176, 224, 225, 227, 228, 230, 236, 240, 241, 242, 243, 245, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 298, 310, 313, 315, 316, 318, 319, 320, 321, 322, 324, 325], "state": [1, 3, 4, 13, 14, 16, 17, 32, 40, 52, 69, 72, 76, 82, 84, 88, 89, 90, 92, 93, 94, 103, 104, 106, 112, 121, 127, 135, 136, 140, 141, 146, 155, 156, 157, 159, 164, 168, 170, 172, 173, 174, 176, 184, 187, 188, 190, 191, 197, 201, 214, 220, 224, 226, 237, 238, 240, 241, 242, 243, 251, 252, 253, 254, 255, 256, 257, 305, 309, 310, 313, 314, 315, 316, 319, 320, 325], "after": [1, 3, 8, 13, 14, 18, 20, 21, 26, 32, 40, 72, 76, 80, 88, 94, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 117, 118, 119, 120, 121, 123, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 155, 170, 172, 181, 204, 206, 208, 212, 233, 243, 314, 315, 316, 319, 320, 321, 322, 325], "predefin": [1, 314, 315, 322], "becaus": [1, 3, 4, 7, 40, 72, 76, 88, 94, 112, 119, 135, 140, 163, 173, 180, 200, 206, 207, 211, 212, 213, 214, 215, 313, 314, 316, 318, 319, 320, 322, 325], "potenti": [1, 320, 322], "comput": [1, 3, 4, 8, 13, 16, 21, 27, 32, 40, 72, 76, 88, 94, 121, 141, 144, 156, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 183, 184, 185, 186, 187, 190, 191, 193, 195, 196, 198, 201, 204, 205, 207, 208, 210, 211, 213, 215, 218, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 293, 310, 313, 315, 316, 318, 319, 321, 322], "heavi": [1, 8, 322], "crucial": [1, 204, 208, 210, 236, 238, 313, 314, 315, 316, 319, 320, 325], "configur": [1, 8, 13, 14, 16, 17, 21, 22, 40, 119, 159, 164, 187, 238, 240, 298, 309, 313, 314, 315, 319, 320], "hyperparamet": [1, 224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 251, 313, 320, 322], "appropri": [1, 3, 4, 7, 13, 14, 16, 17, 60, 64, 65, 67, 112, 302, 305, 313, 322], "paramet": [1, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 66, 70, 71, 72, 73, 76, 84, 85, 87, 88, 89, 90, 91, 94, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 298, 301, 302, 303, 304, 305, 309, 310, 313, 316, 319, 320, 321, 324], "take": [1, 3, 8, 23, 40, 72, 76, 88, 94, 106, 135, 138, 140, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 179, 180, 183, 184, 185, 187, 190, 191, 193, 198, 204, 205, 207, 208, 209, 210, 213, 218, 221, 223, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 280, 291, 309, 311, 313, 314, 315, 319, 320, 322, 325], "consider": [1, 3, 8, 314, 319, 322], "whether": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 46, 47, 52, 53, 72, 76, 84, 88, 89, 90, 91, 94, 108, 111, 136, 141, 156, 158, 170, 172, 174, 219, 225, 226, 227, 228, 230, 231, 237, 238, 240, 241, 243, 245, 251, 253, 256, 313, 314, 315, 319, 320, 325], "should": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 63, 64, 72, 76, 83, 84, 88, 89, 90, 91, 94, 103, 106, 107, 108, 109, 112, 113, 115, 119, 121, 126, 127, 129, 132, 133, 135, 136, 138, 140, 141, 146, 148, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 179, 180, 183, 184, 185, 187, 190, 191, 193, 198, 204, 205, 207, 208, 210, 211, 213, 214, 215, 218, 221, 230, 235, 237, 238, 240, 241, 244, 252, 253, 254, 255, 256, 257, 272, 284, 285, 286, 289, 301, 303, 304, 305, 309, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "occur": [1, 8, 14, 28, 29, 104, 121, 126, 156, 200, 206, 207, 211, 212, 213, 214, 215, 233, 322, 325], "serial": [1, 3, 32, 72, 76, 88, 94, 146], "optim": [1, 2, 8, 32, 40, 72, 76, 88, 94, 141, 157, 176, 181, 182, 225, 238, 239, 240, 243, 284, 289, 301, 310, 311, 315, 316, 319, 320], "parallel": [1, 3, 8, 17, 89, 90, 148, 224, 302, 303, 304, 305, 314, 315, 319], "syncdatacollector": [1, 13, 14, 17, 18, 19, 20, 21, 103, 129, 301, 304, 307, 315, 316, 319, 322], "class": [1, 2, 3, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 76, 78, 83, 84, 88, 89, 90, 94, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 303, 304, 305, 309, 310, 311, 313, 314, 315, 316, 319, 321, 322, 325], "worker": [1, 13, 14, 16, 17, 18, 19, 20, 21, 22, 36, 45, 54, 73, 85, 88, 94, 146, 303, 304, 305, 313, 315, 324, 325], "multisyncdatacollector": [1, 18, 19, 20, 21, 304, 307, 315, 324], "split": [1, 13, 14, 16, 17, 18, 19, 20, 21, 34, 36, 45, 52, 54, 83, 89, 90, 224, 225, 226, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 251, 309, 311, 315, 322, 324], "workload": 1, "across": [1, 3, 8, 18, 19, 20, 21, 35, 38, 41, 42, 80, 146, 179, 210, 291, 309, 313, 319, 320], "aggreg": [1, 3, 156, 158, 160, 161, 217], "result": [1, 3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 41, 42, 52, 53, 62, 72, 73, 76, 88, 94, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 117, 118, 119, 120, 121, 123, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 155, 156, 170, 172, 174, 179, 189, 205, 207, 208, 213, 224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 251, 253, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 291, 309, 314, 316, 320, 321, 324, 325], "final": [1, 3, 4, 21, 34, 36, 39, 40, 170, 172, 179, 204, 208, 209, 210, 216, 253, 285, 309, 313, 314, 315, 319, 320, 325], "multiasyncdatacollector": [1, 17, 18, 19, 20, 21, 303, 307, 313, 314, 315, 324], "sever": [1, 8, 30, 32, 45, 72, 76, 88, 94, 104, 106, 141, 240, 313, 315, 322, 325], "batch": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 27, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 52, 53, 54, 55, 56, 59, 62, 64, 66, 72, 76, 84, 85, 87, 88, 94, 103, 115, 121, 123, 126, 129, 137, 141, 142, 146, 156, 165, 166, 170, 172, 173, 177, 178, 179, 180, 181, 186, 188, 194, 198, 210, 214, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 280, 283, 286, 287, 288, 289, 291, 303, 304, 305, 311, 314, 315, 316, 318, 319, 321, 324, 325], "gather": [1, 3, 18, 20, 21, 45, 54, 55, 56, 66, 126, 178, 186, 252, 293, 308, 313, 314, 315, 316, 319, 320, 322, 325], "continu": [1, 9, 25, 46, 72, 76, 88, 89, 90, 94, 152, 160, 161, 162, 163, 210, 217, 224, 225, 230, 236, 240, 241, 242, 243, 244, 245, 253, 258, 266, 309, 313, 315, 316, 319, 320, 322, 324, 325], "concomitantli": 1, "network": [1, 4, 8, 32, 72, 76, 83, 88, 89, 90, 94, 158, 160, 161, 162, 163, 166, 168, 169, 174, 179, 180, 182, 184, 185, 188, 190, 191, 192, 197, 201, 202, 203, 205, 214, 218, 225, 226, 227, 228, 230, 231, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 249, 251, 253, 254, 255, 256, 257, 300, 301, 309, 310, 311, 318, 320, 325], "impli": [1, 325], "weight": [1, 4, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 35, 40, 72, 76, 88, 92, 93, 94, 107, 125, 137, 140, 141, 143, 145, 170, 172, 179, 182, 214, 224, 225, 226, 230, 233, 243, 291, 300, 309, 311, 313, 314, 315, 316, 318, 320, 322, 324], "mai": [1, 2, 3, 4, 5, 7, 8, 13, 14, 16, 17, 18, 20, 21, 28, 29, 32, 52, 72, 76, 88, 94, 119, 121, 133, 141, 142, 146, 148, 174, 179, 310, 311, 313, 314, 315, 316, 319, 320, 321, 322, 324, 325], "slightli": [1, 309, 310, 316, 320, 321, 322, 325], "lag": [1, 13, 14, 16, 17, 313, 314, 315], "therefor": [1, 3, 7, 72, 76, 88, 94, 129, 240, 251, 325], "although": [1, 8, 72, 76, 88, 94, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 179, 180, 183, 184, 185, 187, 190, 191, 193, 198, 204, 205, 207, 208, 210, 213, 218, 221, 311, 313, 314, 322], "fastest": 1, "price": 1, "suitabl": [1, 2], "where": [1, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 34, 35, 36, 37, 38, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 64, 66, 72, 76, 83, 84, 87, 88, 89, 90, 94, 101, 103, 112, 119, 125, 129, 132, 135, 136, 138, 140, 142, 145, 155, 156, 177, 178, 179, 204, 208, 210, 211, 214, 215, 223, 224, 225, 226, 230, 231, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 310, 311, 313, 314, 315, 318, 319, 320, 322, 325], "asynchron": [1, 9, 14, 21, 32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214, 224, 303, 314, 315], "off": [1, 2, 4, 171, 196, 206, 243, 285, 294, 309, 311, 313, 314, 315, 319, 321, 325], "curriculum": [1, 4], "For": [1, 2, 3, 4, 7, 8, 9, 10, 13, 14, 16, 17, 18, 20, 21, 32, 52, 72, 76, 88, 89, 90, 94, 108, 111, 115, 121, 136, 141, 167, 170, 172, 180, 181, 201, 203, 205, 207, 212, 224, 231, 236, 240, 285, 309, 311, 313, 314, 315, 316, 319, 320, 321, 322, 325], "remot": [1, 18, 19, 20, 21, 88, 94, 325], "rollout": [1, 3, 13, 14, 16, 21, 23, 40, 72, 76, 79, 84, 85, 88, 89, 90, 92, 93, 94, 95, 96, 101, 103, 106, 108, 111, 112, 113, 119, 123, 127, 132, 133, 135, 136, 138, 148, 157, 170, 172, 176, 210, 224, 293, 309, 313, 315, 316, 321, 322, 324], "necessari": [1, 4, 6, 8, 13, 14, 16, 17, 133, 241, 253, 254, 255, 256, 257, 310, 313, 315], "synchronis": [1, 73, 319], "either": [1, 5, 22, 32, 40, 54, 72, 76, 88, 94, 135, 136, 220, 245, 276, 311, 313, 314, 316, 321, 322, 324, 325], "update_policy_weights_": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 313, 319, 324], "update_at_each_batch": [1, 13, 14, 17, 313], "true": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 62, 70, 71, 72, 73, 74, 76, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 101, 103, 104, 107, 110, 115, 118, 119, 120, 121, 125, 126, 127, 131, 133, 135, 137, 139, 140, 141, 142, 143, 145, 146, 148, 152, 155, 156, 157, 158, 160, 161, 162, 163, 169, 170, 172, 174, 176, 177, 178, 179, 180, 181, 182, 195, 196, 200, 201, 202, 203, 204, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 224, 225, 226, 227, 230, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 248, 253, 254, 255, 256, 259, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 282, 283, 285, 286, 289, 305, 309, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "second": [1, 3, 8, 170, 172, 207, 226, 237, 240, 243, 288, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "devic": [1, 2, 3, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 66, 69, 72, 74, 76, 79, 80, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 107, 108, 109, 111, 112, 113, 119, 123, 124, 125, 127, 129, 133, 135, 137, 139, 140, 141, 143, 145, 152, 155, 157, 158, 159, 160, 161, 162, 163, 167, 169, 170, 172, 173, 174, 176, 179, 180, 181, 182, 187, 188, 189, 197, 200, 201, 202, 203, 205, 206, 207, 210, 211, 212, 213, 214, 217, 219, 224, 225, 227, 228, 230, 236, 240, 241, 242, 243, 245, 251, 286, 291, 298, 299, 309, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324], "oper": [1, 3, 4, 7, 8, 13, 14, 17, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 45, 46, 47, 72, 76, 88, 94, 115, 119, 140, 166, 167, 183, 201, 202, 203, 206, 207, 209, 214, 220, 224, 226, 227, 228, 231, 237, 240, 242, 251, 252, 253, 254, 255, 256, 289, 298, 307, 311, 313, 314, 315, 316, 318, 319, 320, 325], "instanc": [1, 2, 3, 4, 7, 8, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 43, 44, 45, 52, 71, 72, 73, 76, 84, 88, 94, 103, 121, 137, 140, 146, 152, 156, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 175, 179, 180, 183, 184, 185, 187, 190, 191, 193, 198, 204, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 217, 218, 221, 228, 230, 238, 251, 253, 254, 255, 256, 272, 276, 285, 293, 294, 295, 298, 301, 303, 304, 309, 310, 311, 313, 315, 316, 320, 322, 325], "cpu": [1, 3, 8, 10, 13, 14, 16, 18, 19, 20, 21, 24, 26, 28, 32, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 54, 55, 56, 66, 69, 72, 76, 82, 83, 84, 87, 88, 89, 90, 92, 93, 94, 95, 96, 107, 108, 109, 111, 112, 113, 123, 125, 127, 129, 133, 135, 137, 140, 141, 143, 145, 152, 155, 157, 170, 172, 176, 181, 182, 188, 189, 197, 200, 201, 202, 203, 205, 206, 207, 211, 212, 213, 214, 217, 219, 224, 225, 227, 228, 230, 236, 240, 241, 242, 243, 245, 251, 286, 298, 309, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "slower": 1, "than": [1, 3, 4, 8, 13, 14, 16, 17, 52, 72, 76, 80, 88, 94, 127, 163, 170, 172, 174, 183, 198, 200, 204, 206, 214, 219, 238, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 308, 310, 313, 314, 315, 319, 320, 322, 324, 325], "one": [1, 3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 27, 28, 29, 30, 31, 33, 35, 37, 38, 40, 41, 42, 52, 53, 58, 60, 63, 65, 67, 72, 73, 76, 80, 83, 87, 88, 89, 90, 94, 101, 103, 106, 108, 109, 110, 111, 120, 121, 125, 129, 132, 134, 136, 137, 138, 140, 141, 142, 145, 146, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 172, 173, 174, 179, 180, 183, 184, 185, 186, 187, 189, 190, 191, 193, 198, 200, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 218, 219, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 236, 237, 238, 240, 241, 242, 243, 244, 245, 251, 253, 254, 255, 256, 260, 261, 282, 284, 285, 289, 293, 298, 305, 308, 309, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 325], "cuda": [1, 3, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 72, 76, 79, 80, 88, 94, 107, 119, 124, 125, 137, 140, 141, 143, 145, 214, 281, 313, 314, 315, 316, 319, 321, 325], "multipl": [1, 3, 5, 8, 13, 14, 16, 17, 18, 19, 20, 21, 27, 43, 88, 94, 104, 106, 110, 120, 129, 132, 135, 140, 146, 172, 173, 179, 181, 182, 200, 206, 211, 212, 214, 215, 218, 226, 230, 237, 240, 241, 245, 259, 298, 305, 309, 311, 313, 314, 315, 319, 320, 322, 324], "infer": [1, 88, 94, 103, 146, 170, 172, 181, 205, 313, 315, 322], "run": [1, 3, 4, 5, 6, 7, 8, 10, 13, 14, 17, 21, 32, 70, 71, 72, 76, 84, 88, 94, 120, 121, 141, 146, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 179, 180, 183, 184, 185, 187, 190, 191, 193, 198, 204, 205, 207, 208, 210, 213, 216, 217, 218, 221, 243, 285, 303, 304, 305, 308, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324], "dispatch": [1, 18, 19, 20, 21, 198], "avail": [1, 3, 4, 6, 21, 62, 80, 89, 90, 119, 167, 189, 211, 215, 238, 303, 304, 309, 313, 314, 315, 316, 319, 320, 322, 325], "speed": [1, 2, 4, 8, 27, 310, 313, 314, 315, 316, 319, 320, 322], "up": [1, 2, 3, 8, 9, 13, 14, 16, 27, 40, 52, 138, 140, 240, 308, 309, 310, 313, 314, 315, 316, 319, 320, 322, 325], "avoid": [1, 32, 55, 56, 66, 72, 76, 88, 94, 100, 141, 146, 200, 214, 219, 226, 237, 240, 243, 292, 315, 319], "oom": [1, 55, 56, 66], "choic": [1, 2, 52, 183, 309, 310, 313, 314, 319], "size": [1, 2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 59, 62, 63, 64, 66, 69, 72, 74, 76, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 96, 104, 108, 111, 112, 113, 115, 123, 125, 127, 129, 133, 134, 135, 137, 139, 140, 141, 142, 145, 146, 152, 155, 157, 158, 159, 164, 165, 167, 170, 172, 173, 174, 176, 177, 178, 179, 180, 183, 186, 187, 188, 189, 190, 191, 194, 197, 198, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 214, 217, 219, 224, 225, 227, 228, 230, 236, 238, 240, 241, 242, 243, 245, 251, 252, 253, 254, 255, 256, 257, 272, 280, 286, 298, 309, 314, 315, 316, 318, 319, 320, 321, 324, 325], "pass": [1, 3, 4, 13, 14, 16, 18, 19, 20, 21, 22, 26, 32, 35, 38, 40, 41, 42, 45, 55, 56, 64, 66, 72, 73, 74, 76, 83, 85, 88, 89, 90, 94, 108, 111, 127, 140, 142, 146, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 179, 180, 181, 183, 184, 185, 187, 188, 190, 191, 193, 197, 198, 200, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 226, 237, 238, 240, 253, 254, 255, 256, 257, 286, 303, 304, 305, 309, 313, 314, 315, 316, 318, 319, 320, 322, 325], "ie": [1, 3, 18, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 44, 45, 46, 47, 58, 72, 76, 80, 87, 88, 94, 103, 115, 142, 146, 156, 170, 172, 205, 224, 226, 227, 230, 236, 237, 238, 240, 241, 242, 243, 245, 253, 254, 255, 256, 309, 310, 314, 315, 319, 322], "store": [1, 3, 8, 13, 14, 16, 17, 20, 26, 32, 34, 36, 37, 39, 41, 42, 43, 45, 54, 55, 56, 57, 58, 66, 72, 76, 88, 94, 146, 157, 173, 176, 224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 251, 298, 307, 311, 313, 315, 316, 319, 321, 322, 325], "while": [1, 3, 7, 8, 32, 72, 76, 88, 94, 129, 141, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 179, 180, 183, 184, 185, 187, 190, 191, 193, 198, 204, 205, 207, 208, 210, 213, 218, 221, 236, 237, 240, 243, 309, 313, 315, 316, 319, 320, 321, 322, 324], "wait": [1, 20, 21, 22, 316, 320], "also": [1, 2, 3, 8, 9, 11, 32, 34, 36, 39, 41, 54, 55, 56, 66, 72, 76, 88, 89, 90, 94, 100, 103, 110, 121, 127, 129, 132, 133, 135, 137, 141, 191, 216, 217, 218, 224, 225, 227, 228, 230, 236, 240, 243, 253, 260, 261, 309, 311, 313, 314, 315, 316, 318, 319, 320, 322, 325], "impact": [1, 108, 111, 314, 316, 319], "memori": [1, 2, 3, 8, 21, 27, 32, 34, 36, 39, 45, 55, 72, 73, 76, 80, 88, 94, 103, 107, 125, 137, 140, 141, 143, 145, 146, 214, 305, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "manag": [1, 8, 249, 250, 253, 254, 255, 256, 285], "kei": [1, 3, 7, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 64, 72, 76, 88, 94, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 124, 125, 126, 127, 129, 132, 133, 135, 136, 137, 138, 140, 141, 143, 144, 145, 146, 155, 156, 157, 166, 167, 170, 172, 175, 176, 189, 200, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 251, 252, 253, 254, 255, 256, 257, 272, 283, 284, 285, 287, 288, 289, 293, 298, 310, 311, 313, 315, 316, 318, 319, 320, 322, 324, 325], "control": [1, 3, 5, 8, 16, 70, 71, 83, 89, 90, 110, 155, 160, 161, 162, 163, 170, 172, 175, 176, 191, 198, 210, 214, 215, 216, 224, 226, 237, 240, 244, 253, 258, 266, 309, 311, 313, 314, 315, 319, 320, 322], "which": [1, 2, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 40, 41, 42, 44, 45, 46, 47, 52, 54, 62, 72, 76, 80, 85, 88, 91, 94, 103, 104, 108, 111, 116, 119, 120, 121, 125, 126, 135, 137, 138, 140, 141, 143, 148, 171, 172, 177, 178, 179, 196, 201, 202, 203, 205, 211, 214, 215, 217, 224, 225, 226, 228, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 248, 251, 253, 254, 255, 256, 280, 284, 298, 309, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 325], "storing_devic": [1, 13, 14, 16, 17, 18, 19, 20, 21, 313, 314, 319, 324], "dure": [1, 3, 13, 14, 16, 17, 18, 19, 20, 36, 40, 45, 52, 53, 54, 72, 76, 88, 89, 90, 94, 103, 106, 108, 111, 116, 123, 141, 170, 172, 285, 289, 310, 313, 314, 315, 316, 319, 320, 322, 325], "heurist": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 210, 313, 325], "usual": [1, 3, 4, 6, 7, 8, 52, 72, 76, 88, 94, 182, 240, 253, 254, 255, 256, 257, 271, 298, 308, 309, 311, 313, 314, 315, 316, 319, 322, 325], "same": [1, 3, 4, 11, 13, 14, 16, 18, 19, 20, 21, 28, 29, 32, 34, 36, 39, 43, 45, 52, 62, 72, 73, 76, 83, 88, 89, 90, 94, 103, 108, 110, 111, 116, 120, 121, 140, 141, 146, 158, 170, 172, 174, 177, 178, 179, 180, 205, 210, 218, 243, 313, 314, 315, 318, 319, 321, 322, 325], "storag": [1, 2, 8, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 57, 62, 64, 66, 72, 74, 76, 88, 94, 103, 108, 111, 129, 307, 311, 314, 315, 316, 319, 321], "default": [1, 2, 3, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 58, 66, 70, 72, 76, 87, 88, 89, 90, 91, 94, 101, 103, 104, 108, 110, 111, 112, 115, 119, 120, 121, 123, 125, 126, 129, 131, 133, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 148, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 189, 190, 191, 193, 194, 195, 196, 200, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 218, 219, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 298, 301, 305, 311, 313, 314, 315, 316, 321, 322, 324, 325], "behaviour": [1, 3, 21, 76, 104, 108, 111, 121, 126, 136, 155, 170, 171, 172, 196, 285, 309, 314, 316, 320, 322], "besid": 1, "those": [1, 3, 5, 7, 26, 28, 88, 94, 103, 108, 111, 121, 137, 138, 172, 211, 215, 216, 217, 291, 303, 304, 309, 313, 314, 319, 320, 325], "choos": [1, 83, 170, 172, 240, 309, 310, 313, 314, 315, 319, 322], "follow": [1, 2, 3, 6, 7, 8, 32, 34, 36, 37, 39, 40, 52, 53, 72, 76, 84, 87, 88, 89, 90, 92, 93, 94, 119, 125, 143, 158, 170, 172, 174, 207, 212, 213, 223, 224, 225, 226, 227, 230, 236, 237, 238, 240, 241, 242, 243, 245, 289, 298, 309, 310, 311, 313, 314, 315, 316, 318, 319, 320, 322, 324, 325], "max_frames_per_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 292, 313, 315, 324], "frame": [1, 2, 13, 14, 16, 17, 18, 19, 20, 21, 32, 103, 116, 204, 208, 210, 271, 272, 282, 285, 289, 292, 293, 313, 314, 315, 316, 319, 322, 324, 325], "call": [1, 3, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 49, 52, 53, 54, 55, 56, 57, 59, 62, 63, 66, 72, 76, 87, 88, 94, 103, 106, 107, 110, 115, 118, 119, 121, 123, 124, 125, 132, 137, 140, 141, 143, 145, 146, 148, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 176, 179, 180, 181, 183, 184, 185, 187, 190, 191, 193, 198, 204, 205, 207, 208, 210, 213, 214, 215, 217, 218, 221, 226, 237, 240, 243, 252, 253, 254, 255, 256, 271, 285, 311, 314, 315, 316, 319, 320, 322, 325], "frames_per_batch": [1, 13, 14, 16, 17, 18, 19, 20, 21, 103, 129, 292, 313, 314, 315, 316, 319, 322, 324], "each": [1, 3, 4, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 30, 31, 32, 40, 41, 52, 72, 73, 76, 88, 89, 90, 94, 125, 129, 132, 135, 136, 137, 138, 145, 146, 167, 170, 172, 179, 180, 184, 188, 189, 197, 204, 206, 207, 208, 213, 217, 259, 262, 263, 264, 265, 267, 268, 269, 270, 285, 286, 303, 304, 309, 313, 314, 315, 316, 319, 320, 321, 322, 324, 325], "init_random_fram": [1, 13, 14, 16, 17, 18, 19, 20, 21, 292, 313, 314], "random": [1, 3, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 40, 44, 46, 47, 59, 72, 76, 84, 88, 94, 110, 120, 121, 137, 148, 170, 172, 208, 211, 214, 215, 225, 241, 285, 293, 309, 313, 314, 315, 316, 320, 321, 322, 324, 325], "rand_step": [1, 3, 68, 70, 71, 72, 73, 75, 76, 77, 81, 84, 85, 88, 94, 118, 137, 146, 320, 324, 325], "reset_at_each_it": [1, 13, 14, 16, 17, 18, 19, 20, 21, 313], "split_traj": [1, 13, 14, 16, 17, 18, 19, 20, 21, 52, 313, 314, 315], "trajectori": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 23, 32, 41, 52, 58, 64, 72, 76, 88, 94, 126, 135, 140, 157, 172, 176, 210, 240, 253, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 280, 307, 310, 313, 314, 315, 316, 320, 322, 324, 325], "pad": [1, 3, 23, 37, 43, 52, 103, 158, 160, 161, 172, 173, 177, 178, 179, 286], "along": [1, 3, 23, 28, 29, 34, 36, 39, 40, 45, 52, 56, 66, 103, 104, 121, 123, 126, 132, 139, 172, 174, 177, 178, 182, 206, 211, 214, 215, 238, 309, 313, 314, 316, 319, 320, 322], "point": [1, 3, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 53, 58, 60, 64, 65, 67, 72, 76, 88, 94, 103, 107, 125, 136, 137, 139, 140, 141, 143, 145, 175, 214, 223, 231, 289, 308, 314, 315, 318, 319, 320, 322, 325], "boolean": [1, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 76, 126, 135, 156, 177, 178, 204, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 311, 316], "repres": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 41, 72, 76, 88, 94, 116, 126, 146, 167, 177, 178, 189, 206, 207, 212, 213, 215, 248, 253, 286, 313, 315, 316, 319], "valid": [1, 3, 23, 34, 36, 37, 45, 54, 97, 126, 141, 158, 174, 177, 178, 204, 210, 237, 253, 254, 255, 256, 286, 311, 325], "exploration_typ": [1, 13, 14, 16, 18, 19, 20, 21, 285, 307, 313, 314], "strategi": [1, 16, 83, 178, 186, 208, 309, 311, 313, 314, 319, 322], "reset_when_don": [1, 13, 14, 16, 18, 19, 20, 21], "These": [1, 2, 7, 32, 40, 72, 76, 88, 94, 125, 145, 309, 310, 313, 315, 319, 320, 322, 325], "tool": [1, 2, 3, 5, 316, 320, 322, 325], "backend": [1, 3, 7, 11, 18, 19, 21, 22, 98, 100, 311, 313, 315, 316, 320], "gloo": [1, 18, 19, 22], "nccl": [1, 18, 19], "mpi": [1, 18, 19], "distributeddatacollector": [1, 22, 307], "rpc": [1, 20, 22], "rpcdatacollector": [1, 22, 307], "launcher": [1, 18, 19, 20, 22], "rai": [1, 21], "submitit": [1, 18, 19, 20, 22], "torch": [1, 3, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 58, 62, 64, 66, 69, 72, 73, 76, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 101, 104, 107, 108, 109, 110, 111, 112, 113, 119, 121, 123, 125, 127, 129, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 152, 155, 156, 157, 158, 159, 164, 165, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 194, 195, 196, 197, 198, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 222, 224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 280, 287, 288, 298, 301, 309, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "multiprocess": [1, 3, 18, 19, 20, 73, 74, 146, 314, 315, 320, 325], "synchron": [1, 13, 19, 21, 85, 303, 304, 314, 315], "mode": [1, 6, 13, 14, 16, 18, 19, 20, 21, 32, 72, 76, 85, 88, 94, 108, 111, 136, 141, 146, 149, 153, 154, 165, 170, 171, 172, 186, 194, 195, 196, 211, 215, 238, 285, 313, 314, 316, 319, 324, 325], "find": [1, 4, 6, 7, 18, 19, 20, 35, 37, 43, 204, 210, 283, 287, 313, 314, 319], "dedic": [1, 3, 18, 19, 20, 21, 201, 202, 203, 309, 313, 318, 319], "folder": [1, 314], "sub": [1, 2, 3, 13, 14, 18, 19, 20, 21, 72, 76, 88, 94, 126, 216, 217, 280, 289, 309, 313, 314, 315, 318, 324, 325], "all": [1, 3, 4, 8, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 44, 46, 47, 49, 72, 73, 76, 84, 88, 89, 90, 94, 97, 103, 106, 107, 108, 109, 111, 114, 119, 120, 121, 125, 132, 137, 138, 140, 141, 143, 145, 146, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 179, 180, 183, 184, 185, 187, 190, 191, 193, 198, 204, 205, 207, 208, 210, 213, 214, 215, 217, 218, 221, 233, 238, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 284, 289, 292, 303, 304, 305, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 322, 324, 325], "variou": [1, 3, 13, 14, 16, 17, 170, 172, 224, 225, 226, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 246, 251, 303, 304, 313, 314, 315, 319, 325], "machin": [1, 7, 18, 19, 20, 32, 53, 80, 319], "One": [1, 2, 4, 8, 31, 33, 45, 103, 129, 143, 186, 204, 214, 218, 244, 248, 276, 313, 314, 322, 325], "wonder": 1, "why": [1, 3, 320, 325], "parallelenv": [1, 2, 3, 13, 14, 16, 17, 20, 72, 76, 85, 89, 90, 94, 302, 307, 313, 314, 315, 318, 324, 325], "instead": [1, 4, 7, 8, 11, 27, 32, 72, 76, 88, 94, 115, 137, 141, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 179, 180, 183, 184, 185, 187, 190, 191, 193, 198, 204, 205, 207, 208, 210, 213, 218, 221, 224, 225, 226, 228, 230, 231, 236, 237, 240, 241, 242, 243, 251, 253, 257, 261, 305, 309, 320, 322, 325], "In": [1, 3, 4, 5, 7, 8, 10, 11, 17, 21, 22, 32, 52, 72, 76, 88, 89, 90, 94, 107, 108, 109, 111, 125, 129, 133, 136, 137, 139, 140, 141, 143, 145, 171, 174, 179, 191, 195, 196, 214, 217, 223, 224, 225, 227, 228, 230, 236, 238, 240, 241, 242, 243, 245, 291, 303, 304, 305, 309, 310, 313, 314, 315, 316, 318, 319, 320, 321, 322, 325], "lower": [1, 2, 3, 17, 21, 25, 106, 146, 190, 191, 218, 315, 320], "io": [1, 85], "footprint": [1, 2, 322], "need": [1, 2, 3, 4, 7, 8, 10, 11, 18, 19, 20, 21, 32, 34, 36, 63, 72, 76, 80, 83, 88, 89, 90, 94, 103, 106, 115, 125, 127, 138, 141, 145, 146, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 179, 180, 181, 183, 184, 185, 187, 190, 191, 193, 198, 204, 205, 207, 208, 210, 212, 213, 214, 218, 221, 223, 230, 241, 242, 243, 245, 252, 257, 272, 289, 305, 309, 310, 313, 314, 315, 316, 319, 320, 322, 324, 325], "commun": [1, 2, 3, 308, 315, 325], "yet": [1, 238, 321], "spec": [1, 2, 3, 15, 21, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 48, 49, 50, 52, 72, 74, 76, 84, 88, 94, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 121, 123, 125, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 152, 156, 167, 189, 191, 200, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 217, 218, 224, 225, 227, 228, 230, 236, 240, 241, 242, 243, 245, 251, 298, 309, 313, 314, 315, 316, 318, 319, 324], "plai": [1, 3, 89, 90, 103, 314, 315, 322, 325], "role": [1, 3, 314, 325], "opposit": 1, "direct": [1, 32, 72, 76, 88, 94, 238, 314], "sinc": [1, 3, 4, 5, 7, 32, 35, 38, 41, 42, 72, 76, 88, 89, 90, 94, 155, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 179, 180, 183, 184, 185, 187, 190, 191, 193, 198, 204, 205, 206, 207, 208, 210, 212, 213, 218, 221, 313, 314, 315, 316, 320, 321, 322, 324, 325], "faster": [1, 4, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 85, 253, 254, 255, 256, 316, 319], "share": [1, 2, 3, 6, 8, 34, 36, 39, 55, 56, 57, 63, 66, 73, 88, 94, 146, 170, 172, 179, 180, 201, 202, 203, 224, 226, 227, 230, 236, 237, 240, 241, 242, 243, 245, 305, 309, 315, 316, 318, 319, 324, 325], "among": [1, 3, 89, 90, 319], "achiev": [1, 3, 4, 32, 72, 76, 80, 88, 94, 136, 156, 286, 311, 313, 314, 315, 316, 319, 320, 325], "via": [1, 4, 7, 8, 35, 38, 41, 42, 52, 53, 88, 125, 140, 145, 229, 238, 310, 311, 313, 314, 315, 316, 322, 325], "prohibit": [1, 3], "slow": [1, 3, 4], "compar": [1, 3, 285, 310, 313, 315, 319, 322, 325], "gpu": [1, 7, 8, 32, 55, 56, 66, 72, 76, 80, 88, 94, 313, 315, 316, 319, 325], "nativ": [1, 7, 9, 72, 76, 88, 94, 103, 316, 322], "driver": [1, 7], "practic": [1, 3, 4, 5, 8, 171, 195, 196, 223, 308, 313, 314, 315, 316, 319, 321, 325], "mean": [1, 2, 3, 4, 7, 13, 14, 16, 18, 19, 20, 21, 41, 58, 76, 121, 146, 157, 165, 168, 170, 172, 173, 176, 194, 204, 211, 215, 238, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 309, 310, 313, 314, 315, 319, 320, 322, 324, 325], "keyword": [1, 3, 13, 14, 16, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 46, 47, 54, 72, 76, 88, 94, 106, 107, 125, 133, 137, 140, 141, 143, 145, 170, 172, 177, 178, 200, 204, 205, 206, 208, 210, 211, 212, 214, 215, 218, 224, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 251, 253, 254, 255, 256, 257, 261, 302, 313, 314, 315, 319, 322, 325], "build": [1, 3, 7, 23, 26, 32, 72, 76, 88, 91, 94, 129, 146, 157, 170, 172, 176, 209, 211, 215, 289, 296, 297, 299, 300, 309, 311, 315, 316, 319, 320, 321, 324, 325], "given": [1, 2, 3, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 48, 49, 72, 76, 84, 88, 94, 107, 110, 121, 125, 137, 140, 141, 143, 145, 155, 157, 167, 168, 176, 189, 193, 200, 206, 207, 208, 210, 213, 214, 215, 216, 217, 219, 223, 227, 228, 252, 253, 254, 255, 256, 257, 259, 281, 285, 301, 309, 311, 313, 314, 315, 319, 320, 325], "mani": [1, 3, 4, 38, 72, 224, 226, 230, 237, 240, 241, 245, 309, 313, 314, 315, 319, 320, 322, 325], "eg": [1, 3, 11, 55, 56, 57, 63, 66, 72, 76, 80, 88, 94, 110, 135, 141, 179, 205], "gymnasium": [1, 3, 5, 11, 72, 76, 88, 94, 98, 100, 113, 133, 135, 314, 315, 320, 324], "other": [1, 2, 3, 4, 7, 8, 21, 22, 32, 35, 38, 41, 42, 45, 52, 55, 56, 57, 62, 63, 66, 72, 76, 84, 88, 94, 106, 109, 110, 133, 139, 143, 146, 170, 172, 182, 183, 205, 207, 208, 213, 215, 224, 225, 226, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 251, 253, 286, 298, 303, 304, 309, 311, 313, 314, 315, 316, 319, 320, 321, 322, 324, 325], "warn": [1, 3, 204, 208, 210, 314, 325], "quickli": [1, 3, 314, 319, 325], "becom": [1, 3, 4, 21, 319, 325], "quit": [1, 3, 309, 313, 314, 315, 319, 325], "annoi": [1, 3], "By": [1, 2, 3, 33, 72, 76, 88, 89, 90, 94, 198, 215, 238, 285, 305, 313, 321, 322, 325], "filter": [1, 3, 4, 45, 224, 225, 227, 230, 236, 240, 241, 243], "out": [1, 3, 4, 5, 9, 21, 32, 34, 36, 39, 45, 52, 72, 76, 88, 89, 90, 94, 137, 148, 177, 178, 181, 182, 200, 205, 206, 207, 210, 211, 212, 213, 214, 215, 249, 250, 311, 313, 314, 315, 316, 319, 320, 322, 324, 325], "If": [1, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 56, 62, 64, 66, 72, 73, 76, 80, 84, 88, 89, 90, 94, 98, 103, 104, 105, 106, 108, 109, 110, 111, 113, 115, 119, 120, 121, 125, 126, 129, 132, 133, 136, 137, 138, 140, 141, 143, 145, 146, 155, 156, 158, 170, 172, 173, 174, 177, 178, 179, 180, 198, 200, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 236, 237, 238, 240, 241, 242, 243, 245, 251, 252, 253, 254, 255, 256, 257, 267, 268, 269, 270, 276, 284, 286, 289, 291, 293, 298, 301, 305, 308, 313, 314, 315, 316, 318, 319, 320, 322, 324, 325], "still": [1, 3, 9, 204, 237, 238, 313, 314, 316, 318, 320, 322, 325], "wish": [1, 3, 100, 322], "see": [1, 3, 6, 7, 8, 9, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 53, 54, 72, 76, 79, 85, 88, 89, 90, 94, 107, 125, 137, 139, 140, 141, 143, 145, 147, 158, 171, 174, 180, 181, 188, 196, 197, 201, 203, 214, 215, 286, 313, 314, 315, 316, 319, 320, 322, 325], "displai": [1, 3, 7, 289, 311, 313, 314, 319, 320], "filter_warnings_subprocess": [1, 3], "fals": [1, 3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 62, 66, 69, 70, 72, 73, 76, 82, 83, 84, 87, 88, 89, 90, 92, 93, 94, 95, 96, 101, 103, 104, 107, 108, 111, 112, 113, 115, 118, 119, 120, 121, 123, 125, 126, 127, 129, 131, 133, 135, 137, 139, 140, 141, 142, 143, 145, 146, 148, 155, 156, 157, 158, 160, 167, 170, 171, 172, 174, 176, 177, 178, 179, 180, 188, 189, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 217, 218, 219, 224, 225, 226, 227, 228, 230, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 248, 251, 253, 254, 255, 256, 262, 263, 264, 265, 267, 268, 269, 270, 282, 283, 285, 286, 287, 289, 298, 305, 309, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "central": [2, 179, 313, 314, 319, 322], "part": [2, 4, 8, 32, 40, 72, 76, 88, 94, 121, 129, 132, 170, 172, 219, 280, 305, 313, 315, 316, 320, 325], "algorithm": [2, 3, 8, 9, 13, 14, 84, 116, 224, 240, 241, 242, 243, 280, 294, 307, 310, 311, 313, 314, 315, 316, 319, 321, 322, 324], "implement": [2, 3, 9, 11, 16, 32, 63, 72, 76, 85, 88, 94, 107, 108, 109, 113, 119, 127, 133, 135, 140, 146, 171, 194, 195, 196, 224, 225, 229, 236, 238, 239, 240, 243, 298, 309, 311, 313, 314, 315, 316, 320, 324], "wide": [2, 3, 5], "we": [2, 3, 5, 7, 9, 11, 26, 32, 34, 36, 39, 40, 42, 52, 62, 72, 73, 76, 80, 88, 94, 103, 119, 125, 127, 143, 146, 157, 172, 173, 179, 180, 224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 251, 308, 309, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "give": [2, 3, 7, 41, 72, 76, 84, 88, 94, 103, 308, 310, 313, 314, 319, 320, 321, 324], "abil": [2, 238, 320, 322], "veri": [2, 3, 314, 320, 322, 324, 325], "influenti": 2, "sampl": [2, 4, 8, 9, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 38, 40, 41, 42, 44, 46, 47, 52, 53, 54, 55, 56, 58, 59, 62, 64, 66, 72, 76, 84, 87, 88, 94, 103, 126, 129, 149, 150, 153, 154, 157, 165, 171, 176, 177, 178, 186, 187, 190, 195, 196, 200, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 224, 225, 226, 227, 228, 237, 239, 240, 245, 280, 286, 289, 292, 309, 313, 314, 315, 316, 319, 321, 324, 325], "latenc": 2, "especi": [2, 3, 7, 8, 104], "larger": [2, 4, 236], "volum": 2, "lazymemmapstorag": [2, 103, 307, 313, 314, 316, 321, 322], "advis": [2, 325], "due": [2, 3, 5, 321, 322, 325], "serialis": 2, "memmaptensor": [2, 34, 36, 45, 55, 321], "well": [2, 3, 8, 17, 21, 32, 35, 37, 38, 41, 42, 63, 72, 76, 88, 94, 190, 191, 238, 257, 313, 314, 316, 321, 322, 324, 325], "specifi": [2, 11, 13, 14, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 72, 76, 88, 89, 90, 94, 108, 109, 111, 132, 134, 136, 142, 157, 214, 215, 238, 244, 309, 313, 315, 316], "file": [2, 6, 7, 8, 271, 311, 314, 322, 323], "locat": [2, 7, 45, 72, 76, 88, 94, 112, 121, 131, 171, 183, 195, 196, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 313, 314, 315, 319, 322], "improv": [2, 4, 116, 224, 310, 319, 322], "failur": [2, 4], "recoveri": 2, "liststorag": [2, 35, 38, 41, 42, 307, 322], "were": [2, 7, 88, 94, 315, 322], "found": [2, 3, 6, 7, 10, 21, 26, 32, 34, 36, 39, 45, 72, 76, 80, 88, 94, 101, 103, 129, 132, 138, 146, 156, 208, 211, 215, 237, 238, 240, 313, 314, 316], "rough": 2, "benchmark": [2, 3, 9], "http": [2, 5, 6, 7, 10, 18, 19, 20, 35, 43, 53, 58, 80, 85, 89, 90, 91, 103, 125, 143, 159, 160, 161, 162, 163, 164, 167, 168, 169, 176, 177, 178, 182, 184, 185, 187, 188, 190, 191, 197, 207, 210, 224, 225, 229, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 253, 258, 266, 298, 321, 324], "github": [2, 5, 6, 7, 10, 18, 19, 20, 89, 90, 91, 143, 321, 324], "com": [2, 5, 6, 7, 10, 18, 19, 20, 80, 89, 90, 91, 321, 324], "tree": [2, 72, 76, 88, 94], "type": [2, 3, 14, 18, 19, 20, 21, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 54, 72, 76, 83, 84, 88, 89, 90, 94, 107, 108, 109, 112, 113, 119, 125, 127, 133, 135, 137, 140, 141, 143, 145, 146, 150, 154, 158, 174, 179, 180, 182, 188, 197, 204, 206, 211, 214, 215, 224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 247, 251, 259, 298, 303, 309, 313, 314, 315, 319, 320, 322, 325], "1x": 2, "lazytensorstorag": [2, 41, 42, 64, 129, 307, 315, 319, 322], "83x": 2, "3": [2, 3, 6, 7, 10, 11, 13, 14, 15, 16, 17, 21, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 72, 76, 79, 83, 85, 87, 88, 89, 90, 92, 93, 94, 101, 103, 107, 110, 112, 113, 119, 121, 123, 125, 127, 129, 132, 133, 135, 136, 137, 139, 140, 141, 143, 145, 152, 157, 158, 160, 161, 164, 167, 169, 170, 172, 173, 174, 176, 179, 180, 183, 186, 188, 198, 200, 201, 202, 203, 206, 207, 211, 213, 214, 217, 218, 219, 224, 225, 227, 228, 230, 231, 232, 233, 236, 238, 240, 241, 242, 243, 245, 251, 253, 254, 255, 256, 259, 262, 263, 264, 265, 267, 268, 269, 270, 272, 288, 309, 311, 313, 314, 315, 316, 319, 320, 321, 322, 323, 324, 325], "44x": 2, "too": [2, 7, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 40, 44, 46, 47, 88, 94, 120, 137, 171, 195, 196, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 251, 253, 254, 255, 256, 314, 315, 320, 322, 325], "difficult": [2, 4], "element": [2, 13, 14, 16, 18, 19, 20, 21, 30, 31, 33, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 64, 66, 87, 103, 126, 136, 158, 200, 204, 206, 214, 215, 219, 280, 313, 315, 322, 325], "pai": [2, 8, 313, 316], "attent": [2, 8, 313, 316, 325], "alwai": [2, 3, 20, 26, 28, 32, 54, 72, 76, 88, 94, 119, 120, 231, 238, 309, 310, 314, 315, 316, 319, 320, 322], "lead": [2, 3, 4, 8, 10, 11, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 62, 137, 171, 188, 195, 196, 313, 316, 319, 320, 322, 324], "dimens": [2, 3, 16, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 55, 56, 64, 66, 72, 76, 88, 94, 103, 104, 115, 121, 123, 126, 132, 134, 139, 142, 146, 158, 159, 164, 170, 172, 174, 177, 178, 179, 181, 182, 187, 188, 192, 193, 194, 195, 198, 206, 224, 225, 226, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 305, 309, 313, 314, 315, 316, 319, 320, 322], "word": [2, 3, 40, 52, 238, 313, 320, 325], "creat": [2, 3, 4, 5, 6, 7, 10, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 45, 54, 72, 73, 76, 80, 85, 88, 89, 94, 103, 125, 140, 141, 143, 146, 152, 155, 158, 160, 161, 162, 163, 164, 169, 170, 172, 174, 175, 179, 180, 205, 215, 228, 231, 241, 243, 251, 272, 286, 293, 294, 295, 301, 303, 304, 309, 313, 314, 315, 316, 319, 320, 321, 322, 324, 325], "1m": [2, 292, 313, 315, 316, 321], "multidimension": [2, 41, 58, 322], "doe": [2, 3, 18, 35, 41, 45, 52, 58, 63, 164, 170, 172, 181, 198, 205, 216, 217, 224, 226, 231, 237, 240, 252, 289, 309, 311, 313, 314, 315, 316, 320, 322, 325], "desir": [2, 3, 32, 72, 76, 88, 94, 107, 121, 123, 125, 126, 137, 140, 141, 143, 145, 153, 154, 158, 174, 180, 200, 206, 207, 211, 212, 213, 214, 215, 309, 313, 319, 320], "diversifi": 2, "make": [2, 3, 4, 7, 32, 34, 36, 39, 40, 52, 53, 63, 72, 76, 77, 80, 82, 85, 88, 94, 113, 121, 125, 126, 129, 135, 143, 148, 179, 180, 181, 206, 215, 238, 240, 253, 254, 255, 256, 286, 295, 305, 309, 310, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "do": [2, 3, 4, 7, 76, 126, 146, 155, 180, 181, 202, 253, 311, 313, 314, 315, 316, 318, 319, 320, 322, 324, 325], "custom": [2, 3, 5, 32, 72, 76, 88, 94, 143, 179, 180, 218, 231, 240, 246, 305, 309, 313, 314, 315, 316, 319], "name": [2, 3, 6, 7, 11, 16, 32, 34, 36, 39, 45, 52, 53, 54, 70, 72, 76, 83, 85, 88, 89, 90, 91, 94, 97, 110, 113, 127, 132, 133, 135, 141, 143, 156, 170, 172, 206, 212, 224, 225, 226, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 251, 257, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 298, 311, 313, 314, 315, 316, 319, 320, 325], "randomcroptensordict": [2, 313], "here": [2, 3, 4, 7, 8, 9, 10, 72, 76, 80, 88, 89, 90, 94, 103, 309, 310, 313, 314, 315, 316, 319, 320, 322, 324, 325], "how": [2, 3, 18, 19, 20, 32, 35, 41, 58, 72, 76, 88, 89, 90, 94, 224, 226, 235, 237, 240, 289, 308, 309, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "wrapper": [2, 3, 11, 15, 17, 34, 36, 39, 40, 41, 42, 68, 69, 70, 71, 75, 77, 78, 80, 81, 82, 84, 86, 89, 90, 91, 92, 93, 95, 96, 98, 183, 198, 204, 205, 210, 215, 220, 253, 277, 278, 279, 305, 307, 315, 316, 319, 321, 325], "around": [2, 5, 7, 15, 17, 41, 42, 84, 215, 253, 313, 314, 319, 325], "offlin": [2, 8, 13, 14, 16, 17, 18, 19, 20, 21, 103, 148, 225, 236, 311, 321, 322, 324], "present": [2, 3, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 58, 62, 72, 76, 88, 94, 113, 129, 133, 155, 156, 159, 160, 161, 162, 163, 169, 182, 187, 210, 214, 215, 216, 217, 224, 225, 226, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 251, 253, 254, 255, 256, 257, 305, 311, 313, 318, 319, 322, 324], "replaybuff": [2, 41, 42, 67, 103, 126, 129, 228, 231, 251, 299, 301, 307, 315, 319, 321, 322, 324], "sampler": [2, 35, 38, 41, 42, 52, 53, 55, 56, 57, 58, 59, 62, 63, 64, 66, 126, 228, 231, 251, 307, 313, 315, 319, 322], "map": [2, 3, 8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 52, 53, 54, 55, 72, 76, 83, 88, 89, 90, 92, 93, 94, 97, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 118, 119, 121, 123, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 144, 146, 152, 167, 183, 200, 201, 202, 203, 206, 211, 212, 214, 215, 217, 218, 219, 220, 243, 251, 285, 307, 309, 310, 313, 314, 315, 316, 321], "tensor": [2, 3, 8, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 58, 60, 64, 65, 66, 67, 69, 72, 73, 76, 82, 83, 84, 87, 88, 89, 90, 92, 93, 94, 95, 96, 101, 103, 104, 107, 108, 110, 111, 112, 113, 115, 118, 121, 123, 125, 126, 127, 129, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 224, 225, 227, 228, 230, 233, 234, 236, 238, 240, 241, 242, 243, 245, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 298, 309, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "allow": [2, 3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 29, 32, 33, 72, 76, 88, 94, 127, 155, 174, 224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 246, 248, 251, 309, 311, 313, 315, 316, 319, 320, 322, 325], "promptli": 2, "virtual": [2, 3], "instal": [2, 3, 5, 10, 18, 19, 20, 52, 53, 89, 90, 92, 93, 289, 308, 315, 316, 319, 325], "respons": [2, 3, 8, 289, 325], "d4rl": [2, 52], "clone": [2, 4, 8, 26, 28, 119, 201, 202, 203, 214, 236, 298, 307, 313, 320, 324], "repositori": [2, 7, 53], "latest": [2, 3, 10, 85, 89, 90, 286, 315, 319, 320, 324], "wheel": [2, 315], "publish": 2, "pypi": [2, 324], "openml": [2, 53, 87], "scikit": [2, 53], "panda": [2, 53], "requir": [2, 3, 4, 7, 8, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44, 45, 46, 47, 52, 72, 76, 80, 85, 88, 91, 94, 107, 125, 137, 140, 141, 143, 145, 174, 198, 214, 216, 217, 224, 225, 226, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 251, 309, 311, 313, 314, 315, 316, 319, 320, 322, 325], "parent": [2, 3, 21, 26, 28, 44, 72, 103, 104, 107, 109, 112, 115, 116, 121, 125, 132, 135, 136, 137, 138, 140, 142, 143, 201, 238, 240, 257, 313, 320, 324, 325], "subclass": [2, 3, 72, 76, 88, 94, 140, 148, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 179, 180, 183, 184, 185, 187, 190, 191, 193, 198, 204, 205, 207, 208, 210, 213, 214, 215, 216, 218, 221, 238, 240, 314, 316, 320, 322], "basic": [2, 84, 309, 315, 325], "properti": [2, 3, 32, 34, 36, 39, 72, 76, 84, 88, 94, 140, 141, 165, 171, 181, 186, 194, 195, 196, 238, 243, 320, 322], "observ": [2, 3, 8, 13, 14, 16, 17, 21, 32, 44, 52, 69, 70, 71, 72, 73, 76, 82, 83, 84, 87, 88, 89, 90, 92, 93, 94, 95, 96, 103, 104, 105, 106, 107, 108, 109, 112, 113, 115, 117, 118, 119, 121, 122, 123, 127, 128, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 155, 159, 160, 161, 162, 163, 164, 167, 170, 172, 173, 179, 184, 185, 187, 189, 190, 200, 201, 202, 203, 205, 206, 208, 210, 211, 212, 219, 220, 224, 225, 226, 227, 228, 230, 233, 236, 237, 240, 241, 242, 243, 245, 251, 253, 254, 255, 256, 257, 272, 298, 301, 309, 311, 314, 315, 316, 318, 319, 320, 322, 324, 325], "shape": [2, 3, 13, 14, 16, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 54, 55, 56, 66, 72, 76, 83, 87, 88, 89, 90, 92, 93, 94, 95, 96, 104, 108, 111, 112, 113, 119, 121, 123, 127, 129, 133, 135, 137, 139, 146, 147, 148, 152, 155, 157, 159, 164, 165, 166, 170, 172, 174, 176, 177, 178, 179, 180, 181, 183, 186, 187, 188, 189, 194, 197, 200, 201, 202, 203, 205, 206, 207, 211, 212, 213, 214, 217, 218, 219, 224, 225, 227, 228, 230, 236, 240, 241, 242, 243, 245, 248, 251, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 280, 286, 289, 301, 309, 313, 314, 315, 316, 318, 319, 321, 322, 324, 325], "dtype": [2, 3, 13, 14, 16, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 54, 55, 56, 58, 66, 69, 72, 76, 82, 83, 84, 87, 88, 89, 90, 92, 93, 94, 95, 96, 101, 107, 108, 109, 110, 111, 112, 113, 119, 121, 123, 125, 127, 129, 133, 135, 137, 139, 140, 141, 143, 145, 148, 152, 155, 156, 157, 167, 170, 172, 176, 181, 182, 188, 189, 197, 200, 201, 202, 203, 205, 206, 207, 210, 211, 212, 213, 214, 217, 219, 224, 225, 227, 228, 230, 236, 240, 241, 242, 243, 245, 251, 253, 254, 255, 256, 259, 298, 309, 315, 316, 318, 319, 320, 321, 322, 324, 325], "import": [2, 3, 4, 6, 10, 11, 13, 14, 15, 16, 17, 21, 22, 35, 37, 38, 40, 41, 42, 43, 45, 52, 54, 55, 56, 58, 64, 66, 72, 73, 76, 84, 88, 89, 90, 92, 93, 94, 97, 98, 100, 101, 103, 106, 112, 113, 118, 119, 121, 123, 125, 127, 129, 132, 133, 135, 136, 137, 138, 140, 145, 146, 152, 155, 156, 157, 167, 170, 172, 174, 176, 179, 180, 183, 188, 189, 197, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 214, 217, 218, 219, 224, 225, 226, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 251, 253, 254, 255, 256, 282, 285, 298, 301, 309, 310, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "match": [2, 3, 6, 8, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 44, 46, 47, 52, 72, 73, 76, 88, 94, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 117, 118, 119, 121, 123, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 158, 165, 170, 172, 174, 179, 180, 194, 200, 205, 206, 211, 212, 214, 215, 218, 219, 225, 230, 237, 239, 241, 243, 286, 291, 309, 313, 315, 318, 319, 320, 322, 324, 325], "input": [2, 3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 43, 44, 46, 47, 72, 76, 84, 87, 88, 89, 90, 91, 94, 101, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 123, 124, 125, 126, 127, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 155, 156, 158, 160, 161, 162, 163, 166, 167, 170, 172, 173, 174, 179, 180, 181, 182, 189, 190, 191, 192, 193, 198, 200, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 283, 287, 292, 301, 309, 310, 311, 313, 314, 315, 316, 319, 320, 324, 325], "output": [2, 3, 4, 13, 14, 16, 17, 32, 35, 38, 41, 42, 52, 53, 72, 76, 84, 87, 88, 89, 90, 91, 94, 103, 106, 107, 108, 109, 111, 113, 119, 121, 125, 127, 132, 133, 135, 138, 140, 143, 145, 148, 156, 158, 159, 160, 161, 164, 166, 167, 168, 170, 172, 173, 174, 179, 180, 183, 189, 198, 200, 201, 204, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 224, 225, 226, 227, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 251, 253, 254, 255, 256, 257, 272, 280, 309, 310, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "send": [2, 3, 8, 324], "receiv": [2, 3, 32, 40, 72, 76, 88, 94, 140, 174, 259, 310, 313, 315, 318, 320], "spawn": [2, 3, 4, 18, 22, 80, 85, 319], "check_env_spec": [2, 3, 307, 315, 319, 320], "method": [2, 3, 4, 11, 13, 14, 15, 16, 17, 21, 32, 35, 37, 38, 40, 41, 42, 45, 52, 53, 54, 55, 56, 57, 58, 63, 66, 72, 76, 88, 94, 103, 107, 108, 109, 112, 113, 115, 119, 121, 125, 127, 128, 129, 133, 135, 137, 140, 141, 143, 145, 157, 173, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 251, 257, 271, 302, 310, 311, 312, 314, 315, 316, 320, 322, 325], "saniti": [2, 3, 7, 148, 315], "utmost": 2, "techniqu": [2, 8, 314, 322], "commonli": [2, 325], "emploi": [2, 182], "realm": 2, "languag": [2, 40], "scarc": 2, "address": [2, 322], "subdomain": 2, "within": [2, 13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 46, 47, 72, 76, 88, 94, 103, 108, 111, 112, 135, 146, 156, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 179, 180, 183, 184, 185, 187, 190, 191, 193, 198, 204, 205, 207, 208, 210, 213, 218, 221, 228, 231, 251, 309, 320, 324], "offer": [2, 3, 7, 309, 314, 320, 325], "facilit": [2, 3, 7, 124, 125, 143, 145, 201, 202, 203, 309, 313, 316, 320], "interact": [2, 4, 5, 7, 8, 13, 14, 16, 18, 19, 20, 21, 211, 215, 313, 315, 319, 320, 325], "extern": [2, 3, 108, 111, 325], "consist": [2, 3, 32, 35, 38, 41, 42, 72, 76, 88, 94, 119, 158, 174, 313, 314, 315, 320, 321, 325], "token": [2, 36, 37, 40, 43, 45, 54], "format": [2, 17, 31, 32, 33, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214, 313, 314, 325], "manner": [2, 76, 125, 143, 309, 313, 314, 315, 318, 320, 322], "handl": [3, 21, 32, 72, 76, 88, 94, 146, 172, 174, 289, 303, 304, 313, 314, 315, 319, 322], "differ": [3, 4, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 40, 44, 45, 46, 47, 52, 72, 76, 83, 88, 89, 90, 94, 103, 110, 121, 127, 141, 142, 167, 170, 172, 174, 176, 179, 180, 189, 236, 240, 248, 253, 254, 255, 259, 260, 261, 285, 289, 291, 303, 304, 309, 310, 311, 313, 314, 315, 318, 319, 320, 321, 322, 325], "dm": [3, 313, 325], "base": [3, 4, 8, 9, 12, 13, 14, 16, 17, 18, 19, 20, 21, 35, 38, 41, 42, 45, 61, 64, 65, 67, 80, 84, 85, 86, 129, 137, 143, 144, 179, 201, 209, 224, 225, 227, 228, 230, 232, 236, 240, 241, 242, 243, 245, 289, 298, 309, 310, 311, 313, 314, 316, 319, 320, 322, 325], "goal": [3, 4, 136, 313, 314, 315, 316, 319, 320], "abl": [3, 83, 89, 90, 313, 315, 316, 318, 319, 320, 322, 324], "experi": [3, 35, 38, 41, 42, 52, 53, 58, 148, 274, 275, 276, 277, 278, 279, 308, 314, 315, 319, 322], "even": [3, 4, 8, 14, 18, 20, 21, 55, 56, 57, 63, 66, 72, 73, 76, 80, 88, 94, 156, 313, 315, 319, 320, 325], "simul": [3, 5, 7, 8, 91, 99, 157, 176, 309, 313, 315, 319], "some": [3, 4, 7, 8, 9, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 38, 44, 45, 46, 47, 52, 55, 56, 64, 66, 72, 76, 88, 89, 90, 94, 125, 141, 143, 148, 160, 170, 172, 193, 215, 216, 217, 280, 292, 309, 311, 313, 314, 315, 316, 319, 320, 322, 324, 325], "box": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "under": [3, 4, 21, 32, 40, 52, 72, 76, 88, 94, 200, 206, 207, 211, 212, 213, 214, 215, 238, 253, 254, 255, 256, 257, 310, 313, 314, 320, 325], "lib": [3, 5, 6, 7, 9, 10, 13, 14, 16, 17, 21, 22, 72, 73, 76, 88, 89, 90, 92, 93, 94, 103, 106, 112, 118, 119, 121, 123, 127, 129, 132, 137, 140, 146, 298, 301, 313, 314, 315, 316, 318, 319, 321, 322, 324, 325], "hope": 3, "imit": 3, "nn": [3, 13, 14, 16, 17, 21, 32, 40, 72, 76, 84, 88, 94, 107, 110, 112, 119, 125, 137, 140, 141, 143, 145, 157, 158, 160, 161, 162, 163, 166, 167, 168, 169, 170, 172, 174, 176, 178, 179, 180, 183, 188, 189, 197, 200, 201, 202, 203, 205, 206, 208, 210, 211, 212, 214, 215, 216, 217, 219, 224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 251, 253, 254, 255, 256, 298, 301, 309, 310, 313, 314, 315, 316, 318, 319, 320, 321, 324], "typic": [3, 4, 8, 32, 72, 76, 88, 94, 112, 136, 225, 238, 240, 243, 309, 310, 311, 315, 319, 320], "organis": [3, 314, 320], "arbitrari": [3, 33, 88, 94, 309, 313, 314, 320], "nest": [3, 26, 28, 32, 34, 36, 39, 48, 55, 56, 66, 72, 76, 88, 94, 103, 135, 138, 156, 253, 254, 255, 256, 257, 311, 314, 315, 319, 320, 322, 324], "structur": [3, 7, 35, 38, 40, 41, 42, 45, 64, 72, 76, 88, 94, 108, 111, 156, 179, 210, 253, 254, 255, 256, 257, 310, 313, 315, 316, 319, 320, 321, 322], "attribut": [3, 4, 32, 45, 72, 76, 88, 94, 112, 125, 143, 170, 172, 215, 224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 251, 313, 316, 320], "batch_siz": [3, 8, 13, 14, 15, 16, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 52, 53, 54, 55, 56, 59, 64, 66, 69, 72, 74, 76, 79, 82, 83, 84, 87, 88, 89, 90, 92, 93, 94, 95, 96, 103, 108, 111, 112, 113, 123, 127, 129, 133, 135, 137, 140, 155, 156, 157, 164, 167, 170, 172, 176, 188, 189, 197, 198, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 214, 217, 218, 219, 224, 225, 227, 228, 230, 236, 240, 241, 242, 243, 245, 251, 280, 286, 298, 309, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "togeth": [3, 13, 14, 16, 17, 18, 19, 20, 21, 28, 29, 40, 72, 76, 83, 88, 89, 90, 94, 103, 126, 170, 172, 197, 201, 202, 203, 220, 309, 314, 315, 316], "expect": [3, 4, 7, 26, 32, 38, 44, 45, 62, 72, 76, 84, 87, 88, 91, 94, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 115, 117, 118, 119, 121, 123, 125, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 144, 148, 170, 172, 179, 180, 207, 210, 214, 217, 224, 225, 226, 227, 228, 230, 236, 237, 238, 240, 241, 242, 243, 245, 251, 293, 308, 309, 310, 311, 313, 315, 316, 319, 320, 322, 325], "live": [3, 12, 13, 14, 16, 17, 19, 20, 32, 35, 38, 41, 42, 52, 53, 72, 76, 84, 88, 94, 112], "actual": [3, 4, 7, 17, 72, 76, 88, 94, 292, 310, 313, 315, 319, 320], "just": [3, 4, 11, 72, 76, 83, 88, 89, 90, 94, 106, 156, 180, 280, 309, 311, 313, 314, 315, 316, 319, 320, 322, 324, 325], "retriev": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 72, 76, 88, 94, 104, 109, 112, 121, 155, 157, 176, 211, 215, 218, 224, 225, 226, 228, 237, 240, 241, 243, 245, 251, 253, 254, 255, 256, 298, 305, 311, 314, 315, 320, 325], "care": [3, 8, 72, 76, 88, 94, 140, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 179, 180, 183, 184, 185, 187, 190, 191, 193, 198, 204, 205, 207, 208, 210, 213, 218, 221, 313, 315, 319, 320, 322], "below": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 54, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 158, 171, 174, 180, 196, 214, 286, 313, 314, 315, 316, 320], "parametr": [3, 182, 215, 225, 236, 243, 313, 315], "hardwar": 3, "observation_spec": [3, 72, 76, 84, 88, 94, 101, 103, 104, 105, 106, 107, 108, 109, 111, 112, 115, 117, 118, 119, 121, 123, 125, 128, 132, 135, 136, 137, 138, 139, 140, 142, 143, 157, 170, 172, 176, 293, 301, 313, 315, 318, 319, 320, 325], "compositespec": [3, 28, 49, 72, 74, 76, 84, 88, 94, 101, 108, 109, 110, 111, 113, 119, 127, 133, 135, 137, 140, 152, 156, 157, 176, 200, 204, 211, 217, 218, 307, 313, 315, 316, 319, 320, 325], "pair": [3, 32, 34, 36, 39, 52, 72, 76, 88, 94, 129, 137, 170, 201, 211, 215, 238, 253, 254, 255, 256, 257, 309, 310, 313, 314, 315, 318, 320, 325], "state_spec": [3, 72, 76, 84, 88, 94, 101, 315, 320, 325], "empti": [3, 26, 28, 35, 38, 41, 42, 52, 53, 72, 76, 87, 88, 94, 125, 138, 141, 143, 145, 276, 313, 320], "action_spec": [3, 13, 14, 15, 16, 18, 19, 20, 69, 72, 76, 82, 84, 88, 89, 90, 94, 101, 103, 108, 111, 119, 129, 167, 189, 191, 200, 206, 211, 212, 225, 228, 241, 243, 245, 301, 309, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "reward_spec": [3, 72, 76, 84, 88, 94, 101, 102, 106, 107, 108, 109, 111, 130, 131, 132, 140, 142, 157, 176, 315, 319, 320, 325], "reward": [3, 13, 14, 16, 32, 34, 39, 40, 44, 45, 54, 64, 69, 72, 76, 82, 84, 87, 88, 92, 93, 94, 95, 96, 101, 102, 106, 107, 108, 109, 111, 112, 113, 119, 123, 127, 129, 130, 131, 132, 133, 135, 136, 140, 141, 142, 144, 145, 146, 152, 155, 157, 170, 176, 205, 220, 224, 225, 227, 228, 230, 233, 236, 238, 240, 241, 242, 243, 245, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 282, 283, 285, 287, 305, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "done_spec": [3, 72, 76, 88, 94, 108, 109, 111, 112, 140, 156, 315, 319, 320, 325], "flag": [3, 8, 35, 38, 41, 42, 52, 53, 210, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 309, 319, 320, 321], "section": [3, 4, 314, 319], "termin": [3, 7, 32, 40, 52, 72, 76, 88, 89, 90, 92, 93, 94, 95, 96, 112, 156, 170, 172, 216, 224, 225, 227, 228, 230, 236, 240, 241, 242, 243, 245, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "input_spec": [3, 72, 76, 84, 88, 94, 107, 108, 109, 110, 121, 123, 127, 132, 133, 135, 136, 137, 140, 141, 142, 144, 157, 176, 320], "full_action_spec": [3, 72, 76, 88, 94, 319], "full_state_spec": [3, 72, 76, 88, 94], "lock": [3, 26, 28, 72, 76, 88, 94, 137, 146, 320], "modifi": [3, 7, 8, 26, 28, 32, 45, 72, 76, 88, 94, 107, 115, 119, 125, 137, 140, 141, 143, 145, 205, 210, 214, 292, 298, 313, 314, 315, 319, 320], "directli": [3, 4, 8, 72, 76, 84, 88, 94, 129, 238, 305, 309, 315, 319, 320, 322], "output_spec": [3, 72, 76, 88, 94, 107, 108, 109, 113, 119, 127, 133, 135, 140, 141, 320], "full_observation_spec": [3, 72, 76, 88, 94], "full_reward_spec": [3, 72, 76, 88, 94, 319], "full_done_spec": [3, 72, 76, 88, 94, 156, 319], "importantli": [3, 211, 215], "4": [3, 7, 24, 26, 27, 28, 33, 34, 35, 36, 38, 39, 40, 70, 71, 72, 75, 76, 81, 83, 84, 88, 92, 93, 94, 101, 103, 112, 129, 135, 136, 146, 157, 158, 159, 160, 161, 164, 167, 168, 169, 173, 174, 176, 179, 180, 183, 184, 185, 186, 187, 188, 189, 197, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 214, 217, 219, 224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 251, 271, 309, 313, 314, 315, 316, 319, 320, 321, 322, 323, 324, 325], "action_s": 3, "help": [3, 4, 32, 72, 76, 88, 94, 112, 308, 310, 313, 314, 315, 316, 319], "prealloc": [3, 320], "With": [3, 83, 136, 311, 313, 314, 319, 322, 325], "necessarili": [3, 325], "instanti": [3, 21, 34, 36, 39, 80, 88, 94, 140, 180, 313, 314, 319, 320, 322, 325], "0s": [3, 137, 316], "stateless": [3, 140, 313, 320, 325], "step_and_maybe_reset": [3, 72, 76, 88, 94], "partial": [3, 72, 76, 88, 94, 103, 136, 137, 138, 289, 316], "updat": [3, 4, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 39, 40, 41, 58, 72, 76, 84, 88, 89, 90, 94, 101, 108, 110, 111, 135, 136, 141, 144, 146, 156, 157, 170, 172, 176, 204, 208, 210, 211, 212, 213, 214, 215, 224, 225, 227, 228, 230, 231, 232, 235, 236, 238, 240, 241, 242, 243, 244, 245, 251, 253, 254, 255, 256, 257, 285, 289, 291, 294, 295, 300, 301, 311, 314, 315, 316, 319, 320, 322, 324, 325], "next": [3, 4, 8, 13, 14, 16, 26, 28, 32, 35, 38, 40, 41, 42, 52, 53, 54, 64, 69, 72, 73, 76, 82, 84, 88, 92, 93, 94, 95, 96, 103, 108, 111, 112, 113, 118, 119, 123, 127, 129, 132, 133, 135, 137, 146, 152, 155, 157, 170, 172, 176, 191, 220, 224, 225, 227, 228, 230, 231, 236, 240, 241, 242, 243, 245, 251, 252, 253, 254, 255, 256, 257, 283, 285, 287, 313, 314, 316, 318, 320, 321, 322, 324, 325], "step_mdp": [3, 170, 172, 307, 316, 320, 324, 325], "done_kei": [3, 72, 76, 88, 94, 112, 129, 135, 155, 319], "assign": [3, 4, 13, 14, 32, 34, 36, 39, 72, 76, 88, 94, 141, 227, 228, 243, 315, 319, 322], "_reset": [3, 72, 76, 84, 88, 94, 101, 103, 108, 111, 156, 157, 176], "signal": [3, 17, 52, 76, 103, 112, 135, 138, 156, 310, 313, 315, 319, 322, 325], "stop": [3, 16, 21, 40, 72, 76, 88, 94, 315, 319, 324, 325], "data_": [3, 72, 76, 88, 94], "i": [3, 13, 14, 16, 17, 18, 19, 20, 21, 26, 28, 32, 35, 38, 42, 43, 55, 56, 58, 66, 72, 76, 88, 94, 125, 129, 132, 141, 145, 183, 189, 207, 211, 213, 214, 215, 253, 254, 255, 256, 280, 292, 313, 314, 315, 316, 319, 320, 322, 324, 325], "rang": [3, 4, 8, 11, 27, 35, 38, 40, 55, 56, 64, 72, 73, 76, 88, 94, 129, 139, 146, 237, 245, 310, 311, 313, 315, 316, 319, 320, 322, 324], "n": [3, 6, 7, 24, 27, 32, 33, 40, 72, 76, 88, 94, 103, 110, 115, 142, 176, 210, 215, 224, 230, 238, 252, 286, 309, 311, 314, 315, 316, 319, 322, 325], "append": [3, 8, 35, 38, 41, 42, 52, 53, 72, 73, 76, 88, 94, 106, 129, 137, 170, 172, 206, 212, 313, 314, 315, 316, 319, 320, 321, 322, 324], "set_se": [3, 13, 14, 16, 17, 21, 69, 72, 76, 82, 84, 88, 94, 121, 127, 132, 136, 138, 141, 320, 324, 325], "seed": [3, 13, 14, 16, 17, 21, 70, 72, 76, 84, 88, 89, 90, 94, 95, 96, 101, 108, 111, 141, 148, 289], "determinist": [3, 32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 159, 168, 184, 191, 200, 214, 215, 218, 225, 309, 313, 314, 316, 320, 325], "preced": [3, 173, 316], "without": [3, 7, 9, 32, 40, 52, 72, 76, 88, 94, 101, 108, 111, 139, 202, 203, 224, 225, 227, 228, 230, 236, 240, 241, 242, 243, 245, 252, 253, 254, 255, 256, 257, 301, 308, 309, 313, 314, 315, 319, 320, 322, 325], "risk": [3, 126], "overlap": [3, 41], "consecut": [3, 62, 80, 172, 210, 316, 319, 325], "reproduc": [3, 103, 148, 313, 315, 319], "maximum": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 37, 39, 40, 43, 45, 54, 55, 56, 57, 66, 72, 76, 88, 94, 110, 130, 135, 136, 138, 194, 195, 196, 218, 225, 230, 236, 238, 239, 243, 286, 313, 314, 315, 316, 319, 322], "max_step": [3, 13, 72, 76, 84, 88, 94, 95, 96, 135, 319, 324, 325], "tensordictmodul": [3, 13, 14, 16, 17, 20, 21, 40, 84, 119, 167, 170, 172, 176, 188, 189, 197, 198, 201, 202, 203, 204, 205, 206, 210, 211, 212, 213, 214, 216, 217, 218, 220, 225, 227, 230, 232, 233, 234, 236, 238, 241, 243, 245, 251, 252, 253, 254, 255, 256, 285, 301, 309, 313, 315, 316, 318, 319, 320, 321], "ani": [3, 5, 8, 26, 28, 32, 34, 35, 36, 38, 39, 41, 42, 52, 53, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 72, 73, 76, 88, 89, 90, 94, 101, 115, 125, 126, 129, 141, 143, 146, 148, 156, 158, 164, 174, 182, 205, 214, 215, 216, 217, 224, 225, 227, 228, 230, 236, 238, 240, 241, 242, 243, 245, 253, 277, 289, 308, 313, 314, 315, 319, 320, 322, 324, 325], "compat": [3, 7, 11, 18, 19, 32, 34, 36, 39, 52, 63, 72, 76, 78, 87, 88, 94, 103, 135, 143, 146, 170, 172, 212, 224, 225, 227, 228, 230, 236, 238, 240, 241, 242, 243, 245, 248, 313, 316, 322, 324], "mark": [3, 16, 72, 76, 88, 94, 170, 172], "trail": [3, 146], "time": [3, 4, 7, 8, 13, 14, 16, 17, 18, 20, 21, 32, 35, 38, 40, 41, 42, 64, 72, 73, 76, 83, 87, 88, 89, 90, 94, 100, 104, 126, 132, 137, 138, 146, 155, 168, 172, 173, 210, 226, 230, 233, 237, 238, 240, 241, 245, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 289, 309, 310, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "treat": 3, "figur": [3, 313, 315, 316, 319, 320, 325], "summar": [3, 320], "brief": [3, 315], "popul": [3, 38, 118, 137, 313, 315, 316, 320, 322], "entri": [3, 13, 14, 18, 19, 20, 21, 23, 26, 28, 32, 34, 36, 37, 39, 45, 49, 52, 53, 72, 76, 88, 94, 103, 105, 106, 108, 111, 112, 115, 118, 121, 123, 125, 127, 129, 132, 135, 136, 137, 145, 146, 155, 156, 170, 177, 178, 205, 206, 212, 213, 225, 243, 253, 254, 255, 256, 309, 313, 315, 316, 319, 320, 321, 322, 325], "deliveri": 3, "design": [3, 13, 14, 32, 33, 72, 76, 88, 94, 103, 126, 141, 205, 224, 225, 226, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 251, 313, 314, 315, 316, 318, 319, 320, 322, 325], "metaclass": 3, "ensur": [3, 32, 35, 41, 58, 62, 72, 76, 88, 94, 103, 125, 135, 143, 146, 206, 309, 314, 315, 320, 322], "everi": [3, 8, 17, 26, 28, 32, 33, 63, 72, 76, 88, 94, 135, 136, 146, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 179, 180, 183, 184, 185, 187, 190, 191, 193, 198, 204, 205, 207, 208, 210, 213, 218, 221, 289, 311, 313, 314, 315, 316, 319, 320], "flank": [3, 316], "its": [3, 4, 5, 7, 9, 11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 41, 44, 46, 47, 49, 72, 76, 84, 88, 89, 90, 94, 97, 103, 112, 119, 135, 136, 140, 141, 146, 158, 177, 178, 179, 180, 204, 206, 211, 212, 215, 218, 224, 225, 226, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 251, 289, 301, 311, 313, 314, 315, 316, 319, 320, 321, 322, 325], "dual": 3, "strictli": [3, 8, 32, 72, 76, 88, 94, 141, 243, 313, 315], "refer": [3, 7, 8, 9, 21, 32, 40, 72, 76, 88, 94, 141, 146, 157, 167, 168, 176, 177, 178, 179, 184, 185, 190, 191, 207, 224, 231, 232, 233, 234, 240, 243, 253, 258, 266, 313, 315, 319, 322], "union": [3, 11, 13, 15, 16, 17, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 39, 44, 46, 47, 58, 72, 76, 88, 94, 101, 110, 112, 118, 121, 125, 126, 129, 131, 143, 145, 146, 155, 158, 160, 161, 162, 163, 165, 167, 169, 173, 174, 177, 178, 179, 180, 181, 182, 186, 188, 189, 194, 195, 196, 197, 214, 230, 235, 241, 244, 266, 272, 283, 285, 286, 294, 295, 298, 299, 301, 302, 303, 304, 305], "interpret": [3, 314], "last": [3, 4, 11, 13, 14, 16, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 44, 46, 47, 52, 62, 72, 76, 88, 94, 115, 121, 126, 136, 138, 158, 170, 172, 173, 174, 177, 178, 184, 192, 198, 204, 205, 208, 215, 314, 315, 316, 319, 320, 321, 322, 324, 325], "indic": [3, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 52, 53, 54, 60, 62, 64, 65, 67, 72, 76, 88, 94, 103, 104, 135, 136, 137, 138, 141, 156, 158, 174, 177, 178, 180, 210, 212, 213, 221, 224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 251, 293, 305, 308, 311, 315, 316, 320, 322, 325], "truncat": [3, 13, 14, 16, 18, 19, 20, 21, 37, 43, 45, 52, 72, 76, 88, 89, 90, 94, 112, 113, 120, 129, 135, 156, 170, 172, 196, 259, 313, 315, 316, 318, 321, 322, 324, 325], "carri": [3, 21, 45, 72, 76, 88, 94, 137, 238, 314, 316, 319, 320, 322], "look": [3, 5, 7, 8, 32, 72, 76, 83, 88, 89, 90, 94, 125, 126, 143, 211, 215, 216, 217, 310, 315, 316, 319, 320, 321, 322, 324, 325], "assess": [3, 97, 313], "split_trajectori": [3, 13, 14, 16, 17, 18, 19, 20, 21, 307], "slice": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 52], "adjac": [3, 23, 115], "reli": [3, 224, 310, 313, 315, 320, 325], "traj_id": [3, 13, 14, 16, 23, 129, 316, 322, 324], "junction": 3, "miss": [3, 4, 6, 7, 11, 26, 32, 72, 76, 88, 94, 141, 155, 216, 217, 243, 308, 313, 316], "context": [3, 5, 8, 32, 72, 73, 76, 87, 88, 94, 137, 142, 180, 181, 205, 249, 250, 253, 254, 255, 256, 258, 266, 285, 309, 310, 313, 314, 315, 319, 320, 321, 322], "through": [3, 4, 5, 8, 11, 16, 18, 20, 21, 26, 28, 80, 83, 88, 89, 90, 94, 108, 111, 126, 174, 188, 215, 216, 217, 221, 253, 254, 255, 256, 309, 313, 314, 315, 318, 319, 320, 321, 322, 325], "inittrack": [3, 170, 172, 313, 316], "our": [3, 7, 8, 18, 103, 309, 313, 314, 315, 316, 318, 319, 321, 322, 324], "tutori": [3, 313, 314, 316, 317, 318, 320, 321, 322, 323, 325], "inform": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 43, 72, 73, 76, 79, 88, 94, 158, 174, 180, 310, 311, 313, 314, 315, 316, 319, 320, 322], "scratch": [3, 8, 314, 320], "better": [3, 8, 9, 170, 172, 310, 315, 320], "featur": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 33, 45, 72, 76, 83, 88, 89, 90, 92, 93, 94, 103, 115, 119, 123, 137, 138, 142, 146, 158, 168, 169, 170, 172, 174, 181, 182, 215, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 305, 309, 313, 314, 315, 316, 320, 322, 325], "intens": [3, 8], "gym3": 3, "envpool": [3, 85, 86], "interfac": [3, 79, 87, 174, 181, 309, 313, 315, 320, 322], "simultan": [3, 20, 88, 94, 320], "often": [3, 8, 235, 289, 313, 314, 320, 322, 325], "competit": [3, 319], "advantag": [3, 8, 169, 224, 226, 237, 240, 242, 253, 254, 255, 256, 257, 258, 260, 262, 264, 266, 267, 269, 310, 311, 313, 314, 315, 316, 319, 320, 325], "scale": [3, 4, 52, 103, 119, 121, 131, 136, 139, 168, 171, 183, 190, 191, 195, 196, 201, 202, 203, 211, 215, 217, 224, 225, 236, 240, 241, 242, 243, 287, 293, 298, 305, 309, 313, 314, 315, 316, 319, 324], "varieti": 3, "own": [3, 13, 14, 17, 22, 32, 72, 76, 88, 89, 90, 94, 314, 315, 319, 320], "As": [3, 4, 72, 76, 83, 88, 89, 90, 94, 129, 215, 253, 309, 313, 314, 315, 316, 319, 320, 321, 322, 324, 325], "inherit": [3, 175, 238, 311, 315, 319], "serialenv": [3, 72, 76, 88, 137, 307, 325], "enjoi": 3, "exact": 3, "Of": [3, 7, 308, 320, 325], "cours": [3, 4, 308, 315, 320, 325], "correspond": [3, 4, 13, 14, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 41, 44, 46, 47, 58, 72, 76, 84, 85, 88, 94, 125, 137, 141, 145, 146, 170, 172, 177, 178, 208, 210, 211, 215, 228, 230, 243, 251, 253, 254, 255, 256, 257, 313, 314, 315, 319, 320, 321], "count": [3, 73, 135, 210, 285, 289, 292, 313, 314, 315, 316, 322, 325], "def": [3, 11, 22, 32, 72, 73, 76, 84, 88, 94, 100, 101, 108, 111, 157, 167, 176, 219, 225, 227, 230, 236, 238, 241, 243, 245, 311, 313, 314, 318, 319, 320, 324, 325], "make_env": [3, 96, 146, 294, 295, 313, 314, 325], "gymenv": [3, 5, 13, 14, 16, 17, 21, 22, 72, 73, 76, 78, 88, 94, 103, 106, 107, 112, 118, 119, 121, 123, 127, 129, 132, 136, 137, 138, 140, 141, 146, 170, 172, 298, 301, 307, 309, 313, 314, 315, 316, 321, 322, 324, 325], "v1": [3, 13, 14, 16, 17, 21, 22, 52, 72, 73, 76, 85, 88, 94, 103, 106, 113, 118, 119, 121, 127, 129, 132, 135, 136, 137, 138, 140, 170, 172, 248, 262, 263, 264, 265, 267, 268, 269, 270, 309, 314, 316, 320, 322, 324, 325], "from_pixel": [3, 70, 71, 103, 298, 313, 314, 316, 321, 322, 324, 325], "9": [3, 7, 32, 35, 38, 41, 64, 83, 89, 90, 136, 146, 224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 246, 251, 310, 313, 314, 315, 316, 319, 320, 322, 323], "81": [3, 313, 314, 320], "0": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 21, 22, 30, 31, 32, 33, 35, 38, 40, 41, 42, 49, 52, 53, 54, 55, 56, 58, 66, 69, 72, 76, 79, 82, 84, 88, 91, 92, 93, 94, 101, 102, 103, 104, 106, 107, 109, 110, 119, 120, 121, 125, 129, 132, 136, 137, 138, 139, 140, 141, 143, 145, 146, 148, 157, 158, 160, 161, 163, 164, 168, 170, 171, 172, 174, 176, 178, 179, 180, 181, 182, 183, 186, 190, 191, 194, 195, 196, 198, 200, 204, 205, 207, 208, 210, 213, 214, 217, 218, 221, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 251, 252, 253, 254, 255, 256, 259, 260, 261, 280, 287, 301, 305, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325], "must": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 45, 46, 47, 54, 55, 56, 57, 63, 66, 72, 73, 76, 88, 89, 90, 94, 103, 106, 112, 116, 119, 121, 123, 133, 136, 137, 138, 141, 142, 146, 158, 167, 170, 172, 174, 177, 178, 179, 180, 189, 200, 206, 207, 211, 212, 213, 214, 215, 218, 219, 224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 244, 245, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 298, 313, 314, 315, 316, 318, 320, 322, 324], "print": [3, 6, 7, 13, 14, 16, 21, 22, 24, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 45, 54, 64, 68, 69, 70, 71, 72, 73, 75, 76, 77, 81, 82, 83, 84, 87, 88, 89, 90, 92, 93, 94, 95, 96, 98, 100, 103, 104, 108, 109, 110, 111, 118, 121, 127, 129, 132, 135, 137, 138, 139, 146, 152, 155, 156, 158, 164, 167, 170, 174, 177, 178, 179, 180, 183, 186, 189, 200, 201, 202, 203, 205, 206, 208, 210, 212, 214, 217, 219, 238, 298, 301, 309, 311, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "simpli": [3, 6, 34, 36, 39, 45, 113, 133, 238, 309, 310, 313, 315, 319, 325], "b": [3, 7, 8, 23, 26, 28, 34, 36, 39, 40, 41, 42, 64, 179, 180, 181, 182, 188, 197, 218, 253, 254, 255, 256, 257, 259, 272, 309, 314, 321, 322], "c": [3, 6, 7, 26, 34, 36, 39, 41, 42, 53, 121, 139, 314, 322], "d": [3, 35, 53, 54, 58, 215, 324], "get": [3, 4, 6, 7, 8, 9, 34, 35, 36, 38, 39, 52, 55, 56, 63, 64, 66, 73, 88, 94, 101, 104, 108, 110, 111, 119, 121, 126, 136, 137, 139, 146, 200, 208, 211, 212, 215, 253, 254, 255, 256, 257, 276, 309, 313, 314, 315, 316, 319, 320, 322, 324, 325], "forc": [3, 6, 7, 13, 14, 18, 20, 21, 314, 319, 320], "privat": [3, 72, 76, 88, 94, 320, 325], "distinct": [3, 318], "convent": [3, 310, 313, 316, 319, 320], "absenc": 3, "total": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 30, 31, 33, 226, 237, 240, 280, 282, 285, 289, 292, 293, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325], "unless": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 62, 72, 76, 88, 94, 315], "wa": [3, 5, 7, 72, 76, 88, 94, 141, 156, 235, 244, 259, 310, 314, 315, 318, 322, 324], "abov": [3, 7, 32, 72, 76, 88, 94, 171, 195, 196, 223, 310, 311, 313, 315, 319, 320, 325], "detail": [3, 5, 6, 7, 32, 72, 76, 88, 89, 90, 94, 139, 141, 167, 207, 224, 231, 240, 308, 314, 318, 322], "deal": [3, 313, 315, 319, 322], "proper": [3, 4, 6, 7, 253, 254, 255, 256, 314, 315, 319, 322], "behav": [3, 78, 84, 186, 236, 321], "accord": [3, 13, 14, 16, 17, 18, 19, 20, 21, 40, 121, 131, 171, 181, 190, 195, 196, 251, 309, 320, 322], "develop": [3, 4, 7, 80, 313, 324], "inner": [3, 72, 76, 88, 94, 110, 311, 314, 315, 319, 325], "logic": 3, "nevertheless": [3, 315, 322], "kept": [3, 13, 14, 16, 17, 62, 88, 94, 110, 133, 140, 148, 155, 171, 195, 196], "mind": [3, 319], "desig": 3, "previou": [3, 4, 10, 32, 40, 41, 137, 156, 191, 205, 315, 316, 320, 325], "wherev": 3, "isn": [3, 8, 34, 36, 39, 112, 206, 214, 319], "t": [3, 4, 6, 7, 8, 11, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 44, 46, 47, 58, 62, 64, 72, 73, 76, 85, 88, 94, 103, 108, 111, 112, 125, 129, 136, 138, 145, 146, 155, 206, 210, 214, 244, 253, 254, 255, 256, 257, 259, 289, 291, 305, 308, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "expos": [3, 91, 108, 111, 216, 314], "modif": [3, 5, 26, 28, 32, 72, 76, 88, 94, 115, 156, 238, 315, 320], "lost": [3, 8], "eras": [3, 72, 76, 88, 94, 141], "intern": [3, 312], "face": [3, 5, 8, 9, 325], "NOT": [3, 126], "outsid": [3, 16, 319], "keep": [3, 4, 7, 8, 14, 42, 62, 64, 121, 125, 145, 146, 155, 210, 282, 289, 313, 314, 315, 316, 319, 320, 322, 324, 325], "right": [3, 6, 7, 40, 173, 314, 315, 319, 320, 325], "preliminari": 3, "warranti": 3, "long": [3, 13, 14, 16, 17, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 39, 44, 46, 47, 110, 316, 322], "don": [3, 4, 6, 7, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 103, 314, 315, 322, 324, 325], "affect": [3, 8, 32, 72, 76, 88, 94, 140, 141, 148, 253, 254, 255, 256], "assumpt": [3, 320, 322], "made": [3, 32, 55, 56, 57, 63, 66, 72, 76, 88, 94, 210, 228, 238, 251, 313, 314, 316, 319, 321], "preclud": 3, "presenc": 3, "annihil": 3, "effect": [3, 26, 32, 72, 76, 88, 94, 103, 141, 289, 313, 322, 325], "reason": [3, 4, 8, 32, 72, 76, 88, 89, 90, 94, 125, 143, 172, 310, 313, 314, 315, 320, 322], "root": [3, 26, 28, 103, 138, 155, 171, 195, 196, 316, 319, 320, 322, 325], "cannot": [3, 4, 7, 22, 26, 27, 28, 31, 33, 72, 76, 80, 88, 94, 108, 111, 126, 132, 212, 314, 315, 316, 319, 320], "known": [3, 5, 7, 8, 260, 261, 313, 314], "advanc": [3, 21, 35, 38, 41, 42, 322], "explicitli": [3, 4, 314, 316, 319, 322], "assum": [3, 6, 26, 33, 40, 41, 42, 52, 76, 88, 94, 105, 115, 125, 126, 132, 137, 143, 145, 152, 170, 172, 173, 198, 218, 228, 231, 243, 251, 262, 263, 264, 265, 267, 268, 269, 270, 272, 313, 315, 316, 318, 320], "place": [3, 13, 14, 16, 17, 26, 28, 32, 34, 36, 39, 55, 56, 66, 72, 73, 76, 88, 94, 107, 112, 125, 137, 140, 141, 143, 145, 146, 156, 205, 214, 286, 291, 292, 314, 315, 319, 320, 322], "superse": 3, "pettingzoowrapp": [3, 307], "group": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 72, 76, 83, 88, 89, 90, 94, 97, 309, 314, 315, 319], "associ": [3, 32, 72, 76, 88, 94, 190, 305, 313, 322], "environemtn": 3, "__not__": 3, "constrain": [3, 119, 170, 172, 240], "li": 3, "fact": [3, 7, 8, 313, 315, 319, 320, 321, 322, 325], "predict": [3, 32, 40, 168, 175, 176, 205, 220, 231, 233, 234, 252, 309, 313, 314], "know": [3, 4, 9, 35, 38, 41, 42, 204, 241, 285, 313, 314, 315, 316, 319, 322], "meaning": 3, "could": [3, 4, 6, 314, 315, 319, 321, 325], "perfectli": [3, 311, 313, 320], "case": [3, 4, 5, 7, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 32, 35, 41, 58, 72, 76, 88, 94, 108, 109, 111, 139, 141, 148, 172, 174, 180, 211, 214, 215, 217, 218, 223, 224, 225, 227, 228, 230, 236, 240, 241, 242, 243, 245, 253, 254, 255, 256, 280, 291, 303, 304, 305, 309, 311, 313, 314, 315, 316, 319, 320, 322, 325], "meaningless": 3, "discard": [3, 45, 52, 76, 143, 155, 271, 322, 325], "zero": [3, 4, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 41, 42, 44, 45, 46, 47, 52, 56, 66, 72, 76, 88, 94, 104, 108, 110, 111, 121, 129, 152, 155, 157, 170, 172, 173, 177, 178, 180, 188, 197, 208, 210, 213, 221, 224, 225, 227, 228, 230, 236, 240, 241, 242, 243, 245, 251, 253, 254, 255, 256, 259, 316, 324], "val": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 324], "agent0": 3, "agent1": 3, "overridden": [3, 72, 76, 88, 94, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 179, 180, 183, 184, 185, 187, 190, 191, 193, 198, 204, 205, 207, 208, 210, 213, 218, 221, 316], "overrid": [3, 24, 25, 26, 27, 28, 29, 30, 31, 33, 38, 44, 46, 47, 72, 76, 88, 94, 305, 309], "elimin": 3, "field": [3, 13, 14, 16, 17, 26, 32, 34, 36, 37, 39, 40, 41, 42, 43, 45, 55, 56, 66, 69, 72, 76, 82, 83, 84, 87, 88, 89, 90, 92, 93, 94, 95, 96, 108, 111, 112, 113, 123, 127, 129, 133, 135, 137, 141, 155, 157, 167, 170, 172, 176, 188, 189, 197, 200, 201, 202, 203, 205, 206, 207, 210, 211, 212, 213, 214, 217, 219, 224, 225, 227, 228, 230, 236, 240, 241, 242, 243, 245, 251, 293, 298, 308, 309, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "bool": [3, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 62, 69, 70, 71, 72, 73, 74, 76, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 101, 103, 104, 108, 110, 111, 112, 113, 115, 119, 120, 121, 123, 125, 127, 129, 131, 133, 135, 137, 139, 141, 142, 143, 145, 146, 148, 155, 156, 157, 158, 160, 161, 170, 171, 172, 174, 176, 179, 180, 181, 182, 195, 196, 200, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 248, 251, 253, 254, 255, 256, 259, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 282, 283, 285, 286, 287, 289, 298, 305, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "pixel": [3, 7, 26, 103, 105, 112, 115, 117, 121, 123, 125, 128, 139, 143, 145, 160, 184, 185, 272, 298, 309, 313, 314, 316, 321, 322, 324, 325], "500": [3, 313, 314, 320, 324, 325], "uint8": [3, 47, 112, 123, 139, 314, 321, 322, 324, 325], "none": [3, 8, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 63, 64, 66, 72, 73, 76, 83, 84, 88, 89, 90, 94, 95, 96, 98, 102, 103, 104, 105, 106, 107, 108, 109, 111, 115, 117, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 217, 218, 219, 224, 225, 227, 228, 230, 231, 232, 236, 238, 239, 240, 241, 242, 243, 244, 245, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 278, 283, 284, 285, 286, 287, 288, 289, 293, 294, 295, 298, 301, 303, 304, 305, 309, 311, 313, 314, 315, 316, 319, 320, 322, 324, 325], "is_shar": [3, 13, 14, 16, 26, 34, 36, 37, 39, 40, 41, 42, 43, 45, 54, 55, 56, 66, 69, 72, 76, 82, 83, 84, 87, 88, 89, 90, 92, 93, 94, 95, 96, 108, 111, 112, 113, 123, 127, 129, 133, 135, 137, 146, 155, 157, 167, 170, 172, 176, 188, 189, 197, 200, 201, 202, 203, 205, 206, 207, 210, 211, 212, 213, 214, 217, 219, 224, 225, 227, 228, 230, 236, 240, 241, 242, 243, 245, 251, 298, 309, 315, 316, 318, 319, 320, 321, 322, 324, 325], "note": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 35, 36, 38, 39, 41, 42, 72, 76, 88, 94, 108, 111, 146, 156, 170, 172, 210, 211, 215, 313, 314, 318, 319, 325], "launch": [3, 13, 14, 18, 19, 20, 22, 88, 94], "start": [3, 4, 5, 13, 21, 45, 73, 83, 155, 284, 313, 314, 319, 320, 322, 325], "bottleneck": [3, 8], "so": [3, 4, 6, 7, 10, 32, 40, 72, 76, 88, 94, 137, 146, 216, 217, 315, 316, 319, 320, 325], "onc": [3, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 72, 76, 88, 94, 129, 141, 204, 210, 287, 311, 314, 315, 316, 320, 322, 325], "great": [3, 7, 8, 324], "speedup": [3, 8, 325], "precis": [3, 108, 111, 155, 313, 315], "anoth": [3, 8, 34, 36, 39, 72, 76, 80, 88, 94, 108, 109, 111, 137, 140, 174, 224, 225, 226, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 251, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 309, 310, 313, 315, 316, 318, 319, 320, 325], "misspecifi": 3, "caus": [3, 7, 8, 55, 56, 66, 72, 76, 80, 88, 94, 126, 325], "breakag": 3, "rais": [3, 13, 14, 16, 18, 19, 20, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 72, 76, 88, 94, 97, 103, 114, 120, 129, 136, 137, 138, 141, 148, 204, 208, 210, 243, 313, 315, 319, 322], "assert": [3, 6, 16, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 76, 79, 100, 103, 106, 108, 111, 119, 127, 146, 148, 152, 180, 183, 198, 253, 254, 255, 256, 280, 288, 318, 322, 325], "mismatch": [3, 314], "mostli": [3, 17, 310, 322, 325], "purpos": [3, 7, 103, 301, 313, 315, 316, 319, 321, 325], "want": [3, 6, 7, 8, 121, 224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 251, 309, 313, 314, 315, 316, 319, 320, 321, 322, 324, 325], "subprocess": [3, 13, 14, 73, 88, 94], "addit": [3, 4, 32, 52, 72, 76, 85, 88, 94, 107, 125, 137, 140, 141, 143, 145, 204, 205, 214, 223, 238, 253, 310, 313, 314, 319, 322], "multithread": [3, 35, 38, 41, 42, 52, 53, 54, 85, 86, 322], "multithreadedenv": [3, 307], "underneath": 3, "higher": [3, 4, 106, 218, 313, 314, 315, 322, 325], "restrict": [3, 314, 321, 322, 325], "flexibl": [3, 9, 85, 246, 310, 311, 322, 325], "cover": [3, 308, 315, 320, 324], "popular": [3, 309, 316, 319], "atari": [3, 4, 103, 325], "classic": [3, 84, 90, 314], "benchmark_batched_env": 3, "py": [3, 100, 188, 197, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325], "pipelin": [3, 7, 309, 315], "seamlessli": [3, 320], "infrastructur": [3, 319], "view": [3, 8, 27, 32, 33, 72, 76, 88, 94, 101, 167, 174, 320, 322, 324, 325], "core": [3, 8, 298, 311, 316, 324], "decis": [3, 159, 187, 205, 229, 239, 316, 319, 322, 325], "act": [3, 4, 89, 90, 180, 225, 227, 236, 241, 243, 245, 316, 319], "world": [3, 5, 84, 220, 233, 319, 320, 325], "paradigm": [3, 17, 319], "decpodp": 3, "markov": [3, 325], "game": [3, 4, 5], "between": [3, 4, 5, 13, 14, 16, 17, 21, 32, 40, 62, 72, 76, 88, 94, 110, 120, 130, 141, 148, 158, 170, 172, 174, 179, 180, 207, 211, 215, 224, 226, 227, 230, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 248, 253, 285, 289, 310, 313, 314, 316, 319, 320, 325], "includ": [3, 4, 7, 9, 21, 32, 55, 56, 57, 63, 66, 72, 76, 84, 88, 94, 136, 141, 146, 238, 243, 292, 309, 311, 313, 314, 315, 316, 319, 320, 322, 325], "per": [3, 4, 13, 14, 16, 17, 18, 19, 20, 21, 80, 88, 89, 90, 106, 132, 168, 179, 180, 208, 289, 303, 304, 313, 314, 315, 316, 319, 322, 324], "accommod": [3, 13, 14, 16, 17], "thank": [3, 313], "carrier": [3, 315, 316, 322], "particular": [3, 32, 45, 52, 72, 76, 88, 94, 141, 310, 311, 314, 316, 318, 319, 322], "thu": [3, 237, 319], "hand": [3, 7, 21, 319, 320], "let": [3, 6, 7, 32, 43, 72, 76, 88, 89, 90, 94, 103, 170, 172, 179, 180, 206, 285, 310, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "understand": [3, 8, 313, 314, 319], "go": [3, 7, 83, 126, 129, 205, 259, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "vma": [3, 95, 96, 319], "robot": [3, 5, 7, 125, 143, 145, 319], "what": [3, 8, 35, 44, 72, 76, 88, 94, 112, 137, 155, 212, 308, 309, 310, 314, 315, 316, 319, 320, 321, 322, 324, 325], "vmasenv": [3, 307, 319], "balanc": [3, 313, 314], "num_env": [3, 21, 79, 95, 96, 319], "n_agent": [3, 95, 96, 179, 180, 188, 197, 251, 319], "5": [3, 24, 26, 28, 35, 38, 41, 42, 73, 82, 85, 92, 93, 95, 96, 129, 135, 136, 157, 158, 167, 168, 171, 173, 174, 176, 179, 180, 184, 189, 195, 196, 205, 206, 212, 218, 237, 240, 242, 245, 309, 313, 314, 316, 319, 320, 322, 323, 324, 325], "td": [3, 15, 26, 64, 68, 69, 70, 71, 75, 77, 81, 82, 101, 104, 108, 109, 110, 111, 118, 119, 121, 129, 132, 137, 139, 141, 146, 155, 157, 167, 170, 172, 175, 176, 188, 189, 197, 200, 201, 202, 203, 205, 206, 208, 210, 211, 212, 214, 217, 219, 251, 254, 255, 256, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 280, 288, 298, 309, 310, 313, 316, 319, 320, 324, 325], "info": [3, 35, 38, 41, 42, 52, 53, 72, 76, 88, 89, 90, 91, 92, 93, 94, 95, 96, 143, 147, 319, 322], "ground_rew": 3, "pos_rew": [3, 319], "16": [3, 32, 72, 76, 88, 94, 103, 313, 314, 315, 316, 319, 320, 322], "style": [3, 35, 38, 41, 42, 52, 53], "relat": [3, 4, 10, 35, 115, 224, 225, 227, 228, 230, 236, 240, 241, 242, 243, 245, 314, 320], "vari": [3, 89, 90, 126, 319], "creation": [3, 88, 94, 313, 325], "info_spec": 3, "agent_i_action_spec": 3, "agent_i_reward_spec": 3, "agent_i_observation_spec": 3, "discretetensorspec": [3, 33, 72, 76, 88, 94, 101, 156, 228, 230, 251, 307, 315, 319, 325], "you": [3, 5, 6, 7, 8, 9, 10, 32, 43, 72, 76, 80, 83, 88, 89, 90, 92, 93, 94, 100, 146, 308, 309, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "simpl": [3, 9, 32, 33, 72, 76, 88, 94, 160, 215, 228, 238, 242, 253, 309, 310, 313, 314, 315, 319, 325], "composit": [3, 26, 28, 72, 76, 88, 94, 315, 320], "prefix": [3, 23, 32, 34, 36, 39, 45, 72, 76, 88, 94, 141, 238, 243, 271, 316, 325], "exactli": [3, 32, 72, 76, 78, 88, 94, 141, 243, 313, 316, 319], "action_kei": [3, 15, 72, 76, 88, 94, 101, 110, 155, 157, 175, 176, 204, 208, 210, 319], "reward_kei": [3, 72, 76, 88, 94, 155, 157, 176, 283, 287, 319], "automat": [3, 5, 55, 56, 66, 72, 76, 88, 89, 90, 94, 108, 111, 121, 200, 211, 309, 313, 315, 319, 320, 322, 324], "sure": [3, 4, 7, 53, 63, 80, 129, 206, 305, 309, 313, 315, 316, 319, 320, 322, 324, 325], "set_kei": [3, 112, 224, 225, 226, 228, 230, 231, 236, 237, 238, 240, 241, 242, 243, 251, 257, 319], "awai": [3, 315, 319], "eas": [3, 319], "access": [3, 7, 8, 32, 35, 53, 72, 76, 88, 94, 125, 143, 305, 308, 313, 319, 320, 322], "leaf": [3, 26, 28, 72, 76, 88, 94, 135, 215], "would": [3, 32, 40, 72, 76, 88, 94, 170, 172, 174, 179, 311, 314, 315, 316, 320, 322, 325], "full": [3, 72, 76, 88, 94, 207, 280, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "raw": [3, 4, 40, 171, 195, 196, 314, 320], "torchvis": [3, 125, 145, 324, 325], "transformedenv": [3, 13, 72, 73, 76, 88, 94, 101, 103, 106, 107, 108, 111, 112, 113, 115, 118, 119, 120, 121, 123, 127, 129, 132, 133, 135, 136, 137, 138, 140, 146, 170, 172, 298, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "primit": [3, 4, 224, 225, 227, 228, 230, 236, 240, 241, 242, 243, 245], "built": [3, 5, 7, 224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 246, 251, 299, 301, 302, 305, 313, 314, 315, 316, 322, 325], "base_env": [3, 72, 76, 88, 94, 101, 106, 108, 110, 111, 119, 123, 135, 137, 138, 313, 314, 315, 321, 324, 325], "totensorimag": [3, 103, 314, 316, 322, 324, 325], "in_kei": [3, 13, 14, 16, 17, 21, 84, 102, 103, 104, 105, 106, 108, 110, 111, 115, 117, 119, 121, 122, 123, 125, 127, 128, 129, 130, 131, 132, 136, 138, 139, 140, 141, 143, 145, 146, 157, 166, 170, 172, 176, 188, 197, 198, 200, 201, 202, 203, 205, 206, 211, 212, 214, 215, 217, 218, 219, 224, 225, 226, 227, 228, 230, 236, 237, 240, 241, 242, 243, 245, 251, 253, 254, 255, 256, 271, 272, 298, 301, 309, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "resiz": [3, 103, 314, 316, 322, 325], "64": [3, 103, 160, 161, 169, 170, 172, 180, 188, 251, 313, 314, 315, 316, 318, 320, 321, 322, 324, 325], "now": [3, 7, 35, 103, 180, 313, 314, 315, 316, 318, 319, 321, 322, 325], "appar": [3, 282], "bring": [3, 315, 325], "signific": [3, 5, 8, 315, 325], "kind": [3, 38, 44, 155, 322], "consult": 3, "interest": [3, 211, 215, 309, 314, 315, 319, 320, 325], "resize_par": 3, "out_kei": [3, 13, 14, 16, 17, 21, 84, 102, 103, 104, 105, 106, 108, 111, 115, 117, 119, 121, 122, 123, 125, 127, 128, 129, 130, 131, 132, 136, 138, 139, 140, 143, 145, 146, 157, 166, 167, 170, 172, 176, 188, 189, 197, 198, 200, 201, 202, 203, 205, 207, 211, 212, 213, 214, 215, 217, 218, 219, 224, 225, 226, 230, 236, 237, 240, 241, 242, 243, 251, 253, 254, 255, 256, 272, 285, 301, 309, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "easi": [3, 5, 53, 204, 208, 210, 309, 310, 313, 314, 315, 319, 321, 322, 325], "graph": [3, 4, 8, 249, 250, 313, 320], "inv": [3, 106, 110, 123, 129, 320], "appli": [3, 4, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 43, 44, 46, 47, 52, 53, 72, 76, 88, 94, 101, 103, 104, 107, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 124, 126, 127, 129, 132, 133, 135, 136, 137, 138, 140, 141, 143, 144, 146, 195, 206, 253, 284, 311, 313, 314, 315, 320, 324, 325], "revers": 3, "order": [3, 16, 32, 33, 35, 38, 41, 42, 52, 53, 62, 72, 76, 88, 94, 108, 111, 123, 141, 200, 206, 214, 216, 217, 219, 224, 225, 227, 230, 236, 240, 241, 242, 243, 245, 314, 319], "chain": [3, 34, 35, 36, 38, 39, 41, 42, 52, 53, 107, 110, 158, 217, 325], "taken": [3, 72, 76, 88, 94, 177, 178, 310, 313, 315, 316, 319, 320], "invers": [3, 4, 35, 38, 41, 42, 52, 53, 103, 108, 111, 121, 129, 222, 236, 320], "in_keys_inv": [3, 106, 108, 111, 121, 122, 123, 127, 129, 140, 313, 318, 320, 325], "append_transform": [3, 35, 38, 41, 42, 52, 53, 125, 137, 143, 313, 316, 320, 324, 325], "doubletofloat": [3, 298, 313, 315, 318], "float32": [3, 13, 14, 16, 26, 34, 35, 36, 39, 40, 41, 42, 44, 45, 55, 56, 58, 66, 69, 72, 76, 82, 84, 87, 88, 92, 93, 94, 95, 96, 108, 111, 112, 113, 121, 123, 127, 129, 133, 135, 137, 139, 152, 155, 157, 167, 170, 172, 176, 188, 189, 197, 200, 201, 202, 203, 205, 206, 210, 211, 212, 213, 214, 217, 219, 224, 225, 227, 228, 230, 236, 240, 241, 242, 243, 245, 251, 298, 309, 315, 316, 318, 319, 320, 321, 322, 324, 325], "float64": [3, 32, 72, 76, 88, 94, 107, 108, 111, 125, 137, 140, 141, 143, 145, 214, 318, 325], "regist": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 72, 76, 88, 94, 108, 111, 112, 141, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 179, 180, 183, 184, 185, 187, 190, 191, 193, 198, 204, 205, 207, 208, 210, 213, 218, 221, 224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 251, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 311, 313, 315, 322], "manipul": [3, 4, 8, 125, 143], "third_transform": 3, "replac": [3, 6, 7, 26, 28, 32, 110, 112, 155, 208, 309, 322], "unexpect": [3, 32, 72, 76, 88, 94, 141, 243, 325], "behviour": 3, "fortun": [3, 316], "ident": [3, 13, 14, 16, 32, 88, 94, 112, 179, 180, 253, 254, 255, 256, 303, 304, 314, 319], "alreadi": [3, 8, 11, 32, 45, 72, 76, 88, 94, 137, 156, 215, 253, 254, 255, 256, 313, 315, 319], "chang": [3, 5, 7, 32, 35, 38, 41, 42, 55, 56, 57, 62, 63, 66, 72, 76, 88, 94, 107, 108, 109, 111, 113, 119, 127, 133, 135, 140, 141, 146, 224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 251, 310, 313, 315, 316, 319, 320, 321, 322, 325], "happen": [3, 72, 76, 88, 94, 204, 314, 321, 325], "catfram": [3, 314], "hold": [3, 249, 250, 320, 322], "notic": [3, 103, 315, 320], "parenthood": 3, "henc": [3, 35, 126, 156, 179, 309, 313, 315, 319, 320], "transform1": 3, "transform2": 3, "transform3": 3, "last_two": 3, "isinst": [3, 320], "discret": [3, 24, 27, 30, 31, 33, 47, 72, 76, 88, 89, 90, 94, 110, 186, 189, 230, 231, 309, 314, 315, 319, 325], "might": [3, 37, 276, 308, 313, 325], "throughout": [3, 224, 225, 226, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 251, 315, 325], "action_mask": [3, 89, 90, 92, 93, 101], "unavail": [3, 89, 90], "probabl": [3, 4, 8, 40, 165, 167, 170, 172, 174, 177, 178, 186, 196, 208, 211, 215, 309, 314, 324], "categor": [3, 27, 31, 33, 89, 90, 101, 112, 167, 186, 189, 206, 207, 212, 213, 228, 230, 251, 316], "probabilistictensordictmodul": [3, 119, 215, 216, 324], "tensordictsequenti": [3, 170, 172, 206, 208, 216, 309, 313, 316, 318, 321, 324], "maskedcategor": [3, 178, 307], "linear": [3, 13, 14, 16, 17, 21, 32, 72, 76, 84, 88, 94, 107, 119, 125, 137, 140, 141, 143, 145, 157, 158, 167, 174, 176, 179, 180, 181, 182, 183, 189, 190, 191, 200, 201, 202, 203, 208, 209, 210, 211, 212, 214, 217, 219, 224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 251, 253, 254, 255, 256, 301, 309, 314, 318, 321, 324], "in_feat": 3, "out_feat": 3, "logit": [3, 36, 40, 177, 178, 186, 207, 230, 309], "dist": [3, 10, 177, 178, 186, 322], "distribution_class": [3, 119, 201, 202, 203, 205, 211, 215, 217, 224, 225, 230, 236, 240, 241, 242, 243, 309, 313, 315, 319, 324], "wrap": [3, 5, 13, 14, 16, 17, 18, 19, 20, 21, 32, 40, 72, 76, 88, 89, 90, 94, 148, 170, 172, 198, 201, 202, 203, 204, 210, 212, 220, 251, 309, 313, 314, 315, 316, 319, 325], "actionmask": 3, "your_base_env": 3, "mask_kei": [3, 101, 126], "add": [3, 4, 6, 21, 32, 35, 38, 41, 42, 52, 53, 60, 64, 65, 67, 72, 76, 88, 94, 103, 119, 170, 172, 181, 209, 224, 284, 315, 316, 319, 320, 322, 324], "enviorn": [3, 89, 90, 319], "itself": [3, 32, 72, 76, 88, 94, 98, 238, 315], "log": [3, 4, 8, 40, 165, 166, 167, 177, 178, 186, 196, 206, 207, 211, 215, 224, 225, 226, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 251, 282, 283, 285, 289, 301, 309, 310, 311, 313, 314, 315, 319, 320, 324], "mission": 3, "irrespect": [3, 214, 215], "dmcontrol": [3, 313], "jumanji": [3, 81, 82], "natur": [3, 313, 316], "special": [3, 309, 313, 316, 325], "statu": 3, "framework": [3, 4, 9, 22, 84, 324, 325], "Its": [3, 32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 146, 214, 257], "success": [3, 103, 140, 208, 314, 320, 322, 324], "been": [3, 5, 7, 8, 17, 18, 20, 21, 40, 62, 72, 76, 80, 88, 94, 119, 135, 136, 140, 204, 210, 313, 314, 315, 316, 318, 319, 320, 322, 325], "foundat": [3, 5, 89, 90, 315, 319], "inspir": [3, 320], "howev": [3, 5, 7, 32, 72, 76, 88, 94, 103, 132, 136, 141, 243, 309, 313, 314, 315, 316, 322, 325], "gone": [3, 4, 5], "sometim": [3, 316, 325], "hard": [3, 7, 235, 314, 325], "adopt": [3, 5, 313, 325], "prefer": [3, 17, 20, 35, 38, 41, 42, 126, 133, 240, 286, 309, 315, 319, 322], "moreov": 3, "maintain": [3, 5, 9, 320], "both": [3, 7, 32, 72, 73, 76, 88, 89, 90, 94, 103, 127, 141, 156, 158, 170, 172, 174, 179, 180, 201, 202, 203, 207, 213, 224, 226, 227, 230, 236, 237, 238, 240, 241, 242, 243, 245, 285, 309, 313, 315, 319, 320, 321, 322, 325], "concomittantli": 3, "problem": [3, 7, 8, 9, 16, 314, 315, 316, 319, 320, 322, 325], "decor": [3, 8, 11, 100, 238, 253, 254, 255, 256], "set_gym_backend": [3, 98, 307], "relev": [3, 40, 253, 254, 255, 256, 257, 320], "gym_backend": [3, 100, 307], "env1": [3, 318], "path": [3, 6, 7, 32, 34, 36, 45, 54, 55, 72, 76, 88, 94, 100, 125, 145, 176, 289, 311, 314], "venv": 3, "python3": [3, 6, 7, 10, 322], "site": [3, 6, 7, 100], "__init__": [3, 7, 84, 100, 101, 108, 111, 157, 167, 176, 219, 225, 227, 230, 236, 241, 243, 245, 311, 320, 325], "env2": [3, 318], "_env": [3, 6, 325], "classic_control": 3, "pendulumenv": [3, 320], "0x15147e190": 3, "0x1629916a0": 3, "further": [3, 5, 315], "current": [3, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 72, 76, 78, 85, 88, 94, 103, 126, 136, 137, 138, 140, 141, 149, 150, 155, 168, 173, 191, 210, 231, 243, 275, 311, 313, 314, 315, 316, 319, 320, 324, 325], "tell": [3, 4, 7, 89, 90, 313, 316, 319], "mo_gymnasium": [3, 98], "handi": 3, "side": [3, 4, 325], "v0": [3, 75, 76, 77, 81, 82, 107, 141, 146, 301], "26": [3, 314, 320, 321, 322, 323], "fun": [3, 11, 100, 315, 319, 322], "reveal": 4, "bug": [4, 324], "curv": 4, "won": [4, 32, 72, 73, 76, 88, 94, 125, 145, 289, 305, 314, 315], "exploit": 4, "video": [4, 9, 272, 285, 305, 319], "cv": 4, "flip": 4, "imag": [4, 7, 70, 105, 125, 139, 145, 174, 313, 314, 319, 321, 325], "correspondingli": 4, "prescript": 4, "tune": [4, 119, 319, 321], "coeffici": [4, 40, 119, 319], "bonu": [4, 224, 226, 237, 240], "beta": [4, 35, 41, 58, 236, 237, 313, 314, 322, 324], "altern": [4, 27, 85, 164, 177, 178, 179, 223, 238, 313, 315, 319], "reduc": [4, 6, 27, 136, 314, 315], "downstream": [4, 313], "formul": [4, 319], "ob": [4, 8, 26, 28, 64, 101, 108, 109, 111, 121, 139, 152, 155, 179, 180, 212, 219, 225, 227, 230, 236, 241, 243, 245, 253, 254, 255, 256, 314, 318, 320, 324, 325], "rate": [4, 146, 252, 314, 315, 319], "gradient": [4, 32, 72, 76, 88, 94, 141, 171, 178, 182, 186, 195, 196, 224, 226, 227, 230, 236, 237, 238, 240, 241, 242, 243, 245, 252, 253, 254, 255, 256, 289, 313, 315, 319, 320], "norm": [4, 8, 289, 313, 314, 315, 319, 320], "easier": [4, 309, 313], "behavior": [4, 32, 72, 76, 88, 94, 141, 236, 315, 319], "local": [4, 7, 10, 16, 21, 32, 72, 76, 88, 94, 141, 179, 180, 188, 197, 251, 277, 319, 322], "optima": 4, "sens": [4, 320], "product": [4, 9, 303, 304], "sum": [4, 21, 31, 33, 64, 132, 177, 178, 197, 233, 252, 259, 310, 313, 314, 315, 316, 319, 320, 325], "track": [4, 13, 14, 16, 17, 18, 19, 20, 21, 42, 62, 132, 146, 210, 277, 282, 314, 316, 319, 320, 322], "stat": [4, 121, 293, 305, 314, 315], "w": [4, 103, 105, 128, 139, 210, 272, 314, 316, 322], "r": [4, 32, 101, 106, 121, 215, 223, 252, 309, 314, 320, 325], "yield": [4, 16, 21, 32, 72, 76, 88, 94, 238, 313], "insight": 4, "auxiliari": 4, "credit": 4, "futur": [4, 32, 72, 76, 88, 94, 125, 141, 145, 174, 224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 251, 308, 324], "past": [4, 314, 322], "spars": [4, 316], "ineffici": 4, "ad": [4, 13, 14, 16, 32, 35, 38, 41, 42, 49, 52, 53, 58, 72, 76, 88, 94, 132, 141, 181, 182, 210, 224, 226, 228, 231, 237, 240, 243, 251, 314, 316, 322, 325], "intermedi": [4, 170, 172, 207, 313, 321], "instrument": 4, "greatli": 4, "soccer": 4, "kick": 4, "ball": 4, "likelihood": [4, 313], "discov": 4, "score": [4, 40], "undesir": 4, "though": [4, 72, 76, 88, 94, 174, 315, 319], "unintention": 4, "valuabl": 4, "idiosyncrat": 4, "subtask": 4, "hierarch": [4, 324], "individu": [4, 18, 19, 20, 21, 32, 45, 72, 76, 88, 94, 313, 319], "select": [4, 15, 35, 38, 41, 42, 52, 53, 89, 90, 101, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 116, 118, 119, 120, 124, 126, 127, 129, 132, 133, 135, 136, 137, 138, 140, 143, 144, 146, 157, 170, 172, 206, 212, 288, 313, 322], "fall": [4, 52], "explicit": [4, 11, 45, 173, 322], "mechan": [4, 32, 72, 76, 88, 94, 141, 314, 320], "curios": 4, "magnitudin": 4, "domin": 4, "smaller": [4, 34, 36, 39, 72, 76, 88, 94, 236, 315, 319], "addition": 4, "timestep": [4, 40, 52, 129, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 319], "realli": 4, "larg": [4, 27, 108, 111, 143, 314, 315, 319, 322], "target": [4, 8, 21, 32, 72, 73, 76, 88, 94, 136, 140, 214, 215, 224, 225, 226, 227, 228, 230, 231, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 251, 252, 253, 254, 255, 256, 257, 292, 300, 301, 310, 311, 316, 320], "huge": [4, 180, 316], "std": [4, 121, 146, 183, 187, 204, 313, 325], "torchrl": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 316, 317, 318, 321, 322, 323], "initi": [4, 7, 13, 14, 16, 17, 18, 19, 20, 21, 32, 34, 36, 39, 40, 72, 76, 88, 94, 121, 125, 137, 140, 141, 143, 147, 157, 176, 181, 182, 204, 208, 210, 224, 225, 227, 228, 230, 231, 232, 236, 237, 238, 239, 240, 241, 242, 243, 245, 251, 298, 305, 314, 316, 320, 325], "estim": [4, 112, 119, 201, 202, 203, 224, 225, 226, 227, 228, 230, 231, 232, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 251, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 310, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "encount": [4, 308, 314, 320], "unseen": 4, "extrins": 4, "wrong": 4, "goe": [4, 89, 90, 313, 315, 319, 325], "bonus": 4, "denser": 4, "prior": [4, 191, 233, 319], "freshli": 4, "doesn": [4, 11, 85, 108, 111], "drop": [4, 62, 155], "meant": [4, 84], "encourag": [4, 313, 314, 322], "measur": [4, 315], "novelti": 4, "revisit": 4, "previous": [4, 315, 325], "diminish": 4, "decreas": 4, "ideal": [4, 121, 320], "down": [4, 13, 14, 16, 17, 316], "anyth": 4, "try": [4, 7, 8, 9, 26, 28, 34, 36, 39, 314, 315, 316, 319, 320, 324, 325], "distil": 4, "nois": [4, 147, 182, 199, 210, 241, 245, 285, 305, 313], "exploratori": [4, 224, 226, 237, 240], "misalign": 4, "trade": 4, "unavoid": 4, "prioriti": [4, 35, 41, 42, 55, 56, 57, 58, 63, 66, 225, 227, 228, 230, 231, 236, 241, 243, 245, 251, 311, 313, 314, 322], "schedul": [4, 7, 40, 285, 315, 320], "separ": [4, 8, 13, 14, 17, 18, 20, 21, 23, 125, 145, 225, 227, 230, 241, 243, 245, 313, 314, 319, 322, 325], "divers": [4, 88, 94], "bootstrap": [4, 231, 254, 260, 261, 313, 316], "noisi": [4, 181, 182, 199, 309], "unstabl": [4, 171, 195, 196], "inher": 4, "stochast": [4, 119, 168, 182, 184, 191, 225, 229, 230, 236, 239, 241, 243, 309, 315, 319], "enemi": 4, "variabl": [4, 7, 8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 170, 172, 176, 201, 202, 203, 238, 241, 311, 314], "pomdp": [4, 322], "loos": [4, 309, 314, 315], "nonexist": 4, "architectur": [4, 164, 319], "sequenc": [4, 13, 14, 16, 17, 26, 28, 30, 31, 35, 37, 38, 40, 43, 45, 54, 60, 64, 65, 67, 102, 103, 104, 105, 108, 110, 111, 115, 117, 121, 122, 126, 127, 128, 129, 130, 131, 132, 136, 138, 139, 140, 146, 158, 165, 167, 174, 177, 178, 179, 180, 186, 189, 193, 205, 216, 217, 229, 271, 272, 284, 285, 286, 288, 289, 298, 309, 313, 315, 316, 318, 319, 325], "rather": [4, 127, 313, 314, 315, 319], "lstm": [4, 172, 173, 183], "rel": [4, 137, 165, 194, 313, 314, 319, 322], "tend": 4, "stabl": [4, 9, 10], "compens": 4, "descent": [4, 182], "1000": [4, 38, 72, 76, 88, 94, 103, 146, 208, 210, 211, 215, 235, 313, 314, 315, 316, 321, 322], "minimum": [4, 130, 168, 183, 194, 195, 196, 218, 221, 223, 225, 230, 238, 239, 243, 280, 313, 315, 319], "manual": [4, 18, 20, 21, 313, 316, 322], "deviat": [4, 121, 146, 157, 168, 176, 181, 182, 204, 240, 245, 313, 319], "radic": 4, "begin": [4, 13, 14, 16, 18, 19, 20, 21], "stabil": [4, 116], "stage": [4, 313, 320], "never": 4, "prevent": [4, 26, 28, 171, 195, 196, 237, 240, 287, 322], "solv": [4, 9, 10, 308, 313, 314, 315, 319, 320, 322], "entir": [4, 179, 315, 320, 322], "submit": [4, 308, 324], "suffici": [4, 313], "recommend": [4, 7, 80, 319], "system": [4, 5, 315, 319, 320], "adequ": [4, 148, 315, 319], "infeas": 4, "allevi": [4, 309], "prune": 4, "fire": [4, 32, 72, 76, 88, 94], "certain": [4, 18, 20, 21, 32, 45, 72, 76, 88, 94, 100, 116, 135, 141, 208, 237, 309, 313, 314, 315, 319, 325], "illeg": 4, "move": [4, 21, 32, 72, 76, 88, 94, 107, 109, 125, 137, 140, 141, 143, 145, 146, 155, 174, 214, 287, 313, 314, 316, 324, 325], "chess": 4, "combin": [4, 140, 314, 322], "grasp": 4, "releas": [4, 7, 10, 32, 72, 76, 88, 94, 141, 243, 324], "top": [4, 64, 157, 176], "p": [4, 73, 92, 93], "wherein": 4, "cumul": [4, 132, 136, 157, 259, 315], "q": [4, 9, 72, 76, 88, 94, 160, 161, 162, 163, 166, 167, 169, 188, 189, 197, 203, 207, 212, 213, 225, 227, 228, 230, 231, 235, 236, 241, 243, 245, 251, 298, 307, 313], "flow": [4, 313, 315, 319, 320, 322], "reparameter": [4, 165, 178, 186], "soft": [4, 235, 243, 244], "critic": [4, 8, 201, 209, 224, 226, 227, 230, 236, 237, 240, 241, 242, 243, 245, 313, 315], "clip": [4, 40, 106, 130, 226, 245, 289, 315, 319, 320], "oppos": [4, 45], "incorrect": 4, "thought": [4, 72, 76, 88, 94], "bound": [4, 17, 21, 25, 26, 32, 72, 76, 88, 94, 106, 120, 146, 190, 191, 200, 206, 207, 210, 211, 212, 213, 214, 215, 218, 245, 309, 313, 314, 315, 325], "region": 4, "squash": [4, 316, 324], "tanh": [4, 158, 171, 174, 180, 194, 195, 196, 218, 315, 319, 320, 321, 324], "correct": [4, 119, 292, 315, 316], "prob": [4, 177, 178, 186, 315, 319], "rememb": 4, "remap": 4, "origin": [4, 8, 13, 14, 16, 17, 40, 80, 109, 110, 119, 125, 141, 145, 211, 214, 215, 235, 238, 240, 298, 313, 318, 320, 325], "real": [5, 215, 310, 316, 320], "histor": 5, "ceas": 5, "fork": 5, "farama": [5, 89, 90, 315, 320], "usag": [5, 7, 52, 103, 112, 170, 172, 225, 236, 243, 246, 309, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "bc": [5, 324], "break": [5, 13, 14, 16, 21, 32, 38, 42, 54, 72, 76, 88, 94, 103, 129, 146, 314, 322, 324], "against": [5, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 72, 76, 88, 94, 148, 200, 206, 207, 211, 212, 213, 214, 215, 315, 319], "13": [5, 10, 11, 91, 313, 314, 315, 316, 320, 321, 322, 325], "construct": [5, 32, 35, 38, 41, 42, 72, 76, 88, 89, 94, 108, 111, 148, 170, 172, 191, 215, 289, 309, 314, 315, 316, 320, 322, 325], "best": [5, 9, 80, 170, 172, 319, 322, 324], "gymwrapp": [5, 72, 76, 88, 94, 113, 133, 135, 307, 315, 324], "feel": [5, 308, 324], "free": [5, 7, 108, 111, 224, 233, 240, 311, 315, 319, 324], "gladli": 5, "instruct": [6, 7, 10, 22, 52, 110, 112, 313, 314, 315, 316, 319, 322], "prepar": [6, 315], "conda": [6, 7, 308], "7": [6, 10, 27, 33, 35, 38, 41, 136, 157, 158, 173, 174, 176, 179, 259, 313, 314, 319, 320, 322, 324], "cmake": 6, "14": [6, 11, 121, 313, 314, 316, 319, 320, 321, 322, 323], "activ": [6, 7, 9, 158, 164, 168, 174, 179, 180, 226, 237, 240, 309, 324], "sim": 6, "bullet": 6, "physic": [6, 7, 91, 311, 313, 319, 320], "headless": [6, 7], "cluster": [6, 7, 8, 18, 21, 308], "withbullet": 6, "forg": [6, 7], "aihabitat": 6, "nightli": [6, 316], "y": [6, 7, 87, 173, 179, 198, 313, 315, 319], "git": [6, 7, 10], "facebookresearch": 6, "subdirectori": 6, "verbos": 6, "export": [6, 7], "magnum_log": 6, "quiet": 6, "habitat_sim_log": 6, "remov": [6, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 49, 72, 76, 88, 94, 134, 238, 319, 325], "command": [6, 7, 10, 315, 319, 320, 325], "readm": [6, 7], "md": [6, 7], "habitatenv": [6, 307], "_has_habitat": 6, "available_env": [6, 68, 69, 70, 71, 72, 75, 76, 77, 81, 82, 88, 92, 93, 94, 325], "startswith": [6, 310, 313], "oserror": 6, "load": [6, 7, 13, 14, 16, 17, 34, 35, 36, 38, 39, 40, 41, 42, 45, 52, 53, 71, 88, 94, 100, 305, 311, 313, 322], "libllvmlit": 6, "ionstal": 6, "pointer": [6, 73, 238, 313], "env_nam": [6, 68, 70, 75, 81, 85, 91, 313, 315, 325], "llvmlite": 6, "config": [6, 7, 125, 145, 159, 164, 187, 293, 294, 295, 298, 299, 302], "var": [6, 7, 32, 72, 76, 88, 94, 141, 238, 243], "ld_preload": [6, 7], "8": [6, 7, 38, 58, 69, 72, 76, 88, 94, 136, 158, 160, 161, 169, 174, 201, 202, 203, 211, 214, 217, 236, 313, 314, 316, 319, 320, 321, 322, 323, 324], "bind": 6, "deactiv": [6, 7, 206], "importerror": [6, 7, 10], "usr": [6, 7, 10, 322], "x86_64": [6, 7], "linux": [6, 7], "gnu": [6, 7], "libopengl": [6, 7], "undefin": [6, 7, 10, 32, 72, 76, 88, 94, 141, 238, 243, 322], "symbol": [6, 7, 10], "_glapi_tls_curr": [6, 7], "link": [6, 7, 314], "mujoco_env": [6, 7], "libglvnd": [6, 7], "glx": [6, 7], "cos7": [6, 7], "reinstal": [6, 7], "xvfbwrapper": [6, 7], "sysroot": [6, 7], "lib64": [6, 7], "libgldispatch": [6, 7], "offici": [7, 52], "stand": [7, 318, 320], "joint": [7, 314], "dynam": [7, 236, 315, 320], "contact": [7, 37], "engin": [7, 91, 320], "biomechan": 7, "graphic": 7, "anim": [7, 319], "area": 7, "demand": [7, 325], "fast": [7, 9, 69, 127, 241, 313, 314, 315], "accur": [7, 52, 314, 320, 322], "articul": 7, "recent": [7, 11, 322, 325], "acquir": [7, 315], "deepmind": [7, 8, 9, 70, 71, 112, 315], "whomev": 7, "licenc": 7, "incorpor": [7, 204, 208, 210, 316, 320], "relianc": 7, "obsolet": 7, "seri": [7, 8, 33, 60, 64, 65, 67, 94, 120, 140, 272, 309, 310, 313, 314, 315, 319, 322, 325], "legaci": 7, "pro": [7, 308], "tip": [7, 308], "glfw": 7, "osmesa": 7, "egl": 7, "advic": [7, 325], "sudo": [7, 308], "enabl": [7, 8, 52, 55, 56, 66, 170, 172, 210, 285, 315, 319, 320, 322], "apt": [7, 319], "libglfw3": 7, "libglew2": 7, "libgl1": 7, "mesa": 7, "libosmesa6": 7, "awar": [7, 55, 56, 57, 63, 66, 314, 316], "workflow": [7, 201, 202, 203], "glew": 7, "mesalib": 7, "anaconda": 7, "libgl": 7, "cos6": 7, "menpo": 7, "glfw3": 7, "mujoco_gl": 7, "pyopengl_platform": 7, "pre": [7, 22, 32, 45, 56, 72, 76, 88, 94, 125, 143, 145, 316, 325], "binari": [7, 24, 27, 33, 102, 167, 189, 206, 207, 212, 213, 228, 230, 251], "setup": [7, 80], "mkdir": 7, "cd": 7, "tag": [7, 272, 277, 305], "earlier": [7, 313, 315, 316, 319, 322], "roboti": 7, "download": [7, 10, 52, 80, 125, 145, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325], "html": [7, 85], "wget": 7, "mujoco210": 7, "tar": 7, "gz": 7, "xf": 7, "charg": [7, 13, 14, 88, 94], "obtain": [7, 40, 72, 76, 88, 94, 125, 136, 145, 157, 188, 286, 313, 315, 319], "mjkei": 7, "txt": 7, "mjlib_path": 7, "home": [7, 34, 36, 45, 54, 321], "bin": [7, 167, 207, 309], "libmujoco210": 7, "ld_library_path": 7, "mujoco_py_mujoco_path": 7, "mujoco_py_mjkey_path": 7, "reload": 7, "later": [7, 163, 211, 215, 313, 315, 322], "nvidia": [7, 80], "older": [7, 11], "hack": [7, 313], "line": [7, 32, 72, 76, 88, 94, 314, 319, 322], "adatp": 7, "script": [7, 148, 298, 301, 305, 309, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "unnot": [7, 126], "until": [7, 21, 138, 140, 315, 316, 319], "complet": [7, 9, 62, 76, 103, 135, 308, 310, 313, 315, 318], "mujoco_pi": 7, "trigger": 7, "cymj": 7, "linuxgpuextensionbuild": 7, "filenam": [7, 314, 322], "troubleshoot": 7, "gl": 7, "h": [7, 103, 105, 128, 139, 170, 172, 176, 272, 314, 316, 322], "eglshim": 7, "10": [7, 22, 26, 35, 38, 40, 41, 42, 43, 45, 55, 56, 64, 66, 73, 84, 89, 90, 92, 93, 95, 96, 101, 103, 136, 138, 139, 157, 159, 164, 173, 176, 187, 198, 208, 210, 218, 225, 228, 230, 240, 241, 242, 245, 251, 253, 254, 255, 256, 259, 280, 311, 313, 314, 315, 316, 319, 320, 321, 322, 324, 325], "fatal": 7, "No": 7, "directori": [7, 45, 55, 277, 311], "devel": 7, "ubuntu": [7, 80], "libglew": 7, "dev": 7, "cento": 7, "yum": 7, "glu": 7, "38": [7, 313, 314, 315, 320, 321, 322, 323], "disappear": [7, 314, 316, 318], "libstdc": 7, "6": [7, 13, 14, 16, 17, 38, 82, 92, 93, 121, 123, 136, 158, 165, 173, 174, 179, 180, 184, 194, 219, 298, 313, 314, 319, 320, 321, 322, 323, 324, 325], "glibcxx_3": 7, "29": [7, 314, 316, 319, 320, 321, 323], "compil": [7, 32, 72, 76, 88, 94], "libosmesa": 7, "libgcc": 7, "Then": [7, 315, 318], "filenotfounderror": 7, "errno": 7, "patchelf": 7, "fatalerror": 7, "gladloadgl": 7, "mj_env": 7, "912": 7, "glfwerror": 7, "65537": 7, "sovl": 7, "myscript": 7, "runtimeerror": [7, 8, 26, 28, 32, 72, 76, 88, 94, 120, 141, 243, 325], "job": [7, 18, 19, 20, 22], "slurm": 7, "mjrendercontext": 7, "pyx": 7, "46": [7, 314, 320, 321, 322], "114": [7, 313, 320, 322], "_setup_opengl_context": 7, "opengl_context": 7, "130": [7, 313, 320], "offscreenopenglcontext": 7, "fail": [7, 22, 26, 28, 101, 148], "opengl": [7, 319], "global": [7, 32, 72, 76, 88, 89, 90, 94, 188, 197, 211, 215, 251, 311, 313, 319], "cuda_visible_devic": 7, "id": [7, 23, 40, 210, 241, 275, 298], "slurm_step_gpu": 7, "enviro": [7, 10], "black": 7, "onscreen": 7, "101": [7, 320, 322], "correctli": [7, 32, 72, 76, 88, 94], "lgl": 7, "libegl": 7, "x11": [7, 319], "xlib": 7, "libx11": 7, "xorg": 7, "loop": [8, 13, 14, 16, 17, 76, 155, 204, 208, 210, 240, 289, 311, 313, 314, 318, 322], "sketch": [8, 311], "_": [8, 73, 80, 104, 108, 110, 111, 119, 121, 127, 139, 146, 200, 214, 219, 223, 224, 225, 227, 230, 236, 240, 241, 243, 245, 253, 254, 255, 256, 313, 314, 315, 316, 319, 320, 322, 324], "n_training_step": 8, "datapoint": [8, 45, 322], "onlin": [8, 13, 17, 103, 164, 187, 224, 229, 239, 240, 280, 305, 315, 316, 319, 322], "n_data_per_train": 8, "no_grad": [8, 32, 72, 76, 88, 94, 119, 253, 254, 255, 256, 315, 316, 319], "replay_buff": [8, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 286, 301, 313, 314, 315, 319, 322], "extend": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 52, 53, 60, 64, 65, 67, 129, 286, 311, 313, 314, 315, 316, 319, 321, 322, 324], "loss_fn": [8, 316, 324], "backward": [8, 32, 72, 76, 88, 94, 146, 224, 225, 227, 230, 236, 240, 241, 242, 243, 245, 313, 315, 316, 319, 320], "zero_grad": [8, 32, 72, 76, 88, 94, 311, 313, 315, 316, 319, 320], "backpropag": [8, 224, 225, 226, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 251, 319, 320], "differenti": [8, 45, 119, 253, 254, 255, 256, 316, 319, 320], "denomin": 8, "artifact": 8, "numer": [8, 38, 146, 171, 195, 196, 200, 206, 207, 211, 212, 213, 214, 215, 287, 315, 322, 325], "misconcept": 8, "save": [8, 32, 34, 36, 39, 72, 76, 88, 94, 271, 289, 311, 319], "freed": 8, "appear": [8, 33, 320, 322], "compuat": 8, "twice": 8, "fix": [8, 137, 225, 239, 243, 314, 320, 325], "retain_graph": 8, "discuss": [8, 9, 319], "inplac": [8, 32, 34, 36, 39, 72, 76, 88, 94, 141, 243, 313], "accumul": 8, "onto": [8, 33, 152, 200, 204, 206, 207, 210, 211, 212, 213, 214, 215, 316, 320], "exclud": [8, 52, 103, 113, 155, 188, 319, 322], "forward": [8, 32, 72, 76, 88, 94, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 124, 125, 126, 127, 129, 132, 133, 135, 136, 137, 138, 140, 143, 144, 146, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 172, 173, 174, 175, 179, 180, 181, 183, 184, 185, 187, 188, 190, 191, 193, 197, 198, 204, 205, 207, 208, 210, 213, 214, 215, 218, 219, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 251, 253, 254, 255, 256, 257, 310, 320, 324], "submodul": [8, 32, 72, 76, 88, 94, 98, 238], "param": [8, 32, 40, 72, 76, 84, 88, 94, 107, 108, 109, 113, 119, 127, 133, 135, 140, 165, 167, 194, 205, 211, 214, 217, 219, 238, 247, 250, 253, 254, 255, 256, 257, 313, 319, 320, 321, 324], "grad": [8, 32, 72, 76, 88, 94, 313, 315], "whose": [8, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 44, 46, 47, 72, 76, 88, 89, 90, 94, 107, 125, 137, 140, 141, 143, 145, 183, 188, 214], "neg": [8, 13, 14, 16, 17, 18, 19, 20, 21, 35, 41, 58, 103, 115, 126, 142, 232, 310, 315, 319, 320], "ask": [8, 313, 315, 316, 319, 321, 325], "much": [8, 13, 14, 35, 41, 58, 88, 94, 237, 240, 315, 319, 320, 322, 325], "render": [8, 285, 313, 314, 315], "upon": [8, 320], "factor": [8, 32, 129, 171, 182, 195, 196, 204, 208, 210, 225, 231, 232, 234, 244, 259, 313, 314, 319, 322, 325], "fit": [8, 11, 121, 310, 311, 313], "bottlneck": 8, "brax": [8, 68, 69, 127, 325], "jax": [8, 11], "improperli": 8, "item": [8, 13, 26, 28, 32, 38, 45, 54, 64, 72, 76, 88, 94, 114, 141, 177, 178, 227, 228, 243, 280, 310, 311, 313, 315, 316, 319, 320, 322], "underli": [8, 72, 76, 88, 94, 238, 320], "tedeiou": 8, "priorit": [8, 35, 41, 58, 225, 227, 228, 230, 236, 241, 243, 245, 313, 314], "amount": [8, 210, 314, 322], "contigu": [8, 72, 76, 88, 94, 152, 315, 319, 320, 322, 324, 325], "costli": [8, 320], "concaten": [8, 21, 30, 31, 103, 104, 121, 140, 174, 217, 313, 314, 319, 320, 322, 325], "constitut": [8, 314, 319, 320], "plain": 8, "profil": 8, "fulli": [8, 32, 72, 76, 88, 94, 314, 320, 322], "frequent": [8, 322], "program": [8, 236, 325], "functorch": [8, 10], "incl": 8, "suit": [8, 71, 315, 325], "mujoco_instal": 8, "valueerror": 8, "bad": 8, "fds_to_keep": 8, "expand": [8, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 214, 217, 238, 319, 320, 324], "new_shap": 8, "content": [8, 13, 14, 16, 26, 28, 35, 38, 41, 42, 62, 85, 158, 174, 179, 180, 238, 315, 320, 324], "permut": [8, 62, 123, 324, 325], "idea": [9, 241, 311, 316, 319], "introductori": 9, "intro": [9, 315, 316], "dai": [9, 324], "2022": [9, 10, 320, 324], "spin": 9, "deep": [9, 103, 160, 161, 162, 163, 166, 210, 224, 235, 243, 244, 313], "hug": 9, "syllabu": 9, "lectur": 9, "awesom": 9, "curat": 9, "succinct": 9, "summari": [9, 121, 146, 313, 314, 315, 316], "reddit": 9, "reagent": 9, "orient": [9, 325], "baselines3": 9, "tf": 9, "bandit": [9, 87], "tensorflow": [9, 177, 178], "kera": 9, "acm": 9, "dopamin": 9, "prototyp": 9, "salina": 9, "sequenti": [9, 32, 72, 76, 88, 94, 119, 216, 217, 240, 309, 315, 316, 319, 320, 321, 325], "tianshou": 9, "eleg": 9, "rlpyt": 9, "rllib": 9, "industri": [9, 324], "grade": 9, "factori": [9, 43], "throughput": [9, 313], "cherri": 9, "jaxrl": 9, "space": [9, 33, 44, 72, 76, 88, 94, 106, 110, 152, 164, 167, 179, 185, 189, 200, 204, 206, 207, 210, 211, 212, 213, 214, 215, 217, 218, 219, 228, 230, 245, 251, 309, 314, 315, 316, 319, 320, 324, 325], "mbrl": [9, 84, 309], "rlmeta": 9, "light": 9, "elegantrl": 9, "cloud": 9, "mtrl": 9, "baselin": 9, "689": [10, 320], "_torchrl": 10, "_zn8pybind116detail11type_casterin2at6tensoreve4loadens_6handleeb": 10, "colab": [10, 315, 316, 319], "notebook": [10, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325], "24": [10, 314, 319, 320], "11": [10, 27, 33, 45, 55, 56, 66, 73, 139, 157, 176, 313, 314, 315, 319, 320, 322], "12": [10, 55, 56, 66, 92, 93, 313, 314, 315, 316, 319, 320, 322, 323], "pip": [10, 53, 319, 324, 325], "pip3": [10, 315, 316, 319], "extra": [10, 32, 72, 76, 88, 94, 103, 146, 155, 309, 315, 316, 322], "url": 10, "org": [10, 35, 58, 103, 125, 143, 159, 160, 161, 162, 163, 164, 167, 168, 169, 176, 177, 178, 182, 184, 185, 187, 188, 190, 191, 197, 207, 210, 224, 225, 229, 231, 232, 233, 234, 235, 236, 239, 240, 242, 243, 244, 253, 258, 266, 321], "whl": 10, "u": [10, 53, 320], "There": [10, 170, 172, 309, 311, 315, 316, 319, 320, 322, 325], "upgrad": 10, "relas": 10, "lib_version_her": 10, "module_nam": [11, 238], "str": [11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 58, 70, 72, 74, 76, 87, 88, 89, 90, 91, 94, 97, 98, 101, 103, 110, 112, 118, 119, 121, 125, 126, 128, 135, 136, 141, 143, 145, 146, 149, 153, 155, 156, 157, 158, 160, 161, 162, 163, 166, 167, 169, 170, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 188, 189, 197, 200, 206, 207, 211, 212, 213, 214, 215, 218, 219, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 248, 251, 252, 253, 254, 255, 256, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 293, 298, 299, 305, 314, 315], "callabl": [11, 13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 41, 42, 44, 45, 46, 47, 52, 53, 72, 73, 76, 84, 88, 94, 100, 112, 223, 238, 294, 295, 303, 304, 305, 314], "from_vers": 11, "to_vers": 11, "intersect": [11, 135], "vs": [11, 170, 172, 173, 324], "longer": [11, 314, 319, 322], "self": [11, 26, 28, 32, 34, 36, 39, 72, 76, 84, 88, 94, 101, 107, 108, 111, 125, 137, 140, 141, 143, 145, 157, 167, 176, 188, 197, 204, 208, 214, 219, 224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 251, 253, 254, 255, 256, 257, 311, 313, 314, 320, 322, 324], "x": [11, 23, 26, 32, 38, 40, 119, 139, 158, 167, 169, 170, 172, 173, 174, 176, 179, 180, 198, 206, 212, 221, 223, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 289, 313, 315, 320, 322, 324], "23": [11, 314, 315, 320, 321], "lambda": [11, 13, 14, 16, 17, 21, 22, 38, 72, 73, 76, 88, 94, 100, 119, 137, 198, 206, 212, 232, 234, 253, 256, 264, 265, 269, 270, 301, 310, 313, 314, 319, 322, 324, 325], "import_modul": 11, "27": [11, 313, 314, 318, 320, 321, 322], "get_class_that_defined_method": 11, "f": [11, 76, 223, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 313, 314, 315, 316, 319, 320, 322, 325], "otherwis": [11, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 43, 44, 45, 46, 47, 52, 54, 72, 76, 83, 88, 89, 90, 94, 103, 110, 121, 136, 137, 138, 141, 146, 171, 179, 180, 195, 196, 206, 212, 218, 225, 233, 238, 239, 243, 285, 286, 311, 313, 314, 315, 316, 320, 325], "classmethod": [11, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 143, 159, 187], "module_set": 11, "setters_dict": 11, "dict": [11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 34, 36, 39, 72, 73, 76, 88, 89, 90, 94, 97, 119, 137, 141, 146, 158, 159, 160, 161, 162, 163, 164, 169, 173, 174, 187, 211, 215, 243, 276, 277, 285, 294, 295, 298, 303, 304, 305, 313, 314, 315, 325], "setter": 11, "setter_dict": 11, "copi": [11, 18, 19, 20, 21, 32, 34, 36, 39, 40, 45, 72, 76, 88, 94, 127, 136, 141, 155, 170, 172, 205, 238, 243, 310, 313, 314, 316, 322], "arg": [12, 14, 26, 28, 32, 55, 56, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 101, 107, 125, 134, 137, 140, 141, 142, 144, 145, 157, 158, 166, 170, 172, 174, 175, 176, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 251, 253, 254, 255, 256, 257, 279, 282, 286, 289, 305, 314, 322], "kwd": 12, "policy_weight": [12, 13, 14, 16, 17, 19, 20], "tensordictbas": [12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 26, 28, 29, 32, 41, 42, 52, 53, 72, 74, 76, 88, 94, 101, 103, 104, 107, 108, 109, 112, 113, 114, 115, 118, 119, 124, 126, 127, 129, 132, 133, 135, 136, 137, 138, 140, 146, 155, 156, 157, 170, 172, 175, 176, 204, 205, 207, 208, 210, 213, 214, 215, 224, 225, 226, 227, 228, 229, 230, 231, 236, 237, 238, 239, 240, 241, 242, 243, 245, 251, 252, 253, 254, 255, 256, 257, 289, 313, 320], "udpdat": [12, 13, 14, 16, 17, 19, 20], "create_env_fn": [13, 14, 16, 17, 18, 19, 20, 21, 73, 88, 94, 313, 324], "int": [13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 70, 72, 76, 84, 88, 89, 90, 94, 103, 104, 105, 110, 115, 116, 120, 121, 123, 125, 126, 128, 134, 135, 138, 141, 142, 143, 145, 148, 152, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 204, 205, 206, 207, 208, 210, 211, 213, 214, 215, 224, 225, 226, 230, 232, 233, 237, 238, 239, 240, 241, 245, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 280, 281, 282, 285, 286, 289, 291, 298, 299, 303, 304, 305, 320], "200": [13, 14, 16, 17, 21, 32, 72, 76, 88, 94, 95, 96, 129, 160, 161, 168, 190, 191, 313, 316, 320], "total_fram": [13, 14, 16, 17, 18, 19, 20, 21, 103, 129, 289, 292, 301, 311, 313, 314, 315, 316, 319, 322, 324], "device_typ": [13, 16, 27, 30, 33, 158, 159, 160, 161, 162, 163, 169, 174, 181, 182, 187], "create_env_kwarg": [13, 14, 16, 17, 73, 85, 88, 94, 313], "postproc": [13, 14, 16, 17, 18, 19, 20, 21, 129, 314, 322], "explorationtyp": [13, 14, 16, 20, 21, 238, 285, 313, 314, 315, 316, 324], "interactiontyp": [13, 16, 18, 19, 20, 21, 150, 154, 211, 215, 285], "exploration_mod": [13, 16, 18, 19, 20, 307, 309], "preemptive_threshold": [13, 14], "float": [13, 14, 25, 27, 32, 33, 35, 40, 41, 46, 58, 72, 76, 88, 94, 103, 107, 108, 111, 119, 121, 125, 129, 130, 131, 136, 137, 139, 140, 141, 143, 145, 146, 165, 168, 171, 174, 177, 178, 181, 182, 190, 191, 194, 196, 204, 214, 218, 221, 222, 223, 224, 225, 230, 233, 234, 235, 236, 239, 241, 243, 244, 245, 252, 258, 259, 260, 261, 262, 263, 264, 265, 266, 287, 313, 314, 322, 325], "num_thread": [13, 14, 88, 94], "num_sub_thread": [13, 14, 88, 94], "datacollector": [13, 14, 16, 17, 211, 215, 240, 315], "recept": 13, "safe": [13, 14, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 200, 204, 206, 207, 210, 211, 212, 213, 214, 215, 217, 309, 324], "stepcount": [13, 72, 76, 88, 94, 140, 313, 314, 315, 316, 319, 324], "env_mak": [13, 14, 16, 21, 301, 325], "50": [13, 14, 16, 21, 37, 40, 314, 315, 316, 319, 320, 321, 322], "2000": [13, 14, 16, 45, 79, 315, 322], "enumer": [13, 14, 16, 21, 32, 38, 42, 72, 76, 88, 94, 246, 310, 313, 314, 315, 316, 322, 324], "int64": [13, 14, 16, 24, 27, 30, 34, 36, 37, 40, 41, 43, 45, 54, 72, 76, 83, 87, 88, 89, 90, 92, 93, 94, 112, 123, 129, 135, 167, 189, 206, 207, 210, 212, 213, 309, 315, 316, 320, 322, 324, 325], "step_count": [13, 14, 16, 72, 76, 88, 94, 135, 315, 316, 324], "shutdown": [13, 14, 16, 17, 21, 313, 324], "del": [13, 14, 16, 313, 315, 318, 324, 325], "randompolici": [13, 14, 16, 18, 19, 20, 22, 103, 129, 307, 322], "lifespan": [13, 14, 16, 18, 19, 20, 314], "divis": [13, 14, 16, 18, 19, 20, 319], "endless": [13, 14, 16, 18, 19, 20], "dictionari": [13, 14, 16, 17, 18, 19, 20, 21, 26, 32, 34, 36, 39, 45, 72, 76, 88, 94, 137, 141, 211, 215, 243, 285, 303, 304, 305, 311, 314, 315, 320, 325], "span": [13, 14, 16, 17, 18, 19, 20, 21], "n_step": [13, 14, 16, 17, 18, 19, 20, 21, 32, 314, 315, 319], "independ": [13, 14, 16, 17, 18, 19, 20, 21, 140, 142, 180, 310, 311, 313, 314, 319, 322, 324], "ignor": [13, 14, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 43, 44, 46, 47, 72, 76, 88, 94, 110, 113, 133, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 177, 178, 179, 180, 183, 184, 185, 187, 190, 191, 193, 198, 204, 205, 207, 208, 210, 213, 218, 221, 253, 322, 325], "mainli": [13, 14, 16, 17, 18, 19, 20, 21, 40, 309, 319, 320], "round": [13, 14, 16], "closest": [13, 14, 16], "post": [13, 14, 16, 18, 19, 20, 21, 32, 72, 76, 88, 94], "multistep": [13, 14, 16, 18, 19, 20, 21, 307, 314], "return_same_td": [13, 14, 16], "cautious": [13, 14, 16, 240], "whole": [13, 14, 16, 26, 28, 32, 45, 72, 76, 88, 94, 141, 243, 280, 313, 315], "boolm": [13, 14], "update_policy_weight_": [13, 14], "sync": [13, 14, 18, 19, 20, 21, 291, 301, 311, 313, 324], "async": [13, 14, 18, 19, 20, 21, 313, 324], "ratio": [13, 14, 40, 313, 315], "finish": [13, 14, 21, 76, 129, 325], "rest": [13, 14, 309, 315, 316, 320, 324], "earli": [13, 14, 76, 135, 324], "thread": [13, 14, 85, 88, 94], "equal": [13, 14, 85, 88, 94, 120, 121, 158, 166, 170, 172, 174, 180, 244, 248, 280, 303, 304, 313, 315, 321], "plu": [13, 14, 40, 88, 94, 320], "safeti": [13, 14, 84, 88, 94], "harm": [13, 14, 88, 94], "load_state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 72, 76, 88, 94, 141, 146, 243, 311, 313], "state_dict": [13, 14, 16, 17, 21, 32, 34, 36, 39, 72, 76, 88, 94, 141, 146, 243, 305, 311, 313, 314, 325], "ordereddict": [13, 14, 16, 17, 21, 32, 72, 76, 88, 94, 141, 146, 243, 314], "form": [13, 14, 17, 32, 35, 38, 41, 42, 52, 53, 72, 76, 88, 94, 146, 170, 172, 223, 224, 226, 237, 240, 289, 309, 319], "worker0": [13, 14, 17], "state_dict0": [13, 14, 17], "worker1": [13, 14, 17], "state_dict1": [13, 14, 17], "reset_idx": [13, 14, 17], "static_se": [13, 14, 16, 17, 21, 72, 76, 88, 94, 141], "integ": [13, 14, 16, 17, 23, 30, 31, 32, 33, 40, 47, 63, 72, 76, 88, 94, 112, 116, 121, 135, 158, 174, 179, 180, 236, 243, 322], "increment": [13, 14, 16, 17, 72, 76, 88, 94, 237], "env_fn": [13, 14, 16, 17, 73, 303, 304], "env_fn_parallel": [13, 14, 16, 17], "100": [13, 14, 16, 17, 32, 38, 41, 43, 55, 56, 72, 76, 88, 94, 106, 112, 121, 129, 135, 179, 207, 281, 301, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "300": [13, 14, 16, 17, 162, 163, 320], "out_se": [13, 14, 16, 17, 325], "shut": [13, 14, 16, 17], "irrevers": [13, 14, 17], "kwarg": [14, 16, 17, 21, 25, 26, 32, 52, 55, 56, 64, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 101, 107, 125, 134, 137, 140, 141, 142, 144, 145, 147, 157, 158, 160, 161, 162, 163, 166, 169, 170, 171, 172, 174, 175, 176, 179, 180, 186, 194, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 251, 252, 253, 254, 255, 256, 257, 272, 276, 277, 279, 282, 289, 294, 295, 298, 302, 303, 304, 310, 315, 319, 322], "tupl": [15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 44, 46, 47, 52, 53, 72, 76, 88, 94, 101, 110, 112, 118, 119, 121, 126, 155, 160, 166, 167, 170, 172, 173, 174, 180, 183, 187, 188, 189, 206, 207, 212, 213, 218, 224, 225, 227, 230, 232, 236, 238, 240, 241, 242, 243, 245, 253, 254, 255, 256, 272, 283, 285, 287, 296, 297, 313], "rand": [15, 24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 69, 82, 84, 101, 108, 111, 157, 176, 224, 225, 227, 228, 230, 236, 240, 241, 243, 245, 320, 324, 325], "describ": [15, 44, 104, 140, 194, 195, 275, 310, 313, 315, 319, 320, 325], "tensor_spec": [15, 101, 156, 230, 240, 242], "boundedtensorspec": [15, 22, 26, 72, 76, 88, 94, 208, 210, 211, 218, 224, 225, 227, 236, 240, 241, 243, 245, 307, 315, 319, 320, 324, 325], "cube": 15, "envcreat": [16, 22, 301, 302, 305, 307, 313, 314, 324, 325], "interruptor": 16, "_interruptor": 16, "start_collect": 16, "stop_collect": 16, "preeptiv": 16, "chunk": 16, "policy_state_dict": 16, "env_state_dict": 16, "close": [16, 17, 76, 85, 119, 224, 226, 237, 240, 313, 318, 320, 324], "pin_memori": [17, 35, 38, 41, 42, 52, 53, 124, 313, 324], "regular": [17, 34, 36, 39, 72, 76, 88, 94, 141, 189, 207, 212, 213, 214, 215, 231, 291, 307, 311, 313, 314, 322, 325], "mere": 17, "greater": [17, 170, 172, 313, 314, 324], "sent": [17, 55, 56, 66, 146], "server": 17, "length": [17, 20, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 40, 43, 44, 45, 46, 47, 54, 72, 76, 88, 94, 126, 146, 157, 158, 160, 162, 164, 166, 174, 176, 179, 180, 200, 214, 219, 280, 286, 313, 315, 316, 320, 322, 325], "postprocessor": 17, "collector_class": [18, 19, 20, 21], "collector_kwarg": [18, 19, 20, 21], "num_workers_per_collector": [18, 19, 20, 21], "slurm_kwarg": [18, 19, 20], "update_after_each_batch": [18, 20, 21], "max_weight_update_interv": [18, 19, 20, 21], "tcp_port": [18, 19, 20, 22], "deriv": [18, 19, 20, 21, 289], "string": [18, 19, 20, 32, 37, 45, 54, 72, 76, 88, 94, 100, 125, 135, 145, 170, 172, 206, 211, 212, 223, 271, 288, 298, 310, 313, 315, 316], "respect": [18, 19, 20, 32, 72, 76, 88, 94, 102, 107, 108, 111, 125, 126, 137, 140, 141, 143, 145, 179, 191, 214, 219, 284, 315, 316, 319], "subnod": [18, 19, 20, 21], "readi": [18, 20, 21, 308, 314, 315, 318, 322], "serv": [18, 20, 21, 78, 322, 325], "fashion": [18, 20, 21], "executor": [18, 19, 20], "distributed_back": [18, 19], "ucc": [18, 19], "overwritten": [18, 20, 21, 72, 76, 88, 94, 115], "seen": [18, 20, 21, 310, 313, 314, 316, 319, 322], "turn": [18, 20, 21, 117, 142, 206, 285, 310, 313, 314, 316, 320, 321], "mp": [18, 19, 20, 73, 146], "submitit_delai": [18, 22], "former": [18, 19, 20, 35, 38, 41, 42, 52, 72, 76, 88, 94, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 179, 180, 183, 184, 185, 187, 190, 191, 193, 198, 204, 205, 207, 208, 210, 213, 218, 221, 313], "whilst": [18, 19, 20], "latter": [18, 19, 20, 32, 52, 72, 76, 88, 94, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 179, 180, 183, 184, 185, 187, 190, 191, 193, 198, 204, 205, 207, 208, 210, 213, 218, 221, 240, 303, 304], "homonym": [18, 19, 20, 320], "visit": [18, 19, 20], "facebookincub": [18, 19, 20], "tcp": [18, 19, 20, 22], "port": [18, 19, 20, 22], "10003": [18, 19, 20, 22], "worker_rank": [18, 19, 21], "update_interv": 19, "frequenc": [19, 313], "visible_devic": 20, "tensorpipe_opt": 20, "experiment": [20, 33, 211, 215], "tensorpiperpcbackendopt": 20, "ray_init_config": 21, "remote_config": 21, "num_collector": [21, 303, 304, 313, 314], "coordin": 21, "hood": [21, 320], "init": [21, 32, 72, 76, 88, 94, 313, 314, 315], "autodetect": 21, "similarli": [21, 32, 62, 72, 76, 88, 94, 179, 216, 217, 236, 325], "num_cpu": 21, "num_gpu": 21, "1024": [21, 164, 314, 322], "equat": [21, 76, 210, 223, 226, 244, 315, 320], "exce": [21, 315, 322], "indefinit": [21, 51], "raydistributedcollector": 21, "distributed_collector": 21, "10000": [21, 289, 313, 315, 316], "add_collector": 21, "local_polici": 21, "remote_collector": 21, "stop_remote_collector": 21, "num_job": 22, "tcpport": 22, "submitit_main_conf": 22, "slurm_cpus_per_task": 22, "32": [22, 26, 92, 93, 95, 96, 158, 159, 160, 161, 164, 169, 174, 179, 180, 184, 185, 187, 188, 197, 251, 313, 314, 316, 319, 320, 321, 322, 324, 325], "slurm_gpus_per_nod": 22, "slurm_partit": 22, "timeout_min": 22, "submitit_collection_conf": 22, "delai": 22, "jump": 22, "host": [22, 32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214], "wherea": [22, 110, 238, 311], "satellit": 22, "rendezv": 22, "hang": 22, "forev": 22, "default_config": [22, 159, 164, 187, 205], "default_slurm_conf_main": 22, "default_slurm_conf": 22, "__name__": [22, 73, 314], "__main__": [22, 73], "rollout_tensordict": 23, "max": [23, 33, 36, 41, 45, 54, 58, 110, 138, 194, 195, 196, 205, 210, 225, 226, 230, 239, 241, 243, 313, 315, 316, 319], "durat": [23, 319], "meta": [23, 44, 52, 74, 311, 315, 319, 322], "aren": [23, 136, 316], "assert_is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "belong": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 146, 309, 313, 319], "encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 38, 41, 42, 44, 46, 47, 110, 185, 186, 190, 223, 309, 314, 315, 316, 320, 322], "ndarrai": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 76, 210, 218], "ignore_devic": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "np": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 76, 218, 320], "cast": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 54, 72, 76, 88, 94, 107, 108, 111, 119, 125, 137, 140, 141, 143, 145, 146, 214, 298, 325], "compli": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "least": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 106, 322, 325], "complient": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "singleton": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 44, 46, 47, 158, 174, 192, 193], "implements_for_spec": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "torch_funct": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "tensor_to_index": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "is_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 325], "project": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 110, 170, 200, 204, 206, 207, 210, 211, 212, 213, 214, 215, 309, 324, 325], "back": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 44, 46, 47, 52, 200, 206, 207, 211, 212, 213, 214, 215, 315, 319, 320, 322], "uniform": [24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 41, 44, 46, 47, 58], "unbound": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 137, 152, 320, 322], "squeez": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 103, 134, 136, 158, 192, 193, 313, 320, 322], "dim": [24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 39, 44, 46, 47, 103, 104, 123, 137, 142, 146, 173, 193, 198, 305, 314, 315, 320, 322], "to_numpi": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "transformed_in": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 140, 141, 183, 194, 305], "check_spec_encod": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "to_one_hot": [24, 27, 30], "hot": [24, 27, 30, 31, 33, 89, 90, 101, 110, 167, 186, 189, 206, 207, 212, 213, 224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 251, 316], "to_one_hot_spec": [24, 27, 30], "onehotdiscretetensorspec": [24, 27, 167, 189, 206, 212, 228, 230, 251, 307, 309], "convert": [24, 27, 30, 31, 32, 33, 34, 36, 39, 45, 72, 76, 88, 94, 107, 108, 111, 125, 137, 140, 141, 143, 145, 146, 214, 223, 238, 313, 314, 315, 320, 322], "type_check": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47], "fill": [24, 25, 26, 27, 28, 29, 30, 31, 33, 44, 46, 47, 137, 172, 316, 320, 321], "upper": [25, 120], "unnam": 26, "pixels_spec": 26, "observation_vector_spec": 26, "33": [26, 32, 72, 76, 88, 94, 158, 174, 313, 314, 319, 320, 321], "composite_spec": 26, "observation_vector": [26, 104, 298, 313], "randn": [26, 34, 36, 39, 55, 56, 66, 121, 152, 159, 164, 167, 173, 177, 178, 179, 183, 186, 187, 189, 200, 201, 202, 203, 205, 206, 211, 212, 214, 217, 218, 219, 224, 225, 227, 228, 230, 236, 240, 241, 242, 243, 245, 253, 254, 255, 256, 288, 309, 324, 325], "td_project": 26, "is_empti": [26, 28, 320], "include_nest": [26, 28], "leaves_onli": [26, 28], "itemsview": 26, "immedi": [26, 28, 32, 72, 76, 88, 94, 252, 319], "children": [26, 28, 32, 72, 76, 88, 94], "keysview": [26, 28], "reflect": [26, 28, 89, 90, 155, 238, 292, 314, 315, 316, 319], "lock_": [26, 28], "recurs": [26, 28, 32, 48, 49, 72, 76, 88, 94, 238], "succeed": [26, 28, 315, 319, 320], "selected_kei": [26, 28, 133, 313], "unlock_": [26, 28], "unlock": [26, 28], "valuesview": 26, "onehottensorspec": 27, "action_valu": [27, 33, 166, 167, 189, 206, 207, 212, 213, 230, 238, 251, 309, 316], "arang": [27, 33, 167, 178, 206, 280, 309, 322], "argmax": [27, 167, 189, 207, 213], "chosen_action_valu": [27, 33, 188, 189, 197, 212, 213, 251, 309, 316], "outcom": [27, 33, 165, 194], "lazi": [28, 29, 49, 50, 72, 76, 88, 94, 125, 143, 181, 216, 217, 313, 314, 318, 322, 325], "represent": [28, 29, 32, 72, 76, 88, 94, 125, 143, 145, 313, 320, 321, 325], "drawn": [28, 29, 137, 208, 211, 215, 315, 319], "lazystackedtensordict": [28, 72, 76, 84, 88, 94, 318, 324], "heterogen": [28, 29, 83, 89, 90, 148, 179, 180, 313, 314], "semant": [28, 29, 309], "thrown": [29, 32, 72, 76, 88, 94, 322], "nvec": [30, 31], "cardin": [30, 31, 167, 189, 206, 207, 213, 315], "ax": [30, 181, 182], "m": [30, 32, 72, 76, 88, 94, 110, 215, 309, 314, 320], "ts": [30, 31], "multionehotdiscretetensorspec": [30, 228, 230, 251, 307], "use_regist": [31, 33], "to_categor": [31, 33], "to_categorical_spec": [31, 33], "multidiscretetensorspec": [31, 307], "gamma": [32, 129, 176, 224, 225, 227, 228, 230, 231, 232, 234, 236, 238, 240, 241, 242, 243, 245, 246, 247, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 301, 310, 313, 314, 315, 319, 324], "sutton": [32, 310, 319], "1988": 32, "tempor": [32, 170, 172, 176, 254, 255, 260, 261], "44": [32, 313, 314, 320, 321], "discount": [32, 73, 129, 225, 231, 232, 234, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 310, 314, 315, 319], "ahead": [32, 325], "add_modul": [32, 72, 76, 88, 94], "child": [32, 72, 76, 88, 94], "fn": [32, 37, 72, 76, 88, 94, 183, 303, 304], "init_weight": [32, 72, 76, 88, 94], "fill_": [32, 72, 76, 88, 94, 314, 316, 325], "net": [32, 72, 76, 88, 94, 173, 180, 224, 225, 230, 236, 240, 241, 242, 243, 298, 301, 314, 320, 321, 324], "in_featur": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 158, 160, 161, 162, 163, 173, 174, 180, 181, 182, 201, 214, 228, 324], "out_featur": [32, 72, 76, 84, 88, 94, 107, 125, 137, 140, 141, 143, 145, 157, 158, 160, 161, 162, 163, 168, 169, 170, 172, 173, 174, 176, 179, 180, 181, 182, 201, 206, 214, 228, 309, 313, 316, 324], "bia": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 158, 168, 170, 172, 174, 180, 181, 182, 183, 208, 210, 214, 221, 222, 223, 238, 243, 310, 313, 314, 315, 316, 319, 324], "requires_grad": [32, 72, 76, 88, 94, 119], "bfloat16": [32, 72, 76, 88, 94], "datatyp": [32, 72, 76, 88, 94, 322], "member": [32, 72, 76, 88, 94, 238], "xdoctest": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214, 238, 243], "skip": [32, 72, 76, 88, 94, 116, 141, 148, 211, 215, 238, 243, 253, 254, 255, 256, 271, 272, 282, 285, 313, 314, 315, 320], "buf": [32, 72, 76, 88, 94], "20l": [32, 72, 76, 88, 94, 238], "1l": [32, 72, 76, 88, 94, 238], "5l": [32, 72, 76, 88, 94, 238], "__call__": [32, 37, 72, 76, 88, 94, 215, 311], "doubl": [32, 46, 72, 76, 88, 94, 107, 108, 109, 111, 125, 137, 140, 141, 143, 145, 214, 228, 231, 235, 241, 244, 251, 313, 314, 315, 316, 325], "eval": [32, 72, 76, 88, 94, 141, 146, 313, 314, 315], "evalu": [32, 72, 76, 88, 94, 141, 165, 177, 178, 186, 196, 241, 294, 295, 314, 315], "dropout": [32, 72, 76, 88, 94, 141, 170, 172, 174, 316], "batchnorm": [32, 72, 76, 88, 94, 141], "disabl": [32, 72, 76, 88, 94, 141, 171, 196, 313], "comparison": [32, 72, 76, 88, 94, 141, 238, 313, 314], "similar": [32, 72, 76, 88, 89, 90, 94, 107, 125, 137, 140, 141, 143, 144, 145, 146, 201, 203, 211, 214, 215, 310, 313, 314, 315, 316, 320, 325], "confus": [32, 72, 76, 88, 94, 141], "extra_repr": [32, 72, 76, 88, 94], "shift": [32, 221, 253, 254, 255, 256, 315], "nontermin": 32, "original_reward": 32, "newli": [32, 72, 76, 88, 94], "OR": 32, "reshap": [32, 170, 172, 174, 315, 319], "get_buff": [32, 72, 76, 88, 94], "throw": [32, 72, 76, 88, 94, 325], "docstr": [32, 72, 76, 88, 94], "get_submodul": [32, 72, 76, 88, 94], "explan": [32, 72, 76, 88, 94], "qualifi": [32, 72, 76, 88, 94], "referenc": [32, 72, 76, 88, 94], "attributeerror": [32, 72, 76, 88, 94, 322], "invalid": [32, 72, 76, 88, 94, 97, 177, 178], "resolv": [32, 72, 76, 88, 94], "someth": [32, 72, 76, 83, 88, 94, 308, 314, 315, 320, 325], "get_extra_st": [32, 72, 76, 88, 94, 146], "set_extra_st": [32, 72, 76, 88, 94, 146], "picklabl": [32, 72, 76, 88, 94, 146], "guarante": [32, 55, 56, 57, 63, 66, 72, 76, 88, 94, 146, 324], "pickl": [32, 72, 76, 88, 94, 146], "get_paramet": [32, 72, 76, 88, 94], "sai": [32, 72, 76, 88, 94, 179, 321, 325], "net_b": [32, 72, 76, 88, 94], "net_c": [32, 72, 76, 88, 94], "conv": [32, 72, 76, 88, 94, 158, 314], "conv2d": [32, 72, 76, 88, 94, 158, 179, 324], "kernel_s": [32, 72, 76, 88, 94, 158, 160, 161, 179, 184, 314, 324], "stride": [32, 72, 76, 88, 94, 158, 160, 161, 169, 179, 314, 324], "diagram": [32, 72, 76, 88, 94], "show": [32, 72, 76, 88, 94, 180, 309, 313, 315, 316, 319, 320, 322, 324], "degre": [32, 72, 76, 88, 94], "named_modul": [32, 72, 76, 88, 94], "o": [32, 72, 76, 88, 94], "transit": [32, 52, 72, 76, 88, 94, 220, 313, 316, 320, 322], "half": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214, 313], "ipu": [32, 72, 76, 88, 94], "strict": [32, 34, 36, 39, 72, 76, 88, 94, 141, 243], "descend": [32, 72, 76, 88, 94, 141, 243], "persist": [32, 72, 76, 88, 94, 141, 155, 243], "enforc": [32, 62, 72, 76, 88, 94, 141, 216, 243, 320], "preserv": [32, 72, 76, 88, 94, 141, 243], "missing_kei": [32, 72, 76, 88, 94, 141, 243], "unexpected_kei": [32, 72, 76, 88, 94, 141, 243], "namedtupl": [32, 72, 76, 88, 94, 141, 243], "duplic": [32, 62, 72, 76, 88, 94, 228, 231, 238, 251], "l": [32, 72, 76, 88, 94, 252, 315, 320], "idx": [32, 72, 76, 88, 94], "named_buff": [32, 72, 76, 88, 94], "remove_dupl": [32, 72, 76, 88, 94, 238], "prepend": [32, 72, 76, 88, 94, 238], "running_var": [32, 72, 76, 88, 94], "named_children": [32, 72, 76, 88, 94], "conv4": [32, 72, 76, 88, 94], "conv5": [32, 72, 76, 88, 94], "memo": [32, 72, 76, 88, 94], "named_paramet": [32, 72, 76, 88, 94, 119, 238], "register_backward_hook": [32, 72, 76, 88, 94], "removablehandl": [32, 72, 76, 88, 94], "deprec": [32, 72, 76, 88, 94, 141, 149, 153, 166, 224, 225, 226, 228, 230, 231, 236, 237, 240, 241, 242, 243, 251, 253, 254, 255, 256, 261, 325], "favor": [32, 72, 76, 88, 94, 315], "register_full_backward_hook": [32, 72, 76, 88, 94], "register_buff": [32, 72, 76, 88, 94], "running_mean": [32, 72, 76, 88, 94], "alongsid": [32, 72, 76, 88, 94, 319], "num_featur": [32, 72, 76, 88, 94], "register_forward_hook": [32, 72, 76, 88, 94, 167, 189], "with_kwarg": [32, 72, 76, 88, 94], "always_cal": [32, 72, 76, 88, 94], "posit": [32, 35, 38, 41, 42, 52, 53, 72, 76, 88, 94, 115, 116, 134, 135, 138, 141, 142, 183, 243, 310, 315, 319, 320, 322], "signatur": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214, 238, 310, 313, 320], "register_module_forward_hook": [32, 72, 76, 88, 94], "regardless": [32, 72, 76, 88, 94, 226, 237, 240], "register_forward_pre_hook": [32, 72, 76, 88, 94], "invok": [32, 72, 76, 88, 94], "And": [32, 72, 76, 88, 94], "forward_pr": [32, 72, 76, 88, 94], "register_module_forward_pre_hook": [32, 72, 76, 88, 94], "grad_input": [32, 72, 76, 88, 94], "grad_output": [32, 72, 76, 88, 94], "subsequ": [32, 72, 76, 88, 94, 316], "technic": [32, 72, 76, 88, 94, 314, 316], "caller": [32, 72, 76, 88, 94], "register_module_full_backward_hook": [32, 72, 76, 88, 94], "register_full_backward_pre_hook": [32, 72, 76, 88, 94], "backward_pr": [32, 72, 76, 88, 94], "register_module_full_backward_pre_hook": [32, 72, 76, 88, 94], "register_load_state_dict_post_hook": [32, 72, 76, 88, 94], "incompatible_kei": [32, 72, 76, 88, 94], "clear": [32, 72, 76, 80, 88, 94, 281], "register_modul": [32, 72, 76, 88, 94, 311], "alia": [32, 72, 76, 88, 94], "register_paramet": [32, 72, 76, 88, 94], "register_state_dict_pre_hook": [32, 72, 76, 88, 94], "keep_var": [32, 34, 36, 39, 72, 76, 88, 94, 141, 243], "requires_grad_": [32, 72, 76, 88, 94], "autograd": [32, 72, 76, 88, 94, 141, 243], "freez": [32, 72, 76, 88, 94], "finetun": [32, 72, 76, 88, 94], "gan": [32, 72, 76, 88, 94], "share_memori": [32, 72, 73, 76, 88, 94, 313], "share_memory_": [32, 72, 76, 88, 94, 324], "destin": [32, 34, 36, 39, 72, 76, 88, 94, 108, 109, 111, 141, 143, 146, 155, 243, 272], "averag": [32, 72, 76, 88, 94, 141, 146, 210, 232, 233, 243, 287, 313, 315], "shallow": [32, 72, 76, 88, 94, 141, 243, 316], "pleas": [32, 72, 76, 88, 89, 90, 94, 103, 138, 141, 243, 308], "detach": [32, 72, 76, 88, 94, 141, 238, 243, 253, 254, 255, 256, 313], "non_block": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214], "memory_format": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214], "channels_last": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214], "complex": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214, 313, 314], "integr": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 163, 170, 172, 176, 214, 309, 319, 320, 321], "unchang": [32, 72, 76, 88, 94, 107, 110, 125, 137, 140, 141, 143, 145, 208, 214, 286, 313, 322], "tri": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214], "pin": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214], "4d": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214], "ignore_w": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214], "1913": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214], "3420": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214], "5113": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214], "2325": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214], "torch_doctest_cuda1": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214], "gpu1": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214], "1914": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214], "5112": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214, 320], "2324": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214], "float16": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214], "cdoubl": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214], "3741": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214], "j": [32, 35, 58, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214, 311], "2382": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214], "5593": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214, 320], "4443": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214], "complex128": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214], "6122": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214], "1150": [32, 72, 76, 88, 94, 107, 125, 137, 140, 141, 143, 145, 214], "to_empti": [32, 72, 76, 88, 94], "dst_type": [32, 72, 76, 88, 94], "xpu": [32, 72, 76, 88, 94], "set_to_non": [32, 72, 76, 88, 94], "unidimension": 33, "keepdim": 33, "user_regist": 33, "priori": 33, "definit": [33, 63, 179], "uniqu": [33, 103, 112, 136, 137, 138, 322], "discretebox": [33, 72, 76, 88, 94, 315, 319, 325], "chosen_data": [34, 54], "rewarddata": [34, 54, 307], "rejected_data": [34, 54], "from_dataset": [34, 36, 54], "dataset_nam": [34, 36, 40, 45, 54, 87], "max_length": [34, 36, 37, 43, 45, 54], "550": [34, 36, 40, 45, 54, 320], "root_dir": [34, 36, 45, 54], "from_disk": [34, 36, 45, 54], "num_work": [34, 36, 45, 54, 85, 88, 94, 313, 314], "carperai": [34, 36, 40, 45], "openai_summarize_comparison": [34, 36, 45], "sequen": [34, 36], "cach": [34, 36, 45, 54, 72, 76, 88, 94, 108, 111, 125, 141, 145, 281, 321], "load_from_disk": [34, 36, 45, 54], "load_dataset": [34, 36, 45, 54], "attention_mask": [34, 36, 37, 39, 40, 43, 45, 54], "92534": 34, "input_id": [34, 36, 37, 39, 40, 43, 45, 54], "end_scor": [34, 39, 40, 54], "sub_data": [34, 36], "from_dict": [34, 36, 39, 45], "batch_dim": [34, 36, 39, 45, 305], "determin": [34, 35, 36, 39, 41, 52, 58, 72, 76, 88, 94, 125, 145, 179, 210, 314, 319], "input_dict": [34, 36, 39], "exclusinv": [34, 36, 39], "__maximum__": [34, 36, 39], "toler": [34, 36, 39, 165, 194], "sie": [34, 36, 39], "input_td": [34, 36, 39], "from_tensordict": [34, 36, 39], "non_tensordict": [34, 36, 39], "_no_default_": [34, 36, 39], "getattr": [34, 36, 39], "tensorclass": [34, 36, 39, 54, 55, 56, 66], "from_flatten": [34, 36, 39], "attemptedli": [34, 36, 39], "setattr": [34, 36, 39], "tent": [34, 36, 39, 45], "flatten": [34, 36, 39, 115, 286, 316, 319], "to_tensordict": [34, 36, 39, 316], "memmap": [34, 36, 39, 55, 88, 94, 146, 286, 321, 322], "unbind": [34, 36, 39, 170, 172], "alpha": [35, 41, 58, 158, 179, 225, 230, 239, 241, 243, 313, 322, 324], "ep": [35, 41, 58, 146, 210, 226, 244, 287, 313, 314, 316], "1e": [35, 41, 58, 146, 165, 168, 183, 194, 313, 314, 315, 319], "08": [35, 41, 58, 313, 314, 319, 320, 321, 323], "collate_fn": [35, 38, 41, 42, 52, 53, 322, 324], "prefetch": [35, 38, 41, 42, 52, 53, 54, 313, 314, 316, 322], "schaul": [35, 58], "quan": [35, 58], "antonogl": [35, 58], "silver": [35, 58], "2015": [35, 58], "arxiv": [35, 58, 103, 125, 143, 159, 160, 161, 162, 163, 164, 167, 168, 169, 176, 182, 184, 185, 187, 188, 190, 191, 197, 207, 210, 224, 225, 229, 231, 232, 233, 234, 235, 236, 239, 240, 243, 244, 253, 258, 266, 321], "ab": [35, 58, 125, 143, 146, 159, 164, 168, 169, 176, 182, 184, 185, 187, 188, 190, 191, 197, 224, 225, 229, 232, 233, 234, 235, 236, 239, 240, 243, 321], "1511": [35, 58, 169], "05952": [35, 58], "expon": [35, 41, 58], "\u03b1": [35, 41, 58], "delta": [35, 41, 58, 194, 211, 215, 307, 310], "null": [35, 41, 58, 102], "max_siz": [35, 38, 41, 42, 55, 56, 57, 63, 66], "1_000": [35, 38, 41, 42, 322], "merg": [35, 38, 41, 42, 52, 53, 320], "mini": [35, 38, 41, 42, 52, 53, 319], "decid": [35, 38, 41, 42, 324], "rb": [35, 38, 41, 42, 52, 53, 64, 103, 129, 314, 316, 319, 321, 322, 324], "meth": [35, 38, 41, 42, 238], "incompat": [35, 38, 41, 42, 322], "drop_last": [35, 38, 41, 42, 62], "return_info": [35, 38, 41, 42, 52, 53, 322], "tensordictprioritizedreplaybuff": [35, 307, 324], "simplifi": [35, 320, 322], "manual_se": [35, 38, 41, 42, 101, 110, 121, 129, 132, 136, 138, 177, 178, 186, 200, 207, 208, 210, 218, 224, 225, 227, 236, 243, 319, 320, 324, 325], "_weight": [35, 41, 322, 324], "arrai": [35, 40, 112, 313, 322], "update_prior": [35, 58, 286, 311, 314, 322, 324], "36278465": 35, "cursor": [35, 38, 41, 42, 52, 53], "insert_transform": [35, 38, 41, 42, 52, 53], "insert": [35, 38, 41, 42, 52, 53, 60, 64, 65, 67, 142], "prompt_rindex": [36, 37, 40], "label": [36, 37, 40, 45, 313, 322], "os": [36, 45, 54, 314], "cpu_count": [36, 45, 54], "promptdatatldr": 36, "116722": 36, "prompt": [37, 40], "return_tensordict": [37, 43], "recip": [37, 72, 76, 88, 94, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 179, 180, 183, 184, 185, 187, 190, 191, 193, 198, 204, 205, 207, 208, 210, 213, 218, 221], "text": [37, 40, 43, 210, 315], "tensodict": [37, 43], "orign": [37, 43], "valid_sampl": 37, "identifi": 37, "eough": 37, "toknen": 37, "meet": 37, "criterion": 37, "autotoken": [37, 43, 45], "from_pretrain": [37, 40, 43], "gpt2": [37, 40, 43, 45, 159, 164, 187], "pad_token": [37, 43], "eos_token": 37, "enough": [37, 322], "inde": [37, 110, 315, 320], "writer": [38, 42, 52, 53, 60, 64, 65, 307, 315], "randomsampl": [38, 42, 52, 53, 307, 313], "roundrobinwrit": [38, 42, 52, 53, 307], "Not": 38, "ref_model": 40, "reward_model": [40, 220], "kl_coef": 40, "max_new_token": 40, "score_clip": 40, "kl_schedul": 40, "klcontrollerbas": 40, "num_step": 40, "causal": 40, "sentenc": 40, "frozen": [40, 119], "kl": [40, 119, 233, 237], "penalti": [40, 237], "strai": 40, "far": [40, 171, 195, 196, 320, 325], "calcul": [40, 129], "gpt2rewardmodel": 40, "get_dataload": [40, 307], "promptdata": [40, 307], "gpt2lmheadmodel": 40, "dl": 40, "block_siz": [40, 54], "tensorclass_typ": [40, 54], "openai_summarize_tldr": 40, "config_class": 40, "model_path": 40, "rollout_from_model": 40, "rollout_from_data": 40, "600": [40, 320, 322], "reward_kl": [40, 119], "reward_raw": 40, "sample_log_prob": [40, 201, 202, 203, 211, 215, 217, 240, 298, 315, 319, 324], "create_rollout_td": 40, "log_prob": [40, 165, 177, 178, 186, 196, 215], "log_ratio": 40, "replic": 40, "rindex": 40, "multipli": [40, 225, 226, 230, 237, 239, 240, 241, 243, 287, 313], "term": [40, 119, 181, 182, 223, 224, 230, 291, 314, 315, 319], "subtract": [40, 136], "ve": [40, 313, 316], "eo": 40, "limit": [40, 84, 103, 119, 313, 314, 316, 319, 320], "generation_config": 40, "generationconfig": 40, "ti": [40, 262, 263, 264, 265, 267, 268, 269, 270, 314], "log_probs_gen": 40, "logprobs_of_label": 40, "priority_kei": [41, 42, 225, 228, 230, 231, 236, 238, 241, 243, 245, 251, 322, 324], "td_error": [41, 42, 225, 227, 228, 230, 231, 236, 238, 241, 243, 245, 251, 313, 322, 324], "reduct": [41, 58], "prioritizedreplaybuff": [41, 307, 324], "update_tensordict_prior": [41, 313, 322, 324], "prioritizedsampl": [41, 42, 228, 231, 251, 307, 313, 322], "min": [41, 58, 194, 195, 196, 205, 210, 225, 226, 230, 239, 241, 243, 314, 315, 319], "median": [41, 58, 211, 215], "len": [41, 55, 56, 66, 123, 158, 174, 180, 313, 320, 321, 322, 324], "include_info": [41, 42, 52, 53], "kw": [42, 60, 65], "int32": [42, 82, 152], "huggingfac": [43, 209], "co": [43, 112, 320], "doc": [43, 314, 319, 322], "pad_trunc": 43, "am": 43, "worri": 43, "me": 43, "reassur": 43, "ok": 43, "tokenizer_fn": 45, "tensordicttoken": [45, 307], "pre_tokenization_hook": 45, "valid_s": 45, "tokenizer_class": 45, "tokenizer_model_nam": 45, "tokein": 45, "condit": [45, 136, 206, 207, 212, 213, 223, 313, 320, 322], "elementwis": 45, "vocabulari": 45, "loader": [45, 315], "185068": 45, "dataset_to_tensordict": 45, "data_dir": 45, "nestedkei": [45, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 115, 117, 118, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 143, 146, 155, 156, 204, 205, 208, 210, 215, 228, 251, 272], "valid_mask_kei": 45, "conver": 45, "undergon": 45, "preprocess": [45, 314], "batch_dimens": 45, "filder": 45, "tempfil": [45, 301, 313, 314], "randint": [45, 139, 322], "20": [45, 64, 72, 76, 80, 88, 94, 136, 205, 280, 313, 314, 315, 316, 319, 320, 324, 325], "temporarydirectori": [45, 313, 314], "tmpdir": [45, 313, 314], "data_memmap": 45, "exclus": [48, 49, 115, 170, 172, 177, 178, 206, 207, 212, 213, 244, 245, 253, 254, 255, 256, 257, 305, 309], "recurse_through_entri": 49, "recurse_through_stack": 49, "consolid": 49, "from_env": 52, "use_truncated_as_don": 52, "direct_download": 52, "terminate_on_end": 52, "env_kwarg": [52, 303, 304, 313], "metadata": [52, 315, 319, 325], "reconstruct": [52, 233, 313, 325], "recov": [52, 204, 210, 216, 236, 318], "regard": [52, 167, 207, 224, 231, 240, 313, 315, 320], "get_dataset": 52, "qlearning_dataset": 52, "fewer": 52, "left": [52, 107, 108, 109, 113, 119, 125, 127, 133, 135, 138, 140, 143, 145, 208, 314, 315], "possess": 52, "unexpectedli": 52, "episod": [52, 76, 129, 132, 136, 157, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 314, 319], "absent": [52, 72, 76, 88, 94], "traj_split": 52, "observationnorm": [52, 146, 305, 313, 314, 315, 316, 324], "maze2d": 52, "umaz": 52, "128": [52, 161, 164, 314, 316, 320, 321, 322], "loc": [52, 119, 121, 131, 171, 183, 195, 196, 201, 202, 203, 211, 215, 217, 224, 225, 236, 240, 241, 242, 243, 293, 298, 305, 309, 313, 314, 315, 316, 319, 324], "public": [53, 125, 145], "dua": 53, "graff": 53, "2017": 53, "uci": 53, "archiv": 53, "ic": 53, "edu": 53, "ml": 53, "sklearn": 53, "adult_num": [53, 87], "adult_onehot": [53, 87], "mushroom_num": [53, 87], "mushroom_onehot": [53, 87], "covertyp": [53, 87], "shuttl": [53, 87], "magic": [53, 87], "infinit": [54, 322], "three": [54, 309, 311, 315, 319, 320, 322, 325], "block": [54, 309, 316], "pairwisedataset": [54, 307], "256": [54, 164, 314, 315, 319, 320], "scratch_dir": [55, 313, 322], "mistak": [55, 56, 66], "myclass": [55, 56, 66], "foo": [55, 56, 66, 205, 322, 325], "bar": [55, 56, 66, 205, 282, 283, 285, 289, 311, 314], "attach": [55, 56, 57, 63, 66, 314], "entiti": [55, 56, 57, 63, 66], "alloc": [56, 177, 178, 313], "auto": [56, 66, 210, 225, 230, 239, 241, 243, 245, 310, 319], "zero_": [56, 66, 152], "max_capac": [58, 313, 322], "uniformli": [59, 238, 325], "roundrobin": [60, 65], "piec": [60, 65, 67, 313, 314, 315, 319, 320, 322], "consum": [62, 314, 315, 319, 322], "incomplet": 62, "unlik": [62, 231, 240, 314, 324], "fresh": 62, "caution": [62, 148, 325], "shuffl": [62, 319], "haven": [62, 321], "remain": [62, 109, 110, 119, 136, 182], "draw": [62, 208], "__len__": 63, "rank_kei": 64, "rank": [64, 157], "tensordictreplaybuff": [64, 103, 286, 301, 307, 313, 314, 316, 322], "samplerwithoutreplac": [64, 307, 315, 319, 322], "19": [64, 313, 314, 320, 321], "get_insert_index": 64, "googl": [68, 69, 315, 316, 319], "ant": [68, 69, 79, 321], "get_environ": 69, "87": [69, 314, 320, 321, 322], "acrobot": [69, 325], "fetch": [69, 119, 321, 322], "task_nam": 70, "cheetah": [70, 71, 313], "frame_skip": [70, 71, 75, 76, 81, 116, 282, 285, 292, 311, 313, 314, 315, 324], "dm_control": [71, 313, 318, 325], "continuousbox": [72, 76, 88, 94, 152, 315, 319, 320, 324, 325], "unboundedcontinuoustensorspec": [72, 76, 84, 88, 94, 101, 108, 111, 137, 152, 157, 176, 200, 214, 217, 219, 242, 307, 315, 316, 319, 320, 325], "sort": [72, 76, 88, 94, 210], "depth": [72, 76, 84, 88, 94, 157, 158, 160, 161, 162, 163, 168, 169, 174, 176, 179, 180, 184, 185, 206, 309, 314, 318, 319], "another_act": [72, 76, 88, 94], "mutabl": [72, 76, 88, 94], "batch_lock": [72, 74, 76, 88, 94, 137, 141, 320], "immut": [72, 76, 88, 94, 127, 141], "done_keys_group": [72, 76, 88, 94], "outer": [72, 76, 88, 94, 311, 313, 314, 325], "another_don": [72, 76, 88, 94], "empty_cach": [72, 76, 88, 94, 141], "fake_tensordict": [72, 76, 88, 94, 314], "fake": [72, 76, 88, 94, 313, 314], "afterward": [72, 76, 88, 94, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 179, 180, 183, 184, 185, 187, 190, 191, 193, 198, 204, 205, 207, 208, 210, 213, 218, 221, 325], "silent": [72, 76, 88, 94, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 179, 180, 183, 184, 185, 187, 190, 191, 193, 198, 204, 205, 207, 208, 210, 213, 218, 221], "braxenv": [72, 76, 88, 94, 127, 307], "envnam": [72, 76, 88, 94], "mimic": [72, 76, 88, 94], "renametransform": [72, 76, 88, 94], "pipeline_st": [72, 76, 88, 94], "15": [72, 76, 88, 94, 205, 210, 232, 313, 314, 315, 316, 319, 320, 322, 324], "attibut": [72, 76, 88, 94], "speak": [72, 76, 88, 94, 313], "rand_act": [72, 76, 83, 88, 89, 90, 94], "_step": [72, 76, 88, 94, 101, 108, 111, 115, 127], "reset_kei": [72, 76, 88, 94, 103, 132, 136, 137, 138], "multitask": [72, 76, 88, 94], "multiag": [72, 76, 83, 88, 89, 90, 94, 156, 180, 188, 197, 251], "another_reward": [72, 76, 88, 94], "callback": [72, 76, 88, 94, 319], "auto_reset": [72, 76, 88, 94, 320], "auto_cast_to_devic": [72, 76, 88, 94, 319], "break_when_any_don": [72, 76, 88, 94, 319], "return_contigu": [72, 76, 88, 94, 148, 318], "soon": [72, 76, 88, 89, 90, 94], "ndim": [72, 76, 88, 94], "concomitt": [72, 76, 88, 94], "workspac": [72, 76, 88, 94], "prevail": [72, 76, 88, 94, 132, 156], "cartpol": [72, 76, 88, 94, 103, 132, 136, 314, 316, 322, 325], "creator": [73, 294, 295, 303, 304, 305], "substitut": [73, 136, 146], "vecnorm": [73, 305], "env_creat": [73, 313], "test_env1": 73, "_td": 73, "observation_count": [73, 325], "test_env2": 73, "sleep": [73, 325], "ps": 73, "p1": 73, "p2": 73, "join": [73, 307, 314, 315], "9934": 73, "env_str": 74, "info_dict_read": 76, "set_info_dict_read": 76, "put": [76, 146, 305, 309, 314, 315, 316, 320], "read_act": 76, "read_don": 76, "reader": [76, 314], "interrupt": [76, 259], "nonsens": 76, "fallback": 76, "broken": [76, 148], "read_ob": 76, "dictat": [76, 211, 215, 240, 313, 320], "read_reward": 76, "baseinfodictread": 76, "info_dict": 76, "hoc": 76, "dict_read": 76, "default_info_dict_read": 76, "my_info_kei": 76, "some_env": 76, "placehold": [78, 112, 141], "secur": 78, "isaacgym": [79, 80], "isaacgymwrapp": [79, 307], "isaacgymenv": [80, 307], "webpag": 80, "isaac": 80, "essenc": 80, "04": [80, 313, 314, 320, 321, 323], "snake": [81, 82], "6x6": [81, 82], "td1": [82, 224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 251, 313], "12x12": 82, "tsp50": 82, "tsp100": 82, "qualnam": 83, "marl": [83, 97, 103, 138, 179, 319], "leverag": [83, 89, 90, 313, 319, 325], "neural": [83, 89, 90, 158, 192, 214, 309, 314, 315, 316, 319, 320, 325], "group_map": [83, 89, 90, 97], "constructiuon": [83, 89, 90], "premad": [83, 89, 90, 251], "all_in_one_group": [83, 97], "agent_0": [83, 89, 90, 97], "agent_1": [83, 89, 90, 97], "agent_2": [83, 89, 90, 97], "agent_3": 83, "int8": [83, 89, 90], "one_group_per_ag": [83, 89, 90], "environn": 84, "constraint": [84, 315, 319], "mymbenv": [84, 157, 176], "world_model": [84, 157, 176, 233], "super": [84, 101, 108, 111, 157, 167, 176, 219, 225, 227, 230, 236, 241, 243, 245, 313, 320, 322, 324], "hidden_observ": [84, 157, 176], "mlp": [84, 157, 158, 160, 161, 162, 163, 170, 172, 173, 176, 180, 201, 206, 228, 298, 309, 314, 318, 321, 324], "worldmodelwrapp": [84, 157, 176], "activation_class": [84, 157, 158, 160, 161, 162, 163, 168, 169, 174, 176, 179, 180, 314, 319, 324], "relu": [84, 157, 164, 176, 183, 223], "activate_last_lay": [84, 157, 163, 174, 176], "run_type_check": 84, "less": [85, 198, 303, 304, 310, 315, 316, 322, 324], "readthedoc": 85, "en": 85, "python_interfac": 85, "task_id": 85, "106": [87, 320], "my_env_fun": [88, 94], "custom_attribute_list": [88, 94], "custom_attribut": [88, 94], "custom_method_list": [88, 94], "custom_method": [88, 94], "deploi": [88, 94], "slight": [88, 94, 314], "overhead": [88, 94], "share_individual_td": [88, 94], "shared_memori": [88, 94], "policy_proof": [88, 94], "ll": [88, 94, 313, 314, 315, 316, 319, 325], "hidden": [88, 94, 168, 170, 172, 173, 184, 185, 190, 191, 201, 202, 203, 205, 214, 217, 226, 237, 240, 309, 316, 318, 324], "update_kwarg": [88, 94], "pettingzoo": [89, 90], "pet": [89, 90], "zoo": [89, 90], "guid": [89, 90, 92, 93, 136, 308, 313, 319], "__": [89, 90], "aecenv": [89, 90], "use_mask": [89, 90], "dead": [89, 90], "compulsori": [89, 90], "adversary_0": [89, 90], "adversari": [89, 90], "marlgroupmaptyp": [89, 90, 97, 307], "vectoris": [89, 90], "multiwalker_v9": 89, "return_st": [89, 90], "categorical_act": [89, 90, 92, 93], "n_piston": [89, 90], "21": [89, 90, 314, 318, 320, 321], "pistonball_v6": [89, 90], "piston": [89, 90], "piston_0": [89, 90], "piston_1": [89, 90], "piston_20": [89, 90], "aec": [89, 90], "tictactoe_v3": [89, 90], "player": [89, 90], "player_1": [89, 90], "player_2": [89, 90], "butterfli": 90, "parallel_env": [90, 313, 324, 325], "roboh": 91, "vikashplu": 91, "read_info": 91, "pars": [91, 322], "smacv2": [92, 93], "starcraft": [92, 93], "challeng": [92, 93, 320, 321], "v2": [92, 93, 248, 262, 263, 264, 265, 267, 268, 269, 270, 298], "10gen_terran": [92, 93], "10gen_zerg": [92, 93], "10gen_protoss": [92, 93], "3m": [92, 93, 321], "8m": [92, 93, 321], "25m": [92, 93], "5m_vs_6m": [92, 93], "8m_vs_9m": [92, 93], "10m_vs_11m": [92, 93], "27m_vs_30m": [92, 93], "mmm": [92, 93], "mmm2": [92, 93], "2s3z": [92, 93], "3s5z": [92, 93], "3s5z_vs_3s6z": [92, 93], "3s_vs_3z": [92, 93], "3s_vs_4z": [92, 93], "3s_vs_5z": [92, 93], "1c3s5z": [92, 93], "2m_vs_1z": [92, 93], "corridor": [92, 93], "6h_vs_8z": [92, 93], "2s_vs_1sc": [92, 93], "so_many_banel": [92, 93], "bane_vs_ban": [92, 93], "2c_vs_64zg": [92, 93], "old": [92, 93, 237, 325], "smac": [92, 93], "map_nam": [92, 93], "18": [92, 93, 95, 96, 180, 313, 314, 315, 319, 320, 325], "176": [92, 93, 320], "battle_won": [92, 93], "dead_al": [92, 93], "dead_enemi": [92, 93], "episode_limit": [92, 93], "322": [92, 93, 320], "Or": [92, 93, 179], "procedur": [92, 93], "distribution_config": [92, 93], "n_unit": [92, 93], "n_enemi": [92, 93], "team_gen": [92, 93], "dist_typ": [92, 93], "weighted_team": [92, 93], "unit_typ": [92, 93], "marin": [92, 93], "maraud": [92, 93], "medivac": [92, 93], "exception_unit_typ": [92, 93], "start_posit": [92, 93], "surrounded_and_reflect": [92, 93], "map_x": [92, 93], "map_i": [92, 93], "capability_config": [92, 93], "88": [92, 93, 313, 314, 320, 321], "131": [92, 93, 320], "starcraft2env": 93, "scenario": [95, 96, 313, 319, 320], "flock": [95, 96], "continuous_act": [95, 96, 319], "agent_collision_rew": [95, 96], "agent_distance_rew": [95, 96], "agent_nam": 97, "ca": 97, "environment4": 97, "get_group_map": 97, "sumbodul": 98, "model_bas": [99, 157, 176], "adapt": [101, 237, 313, 320], "masker": 101, "binarydiscretetensorspec": [101, 228, 230, 251, 307], "maskedenv": 101, "ones_lik": 101, "scatter": 101, "unsqueez": [101, 103, 104, 139, 142, 173, 313, 316, 319, 320], "_set_se": [101, 108, 111, 320], "transform_reward_spec": [102, 106, 107, 108, 109, 113, 119, 127, 130, 131, 133, 135, 140, 142], "padding_valu": [103, 177, 178], "as_invers": 103, "account": [103, 177, 178, 309, 314, 316, 322, 325], "movement": 103, "veloc": [103, 319, 320, 325], "propos": [103, 112, 175, 235, 244, 298, 309, 316, 322], "pdf": [103, 159, 160, 161, 162, 163, 167, 187, 207, 210, 231, 241, 244, 253, 258, 266, 298], "1312": [103, 314], "5602": 103, "constant": [103, 121, 136, 311, 313, 315, 316, 325], "unsqueezetransform": [103, 320, 322], "consumpt": 103, "followin": 103, "pictur": 103, "pixels_trsf": [103, 322], "grayscal": [103, 314, 316, 322, 325], "data_exclud": [103, 322], "transform_observation_spec": [103, 104, 105, 106, 107, 108, 109, 112, 113, 115, 117, 118, 119, 121, 123, 127, 128, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 320], "del_kei": [104, 143, 318, 320], "unsqueeze_if_oor": 104, "observation_posit": 104, "observation_veloc": 104, "delet": 104, "key1": [104, 280, 288], "key2": [104, 280, 288], "crop": [105, 126, 272], "center": [105, 272], "width": [105, 128], "height": [105, 128], "squar": [105, 171, 195, 196, 272], "out_keys_inv": [106, 108, 111, 121, 122, 123, 127, 140, 320], "scalar": [106, 130, 161, 163, 181, 182, 204, 208, 210, 221, 224, 225, 226, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 244, 245, 251, 253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 309, 314, 320], "permit": [106, 115, 142], "rewardsc": [107, 141, 313, 314, 316], "rewardclip": 107, "transformed_env": [107, 140, 141], "transform_env_devic": [107, 109, 140], "transform_input_spec": [107, 108, 109, 110, 121, 123, 127, 132, 135, 136, 137, 140, 142, 144], "transform_output_spec": [107, 108, 109, 113, 119, 127, 133, 135, 140], "untouch": [107, 108, 109, 113, 119, 127, 133, 135, 140], "transformfull_done_spec": [107, 108, 109, 113, 119, 127, 133, 135, 140], "dtype_in": 108, "dtype_out": 108, "scan": [108, 111, 216, 217], "resp": [108, 111], "anticip": [108, 111], "not_transform": [108, 111], "rule": [108, 111, 215, 309, 315], "constructedw": [108, 111], "myenv": [108, 111], "orig_devic": 109, "unspecifi": 109, "transform_done_spec": [109, 140], "num_actions_effect": 110, "max_act": 110, "include_forward": 110, "dimension": [110, 170, 172, 253, 258, 266, 319], "num_act": [110, 230], "action_out": 110, "_call": [110, 115, 320], "eol_kei": 112, "life": 112, "lives_kei": 112, "eol_attribut": 112, "unwrap": 112, "al": [112, 123, 157, 325], "breakout": 112, "v5": [112, 123, 325], "210": [112, 123, 320, 325], "160": [112, 123, 314, 320, 325], "eol_transform": 112, "eol": 112, "dqnloss": [112, 224, 225, 227, 230, 231, 232, 235, 236, 238, 240, 241, 242, 243, 244, 245, 246, 251, 296, 307, 310, 314, 316], "action_spac": [112, 167, 189, 206, 207, 212, 213, 224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 251, 316], "register_kei": 112, "loss_or_advantag": 112, "lossmodul": [112, 289, 300, 301, 307], "valueestimatorbas": [112, 238, 307], "excluded_kei": 113, "finit": [114, 322], "first_dim": 115, "last_dim": 115, "allow_positive_dim": [115, 142], "th": [115, 142, 320], "frameskip": 115, "repeatedli": [116, 315, 319], "init_kei": 118, "is_init": [118, 170, 172, 210, 316], "tracker": 118, "coef": 119, "pi_curr": 119, "pi_0": 119, "overfit": 119, "fine": [119, 321], "probabilist": [119, 211, 307, 315, 324], "get_dist": [119, 215, 216], "mod": [119, 170, 172, 218, 316], "normalparamextractor": [119, 309, 315, 319], "probabilisticactor": [119, 201, 202, 203, 205, 224, 225, 229, 230, 236, 239, 240, 241, 242, 243, 245, 309, 313, 315, 319], "tanhnorm": [119, 201, 202, 203, 211, 217, 224, 225, 236, 240, 241, 242, 243, 245, 307, 315, 319, 324], "n_ob": [119, 224, 225, 227, 228, 230, 236, 240, 241, 242, 243, 245], "n_act": [119, 224, 225, 227, 228, 230, 236, 240, 241, 242, 243, 245], "return_log_prob": [119, 201, 202, 203, 211, 215, 217, 242, 309, 315, 319, 324], "apply_": 119, "copy_": [119, 313], "formulat": 119, "diverg": [119, 170, 172, 211, 215, 233, 237], "noop": [120, 324], "30": [120, 190, 191, 313, 314, 315, 319, 320], "trial": 120, "op": [120, 204, 208, 291], "randomli": [120, 121, 137, 208, 211, 215, 319, 320, 322], "standard_norm": [121, 131, 313, 314, 316], "affin": [121, 131], "layer": [121, 146, 158, 160, 161, 168, 170, 172, 174, 179, 180, 181, 182, 184, 185, 192, 193, 199, 209, 218, 309, 314, 315, 316, 321], "normal": [121, 146, 158, 171, 174, 177, 178, 183, 195, 196, 204, 211, 215, 226, 237, 240, 285, 287, 305, 309, 311, 316, 319, 325], "set_default_tensor_typ": 121, "doubletensor": 121, "isclos": 121, "next_ob": [121, 253, 254, 255, 256, 324], "rubric": [121, 217], "init_stat": [121, 313, 314, 315, 316], "3752e": 121, "01": [121, 210, 221, 226, 237, 240, 313, 314, 316, 319, 320, 321, 323], "5087e": 121, "03": [121, 313, 314, 320, 321, 323], "9294e": 121, "9636": 121, "5608": 121, "6408": 121, "num_it": [121, 314, 315], "reduce_dim": [121, 313, 314, 315, 316], "cat_dim": [121, 313, 314, 315, 316], "keep_dim": [121, 314, 316], "statist": [121, 146, 242, 305, 313, 314, 315, 325], "approach": [121, 313, 315, 325], "gaussian": [121, 137, 157, 176, 181, 182, 187, 204, 315], "empir": [121, 157, 176, 211, 215, 313, 315, 319], "3d": 121, "third": [121, 207, 319], "reorder": 123, "in_keys_in": 123, "pong": [123, 325], "channel": [123, 179, 184, 185, 314], "r3m": [125, 321], "resnet": [125, 143, 145], "visual": [125, 143, 145, 315, 320], "embed": [125, 143, 144, 145, 188, 200, 201, 202, 203, 214, 219, 321], "ego4d": [125, 143, 145], "univers": [125, 143, 145], "suraj": [125, 143], "nair": [125, 143], "aravind": [125, 143], "rajeswaran": [125, 143], "vikash": [125, 143, 145], "kumar": [125, 143, 145], "chelsea": [125, 143], "finn": [125, 143], "abhinav": [125, 143], "gupta": [125, 143], "2203": [125, 143, 176, 321], "12601": [125, 143, 321], "_init": [125, 143, 313], "snippet": [125, 143, 313], "resnet50": [125, 145, 321], "model_nam": [125, 143, 145, 275], "resnet34": 125, "resnet18": 125, "r3m_vec": [125, 321], "feed": [125, 145, 238, 309, 313, 319, 322], "244": [125, 145, 320], "stack_imag": [125, 145], "tread": [125, 145], "separet": [125, 145], "hub": [125, 145, 321], "resnet50_weight": [125, 145], "imagenet1k_v1": [125, 145], "download_path": [125, 145], "tensor_pixels_kei": [125, 145], "dest": [125, 143, 145, 214], "sub_seq_len": 126, "sample_dim": [126, 313], "primarili": 126, "hesit": 126, "request": 126, "robust": 126, "mix": [126, 188, 197, 251, 313, 319], "improp": 126, "create_copi": 127, "renam": [127, 129, 155, 313], "stuff": 127, "newnam": 127, "interpol": [128, 314, 316], "bilinear": [128, 316], "truncated_kei": [129, 135], "r2g": 129, "99": [129, 146, 176, 234, 247, 252, 259, 301, 313, 314, 315, 320, 322, 324], "reward_to_go": 129, "bernoulli_": 129, "9010": 129, "9404": [129, 259], "9701": [129, 259], "9900": [129, 259], "0000": [129, 138, 208, 218, 259, 315, 316, 320, 324], "crash": 129, "clamp_min": 130, "clamp_max": 130, "clip_min": 130, "clip_max": 130, "episode_": 132, "reward1": 132, "reward2": 132, "episode_reward": [132, 319], "keep_reward": 133, "keep_don": 133, "excludetransform": [133, 322], "squeeze_dim": 134, "step_count_kei": 135, "update_don": 135, "adaptec": 135, "accordingli": [135, 136, 212, 316], "completet": 135, "recognis": 135, "accompani": 135, "target_return": 136, "chosen": [136, 137, 188, 189, 197, 213, 298, 309], "primer": [137, 316], "default_valu": [137, 316], "unit": [137, 157, 168, 184, 185, 190, 191, 315], "transfomedenv": 137, "mykei": 137, "__unless": 137, "exists__": 137, "pool": 138, "increas": [138, 210, 319], "10th": 138, "0216": 138, "1149": 138, "1990": 138, "2749": 138, "3281": 138, "9290": 138, "3702": 138, "8978": 138, "from_int": 139, "255": [139, 320, 322], "ri": 139, "principl": 140, "cattransform": 140, "notabl": 140, "rewardsum": [140, 319], "cache_spec": 141, "anymor": [141, 214], "set_missing_toler": 141, "keyerror": 141, "unsqueeze_dim": [142, 320], "danger": 142, "vc1": 143, "vc1_vec": 143, "small": [143, 313, 315, 319, 325], "untrain": 143, "make_noload_model": 143, "naiv": 143, "vip": [144, 145, 321], "toward": 145, "implicit": [145, 236, 322], "jason": 145, "ma": 145, "shagun": 145, "sodhani": 145, "dinesh": 145, "jayaraman": 145, "osbert": 145, "bastani": 145, "ami": 145, "zhang": 145, "vip_vec": 145, "shared_td": 146, "decai": [146, 204, 208, 244, 287, 313, 314, 316, 325], "9999": [146, 320], "0001": [146, 168, 183, 315, 320], "fly": [146, 237, 310, 315, 320, 322, 325], "to_observation_norm": 146, "underflow": [146, 287], "build_td_for_shared_vecnorm": 146, "memmori": 146, "memmap_": 146, "queue": [146, 322], "td_share": 146, "v": [146, 201, 236, 243, 309, 313, 314], "state_dim": [147, 159, 164, 187, 190, 191, 205], "action_dim": [147, 159, 160, 162, 164, 187, 205, 313, 318], "gsde": [147, 241, 305], "func": 147, "gsdemodul": 147, "check_dtyp": 148, "short": [148, 314, 315, 319], "discrep": [148, 224, 226, 227, 228, 237, 240, 242, 251], "imposs": 148, "probabilistictdmodul": [153, 154, 174, 211, 215, 252, 285], "next_tensordict": 155, "keep_oth": [155, 320], "exclude_reward": 155, "exclude_don": 155, "exclude_act": 155, "next_": 155, "funtion": [155, 320], "write_full_fals": 156, "leav": [156, 313], "_terminated_or_trunc": 156, "cross": 157, "entropi": [157, 224, 225, 226, 230, 236, 237, 239, 240, 241, 243, 245, 319], "botev": 157, "et": 157, "2013": 157, "cem": 157, "plan": [157, 175, 176], "varianc": [157, 171, 183, 195, 196, 310, 313, 315, 319], "k": 157, "repeat": [157, 315, 319, 320], "maximis": [157, 160, 162, 176, 309, 313, 314, 315, 319, 320], "horizon": [157, 176, 315], "modelbasedenv": [157, 176], "planning_horizon": [157, 176], "optim_step": [157, 176, 314], "mpc": [157, 175, 176], "num_candid": [157, 176], "candid": [157, 176], "top_k": [157, 176], "modelbasedenvbas": [157, 175, 176, 307], "safemodul": [157, 175, 201, 203, 215, 224, 225, 230, 236, 240, 241, 242, 243, 245, 294, 295, 301, 307, 324], "next_hidden_observ": 157, "num_cel": [158, 160, 161, 162, 163, 168, 169, 170, 172, 174, 179, 180, 201, 314, 315, 316, 319, 324], "elu": [158, 160, 161, 162, 163, 168, 169, 179, 314, 324], "activation_kwarg": [158, 174], "norm_class": [158, 160, 161, 174], "norm_kwarg": [158, 174], "bias_last_lay": [158, 160, 161, 162, 163, 169, 174], "aggregator_class": [158, 160, 161, 314, 316, 324], "squashdim": [158, 160, 179, 324], "aggregator_kwarg": [158, 160, 161, 314, 316], "squeeze_output": [158, 160, 161, 314, 316], "convolut": [158, 160, 161, 179, 192], "produc": [158, 174, 180, 186, 201, 203, 205, 272, 315, 316, 322, 325], "cell": [158, 174, 179, 180, 315], "kernel": [158, 169, 173, 179], "cnet": 158, "34": [158, 174, 313, 314, 316, 320], "35": [158, 174, 313, 314, 316, 320, 321, 323], "rectangular": 158, "transformer_config": [159, 187, 205], "decisiontransform": [159, 187], "dtconfig": [159, 164, 187], "2202": [159, 164, 187, 239], "05607": [159, 164, 187, 239], "return_to_go": [159, 164, 187, 205], "conv_net_kwarg": [160, 161], "mlp_net_kwarg": [160, 161, 162], "use_avg_pool": [160, 161], "WITH": [160, 161, 162, 163, 210, 244], "1509": [160, 161, 162, 163, 176, 210, 235, 244, 320], "02971": [160, 161, 162, 163, 210, 244], "convnet": [160, 179, 316, 324], "ndims_in": 160, "avgpool": [160, 161], "adaptiveavgpool2d": [161, 314, 316], "400": [162, 163, 315, 319, 320, 322], "mlp_net_kwargs_net1": 163, "mlp_net_kwargs_net2": 163, "decion": 164, "desdescrib": 164, "n_embd": 164, "n_layer": 164, "n_head": 164, "n_inner": 164, "n_posit": 164, "resid_pdrop": 164, "attn_pdrop": 164, "gpt2config": 164, "atol": [165, 194], "06": [165, 194, 313, 314, 319, 320, 321], "rtol": [165, 194], "batch_shap": [165, 194], "event_shap": [165, 194], "absolut": [165, 194, 313], "densiti": [165, 177, 178, 186, 196], "mass": [165, 177, 178, 186, 196, 320], "rsampl": [165, 178, 186, 215], "sample_shap": [165, 177, 178, 186], "dqnet": 166, "atom": 166, "softmax": [166, 178, 186, 206, 207], "var_num": [167, 189, 206, 207, 213], "action_value_kei": [167, 189, 206, 207, 212, 213, 238, 251], "action_mask_kei": [167, 189, 206, 207, 208, 212, 213], "perspect": [167, 207, 231, 315], "1707": [167, 207, 231, 240], "06887": [167, 207, 231], "mult": [167, 180, 189, 206, 207, 212, 213], "functional_modul": [167, 189, 212, 214, 217, 309], "make_funct": [167, 189, 211, 212, 214, 217, 219, 238, 309, 324], "tensordict_modul": [167, 189, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 225, 227, 230, 236, 240, 241, 242, 243, 245, 309], "nbin": [167, 206, 309], "customdistributionalqv": 167, "log_softmax": [167, 206], "one_hot": [167, 178, 189], "qvalue_actor": [167, 189, 206, 212, 309], "std_bia": 168, "std_min_val": 168, "belief": [168, 184, 190, 191], "1912": [168, 232, 233, 234], "01603": [168, 232, 233, 234], "softplu": [168, 183, 221, 222, 223], "out_features_valu": 169, "cnn_kwarg": [169, 314], "mlp_kwarg": [169, 173, 314], "duel": 169, "cnn": [169, 179, 314, 324], "06581": 169, "512": [169, 314, 320, 322], "embedd": [170, 172, 173], "gru": 170, "grucel": [170, 214], "input_s": [170, 172, 173, 316], "hidden_s": [170, 172, 173, 316], "num_lay": [170, 172, 184, 185], "introduc": [170, 172, 210, 313], "proj_siz": 170, "recurrent_st": [170, 316], "custom_kei": [170, 172], "recurrent_mod": [170, 172], "set_recurrent_mod": [170, 172, 316], "seq": [170, 172, 316, 318], "gru_modul": 170, "rs": [170, 313], "gru_module_train": 170, "policy_train": [170, 172], "traj_td": [170, 172], "batch_first": [170, 172, 316], "policy_infer": [170, 172], "td_inf": [170, 172], "assert_clos": [170, 172], "upscal": [171, 195, 196], "tanh_loc": [171, 195, 196], "event_dim": [171, 194, 195], "ultim": [171, 195, 196], "poor": [171, 195, 196], "explos": [171, 195, 196], "switch": [171, 196], "sigma": [171, 187, 195, 196, 204, 210, 315], "formula": [171, 195, 196, 224, 226, 237, 240, 310, 315], "lstmcell": 172, "trust": 172, "correspont": 172, "b_ih": 172, "b_hh": 172, "recurrent_state_h": [172, 316], "recurrent_state_c": [172, 316], "triplet": [172, 212, 213], "lstm_modul": 172, "rs_h": 172, "rs_c": 172, "hidden0": 172, "hidden1": 172, "lstm_kwarg": 173, "next_observ": [173, 224, 225, 227, 228, 230, 236, 240, 241, 242, 243, 245, 318], "time_step": 173, "2d": [173, 319], "hidden0_in": 173, "hidden1_in": 173, "hidden0_out": 173, "hidden1_out": 173, "single_bias_last_lay": 174, "layer_class": 174, "layer_kwarg": 174, "perceptron": 174, "seamless": 174, "lazylinear": [174, 309, 315, 320, 321, 324], "42": [174, 224, 225, 227, 236, 243, 314, 316, 320, 322, 323], "noisylinear": [174, 181, 307, 314], "noisylazylinear": [174, 307], "At": [175, 208, 314, 315, 316, 318, 320, 321], "mpcplanner": 175, "tensordict_out": [175, 325], "mppi": 176, "covari": 176, "william": [176, 242], "aldrich": 176, "theodor": 176, "01149": 176, "hansen": 176, "wang": 176, "su": 176, "04955": 176, "valueoper": [176, 201, 202, 203, 224, 225, 226, 227, 230, 236, 237, 240, 241, 242, 243, 245, 301, 309, 313, 315], "tdlambdaestim": [176, 307, 313], "value_net": [176, 228, 242, 253, 254, 255, 256, 315], "adv": 176, "lmbda": [176, 247, 253, 256, 258, 264, 265, 266, 269, 270, 310, 313, 315, 319], "95": [176, 247, 313, 314, 315, 316, 320], "value_network": [176, 227, 228, 231, 236, 243, 253, 254, 255, 256, 310, 313, 315], "temperatur": [176, 225, 236], "neg_inf": [177, 178], "inf": [177, 178], "www": [177, 178], "api_doc": [177, 178], "tf_agent": [177, 178], "event": [177, 178, 186, 262, 263, 264, 265, 267, 268, 269, 270, 322], "unnorm": [177, 178, 186], "sparse_mask": [177, 178], "dens": [177, 178], "0831": [177, 178], "1203": [177, 178], "0928": [177, 178], "1972": [177, 178], "grad_method": [178, 186], "reparamgradientstrategi": [178, 186], "passthrough": [178, 186], "proxi": [178, 186, 310], "relaxedonehot": [178, 186], "zeros_lik": [178, 320], "sample_non_valid": 178, "centralis": [179, 180, 319], "share_param": [179, 180, 319], "basi": [179, 322], "homogen": [179, 180, 319], "agent_network": [179, 180], "modulelist": [179, 180, 298, 324], "lazyconv2d": [179, 324], "2592": [179, 314], "decentralis": [179, 319], "28": [179, 313, 314, 320, 321, 323], "n_agent_input": [180, 319], "n_agent_output": [180, 319], "toech": 180, "centalis": 180, "shown": [180, 309, 318, 319, 322], "std_init": [181, 182], "matrix": [181, 182], "initialize_paramet": 181, "isol": 181, "1706": [182, 197], "10295v3": 182, "induc": 182, "aid": 182, "scale_map": 183, "biased_softplus_1": 183, "scale_lb": [183, 190, 191], "exp": [183, 223], "module_norm": 183, "decod": 184, "1803": [184, 185, 188], "10122": [184, 185], "els": [184, 309, 311, 313, 314, 315, 316, 319, 320, 321], "rnn_hidden": 184, "latent": 185, "excacli": 186, "inres": 187, "mu": [187, 210, 315], "state_shap": [188, 251], "mixing_embed_dim": [188, 251], "qmix": [188, 319], "mixer": [188, 197, 251], "monoton": 188, "hyper": 188, "11485": 188, "qmixerloss": [188, 197], "qmix_vdn": [188, 197], "eventu": [188, 316, 320], "vdn": [188, 197], "greedi": [189, 207, 208, 213, 314, 316], "hidden_dim": [190, 191], "posterior": [190, 233], "rssm": [190, 191, 233], "1811": [190, 191], "04551": [190, 191], "obs_embed": 190, "rnn_hidden_dim": 191, "dream": 191, "tanhtransform": 195, "decomposit": 197, "05296": 197, "vmap": [198, 214, 217, 324], "hide": [198, 315, 319], "satisfi": [198, 309], "tensordictmodulebas": [198, 206, 212, 316], "vmap_dim": 198, "lam": 198, "sample_in": 198, "sample_in_td": 198, "vm": 198, "translat": [200, 211], "character": [200, 206, 211, 212, 214, 322], "overflow": [200, 206, 207, 211, 212, 213, 214, 215], "td_modul": [200, 201, 202, 203, 211, 214, 215, 217, 219, 324], "3635": 200, "0340": 200, "1476": 200, "3911": [200, 320], "1664": [200, 314, 320], "5455": 200, "2247": 200, "4583": 200, "2916": 200, "2160": 200, "5337": 200, "5193": 200, "grad_fn": [200, 208, 324], "addmmbackward0": 200, "actorvalueoper": [201, 309], "get_policy_oper": [201, 202, 203, 226, 237, 240, 309], "standalon": [201, 202, 203], "tdmodul": [201, 202, 203, 301], "get_critic_oper": 201, "common_oper": [201, 203], "policy_oper": [201, 202, 203], "value_oper": [201, 202, 203], "normalparamwrapp": [201, 202, 203, 211, 217, 224, 225, 230, 236, 240, 241, 242, 243, 245, 307, 324], "module_hidden": [201, 203], "td_module_hidden": [201, 203], "module_act": [201, 203], "td_module_act": [201, 202, 203], "module_valu": [201, 202, 203], "td_module_valu": [201, 202, 203], "state_action_valu": [201, 219, 225, 243, 252, 298, 301, 309, 313, 324], "td_clone": [201, 202, 203], "tensordictmodulewrapp": [201, 294, 295, 301], "get_policy_head": [201, 202, 203], "safesequenti": [201, 202, 203, 251], "head": [201, 203, 226, 237, 240], "get_value_head": [201, 202, 203], "get_value_oper": [201, 202, 203, 226, 237, 240], "action_modul": 202, "state_valu": [202, 203, 219, 226, 237, 240, 241, 243, 253, 254, 255, 256, 258, 260, 262, 264, 266, 267, 269, 309, 313, 315, 319], "qualiti": [203, 309], "actorcriticoper": [203, 226, 237, 240, 309], "embeddig": 203, "refet": 203, "actorcriticwrapp": [203, 309, 313], "po": 204, "sigma_init": 204, "epsilon": [204, 208, 210, 244, 287, 314, 315, 316], "sigma_end": 204, "annealing_num_step": [204, 208, 210, 313, 314, 316], "captur": [204, 208, 210], "omiss": [204, 208, 210], "ommit": [204, 208, 210, 322], "inferec": 205, "set_tensor_kei": 205, "dt_inference_wrapp": 205, "baz": 205, "inference_context": 205, "obs_dim": 205, "tanhdelta": [205, 307, 313], "dtactor": 205, "actor_modul": [205, 324], "dist_class": 205, "dist_kwarg": 205, "distribution_kwarg": [205, 211, 215, 315, 319], "inference_actor": 205, "sequence_length": 205, "mask_context": 205, "out_act": 205, "qvaluemodul": [206, 212, 251, 316], "distributionaldqnnet": 206, "make_log_softmax": 206, "my_action_valu": [207, 213], "chanc": 207, "thid": 207, "threshold": [208, 225, 226, 315], "eps_init": [208, 210, 314, 316], "eps_end": [208, 210, 314], "explorative_polici": [208, 210], "9055": [208, 320], "9277": 208, "6295": 208, "2532": 208, "addbackward0": 208, "lmheadmodel": 209, "extract": [209, 313, 315], "actor_head": [209, 226, 237, 240], "base_model": 209, "lm_head": 209, "ornstein": 210, "uhlenbeck": 210, "ou": [210, 313], "correl": 210, "noise_t": 210, "noise_": 210, "theta": [210, 315, 320], "sigma_t": 210, "sqrt": 210, "sigma_": 210, "anneal": 210, "ou_prev_nois": 210, "ou_step": 210, "x0": 210, "sigma_min": 210, "n_steps_ann": 210, "is_init_kei": 210, "_ou_prev_nois": 210, "_ou_step": 210, "default_interaction_typ": [211, 215], "interaction_typ": [211, 215], "set_interaction_typ": [211, 215], "cache_dist": [211, 215], "n_empirical_estim": [211, 215], "chose": 213, "functionalmodul": 214, "functionalmodulewithbuff": 214, "td_fmodul": 214, "td_function": 214, "td_state": 214, "ensembl": [214, 241], "params_repeat": 214, "td_vmap": [214, 217], "random_sampl": [214, 215], "suppli": 215, "fist": 215, "log_prob_kei": [215, 319], "probabilistictensordictsequenti": [216, 224, 226, 237, 240, 242, 294, 295, 324], "partial_toler": [216, 217, 318], "who": [216, 217], "AND": [216, 217], "tensordictsequenci": 217, "tensordictsequ": 217, "safeprobabilisticmodul": [217, 309], "spec1": 217, "net1": 217, "module1": 217, "td_module1": 217, "spec2": 217, "module2": 217, "td_module2": 217, "clamp": [218, 233, 289, 320], "boundari": [218, 315, 319], "resolut": 218, "simplest": [218, 313, 315, 316, 319, 322, 325], "9944": 218, "9991": 218, "3020": 218, "2299": [218, 320], "5418": 218, "2989": 218, "6849": 218, "3169": 218, "2690": 218, "9649": [218, 320], "5686": 218, "8602": 218, "0315": 218, "8455": [218, 320], "6027": 218, "4746": 218, "7843": 218, "7782": 218, "2111": 218, "5115": 218, "4687": 218, "5760": 218, "custommodul": 219, "cat": [219, 225, 227, 236, 241, 243, 245, 324], "imaginari": 220, "imagin": 220, "transition_model": 220, "get_reward_oper": 220, "get_transition_model_oper": 220, "min_val": [221, 223], "bias": [221, 310, 313], "_bia": 221, "invert": [222, 315], "surject": 223, "expln": 223, "biased_softplu": [223, 307], "beggin": 223, "biased_softplus_": 223, "syntax": [223, 313], "met": [223, 320], "1602": 224, "01783v2": 224, "entropy_bonu": [224, 226, 237, 240, 315], "favour": [224, 226, 237, 240], "samples_mc_entropi": [224, 226, 237, 239, 240], "mont": [224, 226, 237, 240, 313], "carlo": [224, 226, 237, 240, 313], "entropy_coef": [224, 226, 237, 240, 315, 319], "critic_coef": [224, 226, 237, 240, 315], "loss_critic_typ": [224, 226, 237, 240, 242, 315], "l1": [224, 226, 227, 228, 230, 237, 240, 241, 242, 245, 248, 251, 309, 313], "l2": [224, 226, 227, 228, 229, 230, 233, 234, 237, 240, 241, 242, 245, 248, 251, 313], "smooth_l1": [224, 225, 226, 227, 228, 230, 236, 237, 240, 241, 242, 243, 245, 248, 251, 315], "separate_loss": [224, 226, 227, 230, 236, 237, 240, 241, 242, 243, 245], "propag": [224, 226, 227, 230, 236, 237, 240, 241, 242, 243, 245, 253, 254, 255, 256, 315, 319], "advantage_kei": [224, 226, 237, 240, 242, 253, 254, 255, 256], "value_target_kei": [224, 226, 237, 240, 242, 253, 254, 255, 256, 315], "value_target": [224, 226, 237, 240, 242, 253, 254, 255, 256, 315, 319], "loss_crit": [224, 240, 315, 319], "loss_entropi": [224, 240, 315, 319], "loss_object": [224, 240, 315, 319], "recur": [224, 225, 227, 228, 230, 236, 240, 241, 242, 243, 245, 253, 254, 255, 256, 257], "next_reward": [224, 225, 227, 228, 230, 236, 240, 241, 242, 243, 245, 253, 254, 255, 256], "next_don": [224, 225, 227, 228, 230, 236, 240, 241, 242, 243, 245, 253, 254, 255, 256], "next_termin": [224, 225, 227, 228, 230, 236, 240, 241, 242, 243, 245, 253, 254, 255, 256], "loss_obj": 224, "sacloss": [224, 235, 244, 307], "select_out_kei": [224, 225, 227, 230, 236, 240, 241, 243, 245], "essenti": [224, 225, 226, 230, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 245, 251, 314, 320, 322], "make_value_estim": [224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 246, 251, 310, 313, 314, 319], "value_typ": [224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 247, 251, 313], "valueestim": [224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 247, 251, 307, 310, 313, 319], "hyperparam": [224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 251, 313, 320], "enum": [224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 247, 251, 313], "default_value_estim": [224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 251, 313], "refin": [224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 251], "default_value_kwarg": [224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 251, 307, 313], "dqn_loss": [224, 225, 227, 228, 230, 231, 232, 236, 238, 240, 241, 242, 243, 245, 246, 251], "conserv": 225, "2006": [225, 320], "04779": 225, "actor_network": [225, 227, 229, 230, 236, 239, 241, 243, 245, 313], "qvalue_network": [225, 230, 236, 241, 243, 245], "loss_funct": [225, 227, 228, 229, 230, 236, 241, 243, 245, 248, 251, 313], "alpha_init": [225, 230, 239, 241, 243], "min_alpha": [225, 230, 239, 241, 243], "max_alpha": [225, 230, 239, 241, 243], "fixed_alpha": [225, 230, 239, 241, 243], "target_entropi": [225, 230, 239, 241, 243], "prod": [225, 239, 243], "n_action": [225, 228, 239, 243], "delay_actor": [225, 227, 243, 245], "delay_qvalu": [225, 230, 241, 243, 245], "min_q_weight": 225, "max_q_backup": 225, "backup": 225, "deterministic_backup": 225, "num_random": 225, "with_lagrang": 225, "lagrang": 225, "lagrange_thresh": 225, "valueclass": [225, 227, 230, 236, 241, 243, 245], "qvalu": [225, 230, 236, 241, 243, 245, 298], "loss_actor": [225, 227, 230, 236, 241, 242, 243, 245, 284, 313, 324], "loss_alpha": [225, 230, 241, 243], "loss_alpha_prim": 225, "loss_qvalu": [225, 230, 236, 241, 243, 245], "clip_epsilon": [226, 315, 319], "normalize_advantag": [226, 237, 240, 319], "value_kei": [226, 237, 240, 253, 254, 255, 256, 313], "somemodul": [226, 237, 240], "someactor": [226, 237, 240], "value_head": [226, 237, 240], "somevalu": [226, 237, 240], "loss_modul": [226, 235, 237, 238, 240, 244, 289, 300, 301, 310, 311, 313, 314, 315, 319, 322], "ppoloss": [226, 237, 307], "delay_valu": [227, 228, 231, 242, 243, 251, 314, 316], "loss_valu": [227, 236, 242, 243, 313, 315, 319, 324], "pred_valu": [227, 245, 313, 324], "pred_value_max": [227, 313, 324], "target_valu": [227, 241, 245, 252, 310, 313, 324], "target_value_max": [227, 313, 324], "qvalueactor": [228, 251, 309, 314, 316], "mult_one_hot": [228, 230, 251], "loss_val": [228, 310, 313, 315, 316, 319, 322], "2106": 229, "01345": 229, "ste": 230, "num_qvalue_net": [230, 236, 241, 243, 245], "target_entropy_weight": 230, "onehotcategor": [230, 307], "disctount": 231, "distributionalqvalueactor": [231, 309], "input_tensordict": [231, 313], "actor_model": 232, "value_model": [232, 234], "model_based_env": 232, "dreamerenv": [232, 307], "imagination_horizon": 232, "unrol": [232, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270], "discount_loss": [232, 234], "lambda_kl": 233, "lambda_reco": 233, "lambda_reward": 233, "reco_loss": 233, "reward_loss": 233, "free_nat": 233, "nat": 233, "delayed_clamp": 233, "global_averag": 233, "value_loss": 234, "fake_data": 234, "ddpgloss": [235, 244, 301, 307, 313, 324], "td3loss": [235, 244, 307], "value_network_update_interv": 235, "contrast": [235, 322], "06461": 235, "2110": 236, "06169": 236, "expectil": 236, "tau": [236, 244, 313, 314], "antmaz": 236, "sticht": 236, "loss_value_diff": 236, "diff": 236, "old_polici": 237, "new_polici": 237, "distanc": [237, 248, 252, 253, 319], "apart": [237, 319], "dtarg": 237, "samples_mc_kl": 237, "analyt": 237, "decrement": 237, "loss_": [238, 284, 310, 313], "equip": [238, 316], "gh": 238, "_acceptedkei": 238, "dataclass": [238, 298], "_forward_value_estimator_kei": 238, "alter": [238, 309], "value_estim": [238, 253, 254, 255, 256, 257, 310, 313, 319], "myloss": 238, "action2": 238, "convert_to_funct": [238, 313], "expand_dim": 238, "create_target_param": [238, 313], "compare_against": [238, 313], "funs_to_decor": 238, "stuctur": 238, "_param": 238, "expans": 238, "resampl": 238, "_target_param": 238, "blend": 238, "upcom": [238, 262, 263, 264, 265, 267, 268, 269, 270, 313], "proxim": [240, 315, 319], "optimis": [240, 285, 315, 319], "flavour": [240, 319, 324], "clipppoloss": [240, 307, 315, 319], "klpenppoloss": [240, 307], "regularis": 240, "06347": 240, "gae": [240, 307, 310, 313, 315, 319], "ppo_loss": 240, "tdlambda": [240, 247, 310, 313], "base_lay": 240, "randn_lik": 240, "samplelogprob": 240, "openreview": [241, 298], "ay8zfzm0tdd": [241, 298], "sub_sample_len": 241, "subsampl": [241, 280, 311], "action_log_prob_actor": 241, "state_action_value_actor": [241, 245], "connectionist": 242, "1992": 242, "doi": 242, "1007": 242, "bf00992696": 242, "actor_net": [242, 313, 315], "1801": 243, "01290": 243, "applic": [243, 251, 320], "1812": 243, "05905": 243, "redqloss": [244, 307], "math": 244, "theta_t": [244, 320], "theta_": [244, 320], "polyak": 244, "policy_nois": 245, "noise_clip": 245, "next_state_valu": [245, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 307], "td0": [246, 313], "strict_shap": 248, "view_a": 248, "qmixer": [251, 307], "local_valu": 251, "visibl": [251, 319], "dafault": 251, "acceptedkei": 251, "global_valu": 251, "penultim": 251, "local_value_network": 251, "mixer_network": 251, "suggest": [251, 319], "value_modul": [251, 315, 324], "qnet": [251, 313], "next_val_kei": 252, "pred_next_v": 252, "usus": 252, "mse": 252, "q_valu": 252, "n_steps_to_next": 252, "value_next_st": 252, "1506": [253, 258, 266], "02438": [253, 258, 266], "exponenti": [253, 254, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 287], "average_ga": [253, 315], "skip_exist": [253, 254, 255, 256], "advang": 253, "gradient_mod": 253, "value_error": [253, 254, 255, 256, 257], "sign": 253, "unused_arg": 253, "target_param": [253, 254, 255, 256, 257, 313, 319], "98": [253, 254, 255, 256, 314, 320], "94": [253, 256, 314, 320], "unpack": [253, 254, 255, 256], "tensor_kei": [253, 254, 255, 256, 257], "next_valu": [253, 254, 255, 256, 257], "aka": [254, 314], "average_reward": [254, 255, 256], "tdestim": [254, 255, 257], "infti": 255, "valuefunctionbas": 257, "time_dim": [258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270], "old_stat": [258, 260, 262, 264, 266, 267, 269], "new_stat": [258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270], "did": [259, 314, 315, 322, 325], "rolling_gamma": [262, 263, 264, 265, 267, 268, 269, 270], "g1": [262, 263, 264, 265, 267, 268, 269, 270], "g2": [262, 263, 264, 265, 267, 268, 269, 270], "g3": [262, 263, 264, 265, 267, 268, 269, 270], "g4": [262, 263, 264, 265, 267, 268, 269, 270], "v3": [262, 263, 264, 265, 267, 268, 269, 270], "v4": [262, 263, 264, 265, 267, 268, 269, 270, 313, 315, 321], "out_file_bas": 271, "skip_reset": 271, "dump": 271, "interv": [271, 272, 281, 291, 314, 320], "center_crop": 272, "make_grid": 272, "Will": 272, "grid": 272, "exp_nam": [273, 274, 277, 278, 279, 301, 314], "log_dir": [273, 274, 276, 278, 314], "templat": 273, "csv": [274, 276, 314], "minim": [274, 322], "dependeci": 274, "experiment_nam": [275, 276], "uuid": [275, 314, 325], "date": 275, "logger_typ": 276, "logger_nam": 276, "tensorboard": [276, 278, 324], "wandb": [276, 279, 324], "mlflow": [276, 277], "wandb_kwarg": 276, "mlflow_kwarg": 276, "tracking_uri": 277, "uri": 277, "datastor": 277, "tb_log": 278, "tensoarboard": 278, "sub_traj_len": 280, "min_sub_traj_len": 280, "register_op": [280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 311, 314], "process_optim_batch": [280, 286, 287, 311], "td_out": [280, 288], "_process_optim_batch_hook": [280, 311], "batch_subsampl": 280, "clear_cuda": 281, "pre_optim_step": [281, 311], "counter": [282, 311], "log_pbar": [282, 283, 285, 287, 311, 314], "progress": [282, 283, 285, 289, 311, 314, 316, 325], "count_fram": 282, "pre_steps_log": [282, 283, 311], "count_frames_log": 282, "lognam": 283, "r_train": [283, 314], "log_reward": [283, 314], "loss_compon": 284, "appl": 284, "omit": [284, 315, 320, 322], "optimizer_hook": 284, "record_interv": [285, 313, 314], "record_fram": [285, 292, 313, 314], "policy_explor": [285, 301, 313, 314], "log_kei": [285, 314], "suffix": 285, "underestim": 285, "suppos": [285, 311, 325], "set_exploration_typ": [285, 307, 315, 316, 324], "r_evalu": [285, 313], "flatten_tensordict": [286, 314], "max_dim": 286, "rb_trainer": 286, "batch_process": [286, 287, 288, 311], "post_loss": [286, 311], "999": [287, 314], "jitter": 287, "finfo": 287, "default_dtyp": 287, "get_default_dtyp": 287, "reward_norm": 287, "update_reward_stat": 287, "normalize_reward": 287, "make_train": [288, 307], "_process_batch_hook": [288, 311], "select_kei": [288, 311], "versatil": 289, "optim_steps_per_batch": [289, 311, 314], "epoch": [289, 315, 319], "clip_grad_norm": 289, "clip_norm": 289, "progress_bar": 289, "tqdm": [289, 313, 315, 316, 319, 320], "save_trainer_interv": 289, "disk": [289, 311, 313, 314, 316, 322], "log_interv": [289, 314], "save_trainer_fil": [289, 311], "datacollectorbas": [291, 294, 295, 301, 307], "update_weights_interv": [291, 314], "sit": [291, 314], "update_weight": 291, "post_step": [291, 311], "cfg": [292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 305], "dictconfig": [292, 293, 294, 295, 298, 299, 300, 301, 302, 305], "divid": [292, 309, 313, 319, 320], "unknowingli": 292, "annealing_fram": [292, 313], "init_env_step": [292, 293, 313], "proof_environ": [293, 298, 313], "sta": 293, "ot": 293, "actor_model_explor": [294, 295, 313], "make_env_kwarg": [294, 295], "targetnetupdat": [296, 297, 300, 301], "redqloss_deprec": 297, "actor_net_kwarg": 298, "qvalue_net_kwarg": 298, "observation_kei": 298, "dummi": [298, 313, 325], "parser_env_arg": 298, "parser_model_args_continu": 298, "cattensor": [298, 313, 318, 320, 325], "hydra": 298, "config_stor": 298, "configstor": 298, "halfcheetah": [298, 313], "config_field": 298, "config_cl": 298, "redqmodelconfig": 298, "envconfig": 298, "make_dataclass": 298, "cls_name": 298, "cs": 298, "config_path": 298, "config_nam": 298, "17": [298, 313, 314, 315, 320, 321], "replayargsconfig": 299, "target_net_updat": [301, 313, 314], "constitu": 301, "learnt": [301, 313, 315], "tensorboardlogg": [301, 307], "egreedywrapp": [301, 314, 316], "env_proof": 301, "obs_spec": 301, "net_valu": 301, "dir": [301, 311, 314], "gettempdir": 301, "argpars": [302, 305], "namespac": [302, 305], "parser": [302, 305], "transformed_env_constructor": [302, 307], "num_env_per_collector": [303, 304], "video_tag": 305, "norm_obs_onli": 305, "use_env_cr": 305, "custom_env_mak": 305, "custom_env": 305, "return_transformed_env": 305, "action_dim_gsd": 305, "state_dim_gsd": 305, "obs_norm_state_dict": 305, "wheter": 305, "maker": 305, "asyncdatacollector": 307, "distributedsyncdatacollector": 307, "submitit_delayed_launch": 307, "raycollector": 307, "tensorstorag": 307, "tensordictroundrobinwrit": 307, "tensordictmaxvaluewrit": 307, "d4rlexperiencereplai": 307, "openmlexperiencereplai": 307, "unboundeddiscretetensorspec": [307, 325], "lazystackedtensorspec": 307, "lazystackedcompositespec": 307, "prompttensordicttoken": 307, "rolloutfrommodel": 307, "tokenizeddatasetload": 307, "create_infinite_iter": 307, "consolidate_spec": 307, "check_no_exclusive_kei": 307, "contains_lazy_spec": 307, "check_marl_group": 307, "tensordictrecord": 307, "videorecord": [307, 315], "get_available_librari": 307, "set_exploration_mod": 307, "make_composite_from_td": [307, 320], "terminated_or_trunc": 307, "braxwrapp": 307, "dmcontrolenv": [307, 313, 318, 325], "dmcontrolwrapp": [307, 325], "jumanjienv": 307, "jumanjiwrapp": 307, "multithreadedenvwrapp": 307, "openmlenv": 307, "pettingzooenv": 307, "robohiveenv": 307, "smacv2env": 307, "smacv2wrapp": 307, "vmaswrapp": 307, "qvaluehook": 307, "distributionalqvaluehook": 307, "reset_nois": 307, "cemplann": 307, "mpcplannerbas": 307, "mppiplann": 307, "independentnorm": 307, "truncatednorm": 307, "maskedonehotcategor": 307, "inv_softplu": 307, "vmapmodul": 307, "distributionaldqnloss": [307, 314], "discretesacloss": 307, "iqlloss": 307, "cqlloss": 307, "dtloss": 307, "onlinedtloss": 307, "a2closs": 307, "reinforceloss": 307, "dreameractorloss": 307, "dreamermodelloss": 307, "dreamervalueloss": 307, "td0estim": [307, 313], "td1estim": [307, 313], "td0_return_estim": 307, "td0_advantage_estim": 307, "td1_return_estim": 307, "vec_td1_return_estim": 307, "td1_advantage_estim": 307, "vec_td1_advantage_estim": 307, "td_lambda_return_estim": 307, "vec_td_lambda_return_estim": 307, "td_lambda_advantage_estim": 307, "vec_td_lambda_advantage_estim": 307, "generalized_advantage_estim": 307, "vec_generalized_advantage_estim": 307, "reward2go": 307, "distance_loss": [307, 313], "hold_out_net": 307, "hold_out_param": [307, 313], "softupd": [307, 313, 314, 316], "hardupd": [307, 313], "batchsubsampl": [307, 311], "clearcudacach": 307, "countframeslog": 307, "logreward": [307, 311, 314], "optimizerhook": [307, 314], "replaybuffertrain": [307, 311, 314], "rewardnorm": 307, "selectkei": [307, 311], "trainerhookbas": [307, 311, 314], "updateweight": [307, 311, 314], "make_collector_offpolici": 307, "make_collector_onpolici": 307, "make_dqn_loss": 307, "make_redq_loss": 307, "make_redq_model": 307, "make_replay_buff": [307, 313], "make_target_updat": 307, "parallel_env_constructor": [307, 313], "sync_async_collector": 307, "sync_sync_collector": 307, "correct_for_frame_skip": 307, "get_stats_random_rollout": 307, "csvlogger": [307, 314], "mlflowlogg": 307, "wandblogg": 307, "get_logg": 307, "generate_exp_nam": 307, "journei": 308, "textbook": 308, "highlight": 308, "ever": [308, 319], "bump": 308, "think": [308, 315, 319, 325], "benefit": [308, 319, 322], "pr": 308, "ground": [309, 313, 320], "categori": [309, 311], "recycl": [309, 322], "impos": 309, "violat": 309, "noisier": 309, "Their": [309, 319], "sd": 309, "prob_modul": 309, "pick": [309, 313, 314], "tabl": [309, 314], "customari": 309, "hopefulli": [309, 314], "mathbb": [309, 314], "rightarrow": [309, 314], "soften": 309, "backbon": [309, 316, 318, 324], "make_actor": 309, "make_valu": 309, "shared_param": 309, "make_common": 309, "reusabl": [310, 313, 322], "swappabl": [310, 313], "characterist": [310, 313, 320], "trainabl": [310, 313, 321], "whatev": [310, 313], "smth": [310, 313], "metric": [310, 313], "nutshel": [310, 313], "barto": [310, 319], "chapter": 310, "significantli": [310, 313, 314, 319], "next_stat": 310, "value_net_loss": 310, "pow": [310, 313], "therebi": 310, "room": 310, "convers": 310, "signifi": [310, 319], "underperform": 310, "thin": 310, "intric": 310, "believ": 311, "scheme": [311, 325], "substenti": 311, "_pre_steps_log_hook": 311, "_pre_optim_hook": 311, "sub_batch": 311, "_post_loss_hook": 311, "_post_optim_hook": 311, "post_optim": [311, 314], "_post_optim_log": 311, "post_optim_log": 311, "_post_steps_hook": 311, "_post_steps_log_hook": 311, "post_steps_log": 311, "comment": [311, 314, 324], "extens": [311, 322], "reserv": 311, "logginghook": 311, "logging_hook": 311, "save_dict": 311, "some_valu": 311, "torchsnapshot": 311, "ckpt_backend": 311, "pt": [311, 321], "filepath": 311, "save_train": 311, "load_from_fil": 311, "author": [313, 314, 315, 316, 319, 320, 322], "vincent": [313, 314, 315, 316, 320, 322], "moen": [313, 314, 315, 316, 320, 322], "assembl": 313, "focus": 313, "straightforward": [313, 314, 322], "overview": [313, 315, 319, 324], "transpar": [313, 316], "understood": 313, "sota": [313, 314, 324], "illustr": [313, 314, 322], "device_count": [313, 314, 316, 321, 325], "loss_dict": 313, "modal": 313, "oblivi": [313, 315, 322], "elementari": 313, "didact": 313, "dilut": 313, "pessimist": [313, 314, 315], "target_actor_network_param": 313, "actor_in_kei": 313, "actor_crit": 313, "noth": [313, 315], "compromis": 313, "hp": 313, "hasattr": 313, "_value_estim": 313, "elif": [313, 314], "notimplementederror": 313, "unknown": 313, "_loss_actor": 313, "td_copi": 313, "actor_network_param": 313, "value_network_param": 313, "_loss_valu": 313, "pred_val": 313, "target_value_network_param": 313, "smooth": [313, 314], "loss_funt": 313, "glue": 313, "_forward": 313, "ndimens": 313, "remaind": 313, "focu": [313, 314, 315], "pixels_onli": [313, 314, 324, 325], "env_librari": 313, "env_task": 313, "env_arg": 313, "friendli": 313, "torchr": 313, "rescal": 313, "presum": 313, "make_transformed_env": 313, "reward_sc": 313, "double_to_float_list": 313, "double_to_float_inv_list": 313, "marker": 313, "env_per_collector": 313, "transform_state_dict": 313, "make_t_env": 313, "adjust": [313, 319, 320], "seem": [313, 316], "cheat": 313, "10m": 313, "cautiou": 313, "magnitud": 313, "thousand": [313, 316], "get_env_stat": 313, "proof_env": 313, "5000": [313, 314, 315], "maxim": [313, 320], "recal": [313, 315], "ddpgmlpactor": 313, "ddpgmlpqnet": 313, "materi": 313, "ornsteinuhlenbeckprocesswrapp": 313, "make_ddpg_actor": 313, "q_net": 313, "moduless": 313, "sugges": 313, "1_000_000": [313, 316], "tight": 313, "10_000": [313, 315, 322], "traj_len": [313, 316], "make_record": 313, "recorder_obj": 313, "flavor": 313, "circular": 313, "buffer_s": [313, 314], "random_crop_len": 313, "prb": 313, "buffer_scratch_dir": 313, "temporari": 313, "dirrectori": 313, "trajecotri": 313, "25": [313, 314, 315, 320, 322], "sampel": 313, "dataflow": 313, "ceil_div": 313, "utd": [313, 316], "update_to_data": 313, "realiz": 313, "_must_": 313, "001": [313, 320], "outdat": 313, "trick": [313, 314], "despit": 313, "adam": [313, 314, 315, 316, 319, 320], "optimizer_actor": 313, "lr": [313, 314, 315, 316, 319, 320], "weight_decai": [313, 314], "optimizer_valu": 313, "total_collection_step": 313, "pretti": [313, 322], "rewards_ev": 313, "collected_fram": 313, "pbar": [313, 315, 316, 319, 320], "r0": 313, "numel": [313, 315, 316, 321, 322], "current_fram": 313, "sampled_tensordict": 313, "gn1": 313, "clip_grad_norm_": [313, 315, 319, 320], "gn2": 313, "gn": [313, 320], "td_record": 313, "rn": 313, "set_descript": [313, 315, 316, 319, 320], "2f": 313, "00": [313, 314, 315, 316, 319, 320, 321, 323], "800": [313, 314], "2357": 313, "19it": [313, 314, 320], "1600": [313, 314], "09": [313, 314, 320, 321], "916": 313, "51it": 313, "3200": [313, 314], "1855": 313, "23it": [313, 314, 320], "48": [313, 314, 320, 321], "4800": [313, 314, 320], "02": [313, 314, 315, 316, 320, 321, 323], "2667": 313, "21it": [313, 314], "90": [313, 314, 315, 319, 320], "69": [313, 314, 320, 321], "165": [313, 320], "354": [313, 320], "79": [313, 314, 320, 321], "56": [313, 314, 319, 320, 321], "5600": 313, "6400": [313, 324], "1324": 313, "73it": [313, 314, 320], "65": [313, 314, 320, 321], "93": [313, 314, 320, 321], "208": [313, 320], "39": [313, 314, 316, 320, 321, 322], "51": [313, 314, 315, 316, 320, 321, 322], "72": [313, 314, 320], "7200": 313, "823": 313, "58it": [313, 314, 320], "80": [313, 314, 315, 319, 320, 321], "209": [313, 320], "221": [313, 320], "61": [313, 314, 320, 321], "74": [313, 314, 320, 321, 322], "76": [313, 314, 320, 322], "8000": [313, 315], "614": [313, 320], "98it": 313, "196": [313, 320], "60": [313, 314, 315, 319, 320, 324], "8800": 313, "522": [313, 320], "97it": [313, 314, 315], "70": [313, 314, 315, 319, 320, 321], "84": [313, 314, 316, 320, 321], "159": [313, 320], "97": [313, 314, 320, 321], "96": [313, 314, 316, 320, 321], "9600": 313, "387": [313, 320], "44it": [313, 320], "49": [313, 314, 316, 319, 320, 321], "62": [313, 314, 320, 322], "173": [313, 320], "10400it": 313, "381": [313, 320], "77": [313, 314, 320], "plot": [313, 315, 316, 319, 320], "mention": [313, 316, 322, 325], "matplotlib": [313, 315, 316, 319, 320, 322, 325], "pyplot": [313, 315, 316, 319, 320, 322, 325], "plt": [313, 315, 316, 319, 320, 322, 325], "zip": [313, 317], "legend": 313, "xlabel": [313, 316, 319, 320], "ylabel": [313, 319], "tight_layout": 313, "concret": [313, 315], "takeawai": [313, 314], "minut": [313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "795": [313, 323], "mb": [313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325], "coding_ddpg": [313, 323], "jupyt": [313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325], "ipynb": [313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "galleri": [313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325], "sphinx": [313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325], "customis": [314, 319], "road": 314, "aspect": 314, "highest": 314, "prerequisit": 314, "familiar": [314, 319, 325], "lookup": 314, "amort": [314, 315], "conjunct": 314, "cart": 314, "pole": 314, "un": 314, "actuat": 314, "frictionless": 314, "upright": 314, "duelingcnndqnet": 314, "is_notebook": 314, "shell": 314, "get_ipython": 314, "__class__": 314, "zmqinteractiveshel": 314, "qtconsol": 314, "terminalinteractiveshel": 314, "ipython": [314, 319, 320], "nameerror": 314, "umbrella": 314, "misplac": 314, "misus": 314, "orchestr": 314, "everyth": [314, 316], "five": [314, 315], "64x64": 314, "motion": [314, 320], "obs_norm_sd": 314, "simpler": 314, "get_norm_stat": 314, "test_env": 314, "make_model": 314, "dummy_env": 314, "output_s": [314, 316], "init_bia": 314, "actor_explor": 314, "eps_greedy_v": 314, "eps_greedy_val_env": 314, "get_replay_buff": 314, "n_optim": 314, "themselv": 314, "simplic": [314, 315, 321, 322], "get_collector": 314, "data_collector": 314, "bunch": 314, "concept": [314, 322], "power": 314, "ubiquit": 314, "get_loss_modul": 314, "target_updat": 314, "995": [314, 320], "sensit": 314, "variat": 314, "2e": [314, 320], "wd": 314, "upd": 314, "harder": [314, 324], "5_000": 314, "500000": 314, "100000": 314, "005": 314, "mandatori": [314, 315, 319, 320], "fairer": 314, "budget": [314, 315], "dqn_exp_": 314, "uuid1": [314, 325], "9895": 314, "0737": 314, "tmp": [314, 322], "tmpwtn_nd7q": 314, "dqn_exp_536a5c88": 314, "798f": 314, "11ee": [314, 325], "b0eb": [314, 325], "0242ac120002": [314, 325], "registr": 314, "cumbersom": 314, "buffer_hook": 314, "weight_updat": 314, "descript": [314, 315], "aliv": 314, "total_reward": 314, "00it": [314, 320], "4045": 314, "9259": 314, "58": [314, 316, 319, 320, 321], "16it": [314, 320], "4134": 314, "05": [314, 315, 320, 321], "57it": 314, "3893": 314, "25it": 314, "31": [314, 315, 319, 320, 321], "99it": [314, 316], "192": [314, 320], "41": [314, 316, 319, 320, 321], "18it": 314, "3772": 314, "224": [314, 320], "22it": 314, "4524": 314, "60it": 314, "4162": 314, "288": [314, 320], "66": [314, 320, 321, 322], "07it": [314, 320], "4254": [314, 320], "320": [314, 320, 325], "30it": 314, "4164": [314, 320], "352": [314, 320], "45it": [314, 320], "4074": [314, 320], "384": [314, 320], "49it": [314, 320], "4497": 314, "416": [314, 320], "54": [314, 318, 320, 321, 323], "28it": 314, "3923": 314, "448": [314, 320], "52": [314, 320, 321, 323, 325], "86": [314, 320], "81it": [314, 320], "3531": 314, "480": [314, 320, 321], "39it": [314, 316, 320], "89": [314, 320, 322], "79it": [314, 320], "544": [314, 320], "20it": 314, "4314": 314, "576": [314, 320], "91": [314, 320], "85it": [314, 315, 320], "608": [314, 320], "47": [314, 320, 321], "92": [314, 320, 321, 322], "06it": [314, 320], "4526": 314, "640": 314, "72it": [314, 320], "4797": 314, "672": 314, "43it": [314, 315], "704": 314, "29it": 314, "4345": 314, "736": 314, "45": [314, 316, 320, 321], "17it": [314, 315], "768": 314, "90it": 314, "4948": 314, "05it": [314, 320], "832": 314, "864": 314, "69it": [314, 320], "896": 314, "82it": [314, 320], "928": 314, "43": [314, 315, 319, 320, 321, 323], "10it": [314, 320], "960": 314, "4586": 314, "992": [314, 320], "47it": [314, 315, 320], "4676": 314, "1056": 314, "54it": [314, 320], "22": [314, 315, 320, 321, 323, 324], "1088": 314, "1120": 314, "1152": 314, "50it": 314, "1184": 314, "40": [314, 315, 319, 320], "1216": 314, "1248": 314, "1280": 314, "77it": [314, 315], "1344": 314, "09it": 314, "1376": 314, "40it": 314, "1408": 314, "64it": [314, 320], "1440": 314, "32it": 314, "1472": 314, "37": [314, 320, 321, 322], "3983": 314, "1504": 314, "36": [314, 320, 321], "89it": 314, "1536": 314, "1568": 314, "80it": 314, "4645": 314, "1632": 314, "75it": 314, "87it": 314, "1696": 314, "1728": 314, "13it": [314, 320], "1760": 314, "01it": [314, 315], "1792": 314, "1824": 314, "1856": 314, "36it": [314, 320], "1888": 314, "26it": [314, 320], "1920": 314, "1952": 314, "63it": [314, 320], "1984": 314, "55it": [314, 320], "2016": 314, "46it": [314, 320], "2048": [314, 321], "42it": 314, "2080": 314, "76it": 314, "2112": [314, 320], "2144": 314, "2176": 314, "2208": 314, "2240": 314, "2272": 314, "33it": [314, 320], "2304": 314, "2336": 314, "2368": 314, "2400": 314, "2432": 314, "85": [314, 320, 321], "86it": 314, "2464": 314, "35it": [314, 315], "2496": 314, "83": [314, 320, 321], "2528": [314, 320], "82": [314, 320], "2560": 314, "38it": [314, 320], "2624": 314, "53": [314, 320, 321], "2656": [314, 320], "2688": 314, "2720": [314, 320], "55": [314, 320], "2752": 314, "2784": 314, "11it": 314, "2816": 314, "57": [314, 320, 321, 323], "2848": 314, "2880": 314, "56it": [314, 315], "2912": 314, "59": [314, 320, 321], "2944": [314, 320], "83it": [314, 316, 320], "2976": [314, 320], "3008": 314, "3040": 314, "31it": 314, "3072": 314, "52it": [314, 320], "3104": 314, "63": [314, 320, 321, 322], "3136": 314, "3168": 314, "34it": 314, "3232": [314, 320], "6667": 314, "3264": 314, "3296": 314, "67": [314, 318, 320], "3328": 314, "78it": 314, "3360": 314, "68": [314, 320], "3392": 314, "3424": 314, "96it": 314, "3456": [314, 320], "3488": 314, "3520": 314, "75": [314, 320, 321, 322], "71": [314, 320, 321], "3552": 314, "3584": 314, "3616": 314, "73": [314, 320], "3648": 314, "91it": 314, "3680": 314, "3712": 314, "95it": 314, "3744": 314, "3776": 314, "08it": [314, 320], "3808": 314, "3840": 314, "3872": 314, "78": [314, 319, 320, 321], "3904": 314, "94it": 314, "3936": 314, "3968": 314, "27it": 314, "4000": [314, 315], "4032": 314, "4064": 314, "4096": 314, "4128": [314, 320], "4160": 314, "4192": 314, "4224": 314, "4256": [314, 320], "07": [314, 315, 320, 321], "4288": [314, 320], "37it": [314, 320], "4320": 314, "4352": 314, "4384": 314, "4416": 314, "4448": 314, "4480": 314, "4512": 314, "4544": [314, 323], "4576": 314, "4608": 314, "4640": 314, "15it": 314, "4672": [314, 320], "4704": 314, "4736": 314, "4768": 314, "68it": [314, 320], "4832": 314, "74it": [314, 320], "4864": 314, "4896": 314, "4928": 314, "41it": [314, 315], "4960": 314, "4992": 314, "5024it": 314, "84it": 314, "print_csv_files_in_fold": 314, "folder_path": 314, "csv_file": 314, "output_str": 314, "dirpath": 314, "walk": [314, 318], "endswith": 314, "strip": 314, "44965070486068726": 314, "4044681489467621": 314, "4948333501815796": 314, "44965073466300964": 314, "4676021933555603": 314, "37996146082878113": 314, "3175022006034851": 314, "24982605874538422": 314, "2882700264453888": 314, "25291118025779724": 314, "30082952976226807": 314, "27962803840637207": 314, "3299539387226105": 314, "40888187289237976": 314, "grad_norm_0": 314, "3900773525238037": 314, "2248759269714355": 314, "3274965286254883": 314, "702409267425537": 314, "879600167274475": 314, "3653829097747803": 314, "911885976791382": 314, "7740917205810547": 314, "976295471191406": 314, "10000000894069672": 314, "666666030883789": 314, "qvaluenetwork": 314, "worst": 314, "accuraci": 314, "fanci": 314, "775": [314, 323], "1054": [314, 323], "coding_dqn": [314, 323], "demonstr": [315, 319, 320, 325], "talk": 315, "repetit": 315, "six": 315, "sophist": [315, 319], "invent": 315, "theta_k": 315, "frac": 315, "pi_": 315, "exceed": 315, "discourag": [315, 320], "indispens": 315, "analyz": 315, "lingua": 315, "franca": 315, "defaultdict": [315, 320], "has_cuda": [315, 319, 325], "3e": [315, 316, 319], "max_grad_norm": [315, 319], "big": [315, 322, 325], "ourselv": [315, 325], "benefici": 315, "errat": 315, "hamper": [315, 322], "reactiv": 315, "xy": 315, "sub_batch_s": 315, "num_epoch": [315, 319], "entropy_ep": [315, 319], "generalist": 315, "interchang": [315, 321, 322], "panel": 315, "charact": 315, "inverteddoublependulum": 315, "transmit": 315, "stai": 315, "thumb": 315, "supplementari": [315, 325], "told": 315, "stringent": [315, 319], "confid": [315, 319], "pack": [315, 325], "ran": 315, "f_": 315, "mu_": 315, "difficulti": [315, 325], "brought": [315, 316], "d_ob": 315, "d_action": 315, "policy_modul": [315, 319], "That": 315, "said": 315, "briefli": [315, 319], "refil": [315, 319], "capac": 315, "conveni": [315, 319, 320], "easiest": [315, 319], "mathemat": [315, 319], "tradeoff": [315, 319], "advantage_modul": 315, "lr_schedul": [315, 320], "cosineannealinglr": [315, 320], "eval_str": 315, "tensordict_data": [315, 319], "data_view": [315, 319], "subdata": [315, 319], "cum_reward_str": 315, "4f": [315, 316, 320], "stepcount_str": 315, "param_group": 315, "lr_str": 315, "eval_rollout": 315, "nice": 315, "390": [315, 320], "129": [315, 320], "2410": 315, "0855": 315, "0003": [315, 316, 320], "1302": 315, "3000": 315, "393": [315, 320], "1641": 315, "397": [315, 320], "1910": 315, "0002": [315, 320], "2029": 315, "6000": 315, "2182": 315, "7000": 315, "2303": [315, 320], "396": [315, 320], "2404": 315, "9000": 315, "398": [315, 320], "2427": 315, "2597": 315, "cap": [315, 322], "figsiz": [315, 320], "subplot": [315, 320, 325], "titl": [315, 316, 319, 320], "bit": [315, 316, 319, 322], "466": [315, 320, 323], "coding_ppo": [315, 323], "rnn": 316, "lstmmodul": 316, "84x84": 316, "accessori": 316, "stamp": 316, "tensordictprim": 316, "se": 316, "assist": 316, "emb": 316, "n_cell": 316, "customiz": 316, "almost": 316, "bidirect": 316, "wouldn": 316, "make_tensordict_prim": 316, "interpolationmod": 316, "qval": 316, "stoch_polici": 316, "cudnn": 316, "opportun": 316, "coupl": [316, 320, 322], "uniniti": 316, "again": [316, 319, 321, 322, 325], "redund": 316, "strongli": 316, "million": 316, "sake": [316, 321, 322], "20_000": [316, 320], "longest": 316, "npai": 316, "action_spread": 316, "1000000": 316, "0004": [316, 320], "116": [316, 320], "150": [316, 320, 322], "152": [316, 320], "168": [316, 320], "65it": [316, 320], "282": [316, 320, 323], "1769": 316, "dqn_with_rnn": [316, 323], "tutorials_python": 317, "tutorials_jupyt": 317, "humanoid": 318, "env1_obs_kei": 318, "observation_stand": 318, "env2_obs_kei": 318, "observation_walk": 318, "tdreset1": 318, "tdreset2": 318, "tdreset": 318, "policy_common": 318, "policy_stand": 318, "policy_walk": 318, "But": 318, "exclusive_field": [318, 324], "stack_dim": [318, 324], "env1_mak": 318, "env2_mak": 318, "_single_task": 318, "td_rollout": 318, "206": [318, 320, 323], "multi_task": [318, 323], "matteo": 319, "bettini": 319, "maddpg": 319, "navig": 319, "lidar": 319, "sensor": 319, "collis": 319, "tie": 319, "mappo": 319, "ippo": 319, "phase": [319, 322], "mathbf": 319, "pi": [319, 320], "_t": [319, 320], "fed": [319, 322], "approxim": [319, 325], "literatur": 319, "overcom": 319, "stationari": 319, "concurr": 319, "analys": 319, "gui": 319, "visualis": 319, "multiagentmlp": 319, "divic": 319, "vmas_devic": 319, "6_000": 319, "team": [319, 324], "n_iter": 319, "minibatch_s": 319, "generalis": 319, "furthermor": 319, "simd": 319, "parallelis": 319, "warp": 319, "todai": 319, "circl": 319, "surround": 319, "dot": [319, 320], "collid": 319, "drag": 319, "elast": 319, "acceler": 319, "penalis": 319, "num_vmas_env": 319, "scenario_nam": 319, "four": [319, 320], "environmnet": 319, "final_rew": 319, "agent_collis": 319, "stress": 319, "paramount": 319, "n_rollout_step": 319, "evolut": 319, "yourself": 319, "utilis": 319, "n_actions_per_ag": 319, "n_obs_per_ag": 319, "share_parameters_polici": 319, "policy_net": 319, "denot": 319, "unbatched_action_spec": 319, "carefulli": [319, 325], "grant": 319, "converg": 319, "cooper": 319, "share_parameters_crit": 319, "critic_net": 319, "fantast": 319, "minibatch": 319, "desc": 319, "episode_reward_mean": 319, "episode_reward_mean_list": 319, "get_item_shap": 319, "critic_param": 319, "target_critic_param": 319, "refresh": 319, "3641679584980011": 319, "4940122067928314": 319, "0600677728652954": 319, "4344534873962402": 319, "1100871562957764": 319, "304917335510254": 319, "6943857669830322": 319, "871443748474121": 319, "8500826358795166": 319, "759843587875366": 319, "xvfb": 319, "pyvirtualdisplai": 319, "1400": [319, 320], "900": 319, "pil": 319, "rendering_callback": 319, "fromarrai": 319, "rgb_arrai": [319, 320], "gif": 319, "save_al": 319, "append_imag": 319, "profici": 319, "master": 319, "115": [319, 320, 323], "multiagent_ppo": [319, 323], "freeli": 320, "touch": 320, "undertaken": 320, "broader": 320, "wider": 320, "algebra": 320, "acquaint": 320, "avenu": 320, "_apply_to_composit": 320, "default_x": 320, "default_i": 320, "torqu": 320, "upward": 320, "angular": 320, "sin": 320, "rad": 320, "sec": 320, "gravit": 320, "angl": 320, "deleg": 320, "new_th": 320, "new_thdot": 320, "thdot": 320, "g_forc": 320, "max_torqu": 320, "angle_norm": 320, "max_spe": 320, "albeit": 320, "gen_param": 320, "high_th": 320, "high_thdot": 320, "low_th": 320, "low_thdot": 320, "rng": 320, "lazili": 320, "trivial": 320, "neither": 320, "shortcut": [320, 325], "irrelev": 320, "_make_spec": 320, "td_param": 320, "pseudo": 320, "render_mod": 320, "render_fp": 320, "random_": 320, "_make_step": 320, "staticmethod": 320, "complic": [320, 322, 325], "showcas": 320, "skeleton": 320, "_apply_transform": [320, 325], "_inv_apply_transform": [320, 325], "subset": [320, 321], "unitari": 320, "sine": 320, "cosin": 320, "sintransform": 320, "tensordict_reset": 320, "costransform": 320, "t_sin": 320, "t_co": 320, "cat_transform": 320, "mdp": 320, "convin": 320, "simple_rollout": 320, "_data": 320, "unexplor": 320, "recreat": 320, "init_td": 320, "traj_return": 320, "last_reward": 320, "is_ipython": 320, "inlin": 320, "get_backend": 320, "ion": 320, "gcf": 320, "clear_output": 320, "625": 320, "0488": 320, "0748": 320, "519": 320, "62it": 320, "0499": 320, "4472": 320, "073": 320, "0685": 320, "0408": 320, "552": 320, "67it": 320, "5154": 320, "9086": 320, "527": 320, "9385": 320, "155": 320, "71it": 320, "2568": 320, "4981": 320, "223": 320, "8929": 320, "4491": 320, "581": 320, "3233": 320, "0664": 320, "596": 320, "1021": 320, "5263": 320, "9579": 320, "5807": 320, "8075": 320, "212": 320, "2009": 320, "5525": 320, "914": 320, "2894": 320, "0115": 320, "0977": 320, "1845": 320, "1830": 320, "4858": 320, "233": 320, "2863": 320, "0297": 320, "464": 320, "4617": 320, "5997": 320, "904": 320, "1647": 320, "0777": 320, "901": [320, 323, 325], "4709": 320, "6813": 320, "8317": 320, "3221": 320, "5554": 320, "276": 320, "3353": 320, "701": 320, "8570": 320, "6656": 320, "463": 320, "7779": 320, "6911": 320, "875": 320, "0796": 320, "7082": 320, "308": 320, "0421": 320, "1496": 320, "5037": 320, "1755": 320, "5029": 320, "9454": 320, "665": 320, "9330": 320, "2118": 320, "444": 320, "0995": 320, "6294": 320, "3146": 320, "2909": 320, "461": 320, "9720": 320, "1298": 320, "9923": 320, "0345": 320, "70it": 320, "3438": 320, "3688": 320, "424": 320, "6953": 320, "5233": 320, "411": 320, "8011": 320, "5329": 320, "2677": 320, "6969": 320, "7010": 320, "376": 320, "9352": 320, "7707": 320, "6178": 320, "5646": 320, "348": 320, "7304": 320, "9407": 320, "942": 320, "3882": 320, "7604": 320, "3507": 320, "8928": 320, "258": 320, "6978": 320, "4641": 320, "549": 320, "6047": 320, "5005": 320, "4136": 320, "2993": 320, "3222": 320, "4046": 320, "7314": 320, "275": 320, "6331": 320, "9318": 320, "961": 320, "8331": 320, "1604": 320, "4099": 320, "4761": 320, "125": 320, "4262": 320, "6363": 320, "382": 320, "3593": 320, "7377": 320, "2847": 320, "3443": 320, "867": 320, "3592": 320, "4760": 320, "441": 320, "9950": 320, "8021": 320, "3528": 320, "1214": 320, "708": 320, "4023": 320, "3583": 320, "041": 320, "3801": 320, "0310": 320, "120": 320, "4244": 320, "2039": 320, "4850": 320, "8748": 320, "706": 320, "4897": 320, "9210": 320, "8964": 320, "0832": 320, "3934": 320, "456": 320, "8971": 320, "2933": 320, "3377": 320, "6996": 320, "2274": 320, "8916": 320, "098": 320, "2660": 320, "9110": 320, "4503": 320, "6956": 320, "9172": 320, "4026": 320, "946": 320, "9229": 320, "5205": 320, "294": 320, "8872": 320, "6637": 320, "019": 320, "9281": 320, "2082": 320, "724": 320, "8561": 320, "6574": 320, "357": 320, "4138": 320, "5230": 320, "385": 320, "4065": 320, "5642": 320, "921": 320, "9786": 320, "4129": 320, "5831": 320, "266": 320, "7723": 320, "4152": 320, "0898": 320, "389": 320, "5155": 320, "5376": 320, "5616": 320, "4094": 320, "283": 320, "5333": 320, "4803": 320, "895": 320, "6566": 320, "2588": 320, "662": 320, "4732": 320, "7503": 320, "068": 320, "0714": 320, "3370": 320, "059": 320, "8612": 320, "1915": 320, "3855": 320, "0349": 320, "9644": 320, "4538": 320, "445": 320, "0392": 320, "4080": 320, "1648": 320, "9599": 320, "143": 320, "4284": 320, "5946": 320, "2590": 320, "9181": 320, "4621": 320, "9075": 320, "674": 320, "1772": 320, "9444": 320, "351": 320, "9391": 320, "5595": 320, "8673": 320, "6240": 320, "5919": 320, "0018": 320, "1071": 320, "9127": 320, "251": 320, "9799": 320, "3131": 320, "9612": 320, "9705": 320, "8741": 320, "2230": 320, "0972": 320, "0337": 320, "0350": 320, "0654": 320, "102": 320, "2441": 320, "4596": 320, "362": 320, "103": 320, "4362": 320, "171": 320, "104": [320, 322], "4041": 320, "6907": 320, "105": [320, 322], "4664": 320, "2760": 320, "0299": 320, "9712": 320, "349": 320, "107": 320, "3332": 320, "4479": 320, "772": 320, "108": [320, 322], "4357": 320, "9591": 320, "543": 320, "109": 320, "6216": 320, "1353": 320, "692": 320, "110": 320, "6261": 320, "7086": 320, "496": 320, "111": [320, 322], "7758": 320, "9818": 320, "112": [320, 322], "7772": 320, "5055": 320, "113": 320, "5840": 320, "3180": 320, "2083": 320, "5275": 320, "6873": 320, "4107": 320, "1624": 320, "117": 320, "6372": 320, "2571": 320, "118": 320, "4039": 320, "4428": 320, "119": 320, "4728": 320, "5628": 320, "6767": 320, "2466": 320, "121": [320, 325], "5873": 320, "5072": 320, "122": [320, 325], "6548": 320, "3766": 320, "123": 320, "5134": 320, "1955": 320, "124": [320, 322], "2481": 320, "0591": 320, "4500": 320, "3368": 320, "126": 320, "9708": 320, "7059": 320, "127": [320, 322], "3031": 320, "2534": 320, "843": 320, "3327": 320, "6193": 320, "4831": 320, "1172": 320, "2593": 320, "4219": 320, "962": 320, "8380": 320, "899": 320, "132": 320, "2721": 320, "9048": 320, "166": 320, "133": 320, "2419": 320, "5248": 320, "134": 320, "2139": 320, "4278": 320, "135": 320, "0690": 320, "5140": 320, "136": 320, "1140": 320, "7402": 320, "137": [320, 322], "5356": 320, "1636": 320, "138": [320, 322], "0671": 320, "8798": 320, "139": 320, "8918": 320, "3298": 320, "307": 320, "140": [320, 322], "1779": 320, "141": 320, "1771": 320, "3624": 320, "936": 320, "142": 320, "1683": 320, "4810": 320, "9373": 320, "4435": 320, "144": 320, "4396": 320, "8092": 320, "145": 320, "2572": 320, "146": [320, 322], "4212": 320, "0260": 320, "147": 320, "0939": 320, "6478": 320, "605": 320, "148": 320, "6606": 320, "7289": 320, "149": 320, "9300": 320, "7193": 320, "563": 320, "1166": 320, "8514": 320, "151": [320, 322], "9108": 320, "0672": 320, "292": 320, "8591": 320, "3768": 320, "153": [320, 323], "9976": 320, "154": 320, "0576": 320, "0067": 320, "935": 320, "4199": 320, "1722": 320, "156": 320, "8310": 320, "3466": 320, "157": 320, "8631": 320, "2492": 320, "158": 320, "8763": 320, "1277": 320, "5562": 320, "7446": 320, "1082": 320, "9830": 320, "161": 320, "0946": 320, "5229": 320, "162": [320, 322], "4574": 320, "6900": 320, "163": [320, 321], "2229": 320, "0318": 320, "482": 320, "164": 320, "0543": 320, "0817": 320, "761": 320, "2809": 320, "5118": 320, "366": 320, "1142": 320, "5635": 320, "167": [320, 323, 324], "1949": 320, "2327": 320, "982": 320, "0967": 320, "0387": 320, "457": 320, "169": 320, "0782": 320, "2150": 320, "170": 320, "5222": 320, "3725": 320, "9288": 320, "9837": 320, "172": 320, "1416": 320, "1099": 320, "8620": 320, "8475": 320, "174": 320, "1807": 320, "4375": 320, "175": 320, "1148": 320, "0645": 320, "2751": 320, "8313": 320, "177": [320, 322], "9286": 320, "9770": 320, "178": 320, "5735": 320, "2837": 320, "179": 320, "2926": 320, "9489": 320, "180": 320, "1507": 320, "181": 320, "8724": 320, "3567": 320, "182": 320, "3574": 320, "6140": 320, "183": 320, "7895": 320, "2518": 320, "184": 320, "6146": 320, "185": 320, "8776": 320, "7358": 320, "186": [320, 322, 323], "3722": 320, "8428": 320, "187": 320, "7955": 320, "188": 320, "0092": 320, "7106": 320, "829": 320, "189": 320, "2264": 320, "6919": 320, "190": 320, "1438": 320, "1362": 320, "191": 320, "0618": 320, "8217": 320, "9420": 320, "6765": 320, "193": 320, "7745": 320, "0709": 320, "194": 320, "9478": 320, "6867": 320, "195": 320, "6507": 320, "6225": 320, "2244": 320, "2195": 320, "197": 320, "5385": 320, "9263": 320, "198": 320, "1878": 320, "2374": 320, "199": 320, "8054": 320, "3504": 320, "557": 320, "0766": 320, "6825": 320, "201": 320, "2011": 320, "8393": 320, "202": 320, "0803": 320, "7815": 320, "203": 320, "8363": 320, "2460": 320, "204": 320, "66it": 320, "8643": 320, "2191": 320, "593": 320, "205": 320, "0773": 320, "1343": 320, "8657": 320, "207": 320, "9304": 320, "7584": 320, "8752": 320, "2307": 320, "5250": 320, "4869": 320, "7837": 320, "5762": 320, "211": 320, "6661": 320, "8600": 320, "2502": 320, "1752": 320, "213": 320, "3075": 320, "8871": 320, "214": 320, "9406": 320, "8090": 320, "215": 320, "6291": 320, "8923": 320, "876": 320, "216": 320, "9504": 320, "21e": 320, "217": 320, "7431": 320, "7880": 320, "218": 320, "4463": 320, "5432": 320, "219": 320, "3793": 320, "3313": 320, "220": 320, "8843": 320, "0369": 320, "065": 320, "4828": 320, "8391": 320, "222": 320, "6265": 320, "2913": 320, "947": 320, "5541": 320, "1252": 320, "7342": 320, "2396": 320, "225": 320, "5936": 320, "1924": 320, "226": 320, "9975": 320, "2045": 320, "227": 320, "8367": 320, "9540": 320, "228": 320, "7259": 320, "6743": 320, "229": 320, "4827": 320, "7528": 320, "230": 320, "7361": 320, "8756": 320, "231": 320, "7646": 320, "1116": 320, "232": 320, "5426": 320, "8385": 320, "5662": 320, "8585": 320, "234": [320, 321, 323], "8234": 320, "7930": 320, "235": 320, "2648": 320, "9309": 320, "236": 320, "6817": 320, "237": 320, "0943": 320, "1533": 320, "238": 320, "3045": 320, "0483": 320, "239": 320, "240": [320, 324, 325], "6415": 320, "0201": 320, "241": 320, "4437": 320, "4365": 320, "242": 320, "0358": 320, "4943": 320, "243": 320, "1272": 320, "5003": 320, "1180": 320, "2637": 320, "245": 320, "7197": 320, "0873": 320, "246": 320, "2917": 320, "247": 320, "0160": 320, "0738": 320, "248": 320, "3689": 320, "0120": 320, "249": 320, "5570": 320, "0475": 320, "250": 320, "4423": 320, "2220": 320, "6803": 320, "252": 320, "1465": 320, "7214": 320, "253": 320, "8801": 320, "7034": 320, "254": 320, "9136": 320, "4076": 320, "7589": 320, "5013": 320, "8150": 320, "2241": 320, "257": 320, "0753": 320, "8081": 320, "1951": 320, "8314": 320, "259": 320, "0038": 320, "260": 320, "0889": 320, "4616": 320, "261": 320, "0655": 320, "262": 320, "8333": 320, "9476": 320, "263": 320, "7554": 320, "3798": 320, "264": 320, "3717": 320, "3947": 320, "529": 320, "265": 320, "3060": 320, "6495": 320, "7467": 320, "8889": 320, "267": 320, "8457": 320, "591": 320, "268": 320, "7137": 320, "0536": 320, "771": 320, "269": 320, "1651": 320, "388": 320, "270": 320, "8246": 320, "5709": 320, "281": 320, "271": 320, "7502": 320, "0521": 320, "032": 320, "272": 320, "5475": 320, "7253": 320, "273": 320, "2856": 320, "7130": 320, "274": 320, "2778": 320, "4122": 320, "8368": 320, "1841": 320, "9622": 320, "1603": 320, "003e": 320, "277": 320, "0247": 320, "346": 320, "278": 320, "2238": 320, "6418": 320, "279": 320, "0626": 320, "2538": 320, "280": 320, "0149": 320, "7380": 320, "2167": 320, "8911": 320, "8725": 320, "1983": 320, "8142": 320, "3709": 320, "284": 320, "4989": 320, "285": 320, "6464": 320, "6210": 320, "286": 320, "9726": 320, "0820": 320, "287": 320, "6975": 320, "9091": 320, "4926": 320, "4791": 320, "289": 320, "0905": 320, "3500": 320, "290": 320, "2287": 320, "291": 320, "9918": 320, "5543": 320, "9245": 320, "6444": 320, "631": 320, "293": 320, "0448": 320, "4769": 320, "8566": 320, "7208": 320, "295": 320, "0966": 320, "296": 320, "5303": 320, "1537": 320, "023": 320, "297": 320, "2682": 320, "564": 320, "298": 320, "4318": 320, "5063": 320, "299": 320, "7475": 320, "4190": 320, "8186": 320, "5077": 320, "301": 320, "1883": 320, "5291": 320, "472": 320, "302": [320, 322], "1256": 320, "3998": 320, "303": 320, "3622": 320, "0930": 320, "626": 320, "304": 320, "9500": 320, "0075": 320, "5664": 320, "305": 320, "5697": 320, "3024": 320, "306": 320, "3117": 320, "0052": 320, "006": 320, "0981": 320, "9312": 320, "3873": 320, "309": 320, "61it": 320, "0411": 320, "2650": 320, "310": 320, "1656": 320, "0228": [320, 325], "004": 320, "311": 320, "1196": 320, "2478": 320, "312": 320, "7353": 320, "0812": 320, "313": 320, "3022": 320, "758": 320, "314": 320, "1406": 320, "4626": 320, "315": 320, "2156": 320, "851": 320, "316": 320, "1953": 320, "3774": 320, "317": 320, "6385": 320, "9917": 320, "318": 320, "2764": 320, "905": 320, "319": 320, "6391": 320, "9317": 320, "9748": 320, "2679": 320, "321": 320, "8495": 320, "5125": 320, "8177": 320, "6602": 320, "323": 320, "0704": 320, "5776": 320, "324": 320, "9833": [320, 324], "1339": 320, "402": 320, "325": 320, "1238": 320, "326": 320, "9299": 320, "0227": 320, "327": 320, "7727": 320, "1607": 320, "336": 320, "328": 320, "3958": 320, "3223": 320, "763": 320, "329": 320, "4742": 320, "1797": 320, "330": 320, "0144": 320, "0085": 320, "791": 320, "331": 320, "8284": 320, "0428": 320, "332": 320, "0098": 320, "7365": 320, "333": 320, "4566": 320, "0781": 320, "086": 320, "334": 320, "3355": 320, "0230": 320, "335": 320, "9346": 320, "0423": 320, "076": 320, "3711": 320, "1335": 320, "6855": 320, "337": 320, "0304": 320, "0023": 320, "8459": 320, "338": 320, "9998": 320, "4399": 320, "339": 320, "1346": 320, "340": 320, "2915": 320, "7116": 320, "341": 320, "5560": 320, "0487": 320, "342": 320, "5119": 320, "061": 320, "343": 320, "3305": 320, "3705": 320, "957": 320, "344": 320, "6068": 320, "345": 320, "5731": 320, "3897": 320, "0376": 320, "347": 320, "0434": 320, "012": 320, "1300": 320, "1215": 320, "0968": 320, "0885": 320, "350": 320, "1348": 320, "0073": 320, "5052": 320, "4184": 320, "2817": 320, "8887": 320, "353": 320, "4779": 320, "1009": 320, "0604": 320, "599": 320, "355": 320, "4486": 320, "1176": 320, "656": 320, "356": 320, "2436": 320, "0668": 320, "8849": 320, "0012": 320, "358": 320, "7511": 320, "8804": 320, "359": 320, "8870": 320, "6728": 320, "360": 320, "8841": 320, "5508": 320, "361": 320, "5242": 320, "0268": 320, "0013": 320, "6185": 320, "363": 320, "1378": 320, "0204": 320, "364": 320, "0355": 320, "685": 320, "365": [320, 322], "4884": 320, "0231": 320, "0770": 320, "0014": 320, "6793": 320, "367": 320, "9834": 320, "863": 320, "368": 320, "6709": 320, "462": 320, "369": 320, "5199": 320, "9790": 320, "370": 320, "9401": 320, "7802": 320, "371": 320, "6723": 320, "372": 320, "48it": 320, "2678": 320, "6201": 320, "373": 320, "2184": 320, "7385": 320, "374": 320, "59it": 320, "6344": 320, "617": 320, "375": 320, "9945": 320, "0772": 320, "567": 320, "7576": 320, "0398": 320, "377": 320, "3396": 320, "0022": 320, "094": 320, "378": 320, "3073": 320, "4018": 320, "379": 320, "1869": 320, "380": 320, "0481": 320, "1117": 320, "6823": 320, "981": 320, "8305": 320, "0210": 320, "383": 320, "4908": 320, "0272": 320, "538": 320, "3267": 320, "0111": 320, "7965": 320, "1796": 320, "0039": 320, "5396": 320, "386": 320, "3757": 320, "0490": 320, "1394": 320, "4187": 320, "2986": 320, "7954": 320, "1274": 320, "0063": 320, "813": 320, "8706": 320, "0114": 320, "391": 320, "6922": 320, "2423": 320, "392": 320, "9115": 320, "2602": 320, "2449": 320, "0783": 320, "394": 320, "0631": 320, "0057": 320, "7444": 320, "395": 320, "3339": 320, "0167": 320, "4806": 320, "4171": 320, "067": 320, "2618": 320, "5809": 320, "399": 320, "0054": 320, "3364": 320, "8733": 320, "0184": 320, "401": 320, "9137": 320, "0113": 320, "025": 320, "0386": 320, "0625": 320, "403": 320, "1332": 320, "0582": 320, "7816": 320, "404": 320, "8341": 320, "0941": 320, "854": 320, "405": 320, "8615": 320, "588": 320, "406": 320, "3849": 320, "008": 320, "407": 320, "9395": 320, "0765": 320, "055": 320, "408": 320, "2685": 320, "2235": 320, "688": 320, "409": 320, "3052": 320, "4249": 320, "410": 320, "6806": 320, "6383": 320, "3721": 320, "9981": 320, "412": 320, "1862": 320, "822": 320, "413": 320, "9811": 320, "0171": 320, "013": 320, "414": 320, "0252": 320, "0049": 320, "6205": 320, "415": 320, "1108": 320, "4921": 320, "9142": 320, "8130": 320, "417": 320, "1725": 320, "0036": 320, "3196": 320, "418": 320, "7795": 320, "0242": 320, "799": 320, "419": 320, "7737": 320, "0138": 320, "420": 320, "1462": 320, "0053": 320, "421": 320, "9226": 320, "6139": 320, "422": 320, "9889": 320, "0403": 320, "423": 320, "6194": 320, "0032": 320, "3989": 320, "0104": 320, "425": 320, "9960": 320, "0009": 320, "6009": 320, "426": 320, "2697": 320, "0914": 320, "427": 320, "1114": 320, "428": 320, "9862": 320, "1932": 320, "429": 320, "0637": 320, "0623": 320, "082": 320, "430": 320, "9906": 320, "2031": 320, "431": 320, "9948": 320, "0895": 320, "432": 320, "1970": 320, "0256": 320, "433": 320, "4231": 320, "0449": 320, "644": 320, "434": 320, "1039": 320, "1973": 320, "435": 320, "4561": 320, "1225": 320, "436": 320, "0211": 320, "2125": 320, "437": 320, "3866": 320, "0050": 320, "7202": 320, "438": 320, "6388": 320, "0072": 320, "439": 320, "1187": 320, "0015": 320, "5116": 320, "440": 320, "0432": 320, "0025": 320, "7809": 320, "1925": 320, "0103": 320, "442": 320, "9570": 320, "443": 320, "14it": 320, "0871": 320, "5601": 320, "0165": 320, "0047": 320, "6061": 320, "2746": 320, "0027": 320, "7887": 320, "446": 320, "1835": 320, "0035": 320, "855": 320, "447": 320, "24it": 320, "8420": 320, "548": 320, "2653": 320, "0126": 320, "9736": 320, "449": 320, "0594": 320, "0119": 320, "6196": 320, "450": 320, "4509": 320, "0373": 320, "451": 320, "0620": 320, "452": 320, "6898": 320, "3235": 320, "687": 320, "453": 320, "5879": 320, "454": 320, "8406": 320, "0694": 320, "455": 320, "8259": 320, "0235": 320, "8500": 320, "0024": 320, "4054": 320, "458": 320, "2027": 320, "0894": 320, "459": 320, "5966": 320, "460": 320, "6942": 320, "0016": 320, "6703": 320, "0145": 320, "8124": 320, "0218": 320, "9196": 320, "0188": 320, "8986": 320, "0884": 320, "0084": 320, "5624": 320, "465": 320, "8862": 320, "0006": 320, "5384": 320, "5837": 320, "467": 320, "8954": 320, "0101": 320, "6751": 320, "468": 320, "8063": 320, "0122": 320, "9635": 320, "469": 320, "0692": 320, "4216": 320, "470": 320, "1227": 320, "0586": 320, "162e": 320, "471": 320, "9690": 320, "0074": 320, "4166": 320, "6324": 320, "473": 320, "0778": 320, "474": 320, "8548": 320, "0017": 320, "4408": 320, "475": 320, "8125": 320, "1515": 320, "476": 320, "2733": 320, "0044": 320, "2836": 320, "477": 320, "7497": 320, "7681": 320, "478": 320, "8547": 320, "0105": 320, "7212": 320, "479": 320, "9848": 320, "0019": 320, "6498": 320, "1987": 320, "0011": 320, "5473": 320, "481": 320, "8991": 320, "0033": 320, "6091": 320, "9189": 320, "5771": 320, "483": 320, "6781": 320, "7542": 320, "484": 320, "5959": 320, "0064": 320, "4295": 320, "485": 320, "2547": 320, "486": 320, "0636": 320, "547": 320, "487": 320, "0065": 320, "488": 320, "1694": 320, "0083": 320, "5759": 320, "489": 320, "0493": 320, "0021": 320, "7805": 320, "490": 320, "0950": 320, "497": 320, "491": 320, "9717": 320, "3672": 320, "492": 320, "0207": 320, "493": 320, "8266": 320, "0069": 320, "5365": 320, "494": 320, "2623": 320, "5078": 320, "495": 320, "4545": [320, 322], "09636": 320, "8754": 320, "0010": 320, "498": 320, "0031": 320, "8269": 320, "499": 320, "4082": 320, "6642": 320, "2284": 320, "501": 320, "9130": 320, "0008": 320, "502": 320, "503": 320, "7624": 320, "0056": 320, "3858": 320, "504": 320, "0890": 320, "0042": 320, "505": 320, "7505": 320, "2157": 320, "506": 320, "8394": 320, "3413": 320, "507": 320, "9609": 320, "0041": 320, "6905": 320, "508": 320, "8467": 320, "4409": 320, "509": 320, "510": 320, "8128": 320, "3559": 320, "511": 320, "1479": 320, "0264": 320, "1589": 320, "566": 320, "513": 320, "2756": 320, "0046": 320, "5266": 320, "514": 320, "9873": 320, "0112": 320, "9314": 320, "515": 320, "3791": 320, "0721": 320, "516": 320, "4580": 320, "0758": 320, "6114": 320, "517": 320, "2431": 320, "518": 320, "1958": 320, "5553": 320, "8924": 320, "0097": 320, "520": 320, "3737": 320, "0234": 320, "521": 320, "9125": 320, "4623": 320, "3230": 320, "0589": 320, "3784": 320, "523": 320, "9482": 320, "0051": 320, "524": 320, "1979": 320, "0045": 320, "6401": 320, "525": 320, "1588": 320, "0048": 320, "6255": 320, "526": 320, "6084": 320, "3477": 320, "1475": 320, "0209": 320, "528": 320, "53it": 320, "7611": 320, "1040": 320, "0099": 320, "0173": 320, "643": 320, "530": 320, "8189": 320, "4358": 320, "531": 320, "9897": 320, "532": 320, "1548": 320, "9751": 320, "533": 320, "6362": 320, "7495": 320, "534": 320, "1749": 320, "9513": 320, "535": 320, "7708": 320, "0371": 320, "536": 320, "2649": 320, "0437": 320, "537": 320, "5491": 320, "0276": 320, "6426": 320, "7294": 320, "078e": 320, "539": 320, "9928": 320, "540": 320, "7937": 320, "0124": 320, "9664": 320, "541": 320, "3342": 320, "542": 320, "2046": 320, "5496": 320, "0956": 320, "0059": 320, "545": 320, "9028": 320, "5843": 320, "546": 320, "0674": 320, "0178": 320, "797": 320, "2815": 320, "0599": 320, "1587": 320, "9276": 320, "8228": 320, "6164": 320, "551": 320, "6850": 320, "9167": 320, "3092": 320, "0670": 320, "9177": 320, "553": 320, "1599": 320, "0043": 320, "554": 320, "6367": 320, "555": 320, "3657": 320, "556": 320, "6694": 320, "2622": 320, "0372": 320, "4841": 320, "558": 320, "2707": 320, "0058": 320, "757": 320, "559": 320, "2267": 320, "5415": 320, "560": 320, "4556": 320, "0163": 320, "561": 320, "1839": 320, "0809": 320, "6262": 320, "562": 320, "0278": 320, "1112": 320, "6155": 320, "565": 320, "1427": 320, "3582": 320, "624": 320, "7870": 320, "9490": 320, "0439": 320, "8796": 320, "568": 320, "8026": 320, "612": 320, "569": 320, "3147": 320, "8486": 320, "570": 320, "7917": 320, "0129": 320, "571": 320, "9553": 320, "0020": 320, "6871": 320, "572": 320, "3132": 320, "0159": 320, "8646": 320, "573": 320, "5320": 320, "0269": 320, "574": 320, "2955": 320, "0245": 320, "575": 320, "3347": 320, "0179": 320, "9718": 320, "1629": 320, "804": 320, "577": 320, "0070": 320, "4335": 320, "578": 320, "579": 320, "3049": 320, "9063": 320, "580": 320, "8785": 320, "3295": 320, "5184": 320, "0546": 320, "582": 320, "4589": 320, "583": 320, "4697": 320, "2476": 320, "584": 320, "2397": 320, "585": 320, "4953": 320, "1775": 320, "586": 320, "2258": 320, "0110": 320, "7671": 320, "587": 320, "3981": 320, "8590": 320, "0007": 320, "589": 320, "9820": 320, "4221": 320, "590": 320, "1293": 320, "0116": 320, "868": 320, "1675": 320, "5931": 320, "592": 320, "2910": 320, "5219": 320, "2124": 320, "1730": 320, "737": 320, "594": 320, "2914": 320, "0206": 320, "595": 320, "0172": 320, "3982": 320, "0945": 320, "0121": 320, "4789": 320, "597": 320, "3805": 320, "598": 320, "3310": 320, "5065": 320, "6028": 320, "6316": 320, "6724": 320, "6523": 320, "601": 320, "0136": 320, "4298": 320, "602": 320, "3524": 320, "2629": 320, "603": 320, "2635": 320, "7839": 320, "604": 320, "6041": 320, "8027": 320, "4170": 320, "4675": 320, "606": 320, "3153": 320, "9316": 320, "607": 320, "0649": 320, "9722": 320, "7989": 320, "0329": 320, "609": 320, "1976": 320, "6852": 320, "610": 320, "4793": 320, "1255": 320, "611": 320, "4581": 320, "0394": 320, "2047": 320, "0326": 320, "613": 320, "8967": 320, "8619": 320, "5906": 320, "6491": 320, "615": 320, "6634": 320, "4394": 320, "616": 320, "0624": 320, "0061": 320, "5676": 320, "3259": 320, "0131": 320, "7733": 320, "618": 320, "7515": 320, "0189": 320, "5575": 320, "619": 320, "9313": 320, "6286": 320, "620": 320, "4325": 320, "7832": 320, "621": 320, "1134": 320, "622": 320, "4572": 320, "0500": 320, "5838": 320, "623": 320, "3818": 320, "8623": 320, "1253": 320, "6622": 320, "subject": 320, "saw": [320, 322], "024": [320, 323], "explain": 321, "semat": 321, "r3mtransform": 321, "embodi": 321, "ai": 321, "env_transform": [321, 325], "s3": 321, "amazonaw": 321, "r3m_50": 321, "374m": 321, "0mb": 321, "9m": 321, "8mb": 321, "2m": 321, "2mb": 321, "3mb": 321, "0m": 321, "7mb": 321, "6m": 321, "1mb": 321, "4mb": 321, "5mb": 321, "103m": 321, "115m": 321, "130m": 321, "6mb": 321, "136m": 321, "147m": 321, "162m": 321, "168m": 321, "179m": 321, "183m": 321, "9mb": 321, "195m": 321, "199m": 321, "202m": 321, "212m": 321, "216m": 321, "229m": 321, "235m": 321, "244m": 321, "248m": 321, "261m": 321, "265m": 321, "277m": 321, "281m": 321, "293m": 321, "297m": 321, "310m": 321, "314m": 321, "326m": 321, "330m": 321, "342m": 321, "347m": 321, "359m": 321, "365m": 321, "373m": 321, "wiser": 321, "conclud": 321, "_storag": [321, 322], "3749": 321, "pretrained_model": [321, 323], "supervis": [322, 325], "pull": 322, "temporarili": 322, "drastic": 322, "ram": [322, 325], "batteri": 322, "dataliststorag": 322, "datalazytensorstorag": 322, "tensordidct": 322, "datalazymemmapstorag": 322, "buffer_list": 322, "lowest": 322, "medium": 322, "buffer_lazytensor": 322, "buffer_lazymemmap": 322, "fullest": 322, "organ": 322, "convini": 322, "mydata": 322, "background": 322, "question": [322, 324], "_i": 322, "artifici": 322, "0892946e": 322, "she": 322, "augment": 322, "proport": 322, "hist": 322, "barcontain": 322, "artist": 322, "revert": 322, "expens": 322, "reappear": 322, "unfold": 322, "problemat": 322, "window": 322, "4th": 322, "traceback": 322, "__w": 322, "rb_tutori": [322, 323], "668": 322, "809": 322, "ret": 322, "_sampl": 322, "decorated_fun": 322, "_collate_fn": 322, "745": 322, "_collate_as_tensor": 322, "as_tensor": 322, "1817": 322, "torchrl_demo": [323, 324], "torchrl_env": [323, 325], "1768": 323, "3748": 323, "demo": 324, "icml": 324, "vmoen": 324, "fb": 324, "invest": 324, "platform": 324, "media": 324, "truli": 324, "predominantli": 324, "tensordict1": 324, "tensordict2": 324, "tensordict_sampl": 324, "_sampler": 324, "_sum_tre": 324, "modulenotfounderror": 324, "28791671991348267": 324, "gym_env": 324, "noopresetenv": [324, 325], "backbone_modul": 324, "params_expand": 324, "tensordict_exp": 324, "base_modul": 324, "0137": 324, "1524": 324, "0641": 324, "viewbackward0": 324, "asstridedbackward0": 324, "8728": 324, "1334": 324, "3494": 324, "6887": 324, "6402": 324, "_safetanhbackward": 324, "1132": 324, "1762": 324, "3430": 324, "2668": 324, "2918": 324, "6239": 324, "roughli": 324, "tensordicts_prealloc": 324, "tensordicts_stack": 324, "tensordict_rollout": [324, 325], "disclaim": 324, "concatmodul": 324, "loss_td": 324, "year": 324, "roadmap": 324, "compris": 324, "contributor": 324, "curiou": 324, "nascent": 324, "unsupervis": 325, "rom": 325, "licens": 325, "pygam": 325, "unifi": 325, "insid": 325, "_build_env": 325, "sphinx_gallery_start_ignor": 325, "filterwarn": 325, "sphinx_gallery_end_ignor": 325, "adventur": 325, "airraid": 325, "alien": 325, "amidar": 325, "assault": 325, "1652": 325, "deserv": 325, "__episode__": 325, "__trajectory__": 325, "void": 325, "reproduct": 325, "tensordict_tprim": 325, "imshow": 325, "axesimag": 325, "0x7f6ab44858b0": 325, "inconsist": 325, "0x7f6ab4ddd120": 325, "swingup": 325, "wrapper1": 325, "wrapper2": 325, "obviou": 325, "truth": 325, "env0": 325, "env_transformed_bi": 325, "stanc": 325, "transformeddistribut": 325, "base_dist": 325, "concat": 325, "mofidi": 325, "transformedenviron": 325, "moderet": 325, "computation": 325, "legitim": 325, "incom": 325, "amongst": 325, "wor": 325, "convention": 325, "scope": 325, "markovian": 325, "3288080526": 325, "constain": 325, "bar_": 325, "get_someth": 325, "bar_7917b26a": 325, "798e": 325, "aargh": 325, "foo_list": 325, "batched_env": 325, "_dispatch_caller_parallel": 325, "0x7f6ab542a670": 325, "bar_81110ea8": 325, "9884": 325, "bar_81108dd": 325, "8ef3": 325, "bar_81108f0a": 325, "9d22": 325, "parallen": 325, "particularili": 325, "evolv": 325, "steadi": 325, "approx": 325, "4470": 325, "1136": 325, "1557": 325, "2266": 325, "2587": 325, "2644": 325, "_extra_st": 325, "observation_ssq": 325, "observation_sum": 325, "0465": 325, "0632": 325, "1793": 325, "1655": 325, "2796": 325, "dispach": 325, "absor": 325}, "objects": {"torchrl._utils": [[11, 0, 1, "", "implement_for"]], "torchrl._utils.implement_for": [[11, 1, 1, "", "get_class_that_defined_method"], [11, 1, 1, "", "import_module"], [11, 1, 1, "", "module_set"], [11, 1, 1, "", "reset"]], "torchrl.collectors.collectors": [[12, 0, 1, "", "DataCollectorBase"], [13, 0, 1, "", "MultiSyncDataCollector"], [14, 0, 1, "", "MultiaSyncDataCollector"], [15, 0, 1, "", "RandomPolicy"], [16, 0, 1, "", "SyncDataCollector"], [17, 0, 1, "", "aSyncDataCollector"]], "torchrl.collectors.collectors.DataCollectorBase": [[12, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiSyncDataCollector": [[13, 1, 1, "", "load_state_dict"], [13, 1, 1, "", "reset"], [13, 1, 1, "", "set_seed"], [13, 1, 1, "", "shutdown"], [13, 1, 1, "", "state_dict"], [13, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.MultiaSyncDataCollector": [[14, 1, 1, "", "load_state_dict"], [14, 1, 1, "", "reset"], [14, 1, 1, "", "set_seed"], [14, 1, 1, "", "shutdown"], [14, 1, 1, "", "state_dict"], [14, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.SyncDataCollector": [[16, 1, 1, "", "iterator"], [16, 1, 1, "", "load_state_dict"], [16, 1, 1, "", "reset"], [16, 1, 1, "", "rollout"], [16, 1, 1, "", "set_seed"], [16, 1, 1, "", "shutdown"], [16, 1, 1, "", "state_dict"], [16, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.collectors.aSyncDataCollector": [[17, 1, 1, "", "load_state_dict"], [17, 1, 1, "", "reset"], [17, 1, 1, "", "set_seed"], [17, 1, 1, "", "shutdown"], [17, 1, 1, "", "state_dict"], [17, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed": [[18, 0, 1, "", "DistributedDataCollector"], [19, 0, 1, "", "DistributedSyncDataCollector"], [20, 0, 1, "", "RPCDataCollector"], [21, 0, 1, "", "RayCollector"], [22, 0, 1, "", "submitit_delayed_launcher"]], "torchrl.collectors.distributed.DistributedDataCollector": [[18, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.DistributedSyncDataCollector": [[19, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RPCDataCollector": [[20, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.distributed.RayCollector": [[21, 1, 1, "", "add_collectors"], [21, 1, 1, "", "load_state_dict"], [21, 1, 1, "", "local_policy"], [21, 1, 1, "", "remote_collectors"], [21, 1, 1, "", "set_seed"], [21, 1, 1, "", "shutdown"], [21, 1, 1, "", "state_dict"], [21, 1, 1, "", "stop_remote_collectors"], [21, 1, 1, "", "update_policy_weights_"]], "torchrl.collectors.utils": [[23, 2, 1, "", "split_trajectories"]], "torchrl.data": [[24, 0, 1, "", "BinaryDiscreteTensorSpec"], [25, 0, 1, "", "BoundedTensorSpec"], [26, 0, 1, "", "CompositeSpec"], [27, 0, 1, "", "DiscreteTensorSpec"], [28, 0, 1, "", "LazyStackedCompositeSpec"], [29, 0, 1, "", "LazyStackedTensorSpec"], [30, 0, 1, "", "MultiDiscreteTensorSpec"], [31, 0, 1, "", "MultiOneHotDiscreteTensorSpec"], [32, 0, 1, "", "MultiStep"], [33, 0, 1, "", "OneHotDiscreteTensorSpec"], [34, 0, 1, "", "PairwiseDataset"], [35, 0, 1, "", "PrioritizedReplayBuffer"], [36, 0, 1, "", "PromptData"], [37, 0, 1, "", "PromptTensorDictTokenizer"], [38, 0, 1, "", "ReplayBuffer"], [39, 0, 1, "", "RewardData"], [40, 0, 1, "", "RolloutFromModel"], [41, 0, 1, "", "TensorDictPrioritizedReplayBuffer"], [42, 0, 1, "", "TensorDictReplayBuffer"], [43, 0, 1, "", "TensorDictTokenizer"], [44, 0, 1, "", "TensorSpec"], [45, 0, 1, "", "TokenizedDatasetLoader"], [46, 0, 1, "", "UnboundedContinuousTensorSpec"], [47, 0, 1, "", "UnboundedDiscreteTensorSpec"], [48, 0, 1, "", "check_no_exclusive_keys"], [49, 0, 1, "", "consolidate_spec"], [50, 0, 1, "", "contains_lazy_spec"], [51, 0, 1, "", "create_infinite_iterator"], [54, 0, 1, "", "get_dataloader"]], "torchrl.data.BinaryDiscreteTensorSpec": [[24, 1, 1, "", "assert_is_in"], [24, 1, 1, "", "encode"], [24, 1, 1, "", "expand"], [24, 1, 1, "", "implements_for_spec"], [24, 1, 1, "", "index"], [24, 1, 1, "", "is_in"], [24, 1, 1, "", "project"], [24, 1, 1, "", "rand"], [24, 1, 1, "", "squeeze"], [24, 1, 1, "", "to_numpy"], [24, 1, 1, "", "to_one_hot"], [24, 1, 1, "", "to_one_hot_spec"], [24, 1, 1, "", "type_check"], [24, 1, 1, "", "zero"]], "torchrl.data.BoundedTensorSpec": [[25, 1, 1, "", "assert_is_in"], [25, 1, 1, "", "encode"], [25, 1, 1, "", "expand"], [25, 1, 1, "", "implements_for_spec"], [25, 1, 1, "", "index"], [25, 1, 1, "", "is_in"], [25, 1, 1, "", "project"], [25, 1, 1, "", "rand"], [25, 1, 1, "", "squeeze"], [25, 1, 1, "", "to_numpy"], [25, 1, 1, "", "type_check"], [25, 1, 1, "", "zero"]], "torchrl.data.CompositeSpec": [[26, 1, 1, "", "assert_is_in"], [26, 1, 1, "", "empty"], [26, 1, 1, "", "encode"], [26, 1, 1, "", "expand"], [26, 1, 1, "", "implements_for_spec"], [26, 1, 1, "", "index"], [26, 1, 1, "", "is_empty"], [26, 1, 1, "", "is_in"], [26, 1, 1, "", "items"], [26, 1, 1, "", "keys"], [26, 1, 1, "", "lock_"], [26, 1, 1, "", "project"], [26, 1, 1, "", "rand"], [26, 1, 1, "", "squeeze"], [26, 1, 1, "", "to_numpy"], [26, 1, 1, "", "type_check"], [26, 1, 1, "", "unlock_"], [26, 1, 1, "", "values"], [26, 1, 1, "", "zero"]], "torchrl.data.DiscreteTensorSpec": [[27, 1, 1, "", "assert_is_in"], [27, 1, 1, "", "encode"], [27, 1, 1, "", "expand"], [27, 1, 1, "", "implements_for_spec"], [27, 1, 1, "", "index"], [27, 1, 1, "", "is_in"], [27, 1, 1, "", "project"], [27, 1, 1, "", "rand"], [27, 1, 1, "", "squeeze"], [27, 1, 1, "", "to_numpy"], [27, 1, 1, "", "to_one_hot"], [27, 1, 1, "", "to_one_hot_spec"], [27, 1, 1, "", "type_check"], [27, 1, 1, "", "zero"]], "torchrl.data.LazyStackedCompositeSpec": [[28, 1, 1, "", "assert_is_in"], [28, 1, 1, "", "empty"], [28, 1, 1, "", "encode"], [28, 1, 1, "", "expand"], [28, 1, 1, "", "implements_for_spec"], [28, 1, 1, "", "index"], [28, 1, 1, "", "is_empty"], [28, 1, 1, "", "is_in"], [28, 1, 1, "", "items"], [28, 1, 1, "", "keys"], [28, 1, 1, "", "lock_"], [28, 1, 1, "", "project"], [28, 1, 1, "", "rand"], [28, 1, 1, "", "squeeze"], [28, 1, 1, "", "to_numpy"], [28, 1, 1, "", "type_check"], [28, 1, 1, "", "unlock_"], [28, 1, 1, "", "values"], [28, 1, 1, "", "zero"]], "torchrl.data.LazyStackedTensorSpec": [[29, 1, 1, "", "assert_is_in"], [29, 1, 1, "", "encode"], [29, 1, 1, "", "expand"], [29, 1, 1, "", "implements_for_spec"], [29, 1, 1, "", "index"], [29, 1, 1, "", "is_in"], [29, 1, 1, "", "project"], [29, 1, 1, "", "rand"], [29, 1, 1, "", "squeeze"], [29, 1, 1, "", "to_numpy"], [29, 1, 1, "", "type_check"], [29, 1, 1, "", "zero"]], "torchrl.data.MultiDiscreteTensorSpec": [[30, 1, 1, "", "assert_is_in"], [30, 1, 1, "", "encode"], [30, 1, 1, "", "expand"], [30, 1, 1, "", "implements_for_spec"], [30, 1, 1, "", "index"], [30, 1, 1, "", "is_in"], [30, 1, 1, "", "project"], [30, 1, 1, "", "rand"], [30, 1, 1, "", "squeeze"], [30, 1, 1, "", "to_numpy"], [30, 1, 1, "", "to_one_hot"], [30, 1, 1, "", "to_one_hot_spec"], [30, 1, 1, "", "type_check"], [30, 1, 1, "", "zero"]], "torchrl.data.MultiOneHotDiscreteTensorSpec": [[31, 1, 1, "", "assert_is_in"], [31, 1, 1, "", "encode"], [31, 1, 1, "", "expand"], [31, 1, 1, "", "implements_for_spec"], [31, 1, 1, "", "index"], [31, 1, 1, "", "is_in"], [31, 1, 1, "", "project"], [31, 1, 1, "", "rand"], [31, 1, 1, "", "squeeze"], [31, 1, 1, "", "to_categorical"], [31, 1, 1, "", "to_categorical_spec"], [31, 1, 1, "", "to_numpy"], [31, 1, 1, "", "type_check"], [31, 1, 1, "", "zero"]], "torchrl.data.MultiStep": [[32, 1, 1, "", "add_module"], [32, 1, 1, "", "apply"], [32, 1, 1, "", "bfloat16"], [32, 1, 1, "", "buffers"], [32, 1, 1, "", "children"], [32, 1, 1, "", "compile"], [32, 1, 1, "", "cpu"], [32, 1, 1, "", "cuda"], [32, 1, 1, "", "double"], [32, 1, 1, "", "eval"], [32, 1, 1, "", "extra_repr"], [32, 1, 1, "", "float"], [32, 1, 1, "", "forward"], [32, 1, 1, "", "get_buffer"], [32, 1, 1, "", "get_extra_state"], [32, 1, 1, "", "get_parameter"], [32, 1, 1, "", "get_submodule"], [32, 1, 1, "", "half"], [32, 1, 1, "", "ipu"], [32, 1, 1, "", "load_state_dict"], [32, 1, 1, "", "modules"], [32, 1, 1, "", "named_buffers"], [32, 1, 1, "", "named_children"], [32, 1, 1, "", "named_modules"], [32, 1, 1, "", "named_parameters"], [32, 1, 1, "", "parameters"], [32, 1, 1, "", "register_backward_hook"], [32, 1, 1, "", "register_buffer"], [32, 1, 1, "", "register_forward_hook"], [32, 1, 1, "", "register_forward_pre_hook"], [32, 1, 1, "", "register_full_backward_hook"], [32, 1, 1, "", "register_full_backward_pre_hook"], [32, 1, 1, "", "register_load_state_dict_post_hook"], [32, 1, 1, "", "register_module"], [32, 1, 1, "", "register_parameter"], [32, 1, 1, "", "register_state_dict_pre_hook"], [32, 1, 1, "", "requires_grad_"], [32, 1, 1, "", "set_extra_state"], [32, 1, 1, "", "share_memory"], [32, 1, 1, "", "state_dict"], [32, 1, 1, "", "to"], [32, 1, 1, "", "to_empty"], [32, 1, 1, "", "train"], [32, 1, 1, "", "type"], [32, 1, 1, "", "xpu"], [32, 1, 1, "", "zero_grad"]], "torchrl.data.OneHotDiscreteTensorSpec": [[33, 1, 1, "", "assert_is_in"], [33, 1, 1, "", "encode"], [33, 1, 1, "", "expand"], [33, 1, 1, "", "implements_for_spec"], [33, 1, 1, "", "index"], [33, 1, 1, "", "is_in"], [33, 1, 1, "", "project"], [33, 1, 1, "", "rand"], [33, 1, 1, "", "squeeze"], [33, 1, 1, "", "to_categorical"], [33, 1, 1, "", "to_categorical_spec"], [33, 1, 1, "", "to_numpy"], [33, 1, 1, "", "type_check"], [33, 1, 1, "", "zero"]], "torchrl.data.PairwiseDataset": [[34, 3, 1, "", "batch_size"], [34, 3, 1, "", "device"], [34, 1, 1, "", "from_dataset"], [34, 1, 1, "", "from_dict"], [34, 1, 1, "", "from_tensordict"], [34, 1, 1, "", "get"], [34, 1, 1, "", "load_state_dict"], [34, 1, 1, "", "set"], [34, 1, 1, "", "state_dict"], [34, 1, 1, "", "to_tensordict"], [34, 1, 1, "", "unbind"]], "torchrl.data.PrioritizedReplayBuffer": [[35, 1, 1, "", "add"], [35, 1, 1, "", "append_transform"], [35, 1, 1, "", "empty"], [35, 1, 1, "", "extend"], [35, 1, 1, "", "insert_transform"], [35, 1, 1, "", "sample"]], "torchrl.data.PromptData": [[36, 3, 1, "", "batch_size"], [36, 3, 1, "", "device"], [36, 1, 1, "", "from_dataset"], [36, 1, 1, "", "from_dict"], [36, 1, 1, "", "from_tensordict"], [36, 1, 1, "", "get"], [36, 1, 1, "", "load_state_dict"], [36, 1, 1, "", "set"], [36, 1, 1, "", "state_dict"], [36, 1, 1, "", "to_tensordict"], [36, 1, 1, "", "unbind"]], "torchrl.data.ReplayBuffer": [[38, 1, 1, "", "add"], [38, 1, 1, "", "append_transform"], [38, 1, 1, "", "empty"], [38, 1, 1, "", "extend"], [38, 1, 1, "", "insert_transform"], [38, 1, 1, "", "sample"]], "torchrl.data.RewardData": [[39, 3, 1, "", "batch_size"], [39, 3, 1, "", "device"], [39, 1, 1, "", "from_dict"], [39, 1, 1, "", "from_tensordict"], [39, 1, 1, "", "get"], [39, 1, 1, "", "load_state_dict"], [39, 1, 1, "", "set"], [39, 1, 1, "", "state_dict"], [39, 1, 1, "", "to_tensordict"], [39, 1, 1, "", "unbind"]], "torchrl.data.RolloutFromModel": [[40, 1, 1, "", "create_rollout_td"], [40, 1, 1, "", "generate"], [40, 1, 1, "", "logprobs_of_labels"]], "torchrl.data.TensorDictPrioritizedReplayBuffer": [[41, 1, 1, "", "add"], [41, 1, 1, "", "append_transform"], [41, 1, 1, "", "empty"], [41, 1, 1, "", "extend"], [41, 1, 1, "", "insert_transform"], [41, 1, 1, "", "sample"]], "torchrl.data.TensorDictReplayBuffer": [[42, 1, 1, "", "add"], [42, 1, 1, "", "append_transform"], [42, 1, 1, "", "empty"], [42, 1, 1, "", "extend"], [42, 1, 1, "", "insert_transform"], [42, 1, 1, "", "sample"]], "torchrl.data.TensorSpec": [[44, 1, 1, "", "assert_is_in"], [44, 1, 1, "", "encode"], [44, 1, 1, "", "expand"], [44, 1, 1, "", "implements_for_spec"], [44, 1, 1, "", "index"], [44, 1, 1, "", "is_in"], [44, 1, 1, "", "project"], [44, 1, 1, "", "rand"], [44, 1, 1, "", "squeeze"], [44, 1, 1, "", "to_numpy"], [44, 1, 1, "", "type_check"], [44, 1, 1, "", "zero"]], "torchrl.data.TokenizedDatasetLoader": [[45, 1, 1, "", "dataset_to_tensordict"], [45, 1, 1, "", "load"]], "torchrl.data.UnboundedContinuousTensorSpec": [[46, 1, 1, "", "assert_is_in"], [46, 1, 1, "", "encode"], [46, 1, 1, "", "expand"], [46, 1, 1, "", "implements_for_spec"], [46, 1, 1, "", "index"], [46, 1, 1, "", "is_in"], [46, 1, 1, "", "project"], [46, 1, 1, "", "rand"], [46, 1, 1, "", "squeeze"], [46, 1, 1, "", "to_numpy"], [46, 1, 1, "", "type_check"], [46, 1, 1, "", "zero"]], "torchrl.data.UnboundedDiscreteTensorSpec": [[47, 1, 1, "", "assert_is_in"], [47, 1, 1, "", "encode"], [47, 1, 1, "", "expand"], [47, 1, 1, "", "implements_for_spec"], [47, 1, 1, "", "index"], [47, 1, 1, "", "is_in"], [47, 1, 1, "", "project"], [47, 1, 1, "", "rand"], [47, 1, 1, "", "squeeze"], [47, 1, 1, "", "to_numpy"], [47, 1, 1, "", "type_check"], [47, 1, 1, "", "zero"]], "torchrl.data.datasets": [[52, 0, 1, "", "D4RLExperienceReplay"], [53, 0, 1, "", "OpenMLExperienceReplay"]], "torchrl.data.datasets.D4RLExperienceReplay": [[52, 1, 1, "", "add"], [52, 1, 1, "", "append_transform"], [52, 1, 1, "", "empty"], [52, 1, 1, "", "extend"], [52, 1, 1, "", "insert_transform"], [52, 1, 1, "", "sample"]], "torchrl.data.datasets.OpenMLExperienceReplay": [[53, 1, 1, "", "add"], [53, 1, 1, "", "append_transform"], [53, 1, 1, "", "empty"], [53, 1, 1, "", "extend"], [53, 1, 1, "", "insert_transform"], [53, 1, 1, "", "sample"]], "torchrl.data.replay_buffers": [[55, 0, 1, "", "LazyMemmapStorage"], [56, 0, 1, "", "LazyTensorStorage"], [57, 0, 1, "", "ListStorage"], [58, 0, 1, "", "PrioritizedSampler"], [59, 0, 1, "", "RandomSampler"], [60, 0, 1, "", "RoundRobinWriter"], [61, 0, 1, "", "Sampler"], [62, 0, 1, "", "SamplerWithoutReplacement"], [63, 0, 1, "", "Storage"], [64, 0, 1, "", "TensorDictMaxValueWriter"], [65, 0, 1, "", "TensorDictRoundRobinWriter"], [66, 0, 1, "", "TensorStorage"], [67, 0, 1, "", "Writer"]], "torchrl.data.replay_buffers.LazyMemmapStorage": [[55, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.LazyTensorStorage": [[56, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.ListStorage": [[57, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.PrioritizedSampler": [[58, 1, 1, "", "update_priority"]], "torchrl.data.replay_buffers.RoundRobinWriter": [[60, 1, 1, "", "add"], [60, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.Storage": [[63, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.TensorDictMaxValueWriter": [[64, 1, 1, "", "add"], [64, 1, 1, "", "extend"], [64, 1, 1, "", "get_insert_index"]], "torchrl.data.replay_buffers.TensorDictRoundRobinWriter": [[65, 1, 1, "", "add"], [65, 1, 1, "", "extend"]], "torchrl.data.replay_buffers.TensorStorage": [[66, 1, 1, "", "attach"]], "torchrl.data.replay_buffers.Writer": [[67, 1, 1, "", "add"], [67, 1, 1, "", "extend"]], "torchrl.envs": [[68, 2, 1, "", "BraxEnv"], [69, 2, 1, "", "BraxWrapper"], [70, 2, 1, "", "DMControlEnv"], [71, 2, 1, "", "DMControlWrapper"], [72, 0, 1, "", "EnvBase"], [73, 0, 1, "", "EnvCreator"], [74, 0, 1, "", "EnvMetaData"], [75, 2, 1, "", "GymEnv"], [76, 0, 1, "", "GymLikeEnv"], [77, 2, 1, "", "GymWrapper"], [78, 2, 1, "", "HabitatEnv"], [79, 2, 1, "", "IsaacGymEnv"], [80, 2, 1, "", "IsaacGymWrapper"], [81, 2, 1, "", "JumanjiEnv"], [82, 2, 1, "", "JumanjiWrapper"], [83, 2, 1, "", "MarlGroupMapType"], [84, 2, 1, "", "ModelBasedEnvBase"], [85, 2, 1, "", "MultiThreadedEnv"], [86, 2, 1, "", "MultiThreadedEnvWrapper"], [87, 2, 1, "", "OpenMLEnv"], [88, 0, 1, "", "ParallelEnv"], [89, 2, 1, "", "PettingZooEnv"], [90, 2, 1, "", "PettingZooWrapper"], [91, 2, 1, "", "RoboHiveEnv"], [92, 2, 1, "", "SMACv2Env"], [93, 2, 1, "", "SMACv2Wrapper"], [94, 0, 1, "", "SerialEnv"], [95, 2, 1, "", "VmasEnv"], [96, 2, 1, "", "VmasWrapper"], [97, 2, 1, "", "check_marl_grouping"], [98, 2, 1, "", "gym_backend"], [84, 1, 1, "", "rand_step"], [84, 1, 1, "", "reset"], [84, 1, 1, "", "rollout"], [100, 2, 1, "", "set_gym_backend"], [84, 1, 1, "", "set_seed"], [84, 1, 1, "", "step"]], "torchrl.envs.EnvBase": [[72, 3, 1, "", "action_key"], [72, 3, 1, "", "action_keys"], [72, 3, 1, "", "action_spec"], [72, 1, 1, "", "add_module"], [72, 1, 1, "", "apply"], [72, 3, 1, "", "batch_locked"], [72, 1, 1, "", "bfloat16"], [72, 1, 1, "", "buffers"], [72, 1, 1, "", "children"], [72, 1, 1, "", "compile"], [72, 1, 1, "", "cpu"], [72, 1, 1, "", "cuda"], [72, 3, 1, "", "done_key"], [72, 3, 1, "", "done_keys"], [72, 3, 1, "", "done_keys_groups"], [72, 3, 1, "", "done_spec"], [72, 1, 1, "", "double"], [72, 1, 1, "", "empty_cache"], [72, 1, 1, "", "eval"], [72, 1, 1, "", "extra_repr"], [72, 1, 1, "", "fake_tensordict"], [72, 1, 1, "", "float"], [72, 1, 1, "", "forward"], [72, 3, 1, "", "full_action_spec"], [72, 3, 1, "", "full_done_spec"], [72, 3, 1, "", "full_reward_spec"], [72, 3, 1, "", "full_state_spec"], [72, 1, 1, "", "get_buffer"], [72, 1, 1, "", "get_extra_state"], [72, 1, 1, "", "get_parameter"], [72, 1, 1, "", "get_submodule"], [72, 1, 1, "", "half"], [72, 3, 1, "", "input_spec"], [72, 1, 1, "", "ipu"], [72, 1, 1, "", "load_state_dict"], [72, 1, 1, "", "modules"], [72, 1, 1, "", "named_buffers"], [72, 1, 1, "", "named_children"], [72, 1, 1, "", "named_modules"], [72, 1, 1, "", "named_parameters"], [72, 3, 1, "", "observation_spec"], [72, 3, 1, "", "output_spec"], [72, 1, 1, "", "parameters"], [72, 1, 1, "", "rand_action"], [72, 1, 1, "id0", "rand_step"], [72, 1, 1, "", "register_backward_hook"], [72, 1, 1, "", "register_buffer"], [72, 1, 1, "", "register_forward_hook"], [72, 1, 1, "", "register_forward_pre_hook"], [72, 1, 1, "", "register_full_backward_hook"], [72, 1, 1, "", "register_full_backward_pre_hook"], [72, 1, 1, "", "register_load_state_dict_post_hook"], [72, 1, 1, "", "register_module"], [72, 1, 1, "", "register_parameter"], [72, 1, 1, "", "register_state_dict_pre_hook"], [72, 1, 1, "", "requires_grad_"], [72, 1, 1, "id1", "reset"], [72, 3, 1, "", "reset_keys"], [72, 3, 1, "", "reward_key"], [72, 3, 1, "", "reward_keys"], [72, 3, 1, "", "reward_spec"], [72, 1, 1, "id2", "rollout"], [72, 1, 1, "", "set_extra_state"], [72, 1, 1, "id3", "set_seed"], [72, 1, 1, "", "share_memory"], [72, 3, 1, "", "specs"], [72, 1, 1, "", "state_dict"], [72, 3, 1, "", "state_spec"], [72, 1, 1, "id4", "step"], [72, 1, 1, "", "step_and_maybe_reset"], [72, 1, 1, "", "to"], [72, 1, 1, "", "to_empty"], [72, 1, 1, "", "train"], [72, 1, 1, "", "type"], [72, 1, 1, "", "xpu"], [72, 1, 1, "", "zero_grad"]], "torchrl.envs.GymLikeEnv": [[76, 3, 1, "", "action_key"], [76, 3, 1, "", "action_keys"], [76, 3, 1, "", "action_spec"], [76, 1, 1, "", "add_module"], [76, 1, 1, "", "apply"], [76, 3, 1, "", "batch_locked"], [76, 1, 1, "", "bfloat16"], [76, 1, 1, "", "buffers"], [76, 1, 1, "", "children"], [76, 1, 1, "", "close"], [76, 1, 1, "", "compile"], [76, 1, 1, "", "cpu"], [76, 1, 1, "", "cuda"], [76, 3, 1, "", "done_key"], [76, 3, 1, "", "done_keys"], [76, 3, 1, "", "done_keys_groups"], [76, 3, 1, "", "done_spec"], [76, 1, 1, "", "double"], [76, 1, 1, "", "empty_cache"], [76, 1, 1, "", "eval"], [76, 1, 1, "", "extra_repr"], [76, 1, 1, "", "fake_tensordict"], [76, 1, 1, "", "float"], [76, 1, 1, "", "forward"], [76, 3, 1, "", "full_action_spec"], [76, 3, 1, "", "full_done_spec"], [76, 3, 1, "", "full_reward_spec"], [76, 3, 1, "", "full_state_spec"], [76, 1, 1, "", "get_buffer"], [76, 1, 1, "", "get_extra_state"], [76, 1, 1, "", "get_parameter"], [76, 1, 1, "", "get_submodule"], [76, 1, 1, "", "half"], [76, 3, 1, "", "input_spec"], [76, 1, 1, "", "ipu"], [76, 1, 1, "", "load_state_dict"], [76, 1, 1, "", "modules"], [76, 1, 1, "", "named_buffers"], [76, 1, 1, "", "named_children"], [76, 1, 1, "", "named_modules"], [76, 1, 1, "", "named_parameters"], [76, 3, 1, "", "observation_spec"], [76, 3, 1, "", "output_spec"], [76, 1, 1, "", "parameters"], [76, 1, 1, "", "rand_action"], [76, 1, 1, "", "rand_step"], [76, 1, 1, "", "read_action"], [76, 1, 1, "", "read_done"], [76, 1, 1, "", "read_obs"], [76, 1, 1, "", "read_reward"], [76, 1, 1, "", "register_backward_hook"], [76, 1, 1, "", "register_buffer"], [76, 1, 1, "", "register_forward_hook"], [76, 1, 1, "", "register_forward_pre_hook"], [76, 1, 1, "", "register_full_backward_hook"], [76, 1, 1, "", "register_full_backward_pre_hook"], [76, 1, 1, "", "register_load_state_dict_post_hook"], [76, 1, 1, "", "register_module"], [76, 1, 1, "", "register_parameter"], [76, 1, 1, "", "register_state_dict_pre_hook"], [76, 1, 1, "", "requires_grad_"], [76, 1, 1, "", "reset"], [76, 3, 1, "", "reset_keys"], [76, 3, 1, "", "reward_key"], [76, 3, 1, "", "reward_keys"], [76, 3, 1, "", "reward_spec"], [76, 1, 1, "", "rollout"], [76, 1, 1, "", "set_extra_state"], [76, 1, 1, "", "set_info_dict_reader"], [76, 1, 1, "", "set_seed"], [76, 1, 1, "", "share_memory"], [76, 3, 1, "", "specs"], [76, 1, 1, "", "state_dict"], [76, 3, 1, "", "state_spec"], [76, 1, 1, "", "step"], [76, 1, 1, "", "step_and_maybe_reset"], [76, 1, 1, "", "to"], [76, 1, 1, "", "to_empty"], [76, 1, 1, "", "train"], [76, 1, 1, "", "type"], [76, 1, 1, "", "xpu"], [76, 1, 1, "", "zero_grad"]], "torchrl.envs.ParallelEnv": [[88, 3, 1, "", "action_key"], [88, 3, 1, "", "action_keys"], [88, 3, 1, "", "action_spec"], [88, 1, 1, "", "add_module"], [88, 1, 1, "", "apply"], [88, 3, 1, "", "batch_locked"], [88, 1, 1, "", "bfloat16"], [88, 1, 1, "", "buffers"], [88, 1, 1, "", "children"], [88, 1, 1, "", "compile"], [88, 1, 1, "", "cpu"], [88, 1, 1, "", "cuda"], [88, 3, 1, "", "done_key"], [88, 3, 1, "", "done_keys"], [88, 3, 1, "", "done_keys_groups"], [88, 3, 1, "", "done_spec"], [88, 1, 1, "", "double"], [88, 1, 1, "", "empty_cache"], [88, 1, 1, "", "eval"], [88, 1, 1, "", "extra_repr"], [88, 1, 1, "", "fake_tensordict"], [88, 1, 1, "", "float"], [88, 1, 1, "", "forward"], [88, 3, 1, "", "full_action_spec"], [88, 3, 1, "", "full_done_spec"], [88, 3, 1, "", "full_reward_spec"], [88, 3, 1, "", "full_state_spec"], [88, 1, 1, "", "get_buffer"], [88, 1, 1, "", "get_extra_state"], [88, 1, 1, "", "get_parameter"], [88, 1, 1, "", "get_submodule"], [88, 1, 1, "", "half"], [88, 3, 1, "", "input_spec"], [88, 1, 1, "", "ipu"], [88, 1, 1, "", "load_state_dict"], [88, 1, 1, "", "modules"], [88, 1, 1, "", "named_buffers"], [88, 1, 1, "", "named_children"], [88, 1, 1, "", "named_modules"], [88, 1, 1, "", "named_parameters"], [88, 3, 1, "", "observation_spec"], [88, 3, 1, "", "output_spec"], [88, 1, 1, "", "parameters"], [88, 1, 1, "", "rand_action"], [88, 1, 1, "", "rand_step"], [88, 1, 1, "", "register_backward_hook"], [88, 1, 1, "", "register_buffer"], [88, 1, 1, "", "register_forward_hook"], [88, 1, 1, "", "register_forward_pre_hook"], [88, 1, 1, "", "register_full_backward_hook"], [88, 1, 1, "", "register_full_backward_pre_hook"], [88, 1, 1, "", "register_load_state_dict_post_hook"], [88, 1, 1, "", "register_module"], [88, 1, 1, "", "register_parameter"], [88, 1, 1, "", "register_state_dict_pre_hook"], [88, 1, 1, "", "requires_grad_"], [88, 1, 1, "", "reset"], [88, 3, 1, "", "reset_keys"], [88, 3, 1, "", "reward_key"], [88, 3, 1, "", "reward_keys"], [88, 3, 1, "", "reward_spec"], [88, 1, 1, "", "rollout"], [88, 1, 1, "", "set_extra_state"], [88, 1, 1, "", "set_seed"], [88, 1, 1, "", "share_memory"], [88, 3, 1, "", "specs"], [88, 1, 1, "", "state_dict"], [88, 3, 1, "", "state_spec"], [88, 1, 1, "", "step"], [88, 1, 1, "", "step_and_maybe_reset"], [88, 1, 1, "", "to"], [88, 1, 1, "", "to_empty"], [88, 1, 1, "", "train"], [88, 1, 1, "", "type"], [88, 1, 1, "", "update_kwargs"], [88, 1, 1, "", "xpu"], [88, 1, 1, "", "zero_grad"]], "torchrl.envs.SerialEnv": [[94, 3, 1, "", "action_key"], [94, 3, 1, "", "action_keys"], [94, 3, 1, "", "action_spec"], [94, 1, 1, "", "add_module"], [94, 1, 1, "", "apply"], [94, 3, 1, "", "batch_locked"], [94, 1, 1, "", "bfloat16"], [94, 1, 1, "", "buffers"], [94, 1, 1, "", "children"], [94, 1, 1, "", "compile"], [94, 1, 1, "", "cpu"], [94, 1, 1, "", "cuda"], [94, 3, 1, "", "done_key"], [94, 3, 1, "", "done_keys"], [94, 3, 1, "", "done_keys_groups"], [94, 3, 1, "", "done_spec"], [94, 1, 1, "", "double"], [94, 1, 1, "", "empty_cache"], [94, 1, 1, "", "eval"], [94, 1, 1, "", "extra_repr"], [94, 1, 1, "", "fake_tensordict"], [94, 1, 1, "", "float"], [94, 1, 1, "", "forward"], [94, 3, 1, "", "full_action_spec"], [94, 3, 1, "", "full_done_spec"], [94, 3, 1, "", "full_reward_spec"], [94, 3, 1, "", "full_state_spec"], [94, 1, 1, "", "get_buffer"], [94, 1, 1, "", "get_extra_state"], [94, 1, 1, "", "get_parameter"], [94, 1, 1, "", "get_submodule"], [94, 1, 1, "", "half"], [94, 3, 1, "", "input_spec"], [94, 1, 1, "", "ipu"], [94, 1, 1, "", "load_state_dict"], [94, 1, 1, "", "modules"], [94, 1, 1, "", "named_buffers"], [94, 1, 1, "", "named_children"], [94, 1, 1, "", "named_modules"], [94, 1, 1, "", "named_parameters"], [94, 3, 1, "", "observation_spec"], [94, 3, 1, "", "output_spec"], [94, 1, 1, "", "parameters"], [94, 1, 1, "", "rand_action"], [94, 1, 1, "", "rand_step"], [94, 1, 1, "", "register_backward_hook"], [94, 1, 1, "", "register_buffer"], [94, 1, 1, "", "register_forward_hook"], [94, 1, 1, "", "register_forward_pre_hook"], [94, 1, 1, "", "register_full_backward_hook"], [94, 1, 1, "", "register_full_backward_pre_hook"], [94, 1, 1, "", "register_load_state_dict_post_hook"], [94, 1, 1, "", "register_module"], [94, 1, 1, "", "register_parameter"], [94, 1, 1, "", "register_state_dict_pre_hook"], [94, 1, 1, "", "requires_grad_"], [94, 1, 1, "", "reset"], [94, 3, 1, "", "reset_keys"], [94, 3, 1, "", "reward_key"], [94, 3, 1, "", "reward_keys"], [94, 3, 1, "", "reward_spec"], [94, 1, 1, "", "rollout"], [94, 1, 1, "", "set_extra_state"], [94, 1, 1, "", "set_seed"], [94, 1, 1, "", "share_memory"], [94, 3, 1, "", "specs"], [94, 1, 1, "", "state_dict"], [94, 3, 1, "", "state_spec"], [94, 1, 1, "", "step"], [94, 1, 1, "", "step_and_maybe_reset"], [94, 1, 1, "", "to"], [94, 1, 1, "", "to_empty"], [94, 1, 1, "", "train"], [94, 1, 1, "", "type"], [94, 1, 1, "", "update_kwargs"], [94, 1, 1, "", "xpu"], [94, 1, 1, "", "zero_grad"]], "torchrl.envs.model_based.dreamer": [[99, 2, 1, "", "DreamerEnv"]], "torchrl.envs.transforms": [[101, 0, 1, "", "ActionMask"], [102, 0, 1, "", "BinarizeReward"], [103, 0, 1, "", "CatFrames"], [104, 0, 1, "", "CatTensors"], [105, 0, 1, "", "CenterCrop"], [106, 0, 1, "", "ClipTransform"], [107, 0, 1, "", "Compose"], [108, 0, 1, "", "DTypeCastTransform"], [109, 0, 1, "", "DeviceCastTransform"], [110, 0, 1, "", "DiscreteActionProjection"], [111, 0, 1, "", "DoubleToFloat"], [112, 0, 1, "", "EndOfLifeTransform"], [113, 0, 1, "", "ExcludeTransform"], [114, 0, 1, "", "FiniteTensorDictCheck"], [115, 0, 1, "", "FlattenObservation"], [116, 0, 1, "", "FrameSkipTransform"], [117, 0, 1, "", "GrayScale"], [118, 0, 1, "", "InitTracker"], [119, 0, 1, "", "KLRewardTransform"], [120, 0, 1, "", "NoopResetEnv"], [121, 0, 1, "", "ObservationNorm"], [122, 0, 1, "", "ObservationTransform"], [123, 0, 1, "", "PermuteTransform"], [124, 0, 1, "", "PinMemoryTransform"], [125, 0, 1, "", "R3MTransform"], [126, 0, 1, "", "RandomCropTensorDict"], [127, 0, 1, "", "RenameTransform"], [128, 0, 1, "", "Resize"], [129, 0, 1, "", "Reward2GoTransform"], [130, 0, 1, "", "RewardClipping"], [131, 0, 1, "", "RewardScaling"], [132, 0, 1, "", "RewardSum"], [133, 0, 1, "", "SelectTransform"], [134, 0, 1, "", "SqueezeTransform"], [135, 0, 1, "", "StepCounter"], [136, 0, 1, "", "TargetReturn"], [137, 0, 1, "", "TensorDictPrimer"], [138, 0, 1, "", "TimeMaxPool"], [139, 0, 1, "", "ToTensorImage"], [140, 0, 1, "", "Transform"], [141, 0, 1, "", "TransformedEnv"], [142, 0, 1, "", "UnsqueezeTransform"], [143, 0, 1, "", "VC1Transform"], [144, 0, 1, "", "VIPRewardTransform"], [145, 0, 1, "", "VIPTransform"], [146, 0, 1, "", "VecNorm"], [147, 0, 1, "", "gSDENoise"]], "torchrl.envs.transforms.ActionMask": [[101, 1, 1, "", "forward"]], "torchrl.envs.transforms.BinarizeReward": [[102, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.CatFrames": [[103, 1, 1, "", "forward"], [103, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CatTensors": [[104, 1, 1, "", "forward"], [104, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.CenterCrop": [[105, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ClipTransform": [[106, 1, 1, "", "transform_observation_spec"], [106, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.Compose": [[107, 1, 1, "", "forward"], [107, 1, 1, "", "to"], [107, 1, 1, "", "transform_env_device"], [107, 1, 1, "", "transform_input_spec"], [107, 1, 1, "", "transform_observation_spec"], [107, 1, 1, "", "transform_output_spec"], [107, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DTypeCastTransform": [[108, 1, 1, "", "forward"], [108, 1, 1, "", "transform_input_spec"], [108, 1, 1, "", "transform_observation_spec"], [108, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.DeviceCastTransform": [[109, 1, 1, "", "forward"], [109, 1, 1, "", "transform_done_spec"], [109, 1, 1, "", "transform_env_device"], [109, 1, 1, "", "transform_input_spec"], [109, 1, 1, "", "transform_observation_spec"], [109, 1, 1, "", "transform_output_spec"], [109, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.DiscreteActionProjection": [[110, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.EndOfLifeTransform": [[112, 1, 1, "", "forward"], [112, 1, 1, "", "register_keys"], [112, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ExcludeTransform": [[113, 1, 1, "", "forward"], [113, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.FiniteTensorDictCheck": [[114, 1, 1, "", "forward"]], "torchrl.envs.transforms.FlattenObservation": [[115, 1, 1, "", "forward"], [115, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.FrameSkipTransform": [[116, 1, 1, "", "forward"]], "torchrl.envs.transforms.GrayScale": [[117, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.InitTracker": [[118, 1, 1, "", "forward"], [118, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.KLRewardTransform": [[119, 1, 1, "", "forward"], [119, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.ObservationNorm": [[121, 1, 1, "", "init_stats"], [121, 1, 1, "", "transform_input_spec"], [121, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PermuteTransform": [[123, 1, 1, "", "transform_input_spec"], [123, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.PinMemoryTransform": [[124, 1, 1, "", "forward"]], "torchrl.envs.transforms.R3MTransform": [[125, 1, 1, "", "to"]], "torchrl.envs.transforms.RandomCropTensorDict": [[126, 1, 1, "", "forward"]], "torchrl.envs.transforms.RenameTransform": [[127, 1, 1, "", "forward"], [127, 1, 1, "", "transform_input_spec"], [127, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.Resize": [[128, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Reward2GoTransform": [[129, 1, 1, "", "forward"]], "torchrl.envs.transforms.RewardClipping": [[130, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardScaling": [[131, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.RewardSum": [[132, 1, 1, "", "forward"], [132, 1, 1, "", "transform_input_spec"], [132, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.SelectTransform": [[133, 1, 1, "", "forward"], [133, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.StepCounter": [[135, 1, 1, "", "forward"], [135, 1, 1, "", "transform_input_spec"], [135, 1, 1, "", "transform_observation_spec"], [135, 1, 1, "", "transform_output_spec"]], "torchrl.envs.transforms.TargetReturn": [[136, 1, 1, "", "forward"], [136, 1, 1, "", "transform_input_spec"], [136, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TensorDictPrimer": [[137, 1, 1, "", "forward"], [137, 1, 1, "", "to"], [137, 1, 1, "", "transform_input_spec"], [137, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.TimeMaxPool": [[138, 1, 1, "", "forward"], [138, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.ToTensorImage": [[139, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.Transform": [[140, 3, 1, "", "container"], [140, 1, 1, "", "forward"], [140, 3, 1, "", "parent"], [140, 1, 1, "", "to"], [140, 1, 1, "", "transform_done_spec"], [140, 1, 1, "", "transform_env_device"], [140, 1, 1, "", "transform_input_spec"], [140, 1, 1, "", "transform_observation_spec"], [140, 1, 1, "", "transform_output_spec"], [140, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.TransformedEnv": [[141, 3, 1, "", "batch_locked"], [141, 1, 1, "", "empty_cache"], [141, 1, 1, "", "eval"], [141, 3, 1, "", "input_spec"], [141, 1, 1, "", "load_state_dict"], [141, 3, 1, "", "output_spec"], [141, 1, 1, "", "set_missing_tolerance"], [141, 1, 1, "", "set_seed"], [141, 1, 1, "", "state_dict"], [141, 1, 1, "", "to"], [141, 1, 1, "", "train"]], "torchrl.envs.transforms.UnsqueezeTransform": [[142, 1, 1, "", "transform_input_spec"], [142, 1, 1, "", "transform_observation_spec"], [142, 1, 1, "", "transform_reward_spec"]], "torchrl.envs.transforms.VC1Transform": [[143, 1, 1, "", "forward"], [143, 1, 1, "", "make_noload_model"], [143, 1, 1, "", "to"], [143, 1, 1, "", "transform_observation_spec"]], "torchrl.envs.transforms.VIPRewardTransform": [[144, 1, 1, "", "forward"], [144, 1, 1, "", "transform_input_spec"]], "torchrl.envs.transforms.VIPTransform": [[145, 1, 1, "", "to"]], "torchrl.envs.transforms.VecNorm": [[146, 1, 1, "", "build_td_for_shared_vecnorm"], [146, 1, 1, "", "forward"], [146, 1, 1, "", "get_extra_state"], [146, 1, 1, "", "set_extra_state"], [146, 1, 1, "", "to_observation_norm"]], "torchrl.envs.utils": [[148, 2, 1, "", "check_env_specs"], [149, 2, 1, "", "exploration_mode"], [150, 2, 1, "", "exploration_type"], [151, 2, 1, "", "get_available_libraries"], [152, 2, 1, "", "make_composite_from_td"], [153, 2, 1, "", "set_exploration_mode"], [154, 2, 1, "", "set_exploration_type"], [155, 2, 1, "", "step_mdp"], [156, 2, 1, "", "terminated_or_truncated"]], "torchrl.modules": [[157, 0, 1, "", "CEMPlanner"], [158, 0, 1, "", "ConvNet"], [159, 0, 1, "", "DTActor"], [160, 0, 1, "", "DdpgCnnActor"], [161, 0, 1, "", "DdpgCnnQNet"], [162, 0, 1, "", "DdpgMlpActor"], [163, 0, 1, "", "DdpgMlpQNet"], [164, 0, 1, "", "DecisionTransformer"], [165, 0, 1, "", "Delta"], [166, 0, 1, "", "DistributionalDQNnet"], [167, 0, 1, "", "DistributionalQValueHook"], [168, 0, 1, "", "DreamerActor"], [169, 0, 1, "", "DuelingCnnDQNet"], [170, 0, 1, "", "GRUModule"], [171, 0, 1, "", "IndependentNormal"], [172, 0, 1, "", "LSTMModule"], [173, 0, 1, "", "LSTMNet"], [174, 0, 1, "", "MLP"], [175, 0, 1, "", "MPCPlannerBase"], [176, 0, 1, "", "MPPIPlanner"], [177, 0, 1, "", "MaskedCategorical"], [178, 0, 1, "", "MaskedOneHotCategorical"], [179, 0, 1, "", "MultiAgentConvNet"], [180, 0, 1, "", "MultiAgentMLP"], [181, 0, 1, "", "NoisyLazyLinear"], [182, 0, 1, "", "NoisyLinear"], [183, 0, 1, "", "NormalParamWrapper"], [184, 0, 1, "", "ObsDecoder"], [185, 0, 1, "", "ObsEncoder"], [186, 0, 1, "", "OneHotCategorical"], [187, 0, 1, "", "OnlineDTActor"], [188, 0, 1, "", "QMixer"], [189, 0, 1, "", "QValueHook"], [190, 0, 1, "", "RSSMPosterior"], [191, 0, 1, "", "RSSMPrior"], [192, 0, 1, "", "Squeeze2dLayer"], [193, 0, 1, "", "SqueezeLayer"], [194, 0, 1, "", "TanhDelta"], [195, 0, 1, "", "TanhNormal"], [196, 0, 1, "", "TruncatedNormal"], [197, 0, 1, "", "VDNMixer"], [198, 0, 1, "", "VmapModule"], [199, 0, 1, "", "reset_noise"]], "torchrl.modules.CEMPlanner": [[157, 1, 1, "", "planning"]], "torchrl.modules.ConvNet": [[158, 1, 1, "", "forward"]], "torchrl.modules.DTActor": [[159, 1, 1, "", "default_config"], [159, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnActor": [[160, 1, 1, "", "forward"]], "torchrl.modules.DdpgCnnQNet": [[161, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpActor": [[162, 1, 1, "", "forward"]], "torchrl.modules.DdpgMlpQNet": [[163, 1, 1, "", "forward"]], "torchrl.modules.DecisionTransformer": [[164, 0, 1, "", "DTConfig"], [164, 1, 1, "", "forward"]], "torchrl.modules.Delta": [[165, 1, 1, "", "log_prob"], [165, 3, 1, "", "mean"], [165, 3, 1, "", "mode"], [165, 1, 1, "", "rsample"], [165, 1, 1, "", "sample"]], "torchrl.modules.DistributionalDQNnet": [[166, 1, 1, "", "forward"]], "torchrl.modules.DreamerActor": [[168, 1, 1, "", "forward"]], "torchrl.modules.DuelingCnnDQNet": [[169, 1, 1, "", "forward"]], "torchrl.modules.GRUModule": [[170, 1, 1, "", "forward"], [170, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.IndependentNormal": [[171, 3, 1, "", "mode"]], "torchrl.modules.LSTMModule": [[172, 1, 1, "", "forward"], [172, 1, 1, "id0", "set_recurrent_mode"]], "torchrl.modules.LSTMNet": [[173, 1, 1, "", "forward"]], "torchrl.modules.MLP": [[174, 1, 1, "", "forward"]], "torchrl.modules.MPCPlannerBase": [[175, 1, 1, "", "forward"], [175, 1, 1, "", "planning"]], "torchrl.modules.MPPIPlanner": [[176, 1, 1, "", "planning"]], "torchrl.modules.MaskedCategorical": [[177, 1, 1, "", "log_prob"], [177, 1, 1, "", "sample"]], "torchrl.modules.MaskedOneHotCategorical": [[178, 1, 1, "", "log_prob"], [178, 1, 1, "", "rsample"], [178, 1, 1, "", "sample"]], "torchrl.modules.MultiAgentConvNet": [[179, 1, 1, "", "forward"]], "torchrl.modules.MultiAgentMLP": [[180, 1, 1, "", "forward"]], "torchrl.modules.NoisyLazyLinear": [[181, 1, 1, "", "initialize_parameters"]], "torchrl.modules.NormalParamWrapper": [[183, 1, 1, "", "forward"]], "torchrl.modules.ObsDecoder": [[184, 1, 1, "", "forward"]], "torchrl.modules.ObsEncoder": [[185, 1, 1, "", "forward"]], "torchrl.modules.OneHotCategorical": [[186, 1, 1, "", "log_prob"], [186, 3, 1, "", "mode"], [186, 1, 1, "", "rsample"], [186, 1, 1, "", "sample"]], "torchrl.modules.OnlineDTActor": [[187, 1, 1, "", "default_config"], [187, 1, 1, "", "forward"]], "torchrl.modules.QMixer": [[188, 1, 1, "", "mix"]], "torchrl.modules.RSSMPosterior": [[190, 1, 1, "", "forward"]], "torchrl.modules.RSSMPrior": [[191, 1, 1, "", "forward"]], "torchrl.modules.SqueezeLayer": [[193, 1, 1, "", "forward"]], "torchrl.modules.TanhDelta": [[194, 3, 1, "", "mean"], [194, 3, 1, "", "mode"]], "torchrl.modules.TanhNormal": [[195, 3, 1, "", "mode"]], "torchrl.modules.TruncatedNormal": [[196, 1, 1, "", "log_prob"], [196, 3, 1, "", "mode"]], "torchrl.modules.VDNMixer": [[197, 1, 1, "", "mix"]], "torchrl.modules.VmapModule": [[198, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module": [[200, 0, 1, "", "Actor"], [201, 0, 1, "", "ActorCriticOperator"], [202, 0, 1, "", "ActorCriticWrapper"], [203, 0, 1, "", "ActorValueOperator"], [204, 0, 1, "", "AdditiveGaussianWrapper"], [205, 0, 1, "", "DecisionTransformerInferenceWrapper"], [206, 0, 1, "", "DistributionalQValueActor"], [207, 0, 1, "", "DistributionalQValueModule"], [208, 0, 1, "", "EGreedyModule"], [209, 0, 1, "", "LMHeadActorValueOperator"], [210, 0, 1, "", "OrnsteinUhlenbeckProcessWrapper"], [211, 0, 1, "", "ProbabilisticActor"], [212, 0, 1, "", "QValueActor"], [213, 0, 1, "", "QValueModule"], [214, 0, 1, "", "SafeModule"], [215, 0, 1, "", "SafeProbabilisticModule"], [216, 0, 1, "", "SafeProbabilisticTensorDictSequential"], [217, 0, 1, "", "SafeSequential"], [218, 0, 1, "", "TanhModule"], [219, 0, 1, "", "ValueOperator"], [220, 0, 1, "", "WorldModelWrapper"]], "torchrl.modules.tensordict_module.ActorCriticOperator": [[201, 1, 1, "", "get_critic_operator"], [201, 1, 1, "", "get_policy_head"], [201, 1, 1, "", "get_value_head"], [201, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorCriticWrapper": [[202, 1, 1, "", "get_policy_head"], [202, 1, 1, "", "get_policy_operator"], [202, 1, 1, "", "get_value_head"], [202, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.ActorValueOperator": [[203, 1, 1, "", "get_policy_head"], [203, 1, 1, "", "get_policy_operator"], [203, 1, 1, "", "get_value_head"], [203, 1, 1, "", "get_value_operator"]], "torchrl.modules.tensordict_module.AdditiveGaussianWrapper": [[204, 1, 1, "", "forward"], [204, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.DecisionTransformerInferenceWrapper": [[205, 1, 1, "", "forward"], [205, 1, 1, "", "mask_context"], [205, 1, 1, "", "set_tensor_keys"]], "torchrl.modules.tensordict_module.DistributionalQValueModule": [[207, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.EGreedyModule": [[208, 1, 1, "", "forward"], [208, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.OrnsteinUhlenbeckProcessWrapper": [[210, 1, 1, "", "forward"], [210, 1, 1, "", "step"]], "torchrl.modules.tensordict_module.QValueModule": [[213, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.SafeModule": [[214, 1, 1, "", "random"], [214, 1, 1, "", "random_sample"], [214, 1, 1, "", "to"]], "torchrl.modules.tensordict_module.SafeProbabilisticModule": [[215, 1, 1, "", "random"], [215, 1, 1, "", "random_sample"]], "torchrl.modules.tensordict_module.TanhModule": [[218, 1, 1, "", "forward"]], "torchrl.modules.tensordict_module.WorldModelWrapper": [[220, 1, 1, "", "get_reward_operator"], [220, 1, 1, "", "get_transition_model_operator"]], "torchrl.modules.utils": [[221, 0, 1, "", "biased_softplus"], [222, 0, 1, "", "inv_softplus"], [223, 0, 1, "", "mappings"]], "torchrl.modules.utils.biased_softplus": [[221, 1, 1, "", "forward"]], "torchrl.objectives": [[224, 0, 1, "", "A2CLoss"], [225, 0, 1, "", "CQLLoss"], [226, 0, 1, "", "ClipPPOLoss"], [227, 0, 1, "", "DDPGLoss"], [228, 0, 1, "", "DQNLoss"], [229, 0, 1, "", "DTLoss"], [230, 0, 1, "", "DiscreteSACLoss"], [231, 0, 1, "", "DistributionalDQNLoss"], [232, 0, 1, "", "DreamerActorLoss"], [233, 0, 1, "", "DreamerModelLoss"], [234, 0, 1, "", "DreamerValueLoss"], [235, 0, 1, "", "HardUpdate"], [236, 0, 1, "", "IQLLoss"], [237, 0, 1, "", "KLPENPPOLoss"], [238, 0, 1, "", "LossModule"], [239, 0, 1, "", "OnlineDTLoss"], [240, 0, 1, "", "PPOLoss"], [241, 0, 1, "", "REDQLoss"], [242, 0, 1, "", "ReinforceLoss"], [243, 0, 1, "", "SACLoss"], [244, 0, 1, "", "SoftUpdate"], [245, 0, 1, "", "TD3Loss"], [246, 0, 1, "", "ValueEstimators"], [247, 0, 1, "", "default_value_kwargs"], [248, 0, 1, "", "distance_loss"], [249, 0, 1, "", "hold_out_net"], [250, 0, 1, "", "hold_out_params"], [252, 0, 1, "", "next_state_value"]], "torchrl.objectives.A2CLoss": [[224, 1, 1, "", "forward"], [224, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.CQLLoss": [[225, 1, 1, "", "forward"], [225, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ClipPPOLoss": [[226, 1, 1, "", "forward"]], "torchrl.objectives.DDPGLoss": [[227, 1, 1, "", "forward"], [227, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DQNLoss": [[228, 1, 1, "", "forward"], [228, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DTLoss": [[229, 1, 1, "", "forward"]], "torchrl.objectives.DiscreteSACLoss": [[230, 1, 1, "", "forward"], [230, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DistributionalDQNLoss": [[231, 1, 1, "", "forward"], [231, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerActorLoss": [[232, 1, 1, "", "forward"], [232, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.DreamerModelLoss": [[233, 1, 1, "", "forward"]], "torchrl.objectives.DreamerValueLoss": [[234, 1, 1, "", "forward"]], "torchrl.objectives.IQLLoss": [[236, 1, 1, "", "forward"], [236, 1, 1, "", "loss_value_diff"], [236, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.KLPENPPOLoss": [[237, 1, 1, "", "forward"]], "torchrl.objectives.LossModule": [[238, 1, 1, "", "convert_to_functional"], [238, 1, 1, "", "forward"], [238, 1, 1, "", "make_value_estimator"], [238, 1, 1, "", "named_parameters"], [238, 1, 1, "", "parameters"], [238, 1, 1, "", "set_keys"], [238, 3, 1, "", "value_estimator"]], "torchrl.objectives.OnlineDTLoss": [[239, 1, 1, "", "forward"]], "torchrl.objectives.PPOLoss": [[240, 1, 1, "", "forward"], [240, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.REDQLoss": [[241, 1, 1, "", "forward"], [241, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.ReinforceLoss": [[242, 1, 1, "", "forward"], [242, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.SACLoss": [[243, 1, 1, "", "forward"], [243, 1, 1, "", "load_state_dict"], [243, 1, 1, "", "make_value_estimator"], [243, 1, 1, "", "state_dict"]], "torchrl.objectives.TD3Loss": [[245, 1, 1, "", "forward"], [245, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.multiagent": [[251, 0, 1, "", "QMixerLoss"]], "torchrl.objectives.multiagent.QMixerLoss": [[251, 1, 1, "", "forward"], [251, 1, 1, "", "make_value_estimator"]], "torchrl.objectives.value": [[253, 0, 1, "", "GAE"], [254, 0, 1, "", "TD0Estimator"], [255, 0, 1, "", "TD1Estimator"], [256, 0, 1, "", "TDLambdaEstimator"], [257, 0, 1, "", "ValueEstimatorBase"]], "torchrl.objectives.value.GAE": [[253, 1, 1, "", "forward"], [253, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD0Estimator": [[254, 1, 1, "", "forward"], [254, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TD1Estimator": [[255, 1, 1, "", "forward"], [255, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.TDLambdaEstimator": [[256, 1, 1, "", "forward"], [256, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.ValueEstimatorBase": [[257, 1, 1, "", "forward"], [257, 1, 1, "", "set_keys"], [257, 1, 1, "", "value_estimate"]], "torchrl.objectives.value.functional": [[258, 0, 1, "", "generalized_advantage_estimate"], [259, 0, 1, "", "reward2go"], [260, 0, 1, "", "td0_advantage_estimate"], [261, 0, 1, "", "td0_return_estimate"], [262, 0, 1, "", "td1_advantage_estimate"], [263, 0, 1, "", "td1_return_estimate"], [264, 0, 1, "", "td_lambda_advantage_estimate"], [265, 0, 1, "", "td_lambda_return_estimate"], [266, 0, 1, "", "vec_generalized_advantage_estimate"], [267, 0, 1, "", "vec_td1_advantage_estimate"], [268, 0, 1, "", "vec_td1_return_estimate"], [269, 0, 1, "", "vec_td_lambda_advantage_estimate"], [270, 0, 1, "", "vec_td_lambda_return_estimate"]], "torchrl.record": [[271, 2, 1, "", "TensorDictRecorder"], [272, 2, 1, "", "VideoRecorder"]], "torchrl.record.loggers": [[273, 2, 1, "", "Logger"], [275, 2, 1, "", "generate_exp_name"], [276, 2, 1, "", "get_logger"]], "torchrl.record.loggers.csv": [[274, 2, 1, "", "CSVLogger"]], "torchrl.record.loggers.mlflow": [[277, 2, 1, "", "MLFlowLogger"]], "torchrl.record.loggers.tensorboard": [[278, 2, 1, "", "TensorboardLogger"]], "torchrl.record.loggers.wandb": [[279, 2, 1, "", "WandbLogger"]], "torchrl.trainers": [[280, 0, 1, "", "BatchSubSampler"], [281, 0, 1, "", "ClearCudaCache"], [282, 0, 1, "", "CountFramesLog"], [283, 0, 1, "", "LogReward"], [284, 0, 1, "", "OptimizerHook"], [285, 0, 1, "", "Recorder"], [286, 0, 1, "", "ReplayBufferTrainer"], [287, 0, 1, "", "RewardNormalizer"], [288, 0, 1, "", "SelectKeys"], [289, 0, 1, "", "Trainer"], [290, 0, 1, "", "TrainerHookBase"], [291, 0, 1, "", "UpdateWeights"]], "torchrl.trainers.BatchSubSampler": [[280, 1, 1, "", "register"]], "torchrl.trainers.ClearCudaCache": [[281, 1, 1, "", "register"]], "torchrl.trainers.CountFramesLog": [[282, 1, 1, "", "register"]], "torchrl.trainers.LogReward": [[283, 1, 1, "", "register"]], "torchrl.trainers.OptimizerHook": [[284, 1, 1, "", "register"]], "torchrl.trainers.Recorder": [[285, 1, 1, "", "register"]], "torchrl.trainers.ReplayBufferTrainer": [[286, 1, 1, "", "register"]], "torchrl.trainers.RewardNormalizer": [[287, 1, 1, "", "register"]], "torchrl.trainers.SelectKeys": [[288, 1, 1, "", "register"]], "torchrl.trainers.TrainerHookBase": [[290, 1, 1, "", "register"]], "torchrl.trainers.UpdateWeights": [[291, 1, 1, "", "register"]], "torchrl.trainers.helpers": [[292, 2, 1, "", "correct_for_frame_skip"], [293, 2, 1, "", "get_stats_random_rollout"], [294, 2, 1, "", "make_collector_offpolicy"], [295, 2, 1, "", "make_collector_onpolicy"], [296, 2, 1, "", "make_dqn_loss"], [297, 2, 1, "", "make_redq_loss"], [298, 2, 1, "", "make_redq_model"], [299, 2, 1, "", "make_replay_buffer"], [300, 2, 1, "", "make_target_updater"], [301, 2, 1, "", "make_trainer"], [302, 2, 1, "", "parallel_env_constructor"], [303, 2, 1, "", "sync_async_collector"], [304, 2, 1, "", "sync_sync_collector"], [305, 2, 1, "", "transformed_env_constructor"]]}, "objtypes": {"0": "py:class", "1": "py:method", "2": "py:function", "3": "py:property"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"], "2": ["py", "function", "Python function"], "3": ["py", "property", "Python property"]}, "titleterms": {"torchrl": [0, 1, 2, 3, 6, 9, 309, 310, 311, 312, 313, 314, 315, 319, 320, 324, 325], "tutori": [0, 315, 319], "basic": [0, 322], "intermedi": [0, 8], "advanc": 0, "refer": [0, 307], "knowledg": [0, 308], "base": [0, 7, 308], "indic": 0, "tabl": 0, "collector": [1, 313, 314, 315, 316, 319, 324], "packag": [1, 2, 3, 309, 310, 311, 312], "singl": [1, 4], "node": 1, "data": [1, 2, 4, 313, 314, 315, 319, 324], "distribut": [1, 309], "helper": [1, 3], "function": [1, 4, 310, 314, 315, 319, 324], "replai": [2, 313, 314, 315, 316, 319, 322, 324], "buffer": [2, 313, 314, 315, 316, 319, 322, 324], "compos": [2, 107], "store": [2, 314], "trajectori": 2, "dataset": 2, "tensorspec": [2, 44], "reinforc": [2, 310, 315, 319], "learn": [2, 4, 315, 319], "from": [2, 6, 7], "human": 2, "feedback": 2, "rlhf": 2, "util": [2, 309, 310, 311], "env": [3, 320, 324, 325], "vector": [3, 324], "multi": [3, 309, 310, 318, 319], "agent": [3, 4, 309, 310, 319], "environ": [3, 4, 6, 7, 313, 314, 315, 316, 318, 319, 320, 324, 325], "transform": [3, 140, 313, 315, 319, 320, 322, 324, 325], "clone": [3, 7], "mask": 3, "action": [3, 4, 316, 320], "record": [3, 285, 311, 313], "domain": [3, 309], "specif": [3, 309, 318], "librari": [3, 324], "thing": [4, 313, 320], "consid": 4, "when": [4, 7], "debug": 4, "rl": [4, 9, 324], "gener": [4, 309], "have": 4, "you": 4, "valid": 4, "your": [4, 6, 313, 320], "algorithm": [4, 309], "implement": 4, "few": 4, "small": 4, "toi": 4, "problem": 4, "known": 4, "optim": [4, 313, 314], "return": [4, 310], "e": 4, "g": 4, "gridworld": 4, "mountaincar": 4, "visual": 4, "Be": 4, "veri": 4, "care": 4, "ani": 4, "augment": 4, "polici": [4, 313, 315, 316, 318, 319, 320], "doe": 4, "entropi": 4, "converg": 4, "too": [4, 8], "quickli": 4, "slowli": 4, "chang": [4, 324], "drastic": 4, "reward": 4, "beyond": 4, "go": 4, "up": [4, 6], "Is": 4, "favor": 4, "compon": 4, "i": 4, "veloc": 4, "vs": 4, "l2": 4, "magnitud": 4, "task": [4, 318], "horizon": 4, "extrem": 4, "long": 4, "ar": 4, "normal": [4, 313, 314, 315], "standard": 4, "explor": [4, 309, 313, 314], "valu": [4, 309, 310, 313, 315, 316], "loss": [4, 313, 314, 315, 316, 319], "earli": 4, "train": [4, 8, 310, 313, 315, 316, 319, 320], "roughli": 4, "uniformli": 4, "random": [4, 319], "intrins": 4, "decai": 4, "progress": 4, "singleton": 4, "episod": 4, "remain": 4, "constant": [4, 314], "increas": 4, "an": [4, 315, 316, 320], "dynam": [4, 322], "can": 4, "low": 4, "forward": [4, 313], "model": [4, 309, 313, 314, 316, 321, 324], "also": 4, "us": [4, 6, 9, 316, 321, 322, 324], "offlin": 4, "observ": [4, 313], "space": 4, "effect": [4, 320], "dramat": 4, "dure": [4, 7], "high": 4, "dimension": 4, "work": [5, 6, 7], "gym": [5, 325], "what": 5, "openai": 5, "version": [5, 7, 10], "habitat": 6, "lab": 6, "set": 6, "instal": [6, 7, 324], "pip": [6, 7], "common": [6, 7, 8], "issu": [6, 7, 10], "mujoco": 7, "prerequisit": 7, "render": [7, 319, 325], "all": 7, "new": 7, "bindindg": 7, "2": 7, "1": 7, "old": 7, "bind": 7, "py": 7, "option": 7, "repo": [7, 9], "import": [7, 313], "pytorch": [8, 9, 10], "error": 8, "solut": 8, "gradient": 8, "relat": 8, "newcom": 8, "my": 8, "slow": 8, "bug": 8, "resourc": 9, "paper": 9, "document": 9, "functorch": 9, "blog": 9, "websit": 9, "educ": 9, "forum": 9, "how": 10, "reproduc": [10, 320], "workaround": 10, "implement_for": 11, "datacollectorbas": 12, "multisyncdatacollector": 13, "multiasyncdatacollector": 14, "randompolici": 15, "syncdatacollector": 16, "asyncdatacollector": 17, "distributeddatacollector": 18, "distributedsyncdatacollector": 19, "rpcdatacollector": 20, "raycollector": 21, "submitit_delayed_launch": 22, "split_trajectori": 23, "binarydiscretetensorspec": 24, "boundedtensorspec": 25, "compositespec": 26, "discretetensorspec": 27, "lazystackedcompositespec": 28, "lazystackedtensorspec": 29, "multidiscretetensorspec": 30, "multionehotdiscretetensorspec": 31, "multistep": 32, "onehotdiscretetensorspec": 33, "pairwisedataset": 34, "prioritizedreplaybuff": 35, "promptdata": 36, "prompttensordicttoken": 37, "replaybuff": 38, "rewarddata": 39, "rolloutfrommodel": 40, "tensordictprioritizedreplaybuff": 41, "tensordictreplaybuff": 42, "tensordicttoken": 43, "tokenizeddatasetload": 45, "unboundedcontinuoustensorspec": 46, "unboundeddiscretetensorspec": 47, "check_no_exclusive_kei": 48, "consolidate_spec": 49, "contains_lazy_spec": 50, "create_infinite_iter": 51, "d4rlexperiencereplai": 52, "openmlexperiencereplai": 53, "get_dataload": 54, "lazymemmapstorag": 55, "lazytensorstorag": 56, "liststorag": 57, "prioritizedsampl": 58, "randomsampl": 59, "roundrobinwrit": 60, "sampler": 61, "samplerwithoutreplac": 62, "storag": [63, 313, 322], "tensordictmaxvaluewrit": 64, "tensordictroundrobinwrit": 65, "tensorstorag": 66, "writer": 67, "braxenv": 68, "braxwrapp": 69, "dmcontrolenv": 70, "dmcontrolwrapp": 71, "envbas": [72, 320], "envcreat": 73, "envmetadata": 74, "gymenv": 75, "gymlikeenv": 76, "gymwrapp": 77, "habitatenv": 78, "isaacgymenv": 79, "isaacgymwrapp": 80, "jumanjienv": 81, "jumanjiwrapp": 82, "marlgroupmaptyp": 83, "modelbasedenvbas": 84, "multithreadedenv": 85, "multithreadedenvwrapp": 86, "openmlenv": 87, "parallelenv": 88, "pettingzooenv": 89, "pettingzoowrapp": 90, "robohiveenv": 91, "smacv2env": 92, "smacv2wrapp": 93, "serialenv": 94, "vmasenv": 95, "vmaswrapp": 96, "check_marl_group": 97, "gym_backend": 98, "dreamerenv": 99, "set_gym_backend": 100, "actionmask": 101, "binarizereward": 102, "catfram": [103, 322], "cattensor": 104, "centercrop": 105, "cliptransform": 106, "dtypecasttransform": 108, "devicecasttransform": 109, "discreteactionproject": 110, "doubletofloat": 111, "endoflifetransform": 112, "excludetransform": 113, "finitetensordictcheck": 114, "flattenobserv": 115, "frameskiptransform": 116, "grayscal": 117, "inittrack": 118, "klrewardtransform": 119, "noopresetenv": 120, "observationnorm": 121, "observationtransform": 122, "permutetransform": 123, "pinmemorytransform": 124, "r3mtransform": 125, "randomcroptensordict": 126, "renametransform": 127, "resiz": 128, "reward2gotransform": 129, "rewardclip": 130, "rewardsc": 131, "rewardsum": 132, "selecttransform": 133, "squeezetransform": 134, "stepcount": 135, "targetreturn": 136, "tensordictprim": 137, "timemaxpool": 138, "totensorimag": 139, "transformedenv": 141, "unsqueezetransform": 142, "vc1transform": 143, "viprewardtransform": 144, "viptransform": 145, "vecnorm": [146, 325], "gsdenois": 147, "check_env_spec": 148, "exploration_mod": 149, "exploration_typ": 150, "get_available_librari": 151, "make_composite_from_td": 152, "set_exploration_mod": 153, "set_exploration_typ": 154, "step_mdp": 155, "terminated_or_trunc": 156, "cemplann": 157, "convnet": 158, "dtactor": 159, "ddpgcnnactor": 160, "ddpgcnnqnet": 161, "ddpgmlpactor": 162, "ddpgmlpqnet": 163, "decisiontransform": 164, "delta": 165, "distributionaldqnnet": 166, "distributionalqvaluehook": 167, "dreameractor": 168, "duelingcnndqnet": 169, "grumodul": 170, "independentnorm": 171, "lstmmodul": 172, "lstmnet": 173, "mlp": [174, 316], "mpcplannerbas": 175, "mppiplann": 176, "maskedcategor": 177, "maskedonehotcategor": 178, "multiagentconvnet": 179, "multiagentmlp": 180, "noisylazylinear": 181, "noisylinear": 182, "normalparamwrapp": 183, "obsdecod": 184, "obsencod": 185, "onehotcategor": 186, "onlinedtactor": 187, "qmixer": [188, 310], "qvaluehook": 189, "rssmposterior": 190, "rssmprior": 191, "squeeze2dlay": 192, "squeezelay": 193, "tanhdelta": 194, "tanhnorm": 195, "truncatednorm": 196, "vdnmixer": 197, "vmapmodul": 198, "reset_nois": 199, "actor": [200, 309, 313], "actorcriticoper": 201, "actorcriticwrapp": 202, "actorvalueoper": 203, "additivegaussianwrapp": 204, "decisiontransformerinferencewrapp": 205, "distributionalqvalueactor": 206, "distributionalqvaluemodul": 207, "egreedymodul": 208, "lmheadactorvalueoper": 209, "ornsteinuhlenbeckprocesswrapp": 210, "probabilisticactor": 211, "qvalueactor": 212, "qvaluemodul": 213, "safemodul": [214, 309], "safeprobabilisticmodul": 215, "safeprobabilistictensordictsequenti": 216, "safesequenti": 217, "tanhmodul": 218, "valueoper": 219, "worldmodelwrapp": 220, "biased_softplu": 221, "inv_softplu": 222, "map": 223, "a2closs": 224, "cqlloss": 225, "clipppoloss": 226, "ddpgloss": 227, "dqnloss": 228, "dtloss": 229, "discretesacloss": 230, "distributionaldqnloss": 231, "dreameractorloss": 232, "dreamermodelloss": 233, "dreamervalueloss": 234, "hardupd": 235, "iqlloss": 236, "klpenppoloss": 237, "lossmodul": [238, 313], "onlinedtloss": 239, "ppoloss": 240, "redqloss": 241, "reinforceloss": 242, "sacloss": 243, "softupd": 244, "td3loss": 245, "valueestim": 246, "default_value_kwarg": 247, "distance_loss": 248, "hold_out_net": 249, "hold_out_param": 250, "qmixerloss": 251, "next_state_valu": 252, "gae": 253, "td0estim": 254, "td1estim": 255, "tdlambdaestim": 256, "valueestimatorbas": 257, "generalized_advantage_estim": 258, "reward2go": 259, "td0_advantage_estim": 260, "td0_return_estim": 261, "td1_advantage_estim": 262, "td1_return_estim": 263, "td_lambda_advantage_estim": 264, "td_lambda_return_estim": 265, "vec_generalized_advantage_estim": 266, "vec_td1_advantage_estim": 267, "vec_td1_return_estim": 268, "vec_td_lambda_advantage_estim": 269, "vec_td_lambda_return_estim": 270, "tensordictrecord": 271, "videorecord": 272, "logger": [273, 311], "csvlogger": 274, "generate_exp_nam": 275, "get_logg": 276, "mlflowlogg": 277, "tensorboardlogg": 278, "wandblogg": 279, "batchsubsampl": 280, "clearcudacach": 281, "countframeslog": 282, "logreward": 283, "optimizerhook": 284, "replaybuffertrain": 286, "rewardnorm": 287, "selectkei": 288, "trainer": [289, 311, 314], "trainerhookbas": 290, "updateweight": 291, "correct_for_frame_skip": 292, "get_stats_random_rollout": 293, "make_collector_offpolici": 294, "make_collector_onpolici": 295, "make_dqn_loss": 296, "make_redq_loss": 297, "make_redq_model": 298, "make_replay_buff": 299, "make_target_updat": 300, "make_train": 301, "parallel_env_constructor": 302, "sync_async_collector": 303, "sync_sync_collector": 304, "transformed_env_constructor": 305, "readm": [306, 317], "tuto": [306, 317], "api": 307, "contribut": [308, 324], "content": 308, "modul": [309, 313, 316, 324], "tensordict": [309, 322, 324], "wrapper": 309, "probabilist": 309, "q": [309, 314, 316], "oper": 309, "join": 309, "hook": [309, 311, 314], "regular": 309, "planner": 309, "object": [310, 313, 324], "dqn": [310, 314, 316], "ddpg": [310, 313], "sac": 310, "redq": 310, "iql": 310, "cql": 310, "dt": 310, "td3": 310, "ppo": [310, 315, 319], "a2c": 310, "dreamer": 310, "checkpoint": 311, "builder": 311, "_util": 312, "code": [313, 320], "setup": [313, 316], "The": 313, "__init__": 313, "method": 313, "estim": 313, "put": 313, "togeth": [313, 320], "call": 313, "parallel": [313, 318, 325], "execut": [313, 318, 320], "stat": 313, "build": [313, 314, 322], "evalu": 313, "batch": [313, 320, 322], "size": [313, 322], "construct": 313, "target": [313, 314], "network": [313, 314, 315, 316, 319], "updat": 313, "time": [313, 323], "experi": [313, 320], "result": [313, 315, 319], "conclus": [313, 314, 315, 316, 319, 320, 322], "A": [314, 322], "exampl": [314, 322], "comput": [314, 320, 323], "deep": 314, "collect": [314, 315], "paramet": [314, 315], "hyperparamet": [314, 315, 319], "regist": 314, "possibl": 314, "improv": 314, "defin": [315, 319], "loop": [315, 316, 319, 320], "next": [315, 319], "step": [315, 319, 325], "recurr": 316, "convolut": 316, "lstm": 316, "select": 316, "divers": 318, "rollout": [318, 319, 320, 325], "critic": 319, "pendulum": 320, "write": 320, "_step": 320, "reset": [320, 325], "simul": 320, "_reset": 320, "metadata": 320, "_spec": 320, "spec": [320, 325], "shape": 320, "seed": [320, 325], "wrap": 320, "class": [320, 324], "test": 320, "our": 320, "custom": [320, 322], "simpl": 320, "pretrain": 321, "vanilla": 322, "integr": 322, "tensorclass": 322, "sampl": 322, "iter": 322, "over": 322, "fix": 322, "priorit": 322, "save": 322, "raw": 322, "imag": 322, "more": 322, "complex": 322, "introduct": 324, "config": 324, "tensordictmodul": 324, "sequenc": 324, "program": 324, "ensembl": 324, "meta": 324, "special": 324, "state": 324, "frame_skip": 325, "deepmind": 325, "control": 325, "devic": 325, "run": 325, "close": 325, "access": 325, "attribut": 325, "kwarg": 325}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 56}})